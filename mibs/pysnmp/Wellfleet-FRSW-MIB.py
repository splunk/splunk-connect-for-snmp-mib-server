#
# PySNMP MIB module Wellfleet-FRSW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Wellfleet-FRSW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:33:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, Bits, ModuleIdentity, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, Unsigned32, Counter64, NotificationType, IpAddress, MibIdentifier, iso, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "ModuleIdentity", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "Unsigned32", "Counter64", "NotificationType", "IpAddress", "MibIdentifier", "iso", "TimeTicks", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
wfFrswGroup, = mibBuilder.importSymbols("Wellfleet-COMMON-MIB", "wfFrswGroup")
wfFrSwDlcmiTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1), )
if mibBuilder.loadTexts: wfFrSwDlcmiTable.setStatus('mandatory')
wfFrSwDlcmiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwDlcmiCircuit"))
if mibBuilder.loadTexts: wfFrSwDlcmiEntry.setStatus('mandatory')
wfFrSwDlcmiDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiDelete.setStatus('mandatory')
wfFrSwDlcmiState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3))).clone('init')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiState.setStatus('mandatory')
wfFrSwDlcmiNniEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiNniEnable.setStatus('mandatory')
wfFrSwDlcmiCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiCircuit.setStatus('mandatory')
wfFrSwDlcmiManagementType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("lmi", 2), ("t1617d", 3), ("t1617b", 4), ("annexa", 5), ("lmiswitch", 6), ("annexdswitch", 7), ("annexaswitch", 8), ("iwfoamenabled", 9), ("iwfoamdisabled", 10))).clone('t1617d')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiManagementType.setStatus('mandatory')
wfFrSwL3NetAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwL3NetAddress.setStatus('mandatory')
wfFrSwDlcmiAddressLen = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4))).clone(namedValues=NamedValues(("twobyte", 2), ("threebyte", 3), ("fourbyte", 4))).clone('twobyte')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiAddressLen.setStatus('mandatory')
wfFrSwDlcmiControlByteDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiControlByteDisable.setStatus('mandatory')
wfFrSwDlcmiPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(15)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiPollingInterval.setStatus('mandatory')
wfFrSwDlcmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiFullEnquiryInterval.setStatus('mandatory')
wfFrSwDlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 11), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiErrorThreshold.setStatus('mandatory')
wfFrSwDlcmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 12), Integer32().clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiMonitoredEvents.setStatus('mandatory')
wfFrSwDlcmiRecoveryCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiRecoveryCounts.setStatus('mandatory')
wfFrSwDlcmiMaxSupportedVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiMaxSupportedVCs.setStatus('mandatory')
wfFrSwDlcmiVCsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiVCsInUse.setStatus('mandatory')
wfFrSwSwitchHdrErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSwitchHdrErrors.setStatus('mandatory')
wfFrSwDlcmiSequenceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiSequenceCount.setStatus('mandatory')
wfFrSwDlcmiLastReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiLastReceived.setStatus('mandatory')
wfFrSwDlcmiActiveSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiActiveSeqCount.setStatus('mandatory')
wfFrSwDlcmiActiveReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiActiveReceived.setStatus('mandatory')
wfFrSwDlcmiPolls = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiPolls.setStatus('mandatory')
wfFrSwDlcmiAlarmTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiAlarmTimer.setStatus('mandatory')
wfFrSwErrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("reset", 1), ("other", 2), ("short", 3), ("long", 4), ("illegaldlci", 5), ("unknowndlci", 6), ("protoerr", 7), ("unknownie", 8), ("sequenceerr", 9), ("unknownrpt", 10), ("byteerr", 11), ("hdrerr", 12), ("formaterr", 13))).clone('reset')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwErrType.setStatus('mandatory')
wfFrSwErrData = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 24), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwErrData.setStatus('mandatory')
wfFrSwErrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 25), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwErrTime.setStatus('mandatory')
wfFrSwBcMeasurementInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 2000)).clone(500)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwBcMeasurementInterval.setStatus('mandatory')
wfFrSwDlcmiMcastNoBufferErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiMcastNoBufferErrors.setStatus('mandatory')
wfFrSwDlcmiFrameTooShortErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiFrameTooShortErrors.setStatus('mandatory')
wfFrSwDlcmiFrameTooLongErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiFrameTooLongErrors.setStatus('mandatory')
wfFrSwDlcmiIllegalDlciErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiIllegalDlciErrors.setStatus('mandatory')
wfFrSwDlcmiUnknownDlciErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiUnknownDlciErrors.setStatus('mandatory')
wfFrSwDlcmiProtocolErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiProtocolErrors.setStatus('mandatory')
wfFrSwDlcmiUnknownIEErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiUnknownIEErrors.setStatus('mandatory')
wfFrSwDlcmiSequenceErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiSequenceErrors.setStatus('mandatory')
wfFrSwDlcmiUnknownRPTErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiUnknownRPTErrors.setStatus('mandatory')
wfFrSwDlcmiControlByteErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiControlByteErrors.setStatus('mandatory')
wfFrSwDlcmiFormatErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiFormatErrors.setStatus('mandatory')
wfFrSwDlcmiOtherErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiOtherErrors.setStatus('mandatory')
wfFrSwDlcmiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("running", 1), ("recovered", 2), ("fault", 3), ("start", 4))).clone('start')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiStatus.setStatus('mandatory')
wfFrSwDlcmiNewVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiNewVCs.setStatus('mandatory')
wfFrSwDlcmiDeletedVCs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiDeletedVCs.setStatus('mandatory')
wfFrSwDlcmiFullStatusSeq = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiFullStatusSeq.setStatus('mandatory')
wfFrSwDlcmiBidirect = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiBidirect.setStatus('mandatory')
wfFrSwDlcmiDteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("running", 1), ("recovered", 2), ("fault", 3), ("start", 4))).clone('start')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiDteStatus.setStatus('mandatory')
wfFrSwDlcmiDteSeqCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiDteSeqCount.setStatus('mandatory')
wfFrSwDlcmiDteReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiDteReceived.setStatus('mandatory')
wfFrSwDlcmiDteLastReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 47), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiDteLastReceived.setStatus('mandatory')
wfFrSwDlcmiDtePolls = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwDlcmiDtePolls.setStatus('mandatory')
wfFrSwDlcmiDtePollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 49), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiDtePollingInterval.setStatus('mandatory')
wfFrSwDlcmiDteFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 50), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiDteFullEnquiryInterval.setStatus('mandatory')
wfFrSwDlcmiDteErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 51), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiDteErrorThreshold.setStatus('mandatory')
wfFrSwDlcmiCrossNetEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiCrossNetEnable.setStatus('mandatory')
wfFrSwDlcmiCrossNetPollingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 53), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 86400)).clone(120)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiCrossNetPollingInterval.setStatus('mandatory')
wfFrSwDlcmiCrossNetErrorThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 54), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiCrossNetErrorThreshold.setStatus('mandatory')
wfFrSwDlcmiCrossNetAsyncUpdateEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiCrossNetAsyncUpdateEnable.setStatus('mandatory')
wfFrSwDlcmiBcMeasurementEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiBcMeasurementEnable.setStatus('mandatory')
wfFrSwDlcmiAsyncUpdateEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiAsyncUpdateEnable.setStatus('mandatory')
wfFrSwDlcmiCrossNetListenEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 58), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiCrossNetListenEnable.setStatus('mandatory')
wfFrSwDlcmiSvcDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 59), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiSvcDisable.setStatus('mandatory')
wfFrSwDlcmiL2AddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e164", 1), ("x121", 2))).clone('e164')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiL2AddrType.setStatus('mandatory')
wfFrSwDlcmiEscapeMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("ingress", 2), ("egress", 3))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiEscapeMode.setStatus('mandatory')
wfFrSwDlcmiEscapeCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 62), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiEscapeCircuit.setStatus('mandatory')
wfFrSwDlcmiEscapeVcCount = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 63), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiEscapeVcCount.setStatus('mandatory')
wfFrSwDlcmiIwfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("none", 1), ("sdlc2frsw", 2))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiIwfMode.setStatus('mandatory')
wfFrSwDlcmiSvcBillingEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiSvcBillingEnable.setStatus('mandatory')
wfFrSwDlcmiSpvcAgent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("cra", 2), ("caa", 3), ("craandcaa", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiSpvcAgent.setStatus('mandatory')
wfFrSwDlcmiCallAccDlciSelectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 1, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("any", 1), ("specific", 2))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwDlcmiCallAccDlciSelectionType.setStatus('mandatory')
wfFrSwCctTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2), )
if mibBuilder.loadTexts: wfFrSwCctTable.setStatus('obsolete')
wfFrSwCctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwCctNumber"), (0, "Wellfleet-FRSW-MIB", "wfFrSwCctDlci"))
if mibBuilder.loadTexts: wfFrSwCctEntry.setStatus('obsolete')
wfFrSwCctDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2), ("system", 3))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwCctDelete.setStatus('obsolete')
wfFrSwCctNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctNumber.setStatus('obsolete')
wfFrSwCctDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1007, 1024, 64511, 131072, 8257535))).clone(namedValues=NamedValues(("twobyteminimum", 16), ("twobytemaximum", 1007), ("threebyteminimum", 1024), ("threebytemaximum", 64511), ("fourbyteminimum", 131072), ("fourbytemaximum", 8257535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctDlci.setStatus('obsolete')
wfFrSwCctState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3), ("control", 4), ("user", 5))).clone('invalid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctState.setStatus('obsolete')
wfFrSwCctMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("multicast", 1), ("unicast", 2))).clone('unicast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwCctMulticast.setStatus('obsolete')
wfFrSwCctInBc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctInBc.setStatus('obsolete')
wfFrSwCctOutBc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctOutBc.setStatus('obsolete')
wfFrSwCctInBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwCctInBe.setStatus('obsolete')
wfFrSwCctOutBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwCctOutBe.setStatus('obsolete')
wfFrSwCctInThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwCctInThroughput.setStatus('obsolete')
wfFrSwCctOutThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwCctOutThroughput.setStatus('obsolete')
wfFrSwCctCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctCreationTime.setStatus('obsolete')
wfFrSwCctLastTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLastTimeChange.setStatus('obsolete')
wfFrSwCctLocalSentNonDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSentNonDEFrames.setStatus('obsolete')
wfFrSwCctLocalSentNonDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSentNonDEOctets.setStatus('obsolete')
wfFrSwCctLocalSentDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSentDEFrames.setStatus('obsolete')
wfFrSwCctLocalSentDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSentDEOctets.setStatus('obsolete')
wfFrSwCctLocalSetFECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSetFECNFrames.setStatus('obsolete')
wfFrSwCctLocalSetFECNOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSetFECNOctets.setStatus('obsolete')
wfFrSwCctLocalSetBECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSetBECNFrames.setStatus('obsolete')
wfFrSwCctLocalSetBECNOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSetBECNOctets.setStatus('obsolete')
wfFrSwCctLocalSetDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSetDEFrames.setStatus('obsolete')
wfFrSwCctLocalSetDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalSetDEOctets.setStatus('obsolete')
wfFrSwCctLocalDropNonDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalDropNonDEFrames.setStatus('obsolete')
wfFrSwCctLocalDropNonDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalDropNonDEOctets.setStatus('obsolete')
wfFrSwCctLocalDropDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalDropDEFrames.setStatus('obsolete')
wfFrSwCctLocalDropDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalDropDEOctets.setStatus('obsolete')
wfFrSwCctInactiveVCDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctInactiveVCDropFrames.setStatus('obsolete')
wfFrSwCctInactiveVCDropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctInactiveVCDropOctets.setStatus('obsolete')
wfFrSwCctLocalRecvNonDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalRecvNonDEFrames.setStatus('obsolete')
wfFrSwCctLocalRecvNonDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalRecvNonDEOctets.setStatus('obsolete')
wfFrSwCctLocalRecvDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalRecvDEFrames.setStatus('obsolete')
wfFrSwCctLocalRecvDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalRecvDEOctets.setStatus('obsolete')
wfFrSwCctLocalRecvFECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalRecvFECNFrames.setStatus('obsolete')
wfFrSwCctLocalRecvFECNOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalRecvFECNOctets.setStatus('obsolete')
wfFrSwCctLocalRecvBECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalRecvBECNFrames.setStatus('obsolete')
wfFrSwCctLocalRecvBECNOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalRecvBECNOctets.setStatus('obsolete')
wfFrSwCctLocalRecentNonDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalRecentNonDEOctets.setStatus('obsolete')
wfFrSwCctRemoteSentNonDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteSentNonDEFrames.setStatus('obsolete')
wfFrSwCctRemoteSentNonDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteSentNonDEOctets.setStatus('obsolete')
wfFrSwCctRemoteSentDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteSentDEFrames.setStatus('obsolete')
wfFrSwCctRemoteSentDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteSentDEOctets.setStatus('obsolete')
wfFrSwCctRemoteSetFECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteSetFECNFrames.setStatus('obsolete')
wfFrSwCctRemoteSetFECNOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteSetFECNOctets.setStatus('obsolete')
wfFrSwCctRemoteSetBECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteSetBECNFrames.setStatus('obsolete')
wfFrSwCctRemoteSetBECNOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteSetBECNOctets.setStatus('obsolete')
wfFrSwCctRemoteDropNonDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteDropNonDEFrames.setStatus('obsolete')
wfFrSwCctRemoteDropNonDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteDropNonDEOctets.setStatus('obsolete')
wfFrSwCctRemoteDropDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteDropDEFrames.setStatus('obsolete')
wfFrSwCctRemoteDropDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteDropDEOctets.setStatus('obsolete')
wfFrSwCctRemoteRecvNonDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteRecvNonDEFrames.setStatus('obsolete')
wfFrSwCctRemoteRecvNonDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteRecvNonDEOctets.setStatus('obsolete')
wfFrSwCctRemoteRecvDEFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteRecvDEFrames.setStatus('obsolete')
wfFrSwCctRemoteRecvDEOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 54), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteRecvDEOctets.setStatus('obsolete')
wfFrSwCctRemoteRecvFECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteRecvFECNFrames.setStatus('obsolete')
wfFrSwCctRemoteRecvFECNOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 56), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteRecvFECNOctets.setStatus('obsolete')
wfFrSwCctRemoteRecvBECNFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 57), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteRecvBECNFrames.setStatus('obsolete')
wfFrSwCctRemoteRecvBECNOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 58), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteRecvBECNOctets.setStatus('obsolete')
wfFrSwCctLocalBecnState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalBecnState.setStatus('obsolete')
wfFrSwCctRemoteBecnState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctRemoteBecnState.setStatus('obsolete')
wfFrSwCctLocalOrRemoteConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("remote", 2))).clone('remote')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctLocalOrRemoteConnection.setStatus('obsolete')
wfFrSwCctInBcOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctInBcOctets.setStatus('obsolete')
wfFrSwCctStateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwCctStateSet.setStatus('obsolete')
wfFrSwCctReportedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("acked", 1), ("unacked", 2), ("unreported", 3))).clone('unreported')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctReportedStatus.setStatus('obsolete')
wfFrSwCctReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2))).clone('active')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctReceivedStatus.setStatus('obsolete')
wfFrSwCctCrossNetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2))).clone('active')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctCrossNetStatus.setStatus('obsolete')
wfFrSwCctXNetSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unsent", 1), ("sent", 2))).clone('unsent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctXNetSent.setStatus('obsolete')
wfFrSwCctXNetReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("recv", 1), ("unrecv", 2))).clone('unrecv')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctXNetReceived.setStatus('obsolete')
wfFrSwCctXNetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 2, 1, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCctXNetErrors.setStatus('obsolete')
wfFrSwTupleTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 3), )
if mibBuilder.loadTexts: wfFrSwTupleTable.setStatus('obsolete')
wfFrSwTupleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 3, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwTupleIpAddrA"), (0, "Wellfleet-FRSW-MIB", "wfFrSwTupleDlciA"), (0, "Wellfleet-FRSW-MIB", "wfFrSwTupleIpAddrB"), (0, "Wellfleet-FRSW-MIB", "wfFrSwTupleDlciB"))
if mibBuilder.loadTexts: wfFrSwTupleEntry.setStatus('obsolete')
wfFrSwTupleDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwTupleDelete.setStatus('obsolete')
wfFrSwTupleIpAddrA = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwTupleIpAddrA.setStatus('obsolete')
wfFrSwTupleDlciA = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwTupleDlciA.setStatus('obsolete')
wfFrSwTupleIpAddrB = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 3, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwTupleIpAddrB.setStatus('obsolete')
wfFrSwTupleDlciB = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 3, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwTupleDlciB.setStatus('obsolete')
wfFrSwMcastTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 4), )
if mibBuilder.loadTexts: wfFrSwMcastTable.setStatus('mandatory')
wfFrSwMcastEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 4, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwMcastIndex"))
if mibBuilder.loadTexts: wfFrSwMcastEntry.setStatus('mandatory')
wfFrSwMcastDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwMcastDelete.setStatus('mandatory')
wfFrSwMcastIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwMcastIndex.setStatus('mandatory')
wfFrSwMcastIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 4, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwMcastIpAddr.setStatus('mandatory')
wfFrSwMcastDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwMcastDlci.setStatus('mandatory')
wfFrSwMcastIndividualDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 4, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwMcastIndividualDlci.setStatus('mandatory')
wfFrSwUsage = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5))
wfFrSwUsageEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageEnable.setStatus('mandatory')
wfFrSwUsageVolume = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageVolume.setStatus('mandatory')
wfFrSwUsageVolumeBackup = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageVolumeBackup.setStatus('mandatory')
wfFrSwUsageDirectory = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageDirectory.setStatus('mandatory')
wfFrSwUsageFilePrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageFilePrefix.setStatus('mandatory')
wfFrSwUsageTimerInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageTimerInterval.setStatus('mandatory')
wfFrSwUsageUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageUpdateInterval.setStatus('mandatory')
wfFrSwUsageStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageStoreInterval.setStatus('mandatory')
wfFrSwUsageFlushInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageFlushInterval.setStatus('mandatory')
wfFrSwUsageCleanupInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageCleanupInterval.setStatus('mandatory')
wfFrSwUsageLocalTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageLocalTimeZone.setStatus('mandatory')
wfFrSwUsageUpdateTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageUpdateTimeStamp.setStatus('mandatory')
wfFrSwUsageStoreTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageStoreTimeStamp.setStatus('mandatory')
wfFrSwUsageFlushTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 14), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageFlushTimeStamp.setStatus('mandatory')
wfFrSwUsageCleanupTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 15), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCleanupTimeStamp.setStatus('mandatory')
wfFrSwUsageUpdateData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 16), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageUpdateData.setStatus('mandatory')
wfFrSwUsageStoreData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageStoreData.setStatus('mandatory')
wfFrSwUsageFlushData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageFlushData.setStatus('mandatory')
wfFrSwUsageFileCleanup = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageFileCleanup.setStatus('mandatory')
wfFrSwUsageState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageState.setStatus('mandatory')
wfFrSwUsageCurVolume = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurVolume.setStatus('mandatory')
wfFrSwUsageCurVolumeBackup = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurVolumeBackup.setStatus('mandatory')
wfFrSwUsageCurDirectory = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 23), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurDirectory.setStatus('mandatory')
wfFrSwUsageCurFilePrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 24), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurFilePrefix.setStatus('mandatory')
wfFrSwUsageCurTimerInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(20)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurTimerInterval.setStatus('mandatory')
wfFrSwUsageCurUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurUpdateInterval.setStatus('mandatory')
wfFrSwUsageCurStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurStoreInterval.setStatus('mandatory')
wfFrSwUsageCurFlushInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurFlushInterval.setStatus('mandatory')
wfFrSwUsageCurCleanupInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurCleanupInterval.setStatus('mandatory')
wfFrSwUsageDebug = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageDebug.setStatus('mandatory')
wfFrSwUsageCurDebug = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCurDebug.setStatus('mandatory')
wfFrSwUsageSwitchId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageSwitchId.setStatus('mandatory')
wfFrSwUsageNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageNumEntries.setStatus('mandatory')
wfFrSwSvcUsageEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageEnable.setStatus('mandatory')
wfFrSwSvcUsageInterimRecordEnable = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageInterimRecordEnable.setStatus('mandatory')
wfFrSwSvcUsageVolume = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageVolume.setStatus('mandatory')
wfFrSwSvcUsageDirectory = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 37), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageDirectory.setStatus('mandatory')
wfFrSwSvcUsageFilePrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 38), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageFilePrefix.setStatus('mandatory')
wfFrSwSvcUsageUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageUpdateInterval.setStatus('mandatory')
wfFrSwSvcUsageStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageStoreInterval.setStatus('mandatory')
wfFrSwSvcUsageFlushInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageFlushInterval.setStatus('mandatory')
wfFrSwSvcUsageCleanupInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageCleanupInterval.setStatus('mandatory')
wfFrSwSvcUsageUpdateTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 43), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageUpdateTimeStamp.setStatus('mandatory')
wfFrSwSvcUsageStoreTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 44), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageStoreTimeStamp.setStatus('mandatory')
wfFrSwSvcUsageFlushTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 45), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageFlushTimeStamp.setStatus('mandatory')
wfFrSwSvcUsageCleanupTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 46), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageCleanupTimeStamp.setStatus('mandatory')
wfFrSwSvcUsageUpdateData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 47), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageUpdateData.setStatus('mandatory')
wfFrSwSvcUsageStoreData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 48), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageStoreData.setStatus('mandatory')
wfFrSwSvcUsageFlushData = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 49), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageFlushData.setStatus('mandatory')
wfFrSwSvcUsageFileCleanup = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 50), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSvcUsageFileCleanup.setStatus('mandatory')
wfFrSwSvcUsageState = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageState.setStatus('mandatory')
wfFrSwSvcUsageCurVolume = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 52), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageCurVolume.setStatus('mandatory')
wfFrSwSvcUsageCurDirectory = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 53), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageCurDirectory.setStatus('mandatory')
wfFrSwSvcUsageCurFilePrefix = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 54), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageCurFilePrefix.setStatus('mandatory')
wfFrSwSvcUsageCurUpdateInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 55), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageCurUpdateInterval.setStatus('mandatory')
wfFrSwSvcUsageCurStoreInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 56), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(10)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageCurStoreInterval.setStatus('mandatory')
wfFrSwSvcUsageCurFlushInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 57), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageCurFlushInterval.setStatus('mandatory')
wfFrSwSvcUsageCurCleanupInterval = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 58), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)).clone(60)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageCurCleanupInterval.setStatus('mandatory')
wfFrSwSvcUsageNumEntries = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageNumEntries.setStatus('mandatory')
wfFrSwSvcUsageVersionId = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 60), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageVersionId.setStatus('mandatory')
wfFrSwUsageSwitchName = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 61), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwUsageSwitchName.setStatus('mandatory')
wfFrSwPvcUsageFileLayout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 62), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwPvcUsageFileLayout.setStatus('mandatory')
wfFrSwSvcUsageFileLayout = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 5, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSvcUsageFileLayout.setStatus('mandatory')
wfFrSwUsageTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6), )
if mibBuilder.loadTexts: wfFrSwUsageTable.setStatus('obsolete')
wfFrSwUsageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwUsageCircuitNumber"), (0, "Wellfleet-FRSW-MIB", "wfFrSwUsageDlci"))
if mibBuilder.loadTexts: wfFrSwUsageEntry.setStatus('obsolete')
wfFrSwUsageDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageDelete.setStatus('obsolete')
wfFrSwUsageCircuitNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageCircuitNumber.setStatus('obsolete')
wfFrSwUsageDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1007, 1024, 64511, 131072, 8257535))).clone(namedValues=NamedValues(("twobyteminimum", 16), ("twobytemaximum", 1007), ("threebyteminimum", 1024), ("threebytemaximum", 64511), ("fourbyteminimum", 131072), ("fourbytemaximum", 8257535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageDlci.setStatus('obsolete')
wfFrSwUsageIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageIPAddress.setStatus('obsolete')
wfFrSwUsageStartTimeStampHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageStartTimeStampHigh.setStatus('obsolete')
wfFrSwUsageStartTimeStampLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageStartTimeStampLow.setStatus('obsolete')
wfFrSwUsageEndTimeStampHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageEndTimeStampHigh.setStatus('obsolete')
wfFrSwUsageEndTimeStampLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageEndTimeStampLow.setStatus('obsolete')
wfFrSwUsageSentNonDEFramesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageSentNonDEFramesHigh.setStatus('obsolete')
wfFrSwUsageSentNonDEFramesLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageSentNonDEFramesLow.setStatus('obsolete')
wfFrSwUsageSentNonDEOctetsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageSentNonDEOctetsHigh.setStatus('obsolete')
wfFrSwUsageSentNonDEOctetsLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageSentNonDEOctetsLow.setStatus('obsolete')
wfFrSwUsageSentDEFramesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageSentDEFramesHigh.setStatus('obsolete')
wfFrSwUsageSentDEFramesLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageSentDEFramesLow.setStatus('obsolete')
wfFrSwUsageSentDEOctetsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageSentDEOctetsHigh.setStatus('obsolete')
wfFrSwUsageSentDEOctetsLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageSentDEOctetsLow.setStatus('obsolete')
wfFrSwUsageLastNonDEFramesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageLastNonDEFramesHigh.setStatus('obsolete')
wfFrSwUsageLastNonDEFramesLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 18), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageLastNonDEFramesLow.setStatus('obsolete')
wfFrSwUsageLastNonDEOctetsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageLastNonDEOctetsHigh.setStatus('obsolete')
wfFrSwUsageLastNonDEOctetsLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageLastNonDEOctetsLow.setStatus('obsolete')
wfFrSwUsageLastDEFramesHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageLastDEFramesHigh.setStatus('obsolete')
wfFrSwUsageLastDEFramesLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageLastDEFramesLow.setStatus('obsolete')
wfFrSwUsageLastDEOctetsHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageLastDEOctetsHigh.setStatus('obsolete')
wfFrSwUsageLastDEOctetsLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageLastDEOctetsLow.setStatus('obsolete')
wfFrSwUsageRemoteIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 25), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageRemoteIPAddress.setStatus('obsolete')
wfFrSwUsageRemoteDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 6, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 1007, 1024, 64511, 131072, 8257535))).clone(namedValues=NamedValues(("twobyteminimum", 16), ("twobytemaximum", 1007), ("threebyteminimum", 1024), ("threebytemaximum", 64511), ("fourbyteminimum", 131072), ("fourbytemaximum", 8257535)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwUsageRemoteDlci.setStatus('obsolete')
wfFrSwVcTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7), )
if mibBuilder.loadTexts: wfFrSwVcTable.setStatus('mandatory')
wfFrSwVcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwVcCircuit"), (0, "Wellfleet-FRSW-MIB", "wfFrSwVcDlci"))
if mibBuilder.loadTexts: wfFrSwVcEntry.setStatus('mandatory')
wfFrSwVcDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2), ("system", 3), ("svc", 4), ("spvccra", 5), ("spvccaa", 6))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcDelete.setStatus('mandatory')
wfFrSwVcCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcCircuit.setStatus('mandatory')
wfFrSwVcDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcDlci.setStatus('mandatory')
wfFrSwVcState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("invalid", 1), ("active", 2), ("inactive", 3), ("control", 4), ("user", 5))).clone('invalid')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcState.setStatus('mandatory')
wfFrSwVcStateSet = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2))).clone('active')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcStateSet.setStatus('mandatory')
wfFrSwVcMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("multicast", 1), ("unicast", 2))).clone('unicast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcMulticast.setStatus('mandatory')
wfFrSwVcInBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 7), Integer32().clone(2147483647)).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcInBe.setStatus('mandatory')
wfFrSwVcOutBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcOutBe.setStatus('mandatory')
wfFrSwVcInThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcInThroughput.setStatus('mandatory')
wfFrSwVcOutThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcOutThroughput.setStatus('mandatory')
wfFrSwVcOutBc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcOutBc.setStatus('mandatory')
wfFrSwVcInBc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcInBc.setStatus('mandatory')
wfFrSwVcInBcOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcInBcOctets.setStatus('mandatory')
wfFrSwVcBecnState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcBecnState.setStatus('mandatory')
wfFrSwVcReportedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("acked", 1), ("unacked", 2), ("unreported", 3))).clone('unreported')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcReportedStatus.setStatus('mandatory')
wfFrSwVcReceivedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2))).clone('active')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcReceivedStatus.setStatus('mandatory')
wfFrSwVcCrossNetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2))).clone('active')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcCrossNetStatus.setStatus('mandatory')
wfFrSwVcXNetSent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unsent", 1), ("sent", 2))).clone('unsent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcXNetSent.setStatus('mandatory')
wfFrSwVcXNetReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("recv", 1), ("unrecv", 2))).clone('unrecv')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcXNetReceived.setStatus('mandatory')
wfFrSwVcCalledIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 20), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcCalledIpAddr.setStatus('mandatory')
wfFrSwVcCalledDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 8257535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcCalledDlci.setStatus('mandatory')
wfFrSwVcTrfPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 999))).clone(namedValues=NamedValues(("one", 1), ("two", 2), ("three", 3), ("default", 999))).clone('default')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcTrfPriority.setStatus('mandatory')
wfFrSwVcCreationTime = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 23), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcCreationTime.setStatus('mandatory')
wfFrSwVcLastTimeChange = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 24), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcLastTimeChange.setStatus('mandatory')
wfFrSwVcTxNonDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcTxNonDeFrames.setStatus('mandatory')
wfFrSwVcTxNonDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcTxNonDeOctets.setStatus('mandatory')
wfFrSwVcTxDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcTxDeFrames.setStatus('mandatory')
wfFrSwVcTxDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcTxDeOctets.setStatus('mandatory')
wfFrSwVcSetFecnFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcSetFecnFrames.setStatus('mandatory')
wfFrSwVcSetFecnOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcSetFecnOctets.setStatus('mandatory')
wfFrSwVcSetBecnFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcSetBecnFrames.setStatus('mandatory')
wfFrSwVcSetBecnOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcSetBecnOctets.setStatus('mandatory')
wfFrSwVcSetDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcSetDeFrames.setStatus('mandatory')
wfFrSwVcSetDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcSetDeOctets.setStatus('mandatory')
wfFrSwVcDropNonDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcDropNonDeFrames.setStatus('mandatory')
wfFrSwVcDropNonDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcDropNonDeOctets.setStatus('mandatory')
wfFrSwVcDropDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcDropDeFrames.setStatus('mandatory')
wfFrSwVcDropDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcDropDeOctets.setStatus('mandatory')
wfFrSwVcInactiveVcDropFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcInactiveVcDropFrames.setStatus('mandatory')
wfFrSwVcInactiveVcDropOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcInactiveVcDropOctets.setStatus('mandatory')
wfFrSwVcRecvNonDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRecvNonDeFrames.setStatus('mandatory')
wfFrSwVcRecvNonDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRecvNonDeOctets.setStatus('mandatory')
wfFrSwVcRecvDeFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRecvDeFrames.setStatus('mandatory')
wfFrSwVcRecvDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRecvDeOctets.setStatus('mandatory')
wfFrSwVcRecvFecnFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRecvFecnFrames.setStatus('mandatory')
wfFrSwVcRecvFecnOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRecvFecnOctets.setStatus('mandatory')
wfFrSwVcRecvBecnFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRecvBecnFrames.setStatus('mandatory')
wfFrSwVcRecvBecnOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRecvBecnOctets.setStatus('mandatory')
wfFrSwVcRecentNonDeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 49), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRecentNonDeOctets.setStatus('mandatory')
wfFrSwVcXNetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 50), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcXNetErrors.setStatus('mandatory')
wfFrSwVcDropExcessBurstFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 51), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcDropExcessBurstFrames.setStatus('mandatory')
wfFrSwVcDropExcessBurstOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 52), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcDropExcessBurstOctets.setStatus('mandatory')
wfFrSwVcInBeOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 53), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcInBeOctets.setStatus('mandatory')
wfFrSwVcCfgInBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 54), Integer32().clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcCfgInBe.setStatus('mandatory')
wfFrSwVcRedirectAction = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 55), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("redirecttoprimary", 2), ("redirecttobackup", 3), ("switchondemand", 4), ("swondemandtoprimary", 5), ("swondemandtobackup", 6))).clone('redirecttoprimary')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcRedirectAction.setStatus('mandatory')
wfFrSwVcRedirectType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("transparent", 1), ("intrusiven", 2), ("intrusivea", 3))).clone('intrusivea')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcRedirectType.setStatus('mandatory')
wfFrSwVcRedirectState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 57), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 12, 13, 21))).clone(namedValues=NamedValues(("backupinactive", 1), ("primaryactive", 2), ("switchtobackup", 3), ("backupactive", 12), ("switchtoprimary", 13), ("holddown", 21))).clone('backupinactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcRedirectState.setStatus('mandatory')
wfFrSwVcBackupCalledIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 58), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcBackupCalledIpAddr.setStatus('mandatory')
wfFrSwVcBackupCalledDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 59), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 8257535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcBackupCalledDlci.setStatus('mandatory')
wfFrSwVcBackupCrossNetStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 60), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inactive", 1), ("active", 2))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcBackupCrossNetStatus.setStatus('mandatory')
wfFrSwVcBackupCrossNetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcBackupCrossNetErrors.setStatus('mandatory')
wfFrSwVcAtmIwfMode = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("atmDisableIwfMode", 1), ("atmServiceIwfTransparentMode", 2), ("atmServiceIwfTranslationMode", 3), ("atmNetworkIwfMode", 4))).clone('atmDisableIwfMode')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcAtmIwfMode.setStatus('mandatory')
wfFrSwVcAtmIwfVPI = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcAtmIwfVPI.setStatus('mandatory')
wfFrSwVcAtmIwfVCI = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(32, 65535)).clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcAtmIwfVCI.setStatus('mandatory')
wfFrSwVcAtmIwfLossPriorityPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("atmiwfmapDe", 1), ("atmiwfsetDe1", 2), ("atmiwfsetDe0", 3))).clone('atmiwfmapDe')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcAtmIwfLossPriorityPolicy.setStatus('mandatory')
wfFrSwVcAtmIwfDePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 66), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("atmiwfmapClp", 1), ("atmiwfsetClp1", 2), ("atmiwfsetClp0", 3))).clone('atmiwfmapClp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcAtmIwfDePolicy.setStatus('mandatory')
wfFrSwVcAtmIwfEfciPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 67), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("atmiwfmapFecn", 1), ("atmiwfsetFecn1", 2), ("atmiwfsetFecn0", 3))).clone('atmiwfmapFecn')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcAtmIwfEfciPolicy.setStatus('mandatory')
wfFrSwVcEscapeEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 68), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcEscapeEnable.setStatus('mandatory')
wfFrSwVcSpvcCallState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 69), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inactive", 1), ("inprogress", 2), ("active", 3))).clone('inactive')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVcSpvcCallState.setStatus('mandatory')
wfFrSwVcCallReqCalledAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 70), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcCallReqCalledAddr.setStatus('mandatory')
wfFrSwVcCallReqDlciSelectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 71), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("any", 1), ("specific", 2))).clone('any')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcCallReqDlciSelectionType.setStatus('mandatory')
wfFrSwVcCallReqCalledDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 72), Integer32().subtype(subtypeSpec=ValueRangeConstraint(16, 8257535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcCallReqCalledDlci.setStatus('mandatory')
wfFrSwVcCallReqRetryTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 73), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcCallReqRetryTimer.setStatus('mandatory')
wfFrSwVcCallReqMaxRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 7, 1, 74), Integer32().clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVcCallReqMaxRetries.setStatus('mandatory')
wfFrSwIsdnBaseTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 8), )
if mibBuilder.loadTexts: wfFrSwIsdnBaseTable.setStatus('mandatory')
wfFrSwIsdnBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 8, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwIsdnBaseSlotNum"))
if mibBuilder.loadTexts: wfFrSwIsdnBaseEntry.setStatus('mandatory')
wfFrSwIsdnBaseDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 8, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwIsdnBaseDelete.setStatus('mandatory')
wfFrSwIsdnBaseSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwIsdnBaseSlotNum.setStatus('mandatory')
wfFrSwIsdnBaseAssocType = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 8, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dnis", 1), ("ani", 2))).clone('dnis')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwIsdnBaseAssocType.setStatus('mandatory')
wfFrSwIsdnAssocTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 9), )
if mibBuilder.loadTexts: wfFrSwIsdnAssocTable.setStatus('mandatory')
wfFrSwIsdnAssocEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 9, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwIsdnAssocSlotNum"), (0, "Wellfleet-FRSW-MIB", "wfFrSwIsdnAssocNum"))
if mibBuilder.loadTexts: wfFrSwIsdnAssocEntry.setStatus('mandatory')
wfFrSwIsdnAssocDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 9, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwIsdnAssocDelete.setStatus('mandatory')
wfFrSwIsdnAssocSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 9, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwIsdnAssocSlotNum.setStatus('mandatory')
wfFrSwIsdnAssocNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 9, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwIsdnAssocNum.setStatus('mandatory')
wfFrSwIsdnAssocScrnEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 9, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwIsdnAssocScrnEnable.setStatus('mandatory')
wfFrSwIsdnAssocIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 9, 1, 5), Integer32().clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwIsdnAssocIndex.setStatus('mandatory')
wfFrSwIsdnUniTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 10), )
if mibBuilder.loadTexts: wfFrSwIsdnUniTable.setStatus('mandatory')
wfFrSwIsdnUniEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 10, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwIsdnUniIndex"), (0, "Wellfleet-FRSW-MIB", "wfFrSwIsdnUniNum"))
if mibBuilder.loadTexts: wfFrSwIsdnUniEntry.setStatus('mandatory')
wfFrSwIsdnUniDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwIsdnUniDelete.setStatus('mandatory')
wfFrSwIsdnUniIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwIsdnUniIndex.setStatus('mandatory')
wfFrSwIsdnUniNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 10, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwIsdnUniNum.setStatus('mandatory')
wfFrSwIsdnUniState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("available", 1), ("inuse", 2))).clone('available')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwIsdnUniState.setStatus('mandatory')
wfFrSwIsdnScrnTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 11), )
if mibBuilder.loadTexts: wfFrSwIsdnScrnTable.setStatus('mandatory')
wfFrSwIsdnScrnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 11, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwIsdnScrnIndex"), (0, "Wellfleet-FRSW-MIB", "wfFrSwIsdnScrnNum"))
if mibBuilder.loadTexts: wfFrSwIsdnScrnEntry.setStatus('mandatory')
wfFrSwIsdnScrnDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwIsdnScrnDelete.setStatus('mandatory')
wfFrSwIsdnScrnIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 11, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwIsdnScrnIndex.setStatus('mandatory')
wfFrSwIsdnScrnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 11, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwIsdnScrnNum.setStatus('mandatory')
wfFrSwSigTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12), )
if mibBuilder.loadTexts: wfFrSwSigTable.setStatus('mandatory')
wfFrSwSigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwSigCircuit"))
if mibBuilder.loadTexts: wfFrSwSigEntry.setStatus('mandatory')
wfFrSwSigDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigDelete.setStatus('mandatory')
wfFrSwSigCircuit = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigCircuit.setStatus('mandatory')
wfFrSwSigSvcDlciLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(16)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigSvcDlciLow.setStatus('mandatory')
wfFrSwSigSvcDlciHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(991)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigSvcDlciHigh.setStatus('mandatory')
wfFrSwSigDlciAssign = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("increment", 1), ("decrement", 2))).clone('decrement')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigDlciAssign.setStatus('mandatory')
wfFrSwSigMaxNumOfSvcs = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigMaxNumOfSvcs.setStatus('mandatory')
wfFrSwSigNumOfSvcsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigNumOfSvcsInUse.setStatus('mandatory')
wfFrSwSigDefaultThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigDefaultThroughput.setStatus('mandatory')
wfFrSwSigDefaultMinAcceptThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigDefaultMinAcceptThroughput.setStatus('mandatory')
wfFrSwSigDefaultBc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigDefaultBc.setStatus('mandatory')
wfFrSwSigDefaultBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigDefaultBe.setStatus('mandatory')
wfFrSwSigMaxInThroughputPerSvc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigMaxInThroughputPerSvc.setStatus('mandatory')
wfFrSwSigMaxOutThroughputPerSvc = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigMaxOutThroughputPerSvc.setStatus('mandatory')
wfFrSwSigTotalInNegotiableThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigTotalInNegotiableThroughput.setStatus('mandatory')
wfFrSwSigTotalInCurrentThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigTotalInCurrentThroughput.setStatus('mandatory')
wfFrSwSigTotalOutNegotiableThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigTotalOutNegotiableThroughput.setStatus('mandatory')
wfFrSwSigTotalOutCurrentThroughput = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigTotalOutCurrentThroughput.setStatus('mandatory')
wfFrSwSigXNetClearingDisable = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigXNetClearingDisable.setStatus('mandatory')
wfFrSwSigCallingPartyIEMandatory = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigCallingPartyIEMandatory.setStatus('mandatory')
wfFrSwSigT301 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigT301.setStatus('mandatory')
wfFrSwSigT303 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 90)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigT303.setStatus('mandatory')
wfFrSwSigT305 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 90)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigT305.setStatus('mandatory')
wfFrSwSigT308 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 90)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigT308.setStatus('mandatory')
wfFrSwSigT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 90)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigT310.setStatus('mandatory')
wfFrSwSigT322 = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(2, 90)).clone(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigT322.setStatus('mandatory')
wfFrSwSigInSetupPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigInSetupPkts.setStatus('mandatory')
wfFrSwSigInCallProceedingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigInCallProceedingPkts.setStatus('mandatory')
wfFrSwSigInConnectPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigInConnectPkts.setStatus('mandatory')
wfFrSwSigInDisconnectPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigInDisconnectPkts.setStatus('mandatory')
wfFrSwSigInReleasePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigInReleasePkts.setStatus('mandatory')
wfFrSwSigInReleaseCompletePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigInReleaseCompletePkts.setStatus('mandatory')
wfFrSwSigInStatusEnquiryPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigInStatusEnquiryPkts.setStatus('mandatory')
wfFrSwSigInStatusPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigInStatusPkts.setStatus('mandatory')
wfFrSwSigInUnknownPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigInUnknownPkts.setStatus('mandatory')
wfFrSwSigOutSetupPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigOutSetupPkts.setStatus('mandatory')
wfFrSwSigOutCallProceedingPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigOutCallProceedingPkts.setStatus('mandatory')
wfFrSwSigOutConnectPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigOutConnectPkts.setStatus('mandatory')
wfFrSwSigOutDisconnectPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigOutDisconnectPkts.setStatus('mandatory')
wfFrSwSigOutReleasePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigOutReleasePkts.setStatus('mandatory')
wfFrSwSigOutReleaseCompletePkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigOutReleaseCompletePkts.setStatus('mandatory')
wfFrSwSigOutStatusEnquiryPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigOutStatusEnquiryPkts.setStatus('mandatory')
wfFrSwSigOutStatusPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigOutStatusPkts.setStatus('mandatory')
wfFrSwSigRejectedConnRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigRejectedConnRequests.setStatus('mandatory')
wfFrSwSigNwrkAbortedConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigNwrkAbortedConnections.setStatus('mandatory')
wfFrSwSigL2Resets = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwSigL2Resets.setStatus('mandatory')
wfFrSwSigDlciIEAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigDlciIEAllowed.setStatus('mandatory')
wfFrSwSigX213PriorityIEAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigX213PriorityIEAllowed.setStatus('mandatory')
wfFrSwSigMaximumBe = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 12, 1, 48), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(2147483647)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwSigMaximumBe.setStatus('mandatory')
wfFrSwGlobalE164AddrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 13), )
if mibBuilder.loadTexts: wfFrSwGlobalE164AddrTable.setStatus('mandatory')
wfFrSwGlobalE164AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 13, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwGlobalE164AddrLow"), (0, "Wellfleet-FRSW-MIB", "wfFrSwGlobalE164AddrHigh"))
if mibBuilder.loadTexts: wfFrSwGlobalE164AddrEntry.setStatus('mandatory')
wfFrSwGlobalE164AddrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 13, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwGlobalE164AddrDelete.setStatus('mandatory')
wfFrSwGlobalE164AddrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 13, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwGlobalE164AddrLow.setStatus('mandatory')
wfFrSwGlobalE164AddrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 13, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwGlobalE164AddrHigh.setStatus('mandatory')
wfFrSwGlobalE164AddrIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 13, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwGlobalE164AddrIPAddr.setStatus('mandatory')
wfFrSwGlobalX121AddrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 14), )
if mibBuilder.loadTexts: wfFrSwGlobalX121AddrTable.setStatus('mandatory')
wfFrSwGlobalX121AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 14, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwGlobalX121AddrLow"), (0, "Wellfleet-FRSW-MIB", "wfFrSwGlobalX121AddrHigh"))
if mibBuilder.loadTexts: wfFrSwGlobalX121AddrEntry.setStatus('mandatory')
wfFrSwGlobalX121AddrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwGlobalX121AddrDelete.setStatus('mandatory')
wfFrSwGlobalX121AddrLow = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 14, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwGlobalX121AddrLow.setStatus('mandatory')
wfFrSwGlobalX121AddrHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 14, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwGlobalX121AddrHigh.setStatus('mandatory')
wfFrSwGlobalX121AddrIPAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 14, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwGlobalX121AddrIPAddr.setStatus('mandatory')
wfFrSwLocalE164AddrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 15), )
if mibBuilder.loadTexts: wfFrSwLocalE164AddrTable.setStatus('mandatory')
wfFrSwLocalE164AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 15, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwLocalE164AddrCct"), (0, "Wellfleet-FRSW-MIB", "wfFrSwLocalE164Address"))
if mibBuilder.loadTexts: wfFrSwLocalE164AddrEntry.setStatus('mandatory')
wfFrSwLocalE164AddrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 15, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwLocalE164AddrDelete.setStatus('mandatory')
wfFrSwLocalE164AddrCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 15, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwLocalE164AddrCct.setStatus('mandatory')
wfFrSwLocalE164Address = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 15, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwLocalE164Address.setStatus('mandatory')
wfFrSwLocalE164AddrCUG = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 15, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwLocalE164AddrCUG.setStatus('mandatory')
wfFrSwLocalE164AddrLocalFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 15, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("nonlocal", 2))).clone('local')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwLocalE164AddrLocalFlag.setStatus('mandatory')
wfFrSwLocalX121AddrTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 16), )
if mibBuilder.loadTexts: wfFrSwLocalX121AddrTable.setStatus('mandatory')
wfFrSwLocalX121AddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 16, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwLocalX121AddrCct"), (0, "Wellfleet-FRSW-MIB", "wfFrSwLocalX121Address"))
if mibBuilder.loadTexts: wfFrSwLocalX121AddrEntry.setStatus('mandatory')
wfFrSwLocalX121AddrDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwLocalX121AddrDelete.setStatus('mandatory')
wfFrSwLocalX121AddrCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 16, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwLocalX121AddrCct.setStatus('mandatory')
wfFrSwLocalX121Address = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 16, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwLocalX121Address.setStatus('mandatory')
wfFrSwLocalX121AddrCUG = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 16, 1, 4), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwLocalX121AddrCUG.setStatus('mandatory')
wfFrSwLocalX121AddrLocalFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("nonlocal", 2))).clone('local')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwLocalX121AddrLocalFlag.setStatus('mandatory')
wfFrSwBase = MibIdentifier((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 17))
wfFrSwBaseDelete = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 17, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwBaseDelete.setStatus('mandatory')
wfFrSwBaseIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 17, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwBaseIpAddr.setStatus('mandatory')
wfFrSwBaseShutDown = MibScalar((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 17, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwBaseShutDown.setStatus('mandatory')
wfFrSwCngcMonTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18), )
if mibBuilder.loadTexts: wfFrSwCngcMonTable.setStatus('mandatory')
wfFrSwCngcMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwCngcMonCct"))
if mibBuilder.loadTexts: wfFrSwCngcMonEntry.setStatus('mandatory')
wfFrSwCngcMonReset = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwCngcMonReset.setStatus('mandatory')
wfFrSwCngcMonCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonCct.setStatus('mandatory')
wfFrSwCngcMonP0Level1Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP0Level1Percent.setStatus('mandatory')
wfFrSwCngcMonP0Level2Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP0Level2Percent.setStatus('mandatory')
wfFrSwCngcMonP0Level3Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP0Level3Percent.setStatus('mandatory')
wfFrSwCngcMonP0Level4Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP0Level4Percent.setStatus('mandatory')
wfFrSwCngcMonP1Level1Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP1Level1Percent.setStatus('mandatory')
wfFrSwCngcMonP1Level2Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP1Level2Percent.setStatus('mandatory')
wfFrSwCngcMonP1Level3Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP1Level3Percent.setStatus('mandatory')
wfFrSwCngcMonP1Level4Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP1Level4Percent.setStatus('mandatory')
wfFrSwCngcMonP2Level1Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP2Level1Percent.setStatus('mandatory')
wfFrSwCngcMonP2Level2Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP2Level2Percent.setStatus('mandatory')
wfFrSwCngcMonP2Level3Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP2Level3Percent.setStatus('mandatory')
wfFrSwCngcMonP2Level4Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP2Level4Percent.setStatus('mandatory')
wfFrSwCngcMonP3Level1Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP3Level1Percent.setStatus('mandatory')
wfFrSwCngcMonP3Level2Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP3Level2Percent.setStatus('mandatory')
wfFrSwCngcMonP3Level3Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP3Level3Percent.setStatus('mandatory')
wfFrSwCngcMonP3Level4Percent = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 18, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwCngcMonP3Level4Percent.setStatus('mandatory')
wfFrSwVirtualIntfTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 19), )
if mibBuilder.loadTexts: wfFrSwVirtualIntfTable.setStatus('mandatory')
wfFrSwVirtualIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 19, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwVirtualIntfSlot"), (0, "Wellfleet-FRSW-MIB", "wfFrSwVirtualIntfCct"))
if mibBuilder.loadTexts: wfFrSwVirtualIntfEntry.setStatus('mandatory')
wfFrSwVirtualIntfDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 19, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwVirtualIntfDelete.setStatus('mandatory')
wfFrSwVirtualIntfSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 19, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVirtualIntfSlot.setStatus('mandatory')
wfFrSwVirtualIntfCct = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 19, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVirtualIntfCct.setStatus('mandatory')
wfFrSwVirtualIntfLineNum = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 19, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwVirtualIntfLineNum.setStatus('mandatory')
wfFrSwExtFileSysTable = MibTable((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 20), )
if mibBuilder.loadTexts: wfFrSwExtFileSysTable.setStatus('mandatory')
wfFrSwExtFileSysEntry = MibTableRow((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 20, 1), ).setIndexNames((0, "Wellfleet-FRSW-MIB", "wfFrSwExtFileSysSlot"))
if mibBuilder.loadTexts: wfFrSwExtFileSysEntry.setStatus('mandatory')
wfFrSwExtFileSysDelete = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("created", 1), ("deleted", 2))).clone('created')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwExtFileSysDelete.setStatus('mandatory')
wfFrSwExtFileSysSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 20, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwExtFileSysSlot.setStatus('mandatory')
wfFrSwExtFileSysSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 20, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wfFrSwExtFileSysSize.setStatus('mandatory')
wfFrSwExtFileSysActualSize = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 20, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwExtFileSysActualSize.setStatus('mandatory')
wfFrSwExtFileSysState = MibTableColumn((1, 3, 6, 1, 4, 1, 18, 3, 5, 9, 6, 20, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("up", 1), ("fault", 2), ("init", 3), ("notpresent", 4))).clone('notpresent')).setMaxAccess("readonly")
if mibBuilder.loadTexts: wfFrSwExtFileSysState.setStatus('mandatory')
mibBuilder.exportSymbols("Wellfleet-FRSW-MIB", wfFrSwCctLocalRecvDEOctets=wfFrSwCctLocalRecvDEOctets, wfFrSwVcInactiveVcDropOctets=wfFrSwVcInactiveVcDropOctets, wfFrSwExtFileSysSize=wfFrSwExtFileSysSize, wfFrSwSigSvcDlciHigh=wfFrSwSigSvcDlciHigh, wfFrSwCctLocalRecvFECNFrames=wfFrSwCctLocalRecvFECNFrames, wfFrSwSvcUsageVolume=wfFrSwSvcUsageVolume, wfFrSwDlcmiDteReceived=wfFrSwDlcmiDteReceived, wfFrSwSvcUsageCleanupInterval=wfFrSwSvcUsageCleanupInterval, wfFrSwDlcmiCrossNetPollingInterval=wfFrSwDlcmiCrossNetPollingInterval, wfFrSwDlcmiProtocolErrors=wfFrSwDlcmiProtocolErrors, wfFrSwCctRemoteSetFECNFrames=wfFrSwCctRemoteSetFECNFrames, wfFrSwSigInDisconnectPkts=wfFrSwSigInDisconnectPkts, wfFrSwSigOutCallProceedingPkts=wfFrSwSigOutCallProceedingPkts, wfFrSwDlcmiSequenceCount=wfFrSwDlcmiSequenceCount, wfFrSwVcStateSet=wfFrSwVcStateSet, wfFrSwVcRecvBecnOctets=wfFrSwVcRecvBecnOctets, wfFrSwTupleTable=wfFrSwTupleTable, wfFrSwLocalE164AddrDelete=wfFrSwLocalE164AddrDelete, wfFrSwIsdnAssocNum=wfFrSwIsdnAssocNum, wfFrSwUsageCurVolume=wfFrSwUsageCurVolume, wfFrSwExtFileSysActualSize=wfFrSwExtFileSysActualSize, wfFrSwIsdnBaseTable=wfFrSwIsdnBaseTable, wfFrSwLocalE164Address=wfFrSwLocalE164Address, wfFrSwSvcUsageUpdateData=wfFrSwSvcUsageUpdateData, wfFrSwDlcmiFrameTooLongErrors=wfFrSwDlcmiFrameTooLongErrors, wfFrSwSigT305=wfFrSwSigT305, wfFrSwVcDlci=wfFrSwVcDlci, wfFrSwVcCalledDlci=wfFrSwVcCalledDlci, wfFrSwCctInBcOctets=wfFrSwCctInBcOctets, wfFrSwVcAtmIwfMode=wfFrSwVcAtmIwfMode, wfFrSwIsdnBaseDelete=wfFrSwIsdnBaseDelete, wfFrSwUsageCurTimerInterval=wfFrSwUsageCurTimerInterval, wfFrSwCctDelete=wfFrSwCctDelete, wfFrSwDlcmiEscapeMode=wfFrSwDlcmiEscapeMode, wfFrSwVirtualIntfEntry=wfFrSwVirtualIntfEntry, wfFrSwSigNwrkAbortedConnections=wfFrSwSigNwrkAbortedConnections, wfFrSwCctInBe=wfFrSwCctInBe, wfFrSwSvcUsageUpdateInterval=wfFrSwSvcUsageUpdateInterval, wfFrSwVcDropNonDeOctets=wfFrSwVcDropNonDeOctets, wfFrSwUsageSwitchId=wfFrSwUsageSwitchId, wfFrSwSigDefaultBe=wfFrSwSigDefaultBe, wfFrSwCctReportedStatus=wfFrSwCctReportedStatus, wfFrSwUsageStoreData=wfFrSwUsageStoreData, wfFrSwCctEntry=wfFrSwCctEntry, wfFrSwDlcmiPolls=wfFrSwDlcmiPolls, wfFrSwIsdnBaseEntry=wfFrSwIsdnBaseEntry, wfFrSwVcDropExcessBurstOctets=wfFrSwVcDropExcessBurstOctets, wfFrSwGlobalX121AddrLow=wfFrSwGlobalX121AddrLow, wfFrSwIsdnAssocScrnEnable=wfFrSwIsdnAssocScrnEnable, wfFrSwDlcmiAlarmTimer=wfFrSwDlcmiAlarmTimer, wfFrSwIsdnScrnIndex=wfFrSwIsdnScrnIndex, wfFrSwIsdnScrnDelete=wfFrSwIsdnScrnDelete, wfFrSwDlcmiActiveReceived=wfFrSwDlcmiActiveReceived, wfFrSwSvcUsageDirectory=wfFrSwSvcUsageDirectory, wfFrSwUsageEntry=wfFrSwUsageEntry, wfFrSwGlobalE164AddrDelete=wfFrSwGlobalE164AddrDelete, wfFrSwCctXNetReceived=wfFrSwCctXNetReceived, wfFrSwCctRemoteSetBECNFrames=wfFrSwCctRemoteSetBECNFrames, wfFrSwLocalX121AddrCct=wfFrSwLocalX121AddrCct, wfFrSwVcSetDeFrames=wfFrSwVcSetDeFrames, wfFrSwIsdnScrnNum=wfFrSwIsdnScrnNum, wfFrSwDlcmiCircuit=wfFrSwDlcmiCircuit, wfFrSwUsageFlushData=wfFrSwUsageFlushData, wfFrSwSigDefaultBc=wfFrSwSigDefaultBc, wfFrSwCctInThroughput=wfFrSwCctInThroughput, wfFrSwVcCallReqCalledDlci=wfFrSwVcCallReqCalledDlci, wfFrSwCctOutThroughput=wfFrSwCctOutThroughput, wfFrSwCctRemoteRecvBECNFrames=wfFrSwCctRemoteRecvBECNFrames, wfFrSwSigMaxNumOfSvcs=wfFrSwSigMaxNumOfSvcs, wfFrSwVcAtmIwfVPI=wfFrSwVcAtmIwfVPI, wfFrSwTupleDlciB=wfFrSwTupleDlciB, wfFrSwSvcUsageFileLayout=wfFrSwSvcUsageFileLayout, wfFrSwUsageSentNonDEFramesHigh=wfFrSwUsageSentNonDEFramesHigh, wfFrSwSigTotalOutNegotiableThroughput=wfFrSwSigTotalOutNegotiableThroughput, wfFrSwUsageCurFlushInterval=wfFrSwUsageCurFlushInterval, wfFrSwUsageState=wfFrSwUsageState, wfFrSwDlcmiBcMeasurementEnable=wfFrSwDlcmiBcMeasurementEnable, wfFrSwSvcUsageVersionId=wfFrSwSvcUsageVersionId, wfFrSwUsageLastNonDEOctetsLow=wfFrSwUsageLastNonDEOctetsLow, wfFrSwIsdnBaseAssocType=wfFrSwIsdnBaseAssocType, wfFrSwDlcmiDelete=wfFrSwDlcmiDelete, wfFrSwVcReportedStatus=wfFrSwVcReportedStatus, wfFrSwVcRecvFecnOctets=wfFrSwVcRecvFecnOctets, wfFrSwBaseDelete=wfFrSwBaseDelete, wfFrSwSigDefaultThroughput=wfFrSwSigDefaultThroughput, wfFrSwGlobalE164AddrLow=wfFrSwGlobalE164AddrLow, wfFrSwCctRemoteRecvBECNOctets=wfFrSwCctRemoteRecvBECNOctets, wfFrSwGlobalX121AddrHigh=wfFrSwGlobalX121AddrHigh, wfFrSwCctRemoteSentDEFrames=wfFrSwCctRemoteSentDEFrames, wfFrSwCngcMonEntry=wfFrSwCngcMonEntry, wfFrSwDlcmiBidirect=wfFrSwDlcmiBidirect, wfFrSwSvcUsageCurUpdateInterval=wfFrSwSvcUsageCurUpdateInterval, wfFrSwVcBackupCrossNetErrors=wfFrSwVcBackupCrossNetErrors, wfFrSwDlcmiDteFullEnquiryInterval=wfFrSwDlcmiDteFullEnquiryInterval, wfFrSwUsageDebug=wfFrSwUsageDebug, wfFrSwVcCrossNetStatus=wfFrSwVcCrossNetStatus, wfFrSwDlcmiFrameTooShortErrors=wfFrSwDlcmiFrameTooShortErrors, wfFrSwDlcmiCrossNetAsyncUpdateEnable=wfFrSwDlcmiCrossNetAsyncUpdateEnable, wfFrSwDlcmiDeletedVCs=wfFrSwDlcmiDeletedVCs, wfFrSwUsageCurUpdateInterval=wfFrSwUsageCurUpdateInterval, wfFrSwGlobalX121AddrTable=wfFrSwGlobalX121AddrTable, wfFrSwDlcmiTable=wfFrSwDlcmiTable, wfFrSwBcMeasurementInterval=wfFrSwBcMeasurementInterval, wfFrSwVirtualIntfDelete=wfFrSwVirtualIntfDelete, wfFrSwCctLocalRecvBECNOctets=wfFrSwCctLocalRecvBECNOctets, wfFrSwDlcmiFullEnquiryInterval=wfFrSwDlcmiFullEnquiryInterval, wfFrSwCctLocalRecvNonDEOctets=wfFrSwCctLocalRecvNonDEOctets, wfFrSwUsageSentDEFramesLow=wfFrSwUsageSentDEFramesLow, wfFrSwCngcMonP1Level3Percent=wfFrSwCngcMonP1Level3Percent, wfFrSwLocalX121AddrLocalFlag=wfFrSwLocalX121AddrLocalFlag, wfFrSwVcCircuit=wfFrSwVcCircuit, wfFrSwCctRemoteDropDEFrames=wfFrSwCctRemoteDropDEFrames, wfFrSwSigTotalOutCurrentThroughput=wfFrSwSigTotalOutCurrentThroughput, wfFrSwDlcmiSequenceErrors=wfFrSwDlcmiSequenceErrors, wfFrSwUsageDirectory=wfFrSwUsageDirectory, wfFrSwVcRecvDeOctets=wfFrSwVcRecvDeOctets, wfFrSwVcRecvFecnFrames=wfFrSwVcRecvFecnFrames, wfFrSwUsageNumEntries=wfFrSwUsageNumEntries, wfFrSwUsageCurDebug=wfFrSwUsageCurDebug, wfFrSwVcRedirectAction=wfFrSwVcRedirectAction, wfFrSwDlcmiErrorThreshold=wfFrSwDlcmiErrorThreshold, wfFrSwVcOutBe=wfFrSwVcOutBe, wfFrSwIsdnBaseSlotNum=wfFrSwIsdnBaseSlotNum, wfFrSwUsageCurFilePrefix=wfFrSwUsageCurFilePrefix, wfFrSwDlcmiUnknownRPTErrors=wfFrSwDlcmiUnknownRPTErrors, wfFrSwDlcmiFormatErrors=wfFrSwDlcmiFormatErrors, wfFrSwSigOutStatusPkts=wfFrSwSigOutStatusPkts, wfFrSwIsdnAssocEntry=wfFrSwIsdnAssocEntry, wfFrSwCctLocalRecvFECNOctets=wfFrSwCctLocalRecvFECNOctets, wfFrSwExtFileSysSlot=wfFrSwExtFileSysSlot, wfFrSwCctLocalSetFECNOctets=wfFrSwCctLocalSetFECNOctets, wfFrSwVcDropDeOctets=wfFrSwVcDropDeOctets, wfFrSwVcTable=wfFrSwVcTable, wfFrSwIsdnUniState=wfFrSwIsdnUniState, wfFrSwCctMulticast=wfFrSwCctMulticast, wfFrSwUsageVolume=wfFrSwUsageVolume, wfFrSwUsageLastDEOctetsHigh=wfFrSwUsageLastDEOctetsHigh, wfFrSwVirtualIntfLineNum=wfFrSwVirtualIntfLineNum, wfFrSwSigOutSetupPkts=wfFrSwSigOutSetupPkts, wfFrSwUsageLastDEFramesLow=wfFrSwUsageLastDEFramesLow, wfFrSwVcInBe=wfFrSwVcInBe, wfFrSwCctTable=wfFrSwCctTable, wfFrSwCctRemoteDropDEOctets=wfFrSwCctRemoteDropDEOctets, wfFrSwSigInSetupPkts=wfFrSwSigInSetupPkts, wfFrSwUsageFlushInterval=wfFrSwUsageFlushInterval, wfFrSwSvcUsageCurVolume=wfFrSwSvcUsageCurVolume, wfFrSwUsageUpdateInterval=wfFrSwUsageUpdateInterval, wfFrSwUsageSentNonDEOctetsLow=wfFrSwUsageSentNonDEOctetsLow, wfFrSwVirtualIntfTable=wfFrSwVirtualIntfTable, wfFrSwSigOutDisconnectPkts=wfFrSwSigOutDisconnectPkts, wfFrSwCngcMonP3Level2Percent=wfFrSwCngcMonP3Level2Percent, wfFrSwSigDlciIEAllowed=wfFrSwSigDlciIEAllowed, wfFrSwCctRemoteSentDEOctets=wfFrSwCctRemoteSentDEOctets, wfFrSwCctRemoteRecvFECNFrames=wfFrSwCctRemoteRecvFECNFrames, wfFrSwSigRejectedConnRequests=wfFrSwSigRejectedConnRequests, wfFrSwCngcMonP2Level2Percent=wfFrSwCngcMonP2Level2Percent, wfFrSwVcSetFecnOctets=wfFrSwVcSetFecnOctets, wfFrSwDlcmiDteStatus=wfFrSwDlcmiDteStatus, wfFrSwSvcUsageCurCleanupInterval=wfFrSwSvcUsageCurCleanupInterval, wfFrSwVcXNetSent=wfFrSwVcXNetSent, wfFrSwVcAtmIwfVCI=wfFrSwVcAtmIwfVCI, wfFrSwCctStateSet=wfFrSwCctStateSet, wfFrSwVcSetBecnFrames=wfFrSwVcSetBecnFrames, wfFrSwUsageSentDEOctetsHigh=wfFrSwUsageSentDEOctetsHigh, wfFrSwVirtualIntfCct=wfFrSwVirtualIntfCct, wfFrSwUsageCurVolumeBackup=wfFrSwUsageCurVolumeBackup, wfFrSwSigMaxOutThroughputPerSvc=wfFrSwSigMaxOutThroughputPerSvc, wfFrSwBaseShutDown=wfFrSwBaseShutDown, wfFrSwCctState=wfFrSwCctState, wfFrSwDlcmiNewVCs=wfFrSwDlcmiNewVCs, wfFrSwDlcmiL2AddrType=wfFrSwDlcmiL2AddrType, wfFrSwExtFileSysEntry=wfFrSwExtFileSysEntry, wfFrSwCngcMonP0Level1Percent=wfFrSwCngcMonP0Level1Percent, wfFrSwVcState=wfFrSwVcState, wfFrSwLocalE164AddrTable=wfFrSwLocalE164AddrTable, wfFrSwSigDefaultMinAcceptThroughput=wfFrSwSigDefaultMinAcceptThroughput, wfFrSwCctInactiveVCDropFrames=wfFrSwCctInactiveVCDropFrames, wfFrSwCctLocalSetBECNOctets=wfFrSwCctLocalSetBECNOctets, wfFrSwVcTxNonDeOctets=wfFrSwVcTxNonDeOctets, wfFrSwUsageCurDirectory=wfFrSwUsageCurDirectory, wfFrSwCctRemoteDropNonDEFrames=wfFrSwCctRemoteDropNonDEFrames, wfFrSwMcastIndex=wfFrSwMcastIndex, wfFrSwSvcUsageNumEntries=wfFrSwSvcUsageNumEntries, wfFrSwUsageSentNonDEOctetsHigh=wfFrSwUsageSentNonDEOctetsHigh, wfFrSwCctOutBc=wfFrSwCctOutBc, wfFrSwUsageTimerInterval=wfFrSwUsageTimerInterval, wfFrSwVcInThroughput=wfFrSwVcInThroughput, wfFrSwDlcmiEntry=wfFrSwDlcmiEntry, wfFrSwSigDelete=wfFrSwSigDelete, wfFrSwIsdnUniDelete=wfFrSwIsdnUniDelete, wfFrSwDlcmiDteLastReceived=wfFrSwDlcmiDteLastReceived, wfFrSwUsageCurCleanupInterval=wfFrSwUsageCurCleanupInterval, wfFrSwLocalX121AddrEntry=wfFrSwLocalX121AddrEntry, wfFrSwCctRemoteSetFECNOctets=wfFrSwCctRemoteSetFECNOctets, wfFrSwExtFileSysDelete=wfFrSwExtFileSysDelete, wfFrSwGlobalE164AddrHigh=wfFrSwGlobalE164AddrHigh, wfFrSwVcAtmIwfEfciPolicy=wfFrSwVcAtmIwfEfciPolicy, wfFrSwGlobalX121AddrEntry=wfFrSwGlobalX121AddrEntry, wfFrSwSigOutStatusEnquiryPkts=wfFrSwSigOutStatusEnquiryPkts, wfFrSwVcSetFecnFrames=wfFrSwVcSetFecnFrames, wfFrSwBase=wfFrSwBase, wfFrSwCngcMonCct=wfFrSwCngcMonCct, wfFrSwUsageSwitchName=wfFrSwUsageSwitchName, wfFrSwCngcMonP0Level3Percent=wfFrSwCngcMonP0Level3Percent, wfFrSwCctLocalBecnState=wfFrSwCctLocalBecnState, wfFrSwVcDropExcessBurstFrames=wfFrSwVcDropExcessBurstFrames, wfFrSwSvcUsageStoreInterval=wfFrSwSvcUsageStoreInterval, wfFrSwSigXNetClearingDisable=wfFrSwSigXNetClearingDisable, wfFrSwSigInUnknownPkts=wfFrSwSigInUnknownPkts, wfFrSwMcastTable=wfFrSwMcastTable, wfFrSwDlcmiMaxSupportedVCs=wfFrSwDlcmiMaxSupportedVCs, wfFrSwDlcmiDtePollingInterval=wfFrSwDlcmiDtePollingInterval, wfFrSwDlcmiSpvcAgent=wfFrSwDlcmiSpvcAgent, wfFrSwVcBackupCalledIpAddr=wfFrSwVcBackupCalledIpAddr, wfFrSwCctLocalSentDEOctets=wfFrSwCctLocalSentDEOctets, wfFrSwUsageStoreInterval=wfFrSwUsageStoreInterval, wfFrSwCngcMonP2Level1Percent=wfFrSwCngcMonP2Level1Percent, wfFrSwCngcMonP0Level2Percent=wfFrSwCngcMonP0Level2Percent, wfFrSwSigL2Resets=wfFrSwSigL2Resets, wfFrSwSigTable=wfFrSwSigTable, wfFrSwVcCallReqMaxRetries=wfFrSwVcCallReqMaxRetries, wfFrSwSigDlciAssign=wfFrSwSigDlciAssign, wfFrSwVcTrfPriority=wfFrSwVcTrfPriority, wfFrSwErrType=wfFrSwErrType, wfFrSwDlcmiCrossNetErrorThreshold=wfFrSwDlcmiCrossNetErrorThreshold, wfFrSwIsdnScrnTable=wfFrSwIsdnScrnTable, wfFrSwIsdnAssocDelete=wfFrSwIsdnAssocDelete, wfFrSwMcastEntry=wfFrSwMcastEntry, wfFrSwVcSpvcCallState=wfFrSwVcSpvcCallState, wfFrSwUsageLastNonDEFramesLow=wfFrSwUsageLastNonDEFramesLow, wfFrSwDlcmiEscapeCircuit=wfFrSwDlcmiEscapeCircuit, wfFrSwLocalE164AddrCUG=wfFrSwLocalE164AddrCUG, wfFrSwGlobalE164AddrTable=wfFrSwGlobalE164AddrTable, wfFrSwVcEscapeEnable=wfFrSwVcEscapeEnable, wfFrSwCctRemoteDropNonDEOctets=wfFrSwCctRemoteDropNonDEOctets, wfFrSwCctLocalDropDEFrames=wfFrSwCctLocalDropDEFrames, wfFrSwVcCallReqCalledAddr=wfFrSwVcCallReqCalledAddr, wfFrSwUsageStartTimeStampHigh=wfFrSwUsageStartTimeStampHigh, wfFrSwSigInConnectPkts=wfFrSwSigInConnectPkts, wfFrSwDlcmiPollingInterval=wfFrSwDlcmiPollingInterval, wfFrSwSvcUsageCurFlushInterval=wfFrSwSvcUsageCurFlushInterval, wfFrSwIsdnUniEntry=wfFrSwIsdnUniEntry, wfFrSwSigInStatusPkts=wfFrSwSigInStatusPkts, wfFrSwSvcUsageEnable=wfFrSwSvcUsageEnable, wfFrSwDlcmiControlByteDisable=wfFrSwDlcmiControlByteDisable, wfFrSwSvcUsageCurFilePrefix=wfFrSwSvcUsageCurFilePrefix, wfFrSwCctCrossNetStatus=wfFrSwCctCrossNetStatus, wfFrSwSvcUsageCurStoreInterval=wfFrSwSvcUsageCurStoreInterval, wfFrSwUsageDlci=wfFrSwUsageDlci, wfFrSwVcOutBc=wfFrSwVcOutBc, wfFrSwMcastIpAddr=wfFrSwMcastIpAddr, wfFrSwCctDlci=wfFrSwCctDlci, wfFrSwTupleIpAddrB=wfFrSwTupleIpAddrB, wfFrSwDlcmiUnknownIEErrors=wfFrSwDlcmiUnknownIEErrors)
mibBuilder.exportSymbols("Wellfleet-FRSW-MIB", wfFrSwVcRecentNonDeOctets=wfFrSwVcRecentNonDeOctets, wfFrSwCctXNetErrors=wfFrSwCctXNetErrors, wfFrSwUsageTable=wfFrSwUsageTable, wfFrSwUsageSentNonDEFramesLow=wfFrSwUsageSentNonDEFramesLow, wfFrSwCctLocalSetFECNFrames=wfFrSwCctLocalSetFECNFrames, wfFrSwVcTxDeFrames=wfFrSwVcTxDeFrames, wfFrSwDlcmiUnknownDlciErrors=wfFrSwDlcmiUnknownDlciErrors, wfFrSwSvcUsageFilePrefix=wfFrSwSvcUsageFilePrefix, wfFrSwVcLastTimeChange=wfFrSwVcLastTimeChange, wfFrSwSvcUsageFileCleanup=wfFrSwSvcUsageFileCleanup, wfFrSwUsageSentDEOctetsLow=wfFrSwUsageSentDEOctetsLow, wfFrSwVirtualIntfSlot=wfFrSwVirtualIntfSlot, wfFrSwUsageSentDEFramesHigh=wfFrSwUsageSentDEFramesHigh, wfFrSwLocalX121Address=wfFrSwLocalX121Address, wfFrSwCctReceivedStatus=wfFrSwCctReceivedStatus, wfFrSwCctLocalSentNonDEOctets=wfFrSwCctLocalSentNonDEOctets, wfFrSwSigEntry=wfFrSwSigEntry, wfFrSwCctLocalOrRemoteConnection=wfFrSwCctLocalOrRemoteConnection, wfFrSwTupleDelete=wfFrSwTupleDelete, wfFrSwCctRemoteRecvNonDEFrames=wfFrSwCctRemoteRecvNonDEFrames, wfFrSwSvcUsageCurDirectory=wfFrSwSvcUsageCurDirectory, wfFrSwVcBackupCalledDlci=wfFrSwVcBackupCalledDlci, wfFrSwDlcmiNniEnable=wfFrSwDlcmiNniEnable, wfFrSwSigTotalInNegotiableThroughput=wfFrSwSigTotalInNegotiableThroughput, wfFrSwMcastDlci=wfFrSwMcastDlci, wfFrSwVcAtmIwfDePolicy=wfFrSwVcAtmIwfDePolicy, wfFrSwUsageDelete=wfFrSwUsageDelete, wfFrSwUsageLastDEFramesHigh=wfFrSwUsageLastDEFramesHigh, wfFrSwSigInReleaseCompletePkts=wfFrSwSigInReleaseCompletePkts, wfFrSwCctRemoteRecvDEFrames=wfFrSwCctRemoteRecvDEFrames, wfFrSwSvcUsageUpdateTimeStamp=wfFrSwSvcUsageUpdateTimeStamp, wfFrSwIsdnUniNum=wfFrSwIsdnUniNum, wfFrSwCctLocalSetDEFrames=wfFrSwCctLocalSetDEFrames, wfFrSwVcTxNonDeFrames=wfFrSwVcTxNonDeFrames, wfFrSwCctLocalSetDEOctets=wfFrSwCctLocalSetDEOctets, wfFrSwSvcUsageFlushTimeStamp=wfFrSwSvcUsageFlushTimeStamp, wfFrSwSvcUsageCleanupTimeStamp=wfFrSwSvcUsageCleanupTimeStamp, wfFrSwLocalX121AddrCUG=wfFrSwLocalX121AddrCUG, wfFrSwMcastIndividualDlci=wfFrSwMcastIndividualDlci, wfFrSwVcRedirectType=wfFrSwVcRedirectType, wfFrSwUsageFlushTimeStamp=wfFrSwUsageFlushTimeStamp, wfFrSwCngcMonTable=wfFrSwCngcMonTable, wfFrSwUsageFilePrefix=wfFrSwUsageFilePrefix, wfFrSwSigT308=wfFrSwSigT308, wfFrSwCctLocalRecvNonDEFrames=wfFrSwCctLocalRecvNonDEFrames, wfFrSwSigSvcDlciLow=wfFrSwSigSvcDlciLow, wfFrSwLocalX121AddrDelete=wfFrSwLocalX121AddrDelete, wfFrSwCctInactiveVCDropOctets=wfFrSwCctInactiveVCDropOctets, wfFrSwCctXNetSent=wfFrSwCctXNetSent, wfFrSwDlcmiDtePolls=wfFrSwDlcmiDtePolls, wfFrSwVcXNetReceived=wfFrSwVcXNetReceived, wfFrSwSigT301=wfFrSwSigT301, wfFrSwGlobalE164AddrEntry=wfFrSwGlobalE164AddrEntry, wfFrSwUsage=wfFrSwUsage, wfFrSwIsdnAssocSlotNum=wfFrSwIsdnAssocSlotNum, wfFrSwSwitchHdrErrors=wfFrSwSwitchHdrErrors, wfFrSwUsageUpdateTimeStamp=wfFrSwUsageUpdateTimeStamp, wfFrSwDlcmiMcastNoBufferErrors=wfFrSwDlcmiMcastNoBufferErrors, wfFrSwSigT303=wfFrSwSigT303, wfFrSwVcBackupCrossNetStatus=wfFrSwVcBackupCrossNetStatus, wfFrSwExtFileSysTable=wfFrSwExtFileSysTable, wfFrSwCctLocalDropDEOctets=wfFrSwCctLocalDropDEOctets, wfFrSwVcOutThroughput=wfFrSwVcOutThroughput, wfFrSwBaseIpAddr=wfFrSwBaseIpAddr, wfFrSwSvcUsageState=wfFrSwSvcUsageState, wfFrSwVcRecvNonDeOctets=wfFrSwVcRecvNonDeOctets, wfFrSwSigX213PriorityIEAllowed=wfFrSwSigX213PriorityIEAllowed, wfFrSwCctLocalSentDEFrames=wfFrSwCctLocalSentDEFrames, wfFrSwCctRemoteSentNonDEOctets=wfFrSwCctRemoteSentNonDEOctets, wfFrSwVcRecvNonDeFrames=wfFrSwVcRecvNonDeFrames, wfFrSwSigT310=wfFrSwSigT310, wfFrSwDlcmiCallAccDlciSelectionType=wfFrSwDlcmiCallAccDlciSelectionType, wfFrSwVcReceivedStatus=wfFrSwVcReceivedStatus, wfFrSwDlcmiOtherErrors=wfFrSwDlcmiOtherErrors, wfFrSwUsageCleanupInterval=wfFrSwUsageCleanupInterval, wfFrSwCngcMonP3Level1Percent=wfFrSwCngcMonP3Level1Percent, wfFrSwSigCallingPartyIEMandatory=wfFrSwSigCallingPartyIEMandatory, wfFrSwDlcmiControlByteErrors=wfFrSwDlcmiControlByteErrors, wfFrSwCctLocalSentNonDEFrames=wfFrSwCctLocalSentNonDEFrames, wfFrSwVcAtmIwfLossPriorityPolicy=wfFrSwVcAtmIwfLossPriorityPolicy, wfFrSwSigInReleasePkts=wfFrSwSigInReleasePkts, wfFrSwCctCreationTime=wfFrSwCctCreationTime, wfFrSwUsageCleanupTimeStamp=wfFrSwUsageCleanupTimeStamp, wfFrSwIsdnAssocIndex=wfFrSwIsdnAssocIndex, wfFrSwVcRedirectState=wfFrSwVcRedirectState, wfFrSwSvcUsageFlushData=wfFrSwSvcUsageFlushData, wfFrSwSigMaxInThroughputPerSvc=wfFrSwSigMaxInThroughputPerSvc, wfFrSwGlobalX121AddrIPAddr=wfFrSwGlobalX121AddrIPAddr, wfFrSwSvcUsageInterimRecordEnable=wfFrSwSvcUsageInterimRecordEnable, wfFrSwSvcUsageStoreTimeStamp=wfFrSwSvcUsageStoreTimeStamp, wfFrSwUsageFileCleanup=wfFrSwUsageFileCleanup, wfFrSwDlcmiDteErrorThreshold=wfFrSwDlcmiDteErrorThreshold, wfFrSwUsageStoreTimeStamp=wfFrSwUsageStoreTimeStamp, wfFrSwSigTotalInCurrentThroughput=wfFrSwSigTotalInCurrentThroughput, wfFrSwSigCircuit=wfFrSwSigCircuit, wfFrSwDlcmiActiveSeqCount=wfFrSwDlcmiActiveSeqCount, wfFrSwCctLocalRecvBECNFrames=wfFrSwCctLocalRecvBECNFrames, wfFrSwVcCallReqDlciSelectionType=wfFrSwVcCallReqDlciSelectionType, wfFrSwTupleDlciA=wfFrSwTupleDlciA, wfFrSwDlcmiVCsInUse=wfFrSwDlcmiVCsInUse, wfFrSwDlcmiCrossNetListenEnable=wfFrSwDlcmiCrossNetListenEnable, wfFrSwL3NetAddress=wfFrSwL3NetAddress, wfFrSwSigInCallProceedingPkts=wfFrSwSigInCallProceedingPkts, wfFrSwDlcmiState=wfFrSwDlcmiState, wfFrSwIsdnAssocTable=wfFrSwIsdnAssocTable, wfFrSwVcInBc=wfFrSwVcInBc, wfFrSwCctLocalSetBECNFrames=wfFrSwCctLocalSetBECNFrames, wfFrSwCctLocalDropNonDEOctets=wfFrSwCctLocalDropNonDEOctets, wfFrSwSvcUsageFlushInterval=wfFrSwSvcUsageFlushInterval, wfFrSwCctNumber=wfFrSwCctNumber, wfFrSwCngcMonP0Level4Percent=wfFrSwCngcMonP0Level4Percent, wfFrSwSvcUsageStoreData=wfFrSwSvcUsageStoreData, wfFrSwUsageRemoteIPAddress=wfFrSwUsageRemoteIPAddress, wfFrSwCngcMonReset=wfFrSwCngcMonReset, wfFrSwIsdnUniTable=wfFrSwIsdnUniTable, wfFrSwDlcmiEscapeVcCount=wfFrSwDlcmiEscapeVcCount, wfFrSwCctRemoteSetBECNOctets=wfFrSwCctRemoteSetBECNOctets, wfFrSwIsdnScrnEntry=wfFrSwIsdnScrnEntry, wfFrSwDlcmiFullStatusSeq=wfFrSwDlcmiFullStatusSeq, wfFrSwPvcUsageFileLayout=wfFrSwPvcUsageFileLayout, wfFrSwUsageRemoteDlci=wfFrSwUsageRemoteDlci, wfFrSwVcDropDeFrames=wfFrSwVcDropDeFrames, wfFrSwCngcMonP2Level4Percent=wfFrSwCngcMonP2Level4Percent, wfFrSwCctRemoteRecvDEOctets=wfFrSwCctRemoteRecvDEOctets, wfFrSwDlcmiStatus=wfFrSwDlcmiStatus, wfFrSwUsageStartTimeStampLow=wfFrSwUsageStartTimeStampLow, wfFrSwCctLocalDropNonDEFrames=wfFrSwCctLocalDropNonDEFrames, wfFrSwDlcmiAddressLen=wfFrSwDlcmiAddressLen, wfFrSwCctLocalRecvDEFrames=wfFrSwCctLocalRecvDEFrames, wfFrSwLocalE164AddrEntry=wfFrSwLocalE164AddrEntry, wfFrSwVcBecnState=wfFrSwVcBecnState, wfFrSwUsageLocalTimeZone=wfFrSwUsageLocalTimeZone, wfFrSwUsageIPAddress=wfFrSwUsageIPAddress, wfFrSwVcXNetErrors=wfFrSwVcXNetErrors, wfFrSwDlcmiIwfMode=wfFrSwDlcmiIwfMode, wfFrSwErrTime=wfFrSwErrTime, wfFrSwUsageEndTimeStampHigh=wfFrSwUsageEndTimeStampHigh, wfFrSwSigOutReleasePkts=wfFrSwSigOutReleasePkts, wfFrSwSigT322=wfFrSwSigT322, wfFrSwCngcMonP3Level3Percent=wfFrSwCngcMonP3Level3Percent, wfFrSwExtFileSysState=wfFrSwExtFileSysState, wfFrSwIsdnUniIndex=wfFrSwIsdnUniIndex, wfFrSwSigOutConnectPkts=wfFrSwSigOutConnectPkts, wfFrSwErrData=wfFrSwErrData, wfFrSwCctOutBe=wfFrSwCctOutBe, wfFrSwCngcMonP1Level1Percent=wfFrSwCngcMonP1Level1Percent, wfFrSwUsageLastNonDEOctetsHigh=wfFrSwUsageLastNonDEOctetsHigh, wfFrSwVcRecvDeFrames=wfFrSwVcRecvDeFrames, wfFrSwUsageLastDEOctetsLow=wfFrSwUsageLastDEOctetsLow, wfFrSwVcCalledIpAddr=wfFrSwVcCalledIpAddr, wfFrSwDlcmiManagementType=wfFrSwDlcmiManagementType, wfFrSwGlobalX121AddrDelete=wfFrSwGlobalX121AddrDelete, wfFrSwDlcmiSvcBillingEnable=wfFrSwDlcmiSvcBillingEnable, wfFrSwUsageCurStoreInterval=wfFrSwUsageCurStoreInterval, wfFrSwLocalE164AddrLocalFlag=wfFrSwLocalE164AddrLocalFlag, wfFrSwUsageEnable=wfFrSwUsageEnable, wfFrSwVcRecvBecnFrames=wfFrSwVcRecvBecnFrames, wfFrSwDlcmiDteSeqCount=wfFrSwDlcmiDteSeqCount, wfFrSwVcCallReqRetryTimer=wfFrSwVcCallReqRetryTimer, wfFrSwLocalX121AddrTable=wfFrSwLocalX121AddrTable, wfFrSwMcastDelete=wfFrSwMcastDelete, wfFrSwSigNumOfSvcsInUse=wfFrSwSigNumOfSvcsInUse, wfFrSwSigInStatusEnquiryPkts=wfFrSwSigInStatusEnquiryPkts, wfFrSwUsageEndTimeStampLow=wfFrSwUsageEndTimeStampLow, wfFrSwDlcmiCrossNetEnable=wfFrSwDlcmiCrossNetEnable, wfFrSwTupleEntry=wfFrSwTupleEntry, wfFrSwDlcmiIllegalDlciErrors=wfFrSwDlcmiIllegalDlciErrors, wfFrSwCngcMonP2Level3Percent=wfFrSwCngcMonP2Level3Percent, wfFrSwSigMaximumBe=wfFrSwSigMaximumBe, wfFrSwVcSetDeOctets=wfFrSwVcSetDeOctets, wfFrSwUsageLastNonDEFramesHigh=wfFrSwUsageLastNonDEFramesHigh, wfFrSwDlcmiLastReceived=wfFrSwDlcmiLastReceived, wfFrSwCctLastTimeChange=wfFrSwCctLastTimeChange, wfFrSwCctRemoteBecnState=wfFrSwCctRemoteBecnState, wfFrSwCctRemoteSentNonDEFrames=wfFrSwCctRemoteSentNonDEFrames, wfFrSwGlobalE164AddrIPAddr=wfFrSwGlobalE164AddrIPAddr, wfFrSwCctInBc=wfFrSwCctInBc, wfFrSwVcSetBecnOctets=wfFrSwVcSetBecnOctets, wfFrSwVcEntry=wfFrSwVcEntry, wfFrSwVcCfgInBe=wfFrSwVcCfgInBe, wfFrSwDlcmiSvcDisable=wfFrSwDlcmiSvcDisable, wfFrSwVcTxDeOctets=wfFrSwVcTxDeOctets, wfFrSwDlcmiAsyncUpdateEnable=wfFrSwDlcmiAsyncUpdateEnable, wfFrSwUsageUpdateData=wfFrSwUsageUpdateData, wfFrSwCngcMonP1Level2Percent=wfFrSwCngcMonP1Level2Percent, wfFrSwVcInBcOctets=wfFrSwVcInBcOctets, wfFrSwSigOutReleaseCompletePkts=wfFrSwSigOutReleaseCompletePkts, wfFrSwVcInactiveVcDropFrames=wfFrSwVcInactiveVcDropFrames, wfFrSwCngcMonP1Level4Percent=wfFrSwCngcMonP1Level4Percent, wfFrSwLocalE164AddrCct=wfFrSwLocalE164AddrCct, wfFrSwUsageVolumeBackup=wfFrSwUsageVolumeBackup, wfFrSwUsageCircuitNumber=wfFrSwUsageCircuitNumber, wfFrSwVcMulticast=wfFrSwVcMulticast, wfFrSwCngcMonP3Level4Percent=wfFrSwCngcMonP3Level4Percent, wfFrSwCctRemoteRecvFECNOctets=wfFrSwCctRemoteRecvFECNOctets, wfFrSwVcDropNonDeFrames=wfFrSwVcDropNonDeFrames, wfFrSwCctRemoteRecvNonDEOctets=wfFrSwCctRemoteRecvNonDEOctets, wfFrSwCctLocalRecentNonDEOctets=wfFrSwCctLocalRecentNonDEOctets, wfFrSwDlcmiMonitoredEvents=wfFrSwDlcmiMonitoredEvents, wfFrSwVcInBeOctets=wfFrSwVcInBeOctets, wfFrSwTupleIpAddrA=wfFrSwTupleIpAddrA, wfFrSwVcCreationTime=wfFrSwVcCreationTime, wfFrSwDlcmiRecoveryCounts=wfFrSwDlcmiRecoveryCounts, wfFrSwVcDelete=wfFrSwVcDelete)
