#
# PySNMP MIB module DOCS-IF31-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DOCS-IF31-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:38:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint")
clabProjDocsis, = mibBuilder.importSymbols("CLAB-DEF-MIB", "clabProjDocsis")
TenthdBmV, docsIfUpstreamChannelEntry = mibBuilder.importSymbols("DOCS-IF-MIB", "TenthdBmV", "docsIfUpstreamChannelEntry")
docsIf3CmtsCmRegStatusId, RangingState, docsIf3CmtsCmRegStatusEntry, AttributeMask, IfDirection = mibBuilder.importSymbols("DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId", "RangingState", "docsIf3CmtsCmRegStatusEntry", "AttributeMask", "IfDirection")
CounterBasedGauge64, = mibBuilder.importSymbols("HCNUM-TC", "CounterBasedGauge64")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
NotificationGroup, ModuleCompliance, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance", "ObjectGroup")
IpAddress, NotificationType, TimeTicks, Gauge32, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Counter32, ModuleIdentity, Counter64, ObjectIdentity, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "TimeTicks", "Gauge32", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Counter32", "ModuleIdentity", "Counter64", "ObjectIdentity", "Unsigned32", "Integer32")
TimeStamp, TextualConvention, DateAndTime, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TextualConvention", "DateAndTime", "DisplayString", "TruthValue")
docsIf31Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28))
docsIf31Mib.setRevisions(('2017-05-25 00:00', '2016-12-15 00:00', '2016-08-18 00:00', '2016-05-05 00:00', '2015-11-04 00:00', '2015-07-15 00:00', '2015-05-20 00:00', '2015-04-08 00:00',))
if mibBuilder.loadTexts: docsIf31Mib.setLastUpdated('201705250000Z')
if mibBuilder.loadTexts: docsIf31Mib.setOrganization('Cable Television Laboratories, Inc.')
class ClabsDocsisVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 0), ("docsis10", 1), ("docsis11", 2), ("docsis20", 3), ("docsis30", 4), ("docsis31", 5))

class EmIdList(TextualConvention, OctetString):
    status = 'current'
    displayHint = '2x,'
    subtypeSpec = OctetString.subtypeSpec + ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(2, 2), ValueSizeConstraint(4, 4), ValueSizeConstraint(6, 6), )
class SubcarrierSpacingType(TextualConvention, Integer32):
    reference = 'DOCSIS 3.1 Physical Layer Specification CM-SP-PHYv3.1-I03-140610, Downstream OFDM Parameters and Upstream OFDMA Parameters tables.'
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(25, 25), ValueRangeConstraint(50, 50), )
class PrimaryDsIndicatorType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("other", 1), ("primary", 2), ("backupPrimary", 3), ("nonPrimary", 4))

class OfdmProfiles(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("profile0", 0), ("profile1", 1), ("profile2", 2), ("profile3", 3), ("profile4", 4), ("profile5", 5), ("profile6", 6), ("profile7", 7), ("profile8", 8), ("profile9", 9), ("profile10", 10), ("profile11", 11), ("profile12", 12), ("profile13", 13), ("profile14", 14), ("profile15", 15))

class DsOfdmCyclicPrefix(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(192, 192), ValueRangeConstraint(256, 256), ValueRangeConstraint(512, 512), ValueRangeConstraint(768, 768), ValueRangeConstraint(1024, 1024), )
class UsOfdmaCyclicPrefix(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(96, 96), ValueRangeConstraint(128, 128), ValueRangeConstraint(160, 160), ValueRangeConstraint(192, 192), ValueRangeConstraint(224, 224), ValueRangeConstraint(256, 256), ValueRangeConstraint(288, 288), ValueRangeConstraint(320, 320), ValueRangeConstraint(384, 384), ValueRangeConstraint(512, 512), ValueRangeConstraint(640, 640), )
class DsOfdmRollOffPeriod(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 64), ValueRangeConstraint(128, 128), ValueRangeConstraint(192, 192), ValueRangeConstraint(256, 256), )
class UsOfdmaRollOffPeriod(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(32, 32), ValueRangeConstraint(64, 64), ValueRangeConstraint(96, 96), ValueRangeConstraint(128, 128), ValueRangeConstraint(160, 160), ValueRangeConstraint(192, 192), ValueRangeConstraint(224, 224), )
class TimeInterleaverDepth(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 32)

class DsOfdmModulationType(TextualConvention, Integer32):
    reference = 'DOCSIS 3.1 Physical layer Specification CM-SP-PHYv3.1-I03-140610, Modulation Formats section.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("other", 1), ("zeroValued", 2), ("qpsk", 3), ("qam16", 4), ("qam64", 5), ("qam128", 6), ("qam256", 7), ("qam512", 8), ("qam1024", 9), ("qam2048", 10), ("qam4096", 11), ("qam8192", 12), ("qam16384", 13))

class UsOfdmaModulationType(TextualConvention, Integer32):
    reference = 'DOCSIS 3.1 Physical layer Specification CM-SP-PHYv3.1-I03-140610, Modulation Formats section.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("other", 1), ("zeroValued", 2), ("bpsk", 3), ("qpsk", 4), ("qam8", 5), ("qam16", 6), ("qam32", 7), ("qam64", 8), ("qam128", 9), ("qam256", 10), ("qam512", 11), ("qam1024", 12), ("qam2048", 13), ("qam4096", 14))

class PartialChannelType(TextualConvention, Bits):
    reference = 'DOCSIS 3.1 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.1-I03-140610, CM Status Report section.'
    status = 'current'
    namedValues = NamedValues(("fecErrorsDsProfile", 0), ("fecErrorsNcpProfile", 1), ("fecErrorsPlc", 2))

class PartialServiceType(TextualConvention, Integer32):
    reference = 'DOCSIS 3.1 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.1-I03-140610, CM Status Report section.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))
    namedValues = NamedValues(("other", 1), ("none", 2), ("partialSvcDsOnlyImpaired", 3), ("partialSvcUsOnlyImpaired", 4), ("partialSvcDsAndUsImpaired", 5))

class PartialChanReasonType(TextualConvention, Integer32):
    reference = 'DOCSIS 3.1 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.1-I03-140610, CM Status Report section.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 16, 18, 20, 21))
    namedValues = NamedValues(("none", 0), ("dsOfdmProfileFailure", 16), ("dpdMismatch", 18), ("ncpProfileFailure", 20), ("plcFailure", 21))

class PartialSvcReasonType(TextualConvention, Integer32):
    reference = 'DOCSIS 3.1 MAC and Upper Layer Protocols Interface Specification CM-SP-MULPIv3.1-I03-140610, CM Status Report section.'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("secondaryChanMddTimeout", 1), ("lostFecLock", 2))

class HundredthdBmV(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-2'

class HundredthdB(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd-2'

docsIf31Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 0))
docsIf31MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1))
docsIf31DocsisBaseCapability = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 1), ClabsDocsisVersion()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31DocsisBaseCapability.setStatus('current')
docsIf31RxChStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 2), )
if mibBuilder.loadTexts: docsIf31RxChStatusTable.setStatus('current')
docsIf31RxChStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31RxChStatusEntry.setStatus('current')
docsIf31RxChStatusPrimaryDsIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 2, 1, 1), PrimaryDsIndicatorType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31RxChStatusPrimaryDsIndicator.setStatus('current')
docsIf31RxChStatusOfdmProfiles = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 2, 1, 2), OfdmProfiles()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31RxChStatusOfdmProfiles.setStatus('current')
docsIf31CmtsCmRegStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3), )
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusTable.setStatus('current')
docsIf31CmtsCmRegStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1), )
docsIf3CmtsCmRegStatusEntry.registerAugmentions(("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusEntry"))
docsIf31CmtsCmRegStatusEntry.setIndexNames(*docsIf3CmtsCmRegStatusEntry.getIndexNames())
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusEntry.setStatus('current')
docsIf31CmtsCmRegStatusAssignedEmIds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 1), EmIdList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusAssignedEmIds.setStatus('current')
docsIf31CmtsCmRegStatusDsProfileIdList = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 72), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusDsProfileIdList.setStatus('current')
docsIf31CmtsCmRegStatusUsProfileIucList = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(6, 72), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusUsProfileIucList.setStatus('current')
docsIf31CmtsCmRegStatusTcsPhigh = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(68, 320), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusTcsPhigh.setStatus('current')
docsIf31CmtsCmRegStatusTcsDrwTop = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 5), Unsigned32()).setUnits('dBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusTcsDrwTop.setStatus('current')
docsIf31CmtsCmRegStatusMinUsableDsFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 6), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusMinUsableDsFreq.setStatus('current')
docsIf31CmtsCmRegStatusMaxUsableDsFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 7), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusMaxUsableDsFreq.setStatus('current')
docsIf31CmtsCmRegStatusMaxUsableUsFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 8), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusMaxUsableUsFreq.setStatus('current')
docsIf31CmtsCmRegStatusPartialSvcState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 9), PartialServiceType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusPartialSvcState.setStatus('current')
docsIf31CmtsCmRegStatusPartialChanState = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 3, 1, 10), PartialChannelType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmRegStatusPartialChanState.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4), )
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelStatusTable.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelStatusEntry.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 1), TenthdBmV()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelRxPower.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelMeanRxMer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 2), HundredthdB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelMeanRxMer.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelStdDevRxMer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 3), HundredthdB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelStdDevRxMer.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelRxMerThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 4), Unsigned32().clone(2)).setUnits('percentile').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelRxMerThreshold.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelThresholdRxMerValue = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 5), HundredthdB()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelThresholdRxMerValue.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelThresholdRxMerHighestFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 6), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelThresholdRxMerHighestFreq.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelMicroreflections = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 7), Unsigned32()).setUnits('dBc').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelMicroreflections.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelHighResolutionTimingOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 8), Integer32()).setUnits('time tick/(64*256)').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelHighResolutionTimingOffset.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelIsMuted = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelIsMuted.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelRangingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 10), RangingState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelRangingStatus.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelCurPartialSvcReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 11), PartialSvcReasonType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelCurPartialSvcReasonCode.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelLastPartialSvcTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelLastPartialSvcTime.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelLastPartialSvcReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 13), PartialSvcReasonType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelLastPartialSvcReasonCode.setStatus('current')
docsIf31CmtsCmUsOfdmaChannelNumPartialSvcIncidents = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 4, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaChannelNumPartialSvcIncidents.setStatus('current')
docsIf31CmtsCmUsOfdmaProfileStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 5), )
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaProfileStatusTable.setStatus('current')
docsIf31CmtsCmUsOfdmaProfileStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 5, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"), (0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsDataIuc"))
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaProfileStatusEntry.setStatus('current')
docsIf31CmtsCmUsOfdmaProfileTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 5, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaProfileTotalCodewords.setStatus('current')
docsIf31CmtsCmUsOfdmaProfileCorrectedCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 5, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaProfileCorrectedCodewords.setStatus('current')
docsIf31CmtsCmUsOfdmaProfileUnreliableCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmUsOfdmaProfileUnreliableCodewords.setStatus('current')
docsIf31CmtsCmDsOfdmChannelStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 6), )
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmChannelStatusTable.setStatus('current')
docsIf31CmtsCmDsOfdmChannelStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 6, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"), (0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmChannelStatusEntry.setStatus('current')
docsIf31CmtsCmDsOfdmChannelCurPartialSvcReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 6, 1, 1), PartialSvcReasonType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmChannelCurPartialSvcReasonCode.setStatus('current')
docsIf31CmtsCmDsOfdmChannelLastPartialSvcTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 6, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmChannelLastPartialSvcTime.setStatus('current')
docsIf31CmtsCmDsOfdmChannelLastPartialSvcReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 6, 1, 3), PartialSvcReasonType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmChannelLastPartialSvcReasonCode.setStatus('current')
docsIf31CmtsCmDsOfdmChannelNumPartialSvcIncidents = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmChannelNumPartialSvcIncidents.setStatus('current')
docsIf31CmtsCmDsOfdmChannelNumPartialChanIncidents = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmChannelNumPartialChanIncidents.setStatus('current')
docsIf31CmtsCmDsOfdmProfileStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 7), )
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmProfileStatusTable.setStatus('current')
docsIf31CmtsCmDsOfdmProfileStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 7, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"), (0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsProfileId"))
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmProfileStatusEntry.setStatus('current')
docsIf31CmtsCmDsOfdmProfilePartialChanReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 7, 1, 1), PartialChanReasonType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmProfilePartialChanReasonCode.setStatus('current')
docsIf31CmtsCmDsOfdmProfileLastPartialChanTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 7, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmProfileLastPartialChanTime.setStatus('current')
docsIf31CmtsCmDsOfdmProfileLastPartialChanReasonCode = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 7, 1, 3), PartialChanReasonType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmDsOfdmProfileLastPartialChanReasonCode.setStatus('current')
docsIf31CmtsCmEmStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 8), )
if mibBuilder.loadTexts: docsIf31CmtsCmEmStatsTable.setStatus('current')
docsIf31CmtsCmEmStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 8, 1), ).setIndexNames((0, "DOCS-IF3-MIB", "docsIf3CmtsCmRegStatusId"))
if mibBuilder.loadTexts: docsIf31CmtsCmEmStatsEntry.setStatus('current')
docsIf31CmtsCmEmStatsEm1x1ModeTotalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 8, 1, 1), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmEmStatsEm1x1ModeTotalDuration.setStatus('current')
docsIf31CmtsCmEmStatsDlsModeTotalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 8, 1, 2), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmEmStatsDlsModeTotalDuration.setStatus('current')
docsIf31CmtsCmEmStatsLastDlsTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 8, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmEmStatsLastDlsTime.setStatus('current')
docsIf31CmtsCmEmStatsDlsWakeupEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 8, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsCmEmStatsDlsWakeupEvents.setStatus('current')
docsIf31CmDsOfdmChanTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9), )
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanTable.setStatus('current')
docsIf31CmDsOfdmChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanEntry.setStatus('current')
docsIf31CmDsOfdmChanChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanChannelId.setStatus('current')
docsIf31CmDsOfdmChanChanIndicator = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 2), PrimaryDsIndicatorType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanChanIndicator.setStatus('current')
docsIf31CmDsOfdmChanSubcarrierZeroFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 3), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanSubcarrierZeroFreq.setStatus('current')
docsIf31CmDsOfdmChanFirstActiveSubcarrierNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanFirstActiveSubcarrierNum.setStatus('current')
docsIf31CmDsOfdmChanLastActiveSubcarrierNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanLastActiveSubcarrierNum.setStatus('current')
docsIf31CmDsOfdmChanNumActiveSubcarriers = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanNumActiveSubcarriers.setStatus('current')
docsIf31CmDsOfdmChanSubcarrierSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 7), SubcarrierSpacingType()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanSubcarrierSpacing.setStatus('current')
docsIf31CmDsOfdmChanCyclicPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 8), DsOfdmCyclicPrefix()).setUnits('number of samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanCyclicPrefix.setStatus('current')
docsIf31CmDsOfdmChanRollOffPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 9), DsOfdmRollOffPeriod()).setUnits('number of samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanRollOffPeriod.setStatus('current')
docsIf31CmDsOfdmChanPlcFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 10), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanPlcFreq.setStatus('current')
docsIf31CmDsOfdmChanNumPilots = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanNumPilots.setStatus('current')
docsIf31CmDsOfdmChanTimeInterleaverDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 12), TimeInterleaverDepth()).setUnits('symbols').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanTimeInterleaverDepth.setStatus('current')
docsIf31CmDsOfdmChanPlcTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanPlcTotalCodewords.setStatus('current')
docsIf31CmDsOfdmChanPlcUnreliableCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanPlcUnreliableCodewords.setStatus('current')
docsIf31CmDsOfdmChanNcpTotalFields = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanNcpTotalFields.setStatus('current')
docsIf31CmDsOfdmChanNcpFieldCrcFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 9, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChanNcpFieldCrcFailures.setStatus('current')
docsIf31CmDsOfdmProfileStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10), )
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsTable.setStatus('current')
docsIf31CmDsOfdmProfileStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsProfileId"))
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsEntry.setStatus('current')
docsIf31CmDsOfdmProfileStatsProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsProfileId.setStatus('current')
docsIf31CmDsOfdmProfileStatsConfigChangeCt = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsConfigChangeCt.setStatus('current')
docsIf31CmDsOfdmProfileStatsTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsTotalCodewords.setStatus('current')
docsIf31CmDsOfdmProfileStatsCorrectedCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsCorrectedCodewords.setStatus('current')
docsIf31CmDsOfdmProfileStatsUncorrectableCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsUncorrectableCodewords.setStatus('current')
docsIf31CmDsOfdmProfileStatsInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsInOctets.setStatus('current')
docsIf31CmDsOfdmProfileStatsInUnicastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsInUnicastOctets.setStatus('current')
docsIf31CmDsOfdmProfileStatsInMulticastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsInMulticastOctets.setStatus('current')
docsIf31CmDsOfdmProfileStatsInFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsInFrames.setStatus('current')
docsIf31CmDsOfdmProfileStatsInUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsInUnicastFrames.setStatus('current')
docsIf31CmDsOfdmProfileStatsInMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsInMulticastFrames.setStatus('current')
docsIf31CmDsOfdmProfileStatsInFrameCrcFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsInFrameCrcFailures.setStatus('current')
docsIf31CmDsOfdmProfileStatsCtrDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 10, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmProfileStatsCtrDiscontinuityTime.setStatus('current')
docsIf31CmDsOfdmChannelPowerTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 11), )
if mibBuilder.loadTexts: docsIf31CmDsOfdmChannelPowerTable.setStatus('current')
docsIf31CmDsOfdmChannelPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 11, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmDsOfdmChannelBandIndex"))
if mibBuilder.loadTexts: docsIf31CmDsOfdmChannelPowerEntry.setStatus('current')
docsIf31CmDsOfdmChannelBandIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 11, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf31CmDsOfdmChannelBandIndex.setStatus('current')
docsIf31CmDsOfdmChannelPowerCenterFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 11, 1, 2), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChannelPowerCenterFrequency.setStatus('current')
docsIf31CmDsOfdmChannelPowerRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 11, 1, 3), TenthdBmV()).setUnits('TenthdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmDsOfdmChannelPowerRxPower.setStatus('current')
docsIf31CmStatusOfdmaUsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 12), )
if mibBuilder.loadTexts: docsIf31CmStatusOfdmaUsTable.setStatus('current')
docsIf31CmStatusOfdmaUsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 12, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmStatusOfdmaUsEntry.setStatus('current')
docsIf31CmStatusOfdmaUsT3Timeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 12, 1, 2), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmStatusOfdmaUsT3Timeouts.setStatus('current')
docsIf31CmStatusOfdmaUsT4Timeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 12, 1, 3), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmStatusOfdmaUsT4Timeouts.setStatus('current')
docsIf31CmStatusOfdmaUsRangingAborteds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 12, 1, 4), Counter32()).setUnits('attempts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmStatusOfdmaUsRangingAborteds.setStatus('current')
docsIf31CmStatusOfdmaUsT3Exceededs = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 12, 1, 5), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmStatusOfdmaUsT3Exceededs.setStatus('current')
docsIf31CmStatusOfdmaUsIsMuted = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 12, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmStatusOfdmaUsIsMuted.setStatus('current')
docsIf31CmStatusOfdmaUsRangingStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 12, 1, 7), RangingState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmStatusOfdmaUsRangingStatus.setStatus('current')
docsIf31CmUsOfdmaChanTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13), )
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanTable.setStatus('current')
docsIf31CmUsOfdmaChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanEntry.setStatus('current')
docsIf31CmUsOfdmaChanConfigChangeCt = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanConfigChangeCt.setStatus('current')
docsIf31CmUsOfdmaChanSubcarrierZeroFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 2), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanSubcarrierZeroFreq.setStatus('current')
docsIf31CmUsOfdmaChanFirstActiveSubcarrierNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanFirstActiveSubcarrierNum.setStatus('current')
docsIf31CmUsOfdmaChanLastActiveSubcarrierNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanLastActiveSubcarrierNum.setStatus('current')
docsIf31CmUsOfdmaChanNumActiveSubcarriers = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanNumActiveSubcarriers.setStatus('current')
docsIf31CmUsOfdmaChanSubcarrierSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 6), SubcarrierSpacingType()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanSubcarrierSpacing.setStatus('current')
docsIf31CmUsOfdmaChanCyclicPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 7), UsOfdmaCyclicPrefix()).setUnits('number of samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanCyclicPrefix.setStatus('current')
docsIf31CmUsOfdmaChanRollOffPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 8), UsOfdmaRollOffPeriod()).setUnits('number of samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanRollOffPeriod.setStatus('current')
docsIf31CmUsOfdmaChanNumSymbolsPerFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanNumSymbolsPerFrame.setStatus('current')
docsIf31CmUsOfdmaChanTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 10), Unsigned32()).setUnits('QuarterdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanTxPower.setStatus('current')
docsIf31CmUsOfdmaChanPreEqEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 11), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanPreEqEnabled.setStatus('current')
docsIf31CmUsOfdmaChanChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 13, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaChanChannelId.setStatus('current')
docsIf31CmUsOfdmaProfileStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 14), )
if mibBuilder.loadTexts: docsIf31CmUsOfdmaProfileStatsTable.setStatus('current')
docsIf31CmUsOfdmaProfileStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 14, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmUsOfdmaProfileStatsIuc"))
if mibBuilder.loadTexts: docsIf31CmUsOfdmaProfileStatsEntry.setStatus('current')
docsIf31CmUsOfdmaProfileStatsIuc = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 14, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf31CmUsOfdmaProfileStatsIuc.setStatus('current')
docsIf31CmUsOfdmaProfileStatsOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 14, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaProfileStatsOutOctets.setStatus('current')
docsIf31CmUsOfdmaProfileStatsCtrDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 14, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaProfileStatsCtrDiscontinuityTime.setStatus('current')
docsIf31CmUsOfdmaMinislotCfgStateTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 15), )
if mibBuilder.loadTexts: docsIf31CmUsOfdmaMinislotCfgStateTable.setStatus('current')
docsIf31CmUsOfdmaMinislotCfgStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 15, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmUsOfdmaProfileStatsIuc"), (0, "DOCS-IF31-MIB", "docsIf31CmUsOfdmaMinislotCfgStateStartMinislotNum"))
if mibBuilder.loadTexts: docsIf31CmUsOfdmaMinislotCfgStateEntry.setStatus('current')
docsIf31CmUsOfdmaMinislotCfgStateStartMinislotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 15, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf31CmUsOfdmaMinislotCfgStateStartMinislotNum.setStatus('current')
docsIf31CmUsOfdmaMinislotCfgStateFirstSubcarrierId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 15, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaMinislotCfgStateFirstSubcarrierId.setStatus('current')
docsIf31CmUsOfdmaMinislotCfgStateNumConsecutiveMinislots = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 15, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaMinislotCfgStateNumConsecutiveMinislots.setStatus('current')
docsIf31CmUsOfdmaMinislotCfgStateMinislotPilotPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 15, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaMinislotCfgStateMinislotPilotPattern.setStatus('current')
docsIf31CmUsOfdmaMinislotCfgStateDataSymbolModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 15, 1, 5), UsOfdmaModulationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsOfdmaMinislotCfgStateDataSymbolModulation.setStatus('current')
docsIf31CmEmDlsStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16), )
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsTable.setStatus('current')
docsIf31CmEmDlsStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsEntry.setStatus('current')
docsIf31CmEmDlsStatsNumberTimesCrossedBelowUsEntryThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsNumberTimesCrossedBelowUsEntryThrshlds.setStatus('current')
docsIf31CmEmDlsStatsNumberTimesCrossedBelowDsEntryThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsNumberTimesCrossedBelowDsEntryThrshlds.setStatus('current')
docsIf31CmEmDlsStatsTotalDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsTotalDuration.setStatus('current')
docsIf31CmEmDlsStatsTotalDurationBelowUsThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16, 1, 4), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsTotalDurationBelowUsThrshlds.setStatus('current')
docsIf31CmEmDlsStatsTotalDurationBelowDsThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16, 1, 5), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsTotalDurationBelowDsThrshlds.setStatus('current')
docsIf31CmEmDlsStatsTotalDurationBelowUsDsThrshlds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16, 1, 6), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsTotalDurationBelowUsDsThrshlds.setStatus('current')
docsIf31CmEmDlsStatsNumSleepLatencyTriggers = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsNumSleepLatencyTriggers.setStatus('current')
docsIf31CmEmDlsStatsNumSleepByteCtTriggers = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 16, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatsNumSleepByteCtTriggers.setStatus('current')
docsIf31CmEmDlsStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 17), )
if mibBuilder.loadTexts: docsIf31CmEmDlsStatusTable.setStatus('current')
docsIf31CmEmDlsStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 17, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmEmDlsStatusEntry.setStatus('current')
docsIf31CmEmDlsStatusAssignedEmIds = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 17, 1, 1), EmIdList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatusAssignedEmIds.setStatus('current')
docsIf31CmEmDlsStatusReceiveTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 17, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatusReceiveTimer.setStatus('current')
docsIf31CmEmDlsStatusMaxSleepLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 17, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatusMaxSleepLatency.setStatus('current')
docsIf31CmEmDlsStatusMaxSleepBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 17, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmEmDlsStatusMaxSleepBytes.setStatus('current')
docsIf31CmSystemCfgState = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 18))
docsIf31CmSystemCfgStateDiplexerCapability = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 18, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmSystemCfgStateDiplexerCapability.setStatus('current')
docsIf31CmSystemCfgStateDiplexerCfgBandEdge = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 18, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmSystemCfgStateDiplexerCfgBandEdge.setStatus('current')
docsIf31CmSystemCfgStateDiplexerDsLowerCapability = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 18, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmSystemCfgStateDiplexerDsLowerCapability.setStatus('current')
docsIf31CmSystemCfgStateDiplexerCfgDsLowerBandEdge = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 18, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmSystemCfgStateDiplexerCfgDsLowerBandEdge.setStatus('current')
docsIf31CmSystemCfgStateDiplexerDsUpperCapability = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 18, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmSystemCfgStateDiplexerDsUpperCapability.setStatus('current')
docsIf31CmSystemCfgStateDiplexerCfgDsUpperBandEdge = MibScalar((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 18, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmSystemCfgStateDiplexerCfgDsUpperBandEdge.setStatus('current')
docsIf31CmtsDsOfdmChanTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19), )
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanTable.setStatus('current')
docsIf31CmtsDsOfdmChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanEntry.setStatus('current')
docsIf31CmtsDsOfdmChanChannelId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanChannelId.setStatus('current')
docsIf31CmtsDsOfdmChanLowerBdryFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 2), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanLowerBdryFreq.setStatus('current')
docsIf31CmtsDsOfdmChanUpperBdryFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 3), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanUpperBdryFreq.setStatus('current')
docsIf31CmtsDsOfdmChanLowerBdryEncompSpectrum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 4), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanLowerBdryEncompSpectrum.setStatus('current')
docsIf31CmtsDsOfdmChanUpperBdryEncompSpectrum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 5), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanUpperBdryEncompSpectrum.setStatus('current')
docsIf31CmtsDsOfdmChanPlcFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 6), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanPlcFreq.setStatus('current')
docsIf31CmtsDsOfdmChanSubcarrierZeroFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 7), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanSubcarrierZeroFreq.setStatus('current')
docsIf31CmtsDsOfdmChanFirstActiveSubcarrierNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanFirstActiveSubcarrierNum.setStatus('current')
docsIf31CmtsDsOfdmChanLastActiveSubcarrierNum = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanLastActiveSubcarrierNum.setStatus('current')
docsIf31CmtsDsOfdmChanNumActiveSubcarriers = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanNumActiveSubcarriers.setStatus('current')
docsIf31CmtsDsOfdmChanSubcarrierSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 11), SubcarrierSpacingType()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanSubcarrierSpacing.setStatus('current')
docsIf31CmtsDsOfdmChanLowerGuardbandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanLowerGuardbandWidth.setStatus('current')
docsIf31CmtsDsOfdmChanUpperGuardbandWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanUpperGuardbandWidth.setStatus('current')
docsIf31CmtsDsOfdmChanCyclicPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 14), DsOfdmCyclicPrefix()).setUnits('number of samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanCyclicPrefix.setStatus('current')
docsIf31CmtsDsOfdmChanRollOffPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 15), DsOfdmRollOffPeriod()).setUnits('number of samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanRollOffPeriod.setStatus('current')
docsIf31CmtsDsOfdmChanTimeInterleaverDepth = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 16), TimeInterleaverDepth()).setUnits('symbols').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanTimeInterleaverDepth.setStatus('current')
docsIf31CmtsDsOfdmChanNumPilots = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 17), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanNumPilots.setStatus('current')
docsIf31CmtsDsOfdmChanPilotScaleFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanPilotScaleFactor.setStatus('current')
docsIf31CmtsDsOfdmChanNcpModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 19), DsOfdmModulationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanNcpModulation.setStatus('current')
docsIf31CmtsDsOfdmChanUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 19, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanUtilization.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20), )
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsTable.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsProfileId"))
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsEntry.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsProfileId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsProfileId.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsConfigChangeCt = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsConfigChangeCt.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsFullChannelSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 3), CounterBasedGauge64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsFullChannelSpeed.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsOutOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsOutOctets.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsOutUnicastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsOutUnicastOctets.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsOutMulticastOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsOutMulticastOctets.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsOutFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsOutFrames.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsOutUnicastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsOutUnicastFrames.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsOutMulticastFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsOutMulticastFrames.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsCtrDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsCtrDiscontinuityTime.setStatus('current')
docsIf31CmtsDsOfdmProfileStatsAssignedCmCt = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 20, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmProfileStatsAssignedCmCt.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 21), )
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierStatusTable.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 21, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsProfileId"), (0, "DOCS-IF31-MIB", "docsIf31CmtsDsOfdmSubcarrierStatusStartId"))
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierStatusEntry.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierStatusStartId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 21, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierStatusStartId.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierStatusEndId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 21, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierStatusEndId.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierStatusMainModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 21, 1, 3), DsOfdmModulationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierStatusMainModulation.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierStatusSkip = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 21, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierStatusSkip.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierStatusSkipModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 21, 1, 5), DsOfdmModulationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierStatusSkipModulation.setStatus('current')
docsIf31CmtsDsOfdmChanPowerTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 22), )
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanPowerTable.setStatus('current')
docsIf31CmtsDsOfdmChanPowerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 22, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanPowerBandIndex"))
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanPowerEntry.setStatus('current')
docsIf31CmtsDsOfdmChanPowerBandIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 22, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanPowerBandIndex.setStatus('current')
docsIf31CmtsDsOfdmChanPowerCenterFrequency = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 22, 1, 2), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanPowerCenterFrequency.setStatus('current')
docsIf31CmtsDsOfdmChanPowerTxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 22, 1, 3), TenthdBmV()).setUnits('TenthdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmChanPowerTxPower.setStatus('current')
docsIf31CmtsUsOfdmaChanTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23), )
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanTable.setStatus('current')
docsIf31CmtsUsOfdmaChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanEntry.setStatus('current')
docsIf31CmtsUsOfdmaChanTemplateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanTemplateIndex.setStatus('current')
docsIf31CmtsUsOfdmaChanConfigChangeCt = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanConfigChangeCt.setStatus('current')
docsIf31CmtsUsOfdmaChanTargetRxPower = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 3), TenthdBmV()).setUnits('TenthdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanTargetRxPower.setStatus('current')
docsIf31CmtsUsOfdmaChanLowerBdryFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 4), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanLowerBdryFreq.setStatus('current')
docsIf31CmtsUsOfdmaChanUpperBdryFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 5), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanUpperBdryFreq.setStatus('current')
docsIf31CmtsUsOfdmaChanSubcarrierSpacing = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 6), SubcarrierSpacingType()).setUnits('kHz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanSubcarrierSpacing.setStatus('current')
docsIf31CmtsUsOfdmaChanCyclicPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 7), UsOfdmaCyclicPrefix()).setUnits('number of samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanCyclicPrefix.setStatus('current')
docsIf31CmtsUsOfdmaChanNumSymbolsPerFrame = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanNumSymbolsPerFrame.setStatus('current')
docsIf31CmtsUsOfdmaChanRollOffPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 9), UsOfdmaRollOffPeriod()).setUnits('number of samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanRollOffPeriod.setStatus('current')
docsIf31CmtsUsOfdmaChanPreEqEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 10), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanPreEqEnable.setStatus('current')
docsIf31CmtsUsOfdmaChanFineRngGuardband = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 11), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanFineRngGuardband.setStatus('current')
docsIf31CmtsUsOfdmaChanFineRngNumSubcarriers = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanFineRngNumSubcarriers.setStatus('current')
docsIf31CmtsUsOfdmaChanFineRngPreambleLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 13), Unsigned32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanFineRngPreambleLen.setStatus('current')
docsIf31CmtsUsOfdmaChanInitRngGuardband = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 14), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanInitRngGuardband.setStatus('current')
docsIf31CmtsUsOfdmaChanInitRngNumSubcarriers = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 15), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanInitRngNumSubcarriers.setStatus('current')
docsIf31CmtsUsOfdmaChanInitRngPreambleLen = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 16), Unsigned32()).setUnits('bits').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanInitRngPreambleLen.setStatus('current')
docsIf31CmtsUsOfdmaChanProvAttribMask = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 17), AttributeMask()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanProvAttribMask.setStatus('current')
docsIf31CmtsUsOfdmaChanTxBackoffStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanTxBackoffStart.setStatus('current')
docsIf31CmtsUsOfdmaChanTxBackoffEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanTxBackoffEnd.setStatus('current')
docsIf31CmtsUsOfdmaChanRangingBackoffStart = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanRangingBackoffStart.setStatus('current')
docsIf31CmtsUsOfdmaChanRangingBackoffEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanRangingBackoffEnd.setStatus('current')
docsIf31CmtsUsOfdmaChanUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanUtilization.setStatus('current')
docsIf31CmtsUsOfdmaChanId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 23, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaChanId.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24), )
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsTable.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsDataIuc"))
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsEntry.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsDataIuc = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsDataIuc.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsMinislotPilotPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsMinislotPilotPattern.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsMinislotModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1, 3), UsOfdmaModulationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsMinislotModulation.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsTotalCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsTotalCodewords.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsCorrectedCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsCorrectedCodewords.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsUnreliableCodewords = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsUnreliableCodewords.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsInOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsInOctets.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsCtrDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsCtrDiscontinuityTime.setStatus('current')
docsIf31CmtsUsOfdmaDataIucStatsAssignedCmCt = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 24, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucStatsAssignedCmCt.setStatus('current')
docsIf31CmtsUsOfdmaDataIucDetailStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 25), )
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucDetailStatusTable.setStatus('current')
docsIf31CmtsUsOfdmaDataIucDetailStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 25, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsDataIuc"), (0, "DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucDetailStatusLowerFreq"))
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucDetailStatusEntry.setStatus('current')
docsIf31CmtsUsOfdmaDataIucDetailStatusLowerFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 25, 1, 1), Unsigned32()).setUnits('Hz')
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucDetailStatusLowerFreq.setStatus('current')
docsIf31CmtsUsOfdmaDataIucDetailStatusUpperFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 25, 1, 2), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucDetailStatusUpperFreq.setStatus('current')
docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotPilotPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 25, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotPilotPattern.setStatus('current')
docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotModulation = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 25, 1, 4), UsOfdmaModulationType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotModulation.setStatus('current')
docsIf31CmtsUsOfdmaRangingIucStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 26), )
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaRangingIucStatusTable.setStatus('current')
docsIf31CmtsUsOfdmaRangingIucStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 26, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaRangingIucStatusIuc"))
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaRangingIucStatusEntry.setStatus('current')
docsIf31CmtsUsOfdmaRangingIucStatusIuc = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 26, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaRangingIucStatusIuc.setStatus('current')
docsIf31CmtsUsOfdmaRangingIucStatusGuardband = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 26, 1, 2), Unsigned32()).setUnits('Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaRangingIucStatusGuardband.setStatus('current')
docsIf31CmtsUsOfdmaRangingIucStatusNumSubcarriers = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 26, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaRangingIucStatusNumSubcarriers.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierTypeTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 27), )
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierTypeTable.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 27, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsDsOfdmSubcarrierTypeStartSubcarrierId"))
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierTypeEntry.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierTypeStartSubcarrierId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 27, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierTypeStartSubcarrierId.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierTypeEndSubcarrierId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 27, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierTypeEndSubcarrierId.setStatus('current')
docsIf31CmtsDsOfdmSubcarrierTypeSubcarrierType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 27, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("data", 1), ("plc", 2), ("continuousPilot", 3), ("excluded", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsDsOfdmSubcarrierTypeSubcarrierType.setStatus('current')
docsIf31CmtsUsOfdmaSubcarrierTypeTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 28), )
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaSubcarrierTypeTable.setStatus('current')
docsIf31CmtsUsOfdmaSubcarrierTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 28, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaSubcarrierTypeStartSubcarrierId"))
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaSubcarrierTypeEntry.setStatus('current')
docsIf31CmtsUsOfdmaSubcarrierTypeStartSubcarrierId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 28, 1, 1), Unsigned32())
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaSubcarrierTypeStartSubcarrierId.setStatus('current')
docsIf31CmtsUsOfdmaSubcarrierTypeEndSubcarrierId = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 28, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaSubcarrierTypeEndSubcarrierId.setStatus('current')
docsIf31CmtsUsOfdmaSubcarrierTypeSubcarrierType = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 28, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("data", 1), ("excluded", 2), ("unused", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmtsUsOfdmaSubcarrierTypeSubcarrierType.setStatus('current')
docsIf31CmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 29), )
if mibBuilder.loadTexts: docsIf31CmStatusTable.setStatus('current')
docsIf31CmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 29, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: docsIf31CmStatusEntry.setStatus('current')
docsIf31CmStatusEmDlsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 29, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmStatusEmDlsOperStatus.setStatus('current')
docsIf31CmEmDlsCfgTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 30), )
if mibBuilder.loadTexts: docsIf31CmEmDlsCfgTable.setStatus('current')
docsIf31CmEmDlsCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 30, 1), ).setIndexNames((0, "DOCS-IF31-MIB", "docsIf31CmEmDlsCfgDirection"))
if mibBuilder.loadTexts: docsIf31CmEmDlsCfgEntry.setStatus('current')
docsIf31CmEmDlsCfgDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 30, 1, 1), IfDirection())
if mibBuilder.loadTexts: docsIf31CmEmDlsCfgDirection.setStatus('current')
docsIf31CmEmDlsCfgEntryBitrateThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 30, 1, 2), Unsigned32()).setUnits('bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf31CmEmDlsCfgEntryBitrateThrshld.setStatus('current')
docsIf31CmEmDlsCfgEntryTimeThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 30, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf31CmEmDlsCfgEntryTimeThrshld.setStatus('current')
docsIf31CmEmDlsCfgExitBitrateThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 30, 1, 4), Unsigned32()).setUnits('bps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf31CmEmDlsCfgExitBitrateThrshld.setStatus('current')
docsIf31CmEmDlsCfgExitTimeThrshld = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 30, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: docsIf31CmEmDlsCfgExitTimeThrshld.setStatus('current')
docsIf31CmUsScQamChanTable = MibTable((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 31), )
if mibBuilder.loadTexts: docsIf31CmUsScQamChanTable.setStatus('current')
docsIf31CmUsScQamChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 31, 1), )
docsIfUpstreamChannelEntry.registerAugmentions(("DOCS-IF31-MIB", "docsIf31CmUsScQamChanEntry"))
docsIf31CmUsScQamChanEntry.setIndexNames(*docsIfUpstreamChannelEntry.getIndexNames())
if mibBuilder.loadTexts: docsIf31CmUsScQamChanEntry.setStatus('current')
docsIf31CmUsScQamChanTxPsd = MibTableColumn((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 1, 31, 1, 1), Unsigned32()).setUnits('QuarterdBmV').setMaxAccess("readonly")
if mibBuilder.loadTexts: docsIf31CmUsScQamChanTxPsd.setStatus('current')
docsIf31MibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 2))
docsIf31MibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 2, 1))
docsIf31MibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 2, 2))
docsIf31CmtsCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 2, 1, 1)).setObjects(("DOCS-IF31-MIB", "docsIf31CmtsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf31CmtsCompliance = docsIf31CmtsCompliance.setStatus('current')
docsIf31CmCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 2, 1, 2)).setObjects(("DOCS-IF31-MIB", "docsIf31CmGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf31CmCompliance = docsIf31CmCompliance.setStatus('current')
docsIf31CmtsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 2, 2, 1)).setObjects(("DOCS-IF31-MIB", "docsIf31DocsisBaseCapability"), ("DOCS-IF31-MIB", "docsIf31RxChStatusPrimaryDsIndicator"), ("DOCS-IF31-MIB", "docsIf31RxChStatusOfdmProfiles"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusAssignedEmIds"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusDsProfileIdList"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusUsProfileIucList"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusTcsPhigh"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusTcsDrwTop"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusMinUsableDsFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusMaxUsableDsFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusMaxUsableUsFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusPartialSvcState"), ("DOCS-IF31-MIB", "docsIf31CmtsCmRegStatusPartialChanState"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelRxPower"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelMeanRxMer"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelStdDevRxMer"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelRxMerThreshold"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelThresholdRxMerValue"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelThresholdRxMerHighestFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelMicroreflections"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelHighResolutionTimingOffset"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelIsMuted"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelRangingStatus"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelCurPartialSvcReasonCode"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelLastPartialSvcTime"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelLastPartialSvcReasonCode"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaChannelNumPartialSvcIncidents"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaProfileTotalCodewords"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaProfileCorrectedCodewords"), ("DOCS-IF31-MIB", "docsIf31CmtsCmUsOfdmaProfileUnreliableCodewords"), ("DOCS-IF31-MIB", "docsIf31CmtsCmDsOfdmChannelCurPartialSvcReasonCode"), ("DOCS-IF31-MIB", "docsIf31CmtsCmDsOfdmChannelLastPartialSvcTime"), ("DOCS-IF31-MIB", "docsIf31CmtsCmDsOfdmChannelLastPartialSvcReasonCode"), ("DOCS-IF31-MIB", "docsIf31CmtsCmDsOfdmChannelNumPartialSvcIncidents"), ("DOCS-IF31-MIB", "docsIf31CmtsCmDsOfdmChannelNumPartialChanIncidents"), ("DOCS-IF31-MIB", "docsIf31CmtsCmDsOfdmProfilePartialChanReasonCode"), ("DOCS-IF31-MIB", "docsIf31CmtsCmDsOfdmProfileLastPartialChanTime"), ("DOCS-IF31-MIB", "docsIf31CmtsCmDsOfdmProfileLastPartialChanReasonCode"), ("DOCS-IF31-MIB", "docsIf31CmtsCmEmStatsEm1x1ModeTotalDuration"), ("DOCS-IF31-MIB", "docsIf31CmtsCmEmStatsDlsModeTotalDuration"), ("DOCS-IF31-MIB", "docsIf31CmtsCmEmStatsLastDlsTime"), ("DOCS-IF31-MIB", "docsIf31CmtsCmEmStatsDlsWakeupEvents"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanChannelId"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanLowerBdryFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanUpperBdryFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanLowerBdryEncompSpectrum"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanUpperBdryEncompSpectrum"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanPlcFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanSubcarrierZeroFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanFirstActiveSubcarrierNum"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanLastActiveSubcarrierNum"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanNumActiveSubcarriers"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanSubcarrierSpacing"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanLowerGuardbandWidth"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanUpperGuardbandWidth"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanCyclicPrefix"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanRollOffPeriod"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanTimeInterleaverDepth"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanNumPilots"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanPilotScaleFactor"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanNcpModulation"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanUtilization"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsConfigChangeCt"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsFullChannelSpeed"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsOutOctets"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsOutUnicastOctets"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsOutMulticastOctets"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsOutFrames"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsOutUnicastFrames"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsOutMulticastFrames"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsCtrDiscontinuityTime"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmProfileStatsAssignedCmCt"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmSubcarrierStatusEndId"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmSubcarrierStatusMainModulation"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmSubcarrierStatusSkip"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmSubcarrierStatusSkipModulation"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanPowerCenterFrequency"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmChanPowerTxPower"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanTemplateIndex"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanConfigChangeCt"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanTargetRxPower"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanLowerBdryFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanUpperBdryFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanSubcarrierSpacing"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanCyclicPrefix"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanNumSymbolsPerFrame"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanRollOffPeriod"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanPreEqEnable"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanFineRngGuardband"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanFineRngNumSubcarriers"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanFineRngPreambleLen"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanInitRngGuardband"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanInitRngNumSubcarriers"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanInitRngPreambleLen"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanProvAttribMask"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanTxBackoffStart"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanTxBackoffEnd"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanRangingBackoffStart"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanRangingBackoffEnd"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanUtilization"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaChanId"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsMinislotPilotPattern"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsMinislotModulation"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsTotalCodewords"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsCorrectedCodewords"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsUnreliableCodewords"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsInOctets"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsCtrDiscontinuityTime"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucStatsAssignedCmCt"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucDetailStatusUpperFreq"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotPilotPattern"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotModulation"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaRangingIucStatusGuardband"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaRangingIucStatusNumSubcarriers"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmSubcarrierTypeEndSubcarrierId"), ("DOCS-IF31-MIB", "docsIf31CmtsDsOfdmSubcarrierTypeSubcarrierType"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaSubcarrierTypeEndSubcarrierId"), ("DOCS-IF31-MIB", "docsIf31CmtsUsOfdmaSubcarrierTypeSubcarrierType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf31CmtsGroup = docsIf31CmtsGroup.setStatus('current')
docsIf31CmGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 4491, 2, 1, 28, 2, 2, 2)).setObjects(("DOCS-IF31-MIB", "docsIf31DocsisBaseCapability"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanChannelId"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanChanIndicator"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanSubcarrierZeroFreq"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanFirstActiveSubcarrierNum"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanLastActiveSubcarrierNum"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanNumActiveSubcarriers"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanSubcarrierSpacing"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanCyclicPrefix"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanRollOffPeriod"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanPlcFreq"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanNumPilots"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanTimeInterleaverDepth"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanPlcTotalCodewords"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanPlcUnreliableCodewords"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanNcpTotalFields"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChanNcpFieldCrcFailures"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatsNumberTimesCrossedBelowUsEntryThrshlds"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatsNumberTimesCrossedBelowDsEntryThrshlds"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatsTotalDuration"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatsTotalDurationBelowUsThrshlds"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatsTotalDurationBelowDsThrshlds"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatsTotalDurationBelowUsDsThrshlds"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatsNumSleepLatencyTriggers"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatsNumSleepByteCtTriggers"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatusAssignedEmIds"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatusReceiveTimer"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatusMaxSleepLatency"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsStatusMaxSleepBytes"), ("DOCS-IF31-MIB", "docsIf31CmSystemCfgStateDiplexerCapability"), ("DOCS-IF31-MIB", "docsIf31CmSystemCfgStateDiplexerCfgBandEdge"), ("DOCS-IF31-MIB", "docsIf31CmSystemCfgStateDiplexerDsLowerCapability"), ("DOCS-IF31-MIB", "docsIf31CmSystemCfgStateDiplexerCfgDsLowerBandEdge"), ("DOCS-IF31-MIB", "docsIf31CmSystemCfgStateDiplexerDsUpperCapability"), ("DOCS-IF31-MIB", "docsIf31CmSystemCfgStateDiplexerCfgDsUpperBandEdge"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsConfigChangeCt"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsTotalCodewords"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsCorrectedCodewords"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsUncorrectableCodewords"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsInOctets"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsInUnicastOctets"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsInMulticastOctets"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsInFrames"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsInUnicastFrames"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsInMulticastFrames"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsInFrameCrcFailures"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmProfileStatsCtrDiscontinuityTime"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChannelPowerCenterFrequency"), ("DOCS-IF31-MIB", "docsIf31CmDsOfdmChannelPowerRxPower"), ("DOCS-IF31-MIB", "docsIf31CmStatusOfdmaUsT3Timeouts"), ("DOCS-IF31-MIB", "docsIf31CmStatusOfdmaUsT4Timeouts"), ("DOCS-IF31-MIB", "docsIf31CmStatusOfdmaUsRangingAborteds"), ("DOCS-IF31-MIB", "docsIf31CmStatusOfdmaUsT3Exceededs"), ("DOCS-IF31-MIB", "docsIf31CmStatusOfdmaUsIsMuted"), ("DOCS-IF31-MIB", "docsIf31CmStatusOfdmaUsRangingStatus"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanConfigChangeCt"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanSubcarrierZeroFreq"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanFirstActiveSubcarrierNum"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanLastActiveSubcarrierNum"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanNumActiveSubcarriers"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanSubcarrierSpacing"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanCyclicPrefix"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanRollOffPeriod"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanNumSymbolsPerFrame"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanTxPower"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanPreEqEnabled"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaChanChannelId"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaProfileStatsOutOctets"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaProfileStatsCtrDiscontinuityTime"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaMinislotCfgStateFirstSubcarrierId"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaMinislotCfgStateNumConsecutiveMinislots"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaMinislotCfgStateMinislotPilotPattern"), ("DOCS-IF31-MIB", "docsIf31CmUsOfdmaMinislotCfgStateDataSymbolModulation"), ("DOCS-IF31-MIB", "docsIf31CmStatusEmDlsOperStatus"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsCfgExitBitrateThrshld"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsCfgEntryTimeThrshld"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsCfgEntryBitrateThrshld"), ("DOCS-IF31-MIB", "docsIf31CmEmDlsCfgExitTimeThrshld"), ("DOCS-IF31-MIB", "docsIf31CmUsScQamChanTxPsd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    docsIf31CmGroup = docsIf31CmGroup.setStatus('current')
mibBuilder.exportSymbols("DOCS-IF31-MIB", docsIf31CmUsOfdmaChanSubcarrierSpacing=docsIf31CmUsOfdmaChanSubcarrierSpacing, docsIf31CmUsOfdmaChanEntry=docsIf31CmUsOfdmaChanEntry, PartialChanReasonType=PartialChanReasonType, docsIf31CmtsDsOfdmSubcarrierStatusSkip=docsIf31CmtsDsOfdmSubcarrierStatusSkip, docsIf31CmtsCmRegStatusDsProfileIdList=docsIf31CmtsCmRegStatusDsProfileIdList, docsIf31CmUsOfdmaMinislotCfgStateFirstSubcarrierId=docsIf31CmUsOfdmaMinislotCfgStateFirstSubcarrierId, docsIf31CmtsDsOfdmSubcarrierStatusEndId=docsIf31CmtsDsOfdmSubcarrierStatusEndId, docsIf31CmDsOfdmChanRollOffPeriod=docsIf31CmDsOfdmChanRollOffPeriod, PartialServiceType=PartialServiceType, docsIf31CmtsDsOfdmSubcarrierStatusStartId=docsIf31CmtsDsOfdmSubcarrierStatusStartId, DsOfdmModulationType=DsOfdmModulationType, docsIf31CmDsOfdmProfileStatsCorrectedCodewords=docsIf31CmDsOfdmProfileStatsCorrectedCodewords, docsIf31CmtsCmDsOfdmChannelStatusEntry=docsIf31CmtsCmDsOfdmChannelStatusEntry, docsIf31CmtsDsOfdmProfileStatsEntry=docsIf31CmtsDsOfdmProfileStatsEntry, docsIf31CmtsDsOfdmProfileStatsOutMulticastOctets=docsIf31CmtsDsOfdmProfileStatsOutMulticastOctets, docsIf31CmtsDsOfdmChanPowerTable=docsIf31CmtsDsOfdmChanPowerTable, docsIf31CmtsUsOfdmaDataIucDetailStatusEntry=docsIf31CmtsUsOfdmaDataIucDetailStatusEntry, docsIf31CmtsCmDsOfdmChannelNumPartialChanIncidents=docsIf31CmtsCmDsOfdmChannelNumPartialChanIncidents, docsIf31CmtsCmDsOfdmProfileStatusTable=docsIf31CmtsCmDsOfdmProfileStatusTable, docsIf31CmStatusOfdmaUsIsMuted=docsIf31CmStatusOfdmaUsIsMuted, docsIf31CmtsDsOfdmProfileStatsOutUnicastFrames=docsIf31CmtsDsOfdmProfileStatsOutUnicastFrames, docsIf31CmtsCmDsOfdmChannelLastPartialSvcReasonCode=docsIf31CmtsCmDsOfdmChannelLastPartialSvcReasonCode, docsIf31Mib=docsIf31Mib, docsIf31CmtsUsOfdmaChanInitRngGuardband=docsIf31CmtsUsOfdmaChanInitRngGuardband, docsIf31CmtsUsOfdmaChanTable=docsIf31CmtsUsOfdmaChanTable, docsIf31CmtsUsOfdmaChanTxBackoffEnd=docsIf31CmtsUsOfdmaChanTxBackoffEnd, docsIf31CmtsCmRegStatusUsProfileIucList=docsIf31CmtsCmRegStatusUsProfileIucList, docsIf31CmtsCmUsOfdmaChannelLastPartialSvcReasonCode=docsIf31CmtsCmUsOfdmaChannelLastPartialSvcReasonCode, docsIf31CmtsUsOfdmaDataIucStatsDataIuc=docsIf31CmtsUsOfdmaDataIucStatsDataIuc, docsIf31CmtsDsOfdmChanFirstActiveSubcarrierNum=docsIf31CmtsDsOfdmChanFirstActiveSubcarrierNum, docsIf31CmtsDsOfdmChanLowerBdryFreq=docsIf31CmtsDsOfdmChanLowerBdryFreq, docsIf31CmtsCmUsOfdmaProfileTotalCodewords=docsIf31CmtsCmUsOfdmaProfileTotalCodewords, docsIf31CmtsCmDsOfdmProfileLastPartialChanTime=docsIf31CmtsCmDsOfdmProfileLastPartialChanTime, docsIf31CmDsOfdmChanLastActiveSubcarrierNum=docsIf31CmDsOfdmChanLastActiveSubcarrierNum, docsIf31CmDsOfdmChanPlcTotalCodewords=docsIf31CmDsOfdmChanPlcTotalCodewords, docsIf31CmtsDsOfdmChanNumPilots=docsIf31CmtsDsOfdmChanNumPilots, HundredthdB=HundredthdB, PrimaryDsIndicatorType=PrimaryDsIndicatorType, docsIf31DocsisBaseCapability=docsIf31DocsisBaseCapability, docsIf31CmtsCmEmStatsLastDlsTime=docsIf31CmtsCmEmStatsLastDlsTime, docsIf31CmDsOfdmChanSubcarrierSpacing=docsIf31CmDsOfdmChanSubcarrierSpacing, docsIf31CmEmDlsCfgTable=docsIf31CmEmDlsCfgTable, docsIf31CmEmDlsCfgDirection=docsIf31CmEmDlsCfgDirection, docsIf31CmtsCmRegStatusMaxUsableDsFreq=docsIf31CmtsCmRegStatusMaxUsableDsFreq, docsIf31RxChStatusEntry=docsIf31RxChStatusEntry, docsIf31CmtsCmDsOfdmProfileLastPartialChanReasonCode=docsIf31CmtsCmDsOfdmProfileLastPartialChanReasonCode, docsIf31CmEmDlsStatusEntry=docsIf31CmEmDlsStatusEntry, docsIf31CmtsCmUsOfdmaChannelMeanRxMer=docsIf31CmtsCmUsOfdmaChannelMeanRxMer, docsIf31CmEmDlsStatsEntry=docsIf31CmEmDlsStatsEntry, docsIf31CmEmDlsStatsTotalDurationBelowDsThrshlds=docsIf31CmEmDlsStatsTotalDurationBelowDsThrshlds, docsIf31CmSystemCfgState=docsIf31CmSystemCfgState, docsIf31CmUsOfdmaProfileStatsTable=docsIf31CmUsOfdmaProfileStatsTable, docsIf31CmtsCmRegStatusMaxUsableUsFreq=docsIf31CmtsCmRegStatusMaxUsableUsFreq, docsIf31CmtsUsOfdmaDataIucStatsInOctets=docsIf31CmtsUsOfdmaDataIucStatsInOctets, docsIf31CmtsUsOfdmaRangingIucStatusNumSubcarriers=docsIf31CmtsUsOfdmaRangingIucStatusNumSubcarriers, docsIf31CmtsDsOfdmSubcarrierTypeTable=docsIf31CmtsDsOfdmSubcarrierTypeTable, docsIf31CmEmDlsCfgExitBitrateThrshld=docsIf31CmEmDlsCfgExitBitrateThrshld, docsIf31MibConformance=docsIf31MibConformance, docsIf31CmGroup=docsIf31CmGroup, docsIf31CmtsCmUsOfdmaChannelStatusTable=docsIf31CmtsCmUsOfdmaChannelStatusTable, docsIf31CmtsDsOfdmProfileStatsAssignedCmCt=docsIf31CmtsDsOfdmProfileStatsAssignedCmCt, docsIf31CmtsCmRegStatusPartialChanState=docsIf31CmtsCmRegStatusPartialChanState, docsIf31CmtsCmEmStatsEntry=docsIf31CmtsCmEmStatsEntry, docsIf31CmStatusOfdmaUsEntry=docsIf31CmStatusOfdmaUsEntry, docsIf31CmtsCmRegStatusTable=docsIf31CmtsCmRegStatusTable, docsIf31CmStatusOfdmaUsTable=docsIf31CmStatusOfdmaUsTable, docsIf31CmUsOfdmaChanNumActiveSubcarriers=docsIf31CmUsOfdmaChanNumActiveSubcarriers, docsIf31CmUsOfdmaChanNumSymbolsPerFrame=docsIf31CmUsOfdmaChanNumSymbolsPerFrame, docsIf31CmUsOfdmaMinislotCfgStateNumConsecutiveMinislots=docsIf31CmUsOfdmaMinislotCfgStateNumConsecutiveMinislots, docsIf31CmEmDlsStatusMaxSleepBytes=docsIf31CmEmDlsStatusMaxSleepBytes, docsIf31CmtsUsOfdmaChanPreEqEnable=docsIf31CmtsUsOfdmaChanPreEqEnable, docsIf31CmtsUsOfdmaChanRangingBackoffEnd=docsIf31CmtsUsOfdmaChanRangingBackoffEnd, docsIf31CmtsUsOfdmaSubcarrierTypeTable=docsIf31CmtsUsOfdmaSubcarrierTypeTable, docsIf31CmDsOfdmProfileStatsConfigChangeCt=docsIf31CmDsOfdmProfileStatsConfigChangeCt, PartialSvcReasonType=PartialSvcReasonType, docsIf31CmEmDlsStatsNumberTimesCrossedBelowUsEntryThrshlds=docsIf31CmEmDlsStatsNumberTimesCrossedBelowUsEntryThrshlds, docsIf31CmEmDlsStatsTotalDurationBelowUsThrshlds=docsIf31CmEmDlsStatsTotalDurationBelowUsThrshlds, docsIf31CmDsOfdmProfileStatsInUnicastOctets=docsIf31CmDsOfdmProfileStatsInUnicastOctets, docsIf31CmDsOfdmChannelPowerTable=docsIf31CmDsOfdmChannelPowerTable, docsIf31CmDsOfdmChannelPowerCenterFrequency=docsIf31CmDsOfdmChannelPowerCenterFrequency, docsIf31CmtsDsOfdmChanChannelId=docsIf31CmtsDsOfdmChanChannelId, docsIf31CmDsOfdmProfileStatsCtrDiscontinuityTime=docsIf31CmDsOfdmProfileStatsCtrDiscontinuityTime, docsIf31CmUsOfdmaChanChannelId=docsIf31CmUsOfdmaChanChannelId, docsIf31CmtsDsOfdmProfileStatsOutUnicastOctets=docsIf31CmtsDsOfdmProfileStatsOutUnicastOctets, docsIf31CmSystemCfgStateDiplexerCfgBandEdge=docsIf31CmSystemCfgStateDiplexerCfgBandEdge, docsIf31CmtsUsOfdmaRangingIucStatusTable=docsIf31CmtsUsOfdmaRangingIucStatusTable, docsIf31CmtsDsOfdmSubcarrierStatusEntry=docsIf31CmtsDsOfdmSubcarrierStatusEntry, docsIf31CmtsDsOfdmSubcarrierTypeEndSubcarrierId=docsIf31CmtsDsOfdmSubcarrierTypeEndSubcarrierId, docsIf31CmDsOfdmProfileStatsTable=docsIf31CmDsOfdmProfileStatsTable, docsIf31CmtsDsOfdmProfileStatsCtrDiscontinuityTime=docsIf31CmtsDsOfdmProfileStatsCtrDiscontinuityTime, docsIf31CmtsDsOfdmChanSubcarrierSpacing=docsIf31CmtsDsOfdmChanSubcarrierSpacing, docsIf31CmtsCmDsOfdmChannelStatusTable=docsIf31CmtsCmDsOfdmChannelStatusTable, docsIf31CmtsUsOfdmaDataIucStatsCtrDiscontinuityTime=docsIf31CmtsUsOfdmaDataIucStatsCtrDiscontinuityTime, docsIf31CmtsDsOfdmChanUtilization=docsIf31CmtsDsOfdmChanUtilization, docsIf31CmSystemCfgStateDiplexerCfgDsLowerBandEdge=docsIf31CmSystemCfgStateDiplexerCfgDsLowerBandEdge, docsIf31CmtsUsOfdmaChanConfigChangeCt=docsIf31CmtsUsOfdmaChanConfigChangeCt, docsIf31CmDsOfdmChanTimeInterleaverDepth=docsIf31CmDsOfdmChanTimeInterleaverDepth, docsIf31CmtsUsOfdmaChanFineRngNumSubcarriers=docsIf31CmtsUsOfdmaChanFineRngNumSubcarriers, docsIf31CmStatusEmDlsOperStatus=docsIf31CmStatusEmDlsOperStatus, docsIf31CmtsDsOfdmSubcarrierStatusSkipModulation=docsIf31CmtsDsOfdmSubcarrierStatusSkipModulation, docsIf31RxChStatusPrimaryDsIndicator=docsIf31RxChStatusPrimaryDsIndicator, docsIf31CmtsUsOfdmaChanRollOffPeriod=docsIf31CmtsUsOfdmaChanRollOffPeriod, docsIf31CmtsUsOfdmaDataIucStatsTotalCodewords=docsIf31CmtsUsOfdmaDataIucStatsTotalCodewords, OfdmProfiles=OfdmProfiles, docsIf31CmtsCmUsOfdmaChannelNumPartialSvcIncidents=docsIf31CmtsCmUsOfdmaChannelNumPartialSvcIncidents, docsIf31Notifications=docsIf31Notifications, docsIf31CmtsCmUsOfdmaProfileCorrectedCodewords=docsIf31CmtsCmUsOfdmaProfileCorrectedCodewords, docsIf31CmDsOfdmChanNumActiveSubcarriers=docsIf31CmDsOfdmChanNumActiveSubcarriers, docsIf31CmDsOfdmProfileStatsInMulticastOctets=docsIf31CmDsOfdmProfileStatsInMulticastOctets, docsIf31CmtsDsOfdmChanNumActiveSubcarriers=docsIf31CmtsDsOfdmChanNumActiveSubcarriers, docsIf31CmtsCmUsOfdmaChannelCurPartialSvcReasonCode=docsIf31CmtsCmUsOfdmaChannelCurPartialSvcReasonCode, docsIf31CmtsDsOfdmChanLastActiveSubcarrierNum=docsIf31CmtsDsOfdmChanLastActiveSubcarrierNum, DsOfdmRollOffPeriod=DsOfdmRollOffPeriod, docsIf31CmSystemCfgStateDiplexerCapability=docsIf31CmSystemCfgStateDiplexerCapability, docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotModulation=docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotModulation, docsIf31CmtsCmUsOfdmaProfileStatusTable=docsIf31CmtsCmUsOfdmaProfileStatusTable, docsIf31CmEmDlsStatsTable=docsIf31CmEmDlsStatsTable, docsIf31CmSystemCfgStateDiplexerDsUpperCapability=docsIf31CmSystemCfgStateDiplexerDsUpperCapability, docsIf31CmUsOfdmaChanPreEqEnabled=docsIf31CmUsOfdmaChanPreEqEnabled, docsIf31CmtsDsOfdmChanRollOffPeriod=docsIf31CmtsDsOfdmChanRollOffPeriod, docsIf31CmtsDsOfdmSubcarrierStatusTable=docsIf31CmtsDsOfdmSubcarrierStatusTable, docsIf31CmtsUsOfdmaChanLowerBdryFreq=docsIf31CmtsUsOfdmaChanLowerBdryFreq, docsIf31CmtsUsOfdmaDataIucStatsCorrectedCodewords=docsIf31CmtsUsOfdmaDataIucStatsCorrectedCodewords, docsIf31CmUsScQamChanTxPsd=docsIf31CmUsScQamChanTxPsd, docsIf31CmUsOfdmaChanRollOffPeriod=docsIf31CmUsOfdmaChanRollOffPeriod, docsIf31CmtsCmDsOfdmProfilePartialChanReasonCode=docsIf31CmtsCmDsOfdmProfilePartialChanReasonCode, docsIf31CmEmDlsCfgExitTimeThrshld=docsIf31CmEmDlsCfgExitTimeThrshld, docsIf31CmtsUsOfdmaDataIucDetailStatusUpperFreq=docsIf31CmtsUsOfdmaDataIucDetailStatusUpperFreq, docsIf31CmStatusEntry=docsIf31CmStatusEntry, docsIf31CmtsUsOfdmaChanEntry=docsIf31CmtsUsOfdmaChanEntry, docsIf31CmtsCmUsOfdmaChannelHighResolutionTimingOffset=docsIf31CmtsCmUsOfdmaChannelHighResolutionTimingOffset, docsIf31CmtsCmEmStatsEm1x1ModeTotalDuration=docsIf31CmtsCmEmStatsEm1x1ModeTotalDuration, docsIf31CmtsUsOfdmaDataIucStatsTable=docsIf31CmtsUsOfdmaDataIucStatsTable, docsIf31CmtsUsOfdmaDataIucStatsEntry=docsIf31CmtsUsOfdmaDataIucStatsEntry, docsIf31CmtsDsOfdmProfileStatsTable=docsIf31CmtsDsOfdmProfileStatsTable, docsIf31CmUsOfdmaProfileStatsIuc=docsIf31CmUsOfdmaProfileStatsIuc, docsIf31CmDsOfdmChanNumPilots=docsIf31CmDsOfdmChanNumPilots, docsIf31CmEmDlsCfgEntry=docsIf31CmEmDlsCfgEntry, docsIf31MibGroups=docsIf31MibGroups, docsIf31CmDsOfdmChanPlcFreq=docsIf31CmDsOfdmChanPlcFreq, docsIf31CmDsOfdmChanNcpFieldCrcFailures=docsIf31CmDsOfdmChanNcpFieldCrcFailures, docsIf31CmDsOfdmProfileStatsInUnicastFrames=docsIf31CmDsOfdmProfileStatsInUnicastFrames, docsIf31CmtsCmRegStatusTcsDrwTop=docsIf31CmtsCmRegStatusTcsDrwTop, docsIf31CmEmDlsStatusMaxSleepLatency=docsIf31CmEmDlsStatusMaxSleepLatency, docsIf31CmtsCmRegStatusAssignedEmIds=docsIf31CmtsCmRegStatusAssignedEmIds, docsIf31CmtsUsOfdmaChanUpperBdryFreq=docsIf31CmtsUsOfdmaChanUpperBdryFreq, docsIf31CmEmDlsStatsTotalDurationBelowUsDsThrshlds=docsIf31CmEmDlsStatsTotalDurationBelowUsDsThrshlds, docsIf31CmtsDsOfdmProfileStatsProfileId=docsIf31CmtsDsOfdmProfileStatsProfileId, docsIf31CmtsUsOfdmaChanFineRngPreambleLen=docsIf31CmtsUsOfdmaChanFineRngPreambleLen, docsIf31CmStatusOfdmaUsT3Timeouts=docsIf31CmStatusOfdmaUsT3Timeouts, docsIf31CmDsOfdmProfileStatsInOctets=docsIf31CmDsOfdmProfileStatsInOctets, docsIf31CmStatusOfdmaUsRangingStatus=docsIf31CmStatusOfdmaUsRangingStatus, docsIf31CmUsOfdmaChanSubcarrierZeroFreq=docsIf31CmUsOfdmaChanSubcarrierZeroFreq, docsIf31CmtsUsOfdmaChanInitRngPreambleLen=docsIf31CmtsUsOfdmaChanInitRngPreambleLen, docsIf31CmtsDsOfdmSubcarrierTypeStartSubcarrierId=docsIf31CmtsDsOfdmSubcarrierTypeStartSubcarrierId, docsIf31CmtsUsOfdmaSubcarrierTypeSubcarrierType=docsIf31CmtsUsOfdmaSubcarrierTypeSubcarrierType, docsIf31CmDsOfdmChanPlcUnreliableCodewords=docsIf31CmDsOfdmChanPlcUnreliableCodewords, docsIf31CmStatusOfdmaUsT4Timeouts=docsIf31CmStatusOfdmaUsT4Timeouts, docsIf31CmUsOfdmaProfileStatsOutOctets=docsIf31CmUsOfdmaProfileStatsOutOctets, docsIf31CmtsCmUsOfdmaChannelIsMuted=docsIf31CmtsCmUsOfdmaChannelIsMuted, docsIf31CmtsDsOfdmChanNcpModulation=docsIf31CmtsDsOfdmChanNcpModulation, docsIf31CmtsCmDsOfdmChannelCurPartialSvcReasonCode=docsIf31CmtsCmDsOfdmChannelCurPartialSvcReasonCode, docsIf31CmtsUsOfdmaChanUtilization=docsIf31CmtsUsOfdmaChanUtilization, docsIf31CmtsDsOfdmProfileStatsOutMulticastFrames=docsIf31CmtsDsOfdmProfileStatsOutMulticastFrames, docsIf31CmtsUsOfdmaDataIucDetailStatusTable=docsIf31CmtsUsOfdmaDataIucDetailStatusTable, docsIf31CmtsUsOfdmaDataIucDetailStatusLowerFreq=docsIf31CmtsUsOfdmaDataIucDetailStatusLowerFreq, docsIf31CmtsUsOfdmaRangingIucStatusEntry=docsIf31CmtsUsOfdmaRangingIucStatusEntry, docsIf31CmtsCmUsOfdmaChannelRxMerThreshold=docsIf31CmtsCmUsOfdmaChannelRxMerThreshold, UsOfdmaRollOffPeriod=UsOfdmaRollOffPeriod, docsIf31CmtsCmRegStatusPartialSvcState=docsIf31CmtsCmRegStatusPartialSvcState, docsIf31CmtsCmUsOfdmaProfileUnreliableCodewords=docsIf31CmtsCmUsOfdmaProfileUnreliableCodewords, docsIf31CmtsUsOfdmaDataIucStatsAssignedCmCt=docsIf31CmtsUsOfdmaDataIucStatsAssignedCmCt, docsIf31CmtsCmUsOfdmaChannelLastPartialSvcTime=docsIf31CmtsCmUsOfdmaChannelLastPartialSvcTime, docsIf31CmEmDlsCfgEntryTimeThrshld=docsIf31CmEmDlsCfgEntryTimeThrshld, docsIf31CmtsDsOfdmProfileStatsFullChannelSpeed=docsIf31CmtsDsOfdmProfileStatsFullChannelSpeed, UsOfdmaCyclicPrefix=UsOfdmaCyclicPrefix, docsIf31CmtsCmDsOfdmProfileStatusEntry=docsIf31CmtsCmDsOfdmProfileStatusEntry, docsIf31CmtsUsOfdmaDataIucStatsMinislotPilotPattern=docsIf31CmtsUsOfdmaDataIucStatsMinislotPilotPattern, docsIf31CmtsUsOfdmaSubcarrierTypeEndSubcarrierId=docsIf31CmtsUsOfdmaSubcarrierTypeEndSubcarrierId, docsIf31CmtsDsOfdmChanPowerCenterFrequency=docsIf31CmtsDsOfdmChanPowerCenterFrequency, docsIf31CmEmDlsStatusReceiveTimer=docsIf31CmEmDlsStatusReceiveTimer, docsIf31CmUsOfdmaMinislotCfgStateEntry=docsIf31CmUsOfdmaMinislotCfgStateEntry, docsIf31CmtsUsOfdmaDataIucStatsMinislotModulation=docsIf31CmtsUsOfdmaDataIucStatsMinislotModulation, docsIf31CmtsDsOfdmChanEntry=docsIf31CmtsDsOfdmChanEntry, HundredthdBmV=HundredthdBmV, docsIf31CmtsUsOfdmaSubcarrierTypeEntry=docsIf31CmtsUsOfdmaSubcarrierTypeEntry, docsIf31CmSystemCfgStateDiplexerDsLowerCapability=docsIf31CmSystemCfgStateDiplexerDsLowerCapability, docsIf31CmtsDsOfdmProfileStatsOutOctets=docsIf31CmtsDsOfdmProfileStatsOutOctets, docsIf31CmtsDsOfdmChanUpperGuardbandWidth=docsIf31CmtsDsOfdmChanUpperGuardbandWidth, docsIf31CmDsOfdmChanFirstActiveSubcarrierNum=docsIf31CmDsOfdmChanFirstActiveSubcarrierNum, docsIf31CmDsOfdmProfileStatsInMulticastFrames=docsIf31CmDsOfdmProfileStatsInMulticastFrames, docsIf31CmtsGroup=docsIf31CmtsGroup, docsIf31CmUsOfdmaMinislotCfgStateStartMinislotNum=docsIf31CmUsOfdmaMinislotCfgStateStartMinislotNum, docsIf31CmtsCmRegStatusMinUsableDsFreq=docsIf31CmtsCmRegStatusMinUsableDsFreq, docsIf31CmtsCmEmStatsDlsWakeupEvents=docsIf31CmtsCmEmStatsDlsWakeupEvents, docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotPilotPattern=docsIf31CmtsUsOfdmaDataIucDetailStatusMinislotPilotPattern, docsIf31CmtsDsOfdmChanUpperBdryFreq=docsIf31CmtsDsOfdmChanUpperBdryFreq, docsIf31CmtsUsOfdmaChanSubcarrierSpacing=docsIf31CmtsUsOfdmaChanSubcarrierSpacing, docsIf31CmtsCmUsOfdmaChannelStdDevRxMer=docsIf31CmtsCmUsOfdmaChannelStdDevRxMer, docsIf31CmtsUsOfdmaChanTxBackoffStart=docsIf31CmtsUsOfdmaChanTxBackoffStart, docsIf31CmEmDlsStatsNumSleepByteCtTriggers=docsIf31CmEmDlsStatsNumSleepByteCtTriggers, docsIf31CmtsDsOfdmChanTable=docsIf31CmtsDsOfdmChanTable, docsIf31CmtsCmEmStatsTable=docsIf31CmtsCmEmStatsTable, docsIf31CmEmDlsStatsNumberTimesCrossedBelowDsEntryThrshlds=docsIf31CmEmDlsStatsNumberTimesCrossedBelowDsEntryThrshlds, docsIf31CmtsCmUsOfdmaChannelThresholdRxMerHighestFreq=docsIf31CmtsCmUsOfdmaChannelThresholdRxMerHighestFreq, SubcarrierSpacingType=SubcarrierSpacingType, docsIf31RxChStatusOfdmProfiles=docsIf31RxChStatusOfdmProfiles, docsIf31CmtsDsOfdmChanPowerBandIndex=docsIf31CmtsDsOfdmChanPowerBandIndex, docsIf31CmUsOfdmaMinislotCfgStateDataSymbolModulation=docsIf31CmUsOfdmaMinislotCfgStateDataSymbolModulation, docsIf31CmUsOfdmaChanTable=docsIf31CmUsOfdmaChanTable, docsIf31CmUsOfdmaChanTxPower=docsIf31CmUsOfdmaChanTxPower, docsIf31CmDsOfdmProfileStatsEntry=docsIf31CmDsOfdmProfileStatsEntry, docsIf31CmDsOfdmChanTable=docsIf31CmDsOfdmChanTable, docsIf31CmDsOfdmProfileStatsInFrames=docsIf31CmDsOfdmProfileStatsInFrames, docsIf31CmDsOfdmChannelPowerEntry=docsIf31CmDsOfdmChannelPowerEntry, docsIf31CmUsOfdmaChanConfigChangeCt=docsIf31CmUsOfdmaChanConfigChangeCt, docsIf31CmDsOfdmChanSubcarrierZeroFreq=docsIf31CmDsOfdmChanSubcarrierZeroFreq, docsIf31CmUsOfdmaChanFirstActiveSubcarrierNum=docsIf31CmUsOfdmaChanFirstActiveSubcarrierNum, PYSNMP_MODULE_ID=docsIf31Mib, docsIf31CmtsCmUsOfdmaChannelMicroreflections=docsIf31CmtsCmUsOfdmaChannelMicroreflections, docsIf31CmEmDlsStatsNumSleepLatencyTriggers=docsIf31CmEmDlsStatsNumSleepLatencyTriggers, docsIf31CmtsCmRegStatusTcsPhigh=docsIf31CmtsCmRegStatusTcsPhigh, docsIf31CmDsOfdmProfileStatsInFrameCrcFailures=docsIf31CmDsOfdmProfileStatsInFrameCrcFailures, docsIf31CmUsOfdmaMinislotCfgStateMinislotPilotPattern=docsIf31CmUsOfdmaMinislotCfgStateMinislotPilotPattern, docsIf31CmSystemCfgStateDiplexerCfgDsUpperBandEdge=docsIf31CmSystemCfgStateDiplexerCfgDsUpperBandEdge, docsIf31CmDsOfdmChanCyclicPrefix=docsIf31CmDsOfdmChanCyclicPrefix, docsIf31CmtsDsOfdmChanPowerEntry=docsIf31CmtsDsOfdmChanPowerEntry, docsIf31CmtsDsOfdmChanPowerTxPower=docsIf31CmtsDsOfdmChanPowerTxPower, docsIf31CmEmDlsStatsTotalDuration=docsIf31CmEmDlsStatsTotalDuration, docsIf31CmtsUsOfdmaChanNumSymbolsPerFrame=docsIf31CmtsUsOfdmaChanNumSymbolsPerFrame, docsIf31CmtsUsOfdmaRangingIucStatusGuardband=docsIf31CmtsUsOfdmaRangingIucStatusGuardband, docsIf31CmDsOfdmChanChannelId=docsIf31CmDsOfdmChanChannelId, docsIf31CmCompliance=docsIf31CmCompliance, ClabsDocsisVersion=ClabsDocsisVersion, docsIf31CmDsOfdmChannelPowerRxPower=docsIf31CmDsOfdmChannelPowerRxPower, docsIf31CmtsUsOfdmaChanTargetRxPower=docsIf31CmtsUsOfdmaChanTargetRxPower, docsIf31CmDsOfdmProfileStatsTotalCodewords=docsIf31CmDsOfdmProfileStatsTotalCodewords, docsIf31CmtsDsOfdmProfileStatsOutFrames=docsIf31CmtsDsOfdmProfileStatsOutFrames, docsIf31CmtsCmUsOfdmaChannelThresholdRxMerValue=docsIf31CmtsCmUsOfdmaChannelThresholdRxMerValue, docsIf31CmtsDsOfdmChanTimeInterleaverDepth=docsIf31CmtsDsOfdmChanTimeInterleaverDepth, docsIf31CmtsCmUsOfdmaChannelRxPower=docsIf31CmtsCmUsOfdmaChannelRxPower, docsIf31CmStatusOfdmaUsT3Exceededs=docsIf31CmStatusOfdmaUsT3Exceededs, docsIf31CmUsOfdmaChanLastActiveSubcarrierNum=docsIf31CmUsOfdmaChanLastActiveSubcarrierNum, docsIf31CmDsOfdmChanEntry=docsIf31CmDsOfdmChanEntry, docsIf31CmUsScQamChanTable=docsIf31CmUsScQamChanTable, PartialChannelType=PartialChannelType, docsIf31CmtsDsOfdmChanSubcarrierZeroFreq=docsIf31CmtsDsOfdmChanSubcarrierZeroFreq, docsIf31CmtsUsOfdmaChanInitRngNumSubcarriers=docsIf31CmtsUsOfdmaChanInitRngNumSubcarriers, docsIf31CmtsUsOfdmaChanProvAttribMask=docsIf31CmtsUsOfdmaChanProvAttribMask, docsIf31CmStatusOfdmaUsRangingAborteds=docsIf31CmStatusOfdmaUsRangingAborteds, docsIf31RxChStatusTable=docsIf31RxChStatusTable, docsIf31CmUsOfdmaChanCyclicPrefix=docsIf31CmUsOfdmaChanCyclicPrefix, docsIf31MibObjects=docsIf31MibObjects, docsIf31CmtsDsOfdmSubcarrierTypeEntry=docsIf31CmtsDsOfdmSubcarrierTypeEntry)
mibBuilder.exportSymbols("DOCS-IF31-MIB", docsIf31CmEmDlsCfgEntryBitrateThrshld=docsIf31CmEmDlsCfgEntryBitrateThrshld, docsIf31CmDsOfdmChannelBandIndex=docsIf31CmDsOfdmChannelBandIndex, docsIf31CmtsDsOfdmChanLowerBdryEncompSpectrum=docsIf31CmtsDsOfdmChanLowerBdryEncompSpectrum, docsIf31CmtsUsOfdmaDataIucStatsUnreliableCodewords=docsIf31CmtsUsOfdmaDataIucStatsUnreliableCodewords, docsIf31CmUsOfdmaProfileStatsCtrDiscontinuityTime=docsIf31CmUsOfdmaProfileStatsCtrDiscontinuityTime, docsIf31MibCompliances=docsIf31MibCompliances, docsIf31CmUsOfdmaMinislotCfgStateTable=docsIf31CmUsOfdmaMinislotCfgStateTable, docsIf31CmtsCmUsOfdmaChannelStatusEntry=docsIf31CmtsCmUsOfdmaChannelStatusEntry, docsIf31CmtsUsOfdmaChanFineRngGuardband=docsIf31CmtsUsOfdmaChanFineRngGuardband, docsIf31CmtsCmDsOfdmChannelNumPartialSvcIncidents=docsIf31CmtsCmDsOfdmChannelNumPartialSvcIncidents, docsIf31CmUsOfdmaProfileStatsEntry=docsIf31CmUsOfdmaProfileStatsEntry, docsIf31CmEmDlsStatusAssignedEmIds=docsIf31CmEmDlsStatusAssignedEmIds, docsIf31CmtsUsOfdmaSubcarrierTypeStartSubcarrierId=docsIf31CmtsUsOfdmaSubcarrierTypeStartSubcarrierId, docsIf31CmtsUsOfdmaChanTemplateIndex=docsIf31CmtsUsOfdmaChanTemplateIndex, docsIf31CmDsOfdmChanChanIndicator=docsIf31CmDsOfdmChanChanIndicator, TimeInterleaverDepth=TimeInterleaverDepth, docsIf31CmtsCmRegStatusEntry=docsIf31CmtsCmRegStatusEntry, docsIf31CmtsCmEmStatsDlsModeTotalDuration=docsIf31CmtsCmEmStatsDlsModeTotalDuration, docsIf31CmUsScQamChanEntry=docsIf31CmUsScQamChanEntry, docsIf31CmDsOfdmChanNcpTotalFields=docsIf31CmDsOfdmChanNcpTotalFields, docsIf31CmtsDsOfdmSubcarrierTypeSubcarrierType=docsIf31CmtsDsOfdmSubcarrierTypeSubcarrierType, docsIf31CmtsCompliance=docsIf31CmtsCompliance, docsIf31CmDsOfdmProfileStatsProfileId=docsIf31CmDsOfdmProfileStatsProfileId, UsOfdmaModulationType=UsOfdmaModulationType, docsIf31CmtsCmUsOfdmaChannelRangingStatus=docsIf31CmtsCmUsOfdmaChannelRangingStatus, docsIf31CmDsOfdmProfileStatsUncorrectableCodewords=docsIf31CmDsOfdmProfileStatsUncorrectableCodewords, docsIf31CmtsDsOfdmChanUpperBdryEncompSpectrum=docsIf31CmtsDsOfdmChanUpperBdryEncompSpectrum, docsIf31CmtsDsOfdmSubcarrierStatusMainModulation=docsIf31CmtsDsOfdmSubcarrierStatusMainModulation, docsIf31CmtsUsOfdmaChanRangingBackoffStart=docsIf31CmtsUsOfdmaChanRangingBackoffStart, docsIf31CmtsDsOfdmChanCyclicPrefix=docsIf31CmtsDsOfdmChanCyclicPrefix, docsIf31CmtsDsOfdmChanPilotScaleFactor=docsIf31CmtsDsOfdmChanPilotScaleFactor, EmIdList=EmIdList, DsOfdmCyclicPrefix=DsOfdmCyclicPrefix, docsIf31CmtsDsOfdmProfileStatsConfigChangeCt=docsIf31CmtsDsOfdmProfileStatsConfigChangeCt, docsIf31CmtsCmUsOfdmaProfileStatusEntry=docsIf31CmtsCmUsOfdmaProfileStatusEntry, docsIf31CmtsUsOfdmaChanCyclicPrefix=docsIf31CmtsUsOfdmaChanCyclicPrefix, docsIf31CmtsUsOfdmaChanId=docsIf31CmtsUsOfdmaChanId, docsIf31CmtsCmDsOfdmChannelLastPartialSvcTime=docsIf31CmtsCmDsOfdmChannelLastPartialSvcTime, docsIf31CmtsUsOfdmaRangingIucStatusIuc=docsIf31CmtsUsOfdmaRangingIucStatusIuc, docsIf31CmStatusTable=docsIf31CmStatusTable, docsIf31CmtsDsOfdmChanPlcFreq=docsIf31CmtsDsOfdmChanPlcFreq, docsIf31CmEmDlsStatusTable=docsIf31CmEmDlsStatusTable, docsIf31CmtsDsOfdmChanLowerGuardbandWidth=docsIf31CmtsDsOfdmChanLowerGuardbandWidth)
