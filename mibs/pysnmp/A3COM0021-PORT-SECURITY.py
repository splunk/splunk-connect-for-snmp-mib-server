#
# PySNMP MIB module A3COM0021-PORT-SECURITY (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM0021-PORT-SECURITY
# Produced by pysmi-0.3.4 at Mon Apr 29 16:53:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
securePort, = mibBuilder.importSymbols("A3COM0004-GENERIC", "securePort")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
rptrPortAdminStatus, = mibBuilder.importSymbols("SNMP-REPEATER-MIB", "rptrPortAdminStatus")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, NotificationType, ObjectIdentity, TimeTicks, iso, MibIdentifier, Counter32, Integer32, Unsigned32, Gauge32, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "NotificationType", "ObjectIdentity", "TimeTicks", "iso", "MibIdentifier", "Counter32", "Integer32", "Unsigned32", "Gauge32", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
securePortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 22, 1), )
if mibBuilder.loadTexts: securePortTable.setStatus('mandatory')
securePortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 22, 1, 1), ).setIndexNames((0, "A3COM0021-PORT-SECURITY", "secureSlotIndex"), (0, "A3COM0021-PORT-SECURITY", "securePortIndex"))
if mibBuilder.loadTexts: securePortEntry.setStatus('mandatory')
secureSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: secureSlotIndex.setStatus('mandatory')
securePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: securePortIndex.setStatus('mandatory')
securePortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noRestrictions", 1), ("continuousLearning", 2), ("autoLearn", 3), ("secure", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: securePortMode.setStatus('mandatory')
secureNeedToKnowMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("notAvailable", 1), ("disabled", 2), ("needToKnowOnly", 3), ("needToKnowWithBroadcastsAllowed", 4), ("needToKnowWithMulticastsAllowed", 5), ("permanentNeedToKnowOnly", 6), ("permanentNeedToKnowWithBroadcastsAllowed", 7), ("permanentNeedToKnowWithMulticastsAllowed", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secureNeedToKnowMode.setStatus('mandatory')
secureIntrusionAction = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notAvailable", 1), ("noAction", 2), ("disablePort", 3), ("disablePortTemporarily", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secureIntrusionAction.setStatus('mandatory')
secureNumberAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secureNumberAddresses.setStatus('mandatory')
secureNumberAddressesStored = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secureNumberAddressesStored.setStatus('mandatory')
secureMaximumAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secureMaximumAddresses.setStatus('mandatory')
secureAddressTable = MibTable((1, 3, 6, 1, 4, 1, 43, 10, 22, 2), )
if mibBuilder.loadTexts: secureAddressTable.setStatus('mandatory')
secureAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 10, 22, 2, 1), ).setIndexNames((0, "A3COM0021-PORT-SECURITY", "secureAddrSlotIndex"), (0, "A3COM0021-PORT-SECURITY", "secureAddrPortIndex"), (0, "A3COM0021-PORT-SECURITY", "secureAddrMAC"))
if mibBuilder.loadTexts: secureAddressEntry.setStatus('mandatory')
secureAddrSlotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: secureAddrSlotIndex.setStatus('mandatory')
secureAddrPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: secureAddrPortIndex.setStatus('mandatory')
secureAddrMAC = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: secureAddrMAC.setStatus('mandatory')
secureAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 10, 22, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: secureAddrRowStatus.setStatus('mandatory')
secureStop = MibScalar((1, 3, 6, 1, 4, 1, 43, 10, 22, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: secureStop.setStatus('mandatory')
mibBuilder.exportSymbols("A3COM0021-PORT-SECURITY", secureNumberAddressesStored=secureNumberAddressesStored, secureAddrSlotIndex=secureAddrSlotIndex, secureAddrPortIndex=secureAddrPortIndex, secureStop=secureStop, securePortTable=securePortTable, secureAddressTable=secureAddressTable, secureAddrRowStatus=secureAddrRowStatus, securePortMode=securePortMode, secureMaximumAddresses=secureMaximumAddresses, secureAddrMAC=secureAddrMAC, secureNeedToKnowMode=secureNeedToKnowMode, secureIntrusionAction=secureIntrusionAction, securePortIndex=securePortIndex, secureNumberAddresses=secureNumberAddresses, securePortEntry=securePortEntry, secureAddressEntry=secureAddressEntry, secureSlotIndex=secureSlotIndex)
