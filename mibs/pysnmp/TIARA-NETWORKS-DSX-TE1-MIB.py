#
# PySNMP MIB module TIARA-NETWORKS-DSX-TE1-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIARA-NETWORKS-DSX-TE1-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:09:05 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ModuleIdentity, iso, Gauge32, TimeTicks, MibIdentifier, NotificationType, IpAddress, Integer32, Bits, NotificationType, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "iso", "Gauge32", "TimeTicks", "MibIdentifier", "NotificationType", "IpAddress", "Integer32", "Bits", "NotificationType", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Unsigned32", "Counter64")
TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "DisplayString")
dsxT1E1IfGroup, = mibBuilder.importSymbols("TIARA-NETWORKS-DSX-TC-MIB", "dsxT1E1IfGroup")
dsxT1E1MIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1))
dsxT1E1MIB.setRevisions(('1999-04-23 00:00',))
if mibBuilder.loadTexts: dsxT1E1MIB.setLastUpdated('9904230000Z')
if mibBuilder.loadTexts: dsxT1E1MIB.setOrganization('Tiara Networks Inc.')
dsxT1E1Traps = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 2))
dsxT1E1TrapVariables = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 2, 1))
dsxT1E1IfConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1))
dsxT1E1IfStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2))
dsxT1E1IfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3))
dsxT1E1IfConfigLineTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1), )
if mibBuilder.loadTexts: dsxT1E1IfConfigLineTable.setStatus('current')
dsxT1E1IfConfigLineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIndex"))
if mibBuilder.loadTexts: dsxT1E1IfConfigLineEntry.setStatus('current')
dsxT1E1IfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: dsxT1E1IfIndex.setStatus('current')
dsxT1E1IfConfigServiceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigServiceMode.setStatus('current')
dsxT1E1IfConfigLineMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("linemode-csu", 1), ("linemode-dsx", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigLineMode.setStatus('current')
dsxT1E1IfConfigLineType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("linetype-esf", 2), ("linetype-d4", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigLineType.setStatus('current')
dsxT1E1IfConfigLineCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 5))).clone(namedValues=NamedValues(("linecode-b8zs", 2), ("linecode-ami", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigLineCode.setStatus('current')
dsxT1E1IfConfigLBO = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("lbo-zero-db", 1), ("lbo-75-db", 2), ("lbo-15-db", 3), ("lbo-225-db", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigLBO.setStatus('current')
dsxT1E1IfConfigCableLength = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("cable-length-0-133", 1), ("cable-length-133-266", 2), ("cable-length-266-399", 3), ("cable-length-399-533", 4), ("cable-length-533-655", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigCableLength.setStatus('current')
dsxT1E1IfConfigRaiAlarm = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rai-gen-enable", 1), ("rai-det-enable", 2), ("rai-gen-det-enable", 3), ("rai-disable", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigRaiAlarm.setStatus('current')
dsxT1E1IfConfigTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigTransmitClock.setStatus('current')
dsxT1E1IfConfigTimeSlotMap = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfConfigTimeSlotMap.setStatus('current')
dsxT1E1IfCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 11), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfCircuitId.setStatus('current')
dsxT1E1IfContactInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 12), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfContactInfo.setStatus('current')
dsxT1E1IfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 1, 1, 13), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfDescription.setStatus('current')
dsxT1E1IfConfigFdlTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 2), )
if mibBuilder.loadTexts: dsxT1E1IfConfigFdlTable.setStatus('current')
dsxT1E1IfConfigFdlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 2, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfConfigFdlEntry"))
dsxT1E1IfConfigFdlEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfConfigFdlEntry.setStatus('current')
dsxT1E1IfConfigFdl = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fdl-ansi-only", 1), ("fdl-att-only", 2), ("fdl-ansi-att", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigFdl.setStatus('current')
dsxT1E1IfConfigFdlCsuDsuType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fdl-csu", 1), ("fdl-dsu", 2), ("fdl-csudsu", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfConfigFdlCsuDsuType.setStatus('current')
dsxT1E1IfAlarmConfigGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3))
dsxT1E1IfAlarmThresholdConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3, 1), )
if mibBuilder.loadTexts: dsxT1E1IfAlarmThresholdConfigTable.setStatus('current')
dsxT1E1IfAlarmThresholdConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3, 1, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIndex"), (0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfAlarmThresholdConfigIndex"))
if mibBuilder.loadTexts: dsxT1E1IfAlarmThresholdConfigEntry.setStatus('current')
dsxT1E1IfAlarmThresholdConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3, 1, 1, 1), Integer32())
if mibBuilder.loadTexts: dsxT1E1IfAlarmThresholdConfigIndex.setStatus('current')
dsxT1E1IfAlarmThresholdConfigObject = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("te1-object-eev", 1), ("te1-object-es", 2), ("te1-object-uas", 3), ("te1-object-bes", 4), ("te1-object-ses", 5), ("te1-object-lofc", 6), ("te1-object-css", 7), ("te1-object-bpv", 8), ("te1-object-oof", 9), ("te1-object-crc", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfAlarmThresholdConfigObject.setStatus('current')
dsxT1E1IfAlarmThresholdConfigSamplingInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfAlarmThresholdConfigSamplingInterval.setStatus('current')
dsxT1E1IfAlarmThresholdConfigSampleType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("sample-absolute", 1), ("sample-delta", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfAlarmThresholdConfigSampleType.setStatus('current')
dsxT1E1IfAlarmThresholdConfigStartupType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3, 1, 1, 5), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfAlarmThresholdConfigStartupType.setStatus('current')
dsxT1E1IfAlarmThresholdConfigRisingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfAlarmThresholdConfigRisingThreshold.setStatus('current')
dsxT1E1IfAlarmThresholdConfigFallingThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 3, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfAlarmThresholdConfigFallingThreshold.setStatus('current')
dsxT1E1IfTestConfigTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 4), )
if mibBuilder.loadTexts: dsxT1E1IfTestConfigTable.setStatus('current')
dsxT1E1IfTestConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 4, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfTestConfigEntry"))
dsxT1E1IfTestConfigEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfTestConfigEntry.setStatus('current')
dsxT1E1IfTestConfigType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 8))).clone(namedValues=NamedValues(("no-test", 1), ("payload-loopback-test", 2), ("line-loopback-test", 3), ("pattern-test", 6), ("remote-lpup-test", 7), ("remote-lpdn-test", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfTestConfigType.setStatus('current')
dsxT1E1IfTestConfigTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfTestConfigTime.setStatus('current')
dsxT1E1IfTestConfigPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("pattern-all-ones", 1), ("pattern-all-zeros", 2), ("reserved1", 3), ("reserved2", 4), ("reserved3", 5), ("reserved4", 6), ("reserved5", 7), ("reserved6", 8), ("reserved7", 9), ("reserved9", 10), ("reserved10", 11), ("reserved11", 12), ("pattern-215minus1", 13), ("reserved12", 14), ("pattern-qrw", 15), ("pattern-223minus1", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfTestConfigPattern.setStatus('current')
dsxT1E1IfTestConfigLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 6, 7))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-line-standard", 2), ("loopcode-line-alternate", 3), ("loopcode-line-ATTFDL", 4), ("loopcode-payload-ATTFDL", 6), ("loopcode-payload-ansiFDL", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfTestConfigLoopCode.setStatus('current')
dsxT1E1IfStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 1), )
if mibBuilder.loadTexts: dsxT1E1IfStatusTable.setStatus('current')
dsxT1E1IfStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 1, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfStatusEntry"))
dsxT1E1IfStatusEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfStatusEntry.setStatus('current')
dsxT1E1IfStatusLineStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 1, 1, 1), Bits().clone(namedValues=NamedValues(("reserved1", 0), ("reserved2", 1), ("rraiStatus", 2), ("traiStatus", 3), ("rlosStatus", 4), ("risStatus", 5), ("rexzStatus", 6), ("reserved3", 7), ("reserved4", 8), ("reserved5", 9), ("lorcStatus", 10), ("tpdeStatus", 11), ("reserved6", 12), ("reserved7", 13), ("sendLineCode", 14), ("sendPayLoadCode", 15), ("sendResetCode", 16), ("sendTE1Code", 17), ("sendPattern", 18), ("reserved8", 19), ("rcvTestCode", 20), ("reserved9", 21), ("reserved10", 22), ("reserved11", 23), ("loopbackStatus", 24), ("reserved12", 25), ("reserved13", 26), ("taisStatus", 27), ("raisStatus", 28), ("reserved14", 29), ("rlofStatus", 30), ("reserved15", 31)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfStatusLineStatus.setStatus('current')
dsxT1E1IfStatusTransmitClock = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("timing-line", 1), ("timing-internal", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfStatusTransmitClock.setStatus('current')
dsxT1E1IfAlarmStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 2), )
if mibBuilder.loadTexts: dsxT1E1IfAlarmStatusTable.setStatus('current')
dsxT1E1IfAlarmStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 2, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfAlarmStatusEntry"))
dsxT1E1IfAlarmStatusEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfAlarmStatusEntry.setStatus('current')
dsxT1E1IfAlarmStatusAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 2, 1, 1), Bits().clone(namedValues=NamedValues(("rraiAlarm", 0), ("traiAlarm", 1), ("raisAlarm", 2), ("taisAlarm", 3), ("rlofAlarm", 4), ("rlosAlarm", 5), ("loopbackStateAlarm", 6), ("rcvTestCode", 7), ("risAlarm", 8), ("rexzAlarm", 9), ("rfebeAlarm", 10), ("rpeAlarm", 11), ("rcpeAlarm", 12), ("lorcAlarm", 13), ("tpdeAlarm", 14), ("tfebeAlarm", 15), ("ibTestAlarm", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAlarmStatusAlarmStatus.setStatus('current')
dsxT1E1IfAlarmStatusThresholdStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 2, 1, 2), Bits().clone(namedValues=NamedValues(("threshold1", 0), ("threshold2", 1), ("threshold3", 2), ("threshold4", 3), ("threshold5", 4), ("threshold6", 5), ("threshold7", 6), ("threshold8", 7), ("threshold9", 8), ("threshold10", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAlarmStatusThresholdStatus.setStatus('current')
dsxT1E1IfTestStatusTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3), )
if mibBuilder.loadTexts: dsxT1E1IfTestStatusTable.setStatus('current')
dsxT1E1IfTestStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfTestStatusEntry"))
dsxT1E1IfTestStatusEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfTestStatusEntry.setStatus('current')
dsxT1E1IfTestStatusTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 8))).clone(namedValues=NamedValues(("testtype-notest", 1), ("testtype-payload-loopback", 2), ("testtype-line-loopback", 3), ("testtype-pattern", 6), ("testtype-remote-lpup", 7), ("testtype-remote-lpdn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfTestStatusTestType.setStatus('current')
dsxT1E1IfTestStatusTestTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfTestStatusTestTime.setStatus('current')
dsxT1E1IfTestStatusTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("test-state-idle", 1), ("test-state-searching", 2), ("test-state-locked", 3), ("test-state-relocked", 4), ("test-state-inprogress", 5), ("test-state-passed", 6), ("test-state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfTestStatusTestState.setStatus('current')
dsxT1E1IfTestStatusTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("pattern-all-ones", 1), ("pattern-all-zeros", 2), ("pattern-alternating", 3), ("pattern-3in24", 4), ("pattern-1in3", 5), ("pattern-1in5", 6), ("pattern-1in7", 7), ("pattern-smartjack-lpup", 8), ("pattern-smartjack-lpdown", 9), ("pattern-user1", 10), ("pattern-user2", 11), ("pattern-29minus1", 12), ("pattern-215minus1", 13), ("pattern-220minus1", 14), ("pattern-qrss", 15), ("pattern-223minus1", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfTestStatusTestPattern.setStatus('current')
dsxT1E1IfTestStatusLockedSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfTestStatusLockedSeconds.setStatus('current')
dsxT1E1IfTestStatusSyncLossCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfTestStatusSyncLossCount.setStatus('current')
dsxT1E1IfTestStatusErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfTestStatusErrorCount.setStatus('current')
dsxT1E1IfTestStatusLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-line-standard", 2), ("loopcode-line-alternate", 3), ("loopcode-line-ATTFDL", 4), ("loopcode-payload-ATTFDL", 5), ("loopcode-payload-ansiFDL", 6), ("loopcode-v54", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfTestStatusLoopCode.setStatus('current')
dsxT1E1IfLastTestResultTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4), )
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultTable.setStatus('current')
dsxT1E1IfLastTestResultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfLastTestResultEntry"))
dsxT1E1IfLastTestResultEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultEntry.setStatus('current')
dsxT1E1IfLastTestResultTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 6, 7, 8))).clone(namedValues=NamedValues(("testtype-notest", 1), ("testtype-payload-loopback", 2), ("testtype-line-loopback", 3), ("testtype-pattern", 6), ("testtype-remote-lpup", 7), ("testtype-remote-lpdn", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultTestType.setStatus('current')
dsxT1E1IfLastTestResultTestTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultTestTime.setStatus('current')
dsxT1E1IfLastTestResultTestState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("test-state-idle", 1), ("test-state-searching", 2), ("test-state-locked", 3), ("test-state-relocked", 4), ("test-state-inprogress", 5), ("test-state-passed", 6), ("test-state-failed", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultTestState.setStatus('current')
dsxT1E1IfLastTestResultTestPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("pattern-all-ones", 1), ("pattern-all-zeros", 2), ("pattern-alternating", 3), ("pattern-3in24", 4), ("pattern-1in3", 5), ("pattern-1in5", 6), ("pattern-1in7", 7), ("pattern-smartjack-lpup", 8), ("pattern-smartjack-lpdown", 9), ("pattern-user1", 10), ("pattern-user2", 11), ("pattern-29minus1", 12), ("pattern-215minus1", 13), ("pattern-220minus1", 14), ("pattern-qrss", 15), ("pattern-223minus1", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultTestPattern.setStatus('current')
dsxT1E1IfLastTestResultLockedSeconds = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultLockedSeconds.setStatus('current')
dsxT1E1IfLastTestResultSyncLossCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultSyncLossCount.setStatus('current')
dsxT1E1IfLastTestResultErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultErrorCount.setStatus('current')
dsxT1E1IfLastTestResultLoopCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("loopcode-none", 1), ("loopcode-line-standard", 2), ("loopcode-line-alternate", 3), ("loopcode-line-ATTFDL", 4), ("loopcode-payload-ATTFDL", 5), ("loopcode-payload-ansiFDL", 6), ("loopcode-v54", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfLastTestResultLoopCode.setStatus('current')
dsxT1E1IfArchiveStatsValidIntervalsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 1), )
if mibBuilder.loadTexts: dsxT1E1IfArchiveStatsValidIntervalsTable.setStatus('current')
dsxT1E1IfArchiveStatsValidIntervalsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 1, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfArchiveStatsValidIntervalsEntry"))
dsxT1E1IfArchiveStatsValidIntervalsEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfArchiveStatsValidIntervalsEntry.setStatus('current')
dsxT1E1IfAnsiArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveStatsValidIntervals.setStatus('current')
dsxT1E1IfAttArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsValidIntervals.setStatus('current')
dsxT1E1IfIetfArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsValidIntervals.setStatus('current')
dsxT1E1IfUserTotalStatsValidDays = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsValidDays.setStatus('current')
dsxT1E1IfUserArchiveStatsValidIntervals = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsValidIntervals.setStatus('current')
dsxT1E1IfAnsiStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2))
dsxT1E1IfAttStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3))
dsxT1E1IfIetfStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4))
dsxT1E1IfUserStatsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5))
dsxT1E1IfAnsiCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1), )
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentStatsTable.setStatus('current')
dsxT1E1IfAnsiCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfAnsiCurrentStatsEntry"))
dsxT1E1IfAnsiCurrentStatsEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentStatsEntry.setStatus('current')
dsxT1E1IfAnsiCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentStatsUASState.setStatus('current')
dsxT1E1IfAnsiCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentStatsTimeInCurrent.setStatus('current')
dsxT1E1IfAnsiCurrentPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentPathStatsCV.setStatus('current')
dsxT1E1IfAnsiCurrentPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentPathStatsES.setStatus('current')
dsxT1E1IfAnsiCurrentPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentPathStatsSES.setStatus('current')
dsxT1E1IfAnsiCurrentPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentPathStatsSAS.setStatus('current')
dsxT1E1IfAnsiCurrentPathStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentPathStatsCSS.setStatus('current')
dsxT1E1IfAnsiCurrentPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentPathStatsUAS.setStatus('current')
dsxT1E1IfAnsiCurrentLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentLineStatsCV.setStatus('current')
dsxT1E1IfAnsiCurrentLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentLineStatsES.setStatus('current')
dsxT1E1IfAnsiCurrentLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiCurrentLineStatsSES.setStatus('current')
dsxT1E1IfAnsiTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2), )
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalStatsTable.setStatus('current')
dsxT1E1IfAnsiTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfAnsiTotalStatsEntry"))
dsxT1E1IfAnsiTotalStatsEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalStatsEntry.setStatus('current')
dsxT1E1IfAnsiTotalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalPathStatsCV.setStatus('current')
dsxT1E1IfAnsiTotalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalPathStatsES.setStatus('current')
dsxT1E1IfAnsiTotalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalPathStatsSES.setStatus('current')
dsxT1E1IfAnsiTotalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalPathStatsSAS.setStatus('current')
dsxT1E1IfAnsiTotalPathStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalPathStatsCSS.setStatus('current')
dsxT1E1IfAnsiTotalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalPathStatsUAS.setStatus('current')
dsxT1E1IfAnsiTotalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalLineStatsCV.setStatus('current')
dsxT1E1IfAnsiTotalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalLineStatsES.setStatus('current')
dsxT1E1IfAnsiTotalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiTotalLineStatsSES.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3), )
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalStatsTable.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIndex"), (0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfAnsiArchiveStatsInterval"))
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalStatsEntry.setStatus('current')
dsxT1E1IfAnsiArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveStatsInterval.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalPathStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalPathStatsCV.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalPathStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalPathStatsES.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalPathStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalPathStatsSES.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalPathStatsSAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalPathStatsSAS.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalPathStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalPathStatsCSS.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalPathStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalPathStatsUAS.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalLineStatsCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalLineStatsCV.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalLineStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalLineStatsES.setStatus('current')
dsxT1E1IfAnsiArchiveIntervalLineStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 2, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAnsiArchiveIntervalLineStatsSES.setStatus('current')
dsxT1E1IfAttCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1), )
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsTable.setStatus('current')
dsxT1E1IfAttCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfAttCurrentStatsEntry"))
dsxT1E1IfAttCurrentStatsEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsEntry.setStatus('current')
dsxT1E1IfAttCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsUASState.setStatus('current')
dsxT1E1IfAttCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsTimeInCurrent.setStatus('current')
dsxT1E1IfAttCurrentStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsEEV.setStatus('current')
dsxT1E1IfAttCurrentStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsES.setStatus('current')
dsxT1E1IfAttCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsUAS.setStatus('current')
dsxT1E1IfAttCurrentStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsBES.setStatus('current')
dsxT1E1IfAttCurrentStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsSES.setStatus('current')
dsxT1E1IfAttCurrentStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsLOFC.setStatus('current')
dsxT1E1IfAttCurrentStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttCurrentStatsCSS.setStatus('current')
dsxT1E1IfAttTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 2), )
if mibBuilder.loadTexts: dsxT1E1IfAttTotalStatsTable.setStatus('current')
dsxT1E1IfAttTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 2, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfAttTotalStatsEntry"))
dsxT1E1IfAttTotalStatsEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfAttTotalStatsEntry.setStatus('current')
dsxT1E1IfAttTotalStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttTotalStatsEEV.setStatus('current')
dsxT1E1IfAttTotalStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttTotalStatsES.setStatus('current')
dsxT1E1IfAttTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttTotalStatsUAS.setStatus('current')
dsxT1E1IfAttTotalStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttTotalStatsBES.setStatus('current')
dsxT1E1IfAttTotalStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttTotalStatsSES.setStatus('current')
dsxT1E1IfAttTotalStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttTotalStatsLOFC.setStatus('current')
dsxT1E1IfAttTotalStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttTotalStatsCSS.setStatus('current')
dsxT1E1IfAttArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3), )
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsTable.setStatus('current')
dsxT1E1IfAttArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIndex"), (0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfAttArchiveInterval"))
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsEntry.setStatus('current')
dsxT1E1IfAttArchiveInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveInterval.setStatus('current')
dsxT1E1IfAttArchiveStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsEEV.setStatus('current')
dsxT1E1IfAttArchiveStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsES.setStatus('current')
dsxT1E1IfAttArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsUAS.setStatus('current')
dsxT1E1IfAttArchiveStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsBES.setStatus('current')
dsxT1E1IfAttArchiveStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsSES.setStatus('current')
dsxT1E1IfAttArchiveStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsLOFC.setStatus('current')
dsxT1E1IfAttArchiveStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 3, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfAttArchiveStatsCSS.setStatus('current')
dsxT1E1IfIetfCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1), )
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsTable.setStatus('current')
dsxT1E1IfIetfCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIetfCurrentStatsEntry"))
dsxT1E1IfIetfCurrentStatsEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsEntry.setStatus('current')
dsxT1E1IfIetfCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsUASState.setStatus('current')
dsxT1E1IfIetfCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsTimeInCurrent.setStatus('current')
dsxT1E1IfIetfCurrentStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsES.setStatus('current')
dsxT1E1IfIetfCurrentStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsSES.setStatus('current')
dsxT1E1IfIetfCurrentStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsSEFS.setStatus('current')
dsxT1E1IfIetfCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsUAS.setStatus('current')
dsxT1E1IfIetfCurrentStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsCSS.setStatus('current')
dsxT1E1IfIetfCurrentStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsPCV.setStatus('current')
dsxT1E1IfIetfCurrentStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsLES.setStatus('current')
dsxT1E1IfIetfCurrentStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsBES.setStatus('current')
dsxT1E1IfIetfCurrentStatsDM = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsDM.setStatus('current')
dsxT1E1IfIetfCurrentStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfCurrentStatsLCV.setStatus('current')
dsxT1E1IfIetfTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2), )
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsTable.setStatus('current')
dsxT1E1IfIetfTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIetfTotalStatsEntry"))
dsxT1E1IfIetfTotalStatsEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsEntry.setStatus('current')
dsxT1E1IfIetfTotalStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsES.setStatus('current')
dsxT1E1IfIetfTotalStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsSES.setStatus('current')
dsxT1E1IfIetfTotalStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsSEFS.setStatus('current')
dsxT1E1IfIetfTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsUAS.setStatus('current')
dsxT1E1IfIetfTotalStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsCSS.setStatus('current')
dsxT1E1IfIetfTotalStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsPCV.setStatus('current')
dsxT1E1IfIetfTotalStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsLES.setStatus('current')
dsxT1E1IfIetfTotalStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsBES.setStatus('current')
dsxT1E1IfIetfTotalStatsDM = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsDM.setStatus('current')
dsxT1E1IfIetfTotalStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfTotalStatsLCV.setStatus('current')
dsxT1E1IfIetfArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3), )
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsTable.setStatus('current')
dsxT1E1IfIetfArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIndex"), (0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIetfArchiveStatsInterval"))
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsEntry.setStatus('current')
dsxT1E1IfIetfArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsInterval.setStatus('current')
dsxT1E1IfIetfArchiveStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsES.setStatus('current')
dsxT1E1IfIetfArchiveStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsSES.setStatus('current')
dsxT1E1IfIetfArchiveStatsSEFS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsSEFS.setStatus('current')
dsxT1E1IfIetfArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsUAS.setStatus('current')
dsxT1E1IfIetfArchiveStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsCSS.setStatus('current')
dsxT1E1IfIetfArchiveStatsPCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsPCV.setStatus('current')
dsxT1E1IfIetfArchiveStatsLES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsLES.setStatus('current')
dsxT1E1IfIetfArchiveStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsBES.setStatus('current')
dsxT1E1IfIetfArchiveStatsDM = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsDM.setStatus('current')
dsxT1E1IfIetfArchiveStatsLCV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 4, 3, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfIetfArchiveStatsLCV.setStatus('current')
dsxT1E1IfUserCurrentStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1), )
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsTable.setStatus('current')
dsxT1E1IfUserCurrentStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfUserCurrentStatsEntry"))
dsxT1E1IfUserCurrentStatsEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsEntry.setStatus('current')
dsxT1E1IfUserCurrentStatsUASState = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsUASState.setStatus('current')
dsxT1E1IfUserCurrentStatsTimeInCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsTimeInCurrent.setStatus('current')
dsxT1E1IfUserCurrentStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsEEV.setStatus('current')
dsxT1E1IfUserCurrentStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsES.setStatus('current')
dsxT1E1IfUserCurrentStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsUAS.setStatus('current')
dsxT1E1IfUserCurrentStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsBES.setStatus('current')
dsxT1E1IfUserCurrentStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsSES.setStatus('current')
dsxT1E1IfUserCurrentStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsLOFC.setStatus('current')
dsxT1E1IfUserCurrentStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsCSS.setStatus('current')
dsxT1E1IfUserCurrentStatsBPV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsBPV.setStatus('current')
dsxT1E1IfUserCurrentStatsOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsOOF.setStatus('current')
dsxT1E1IfUserCurrentStatsCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 1, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserCurrentStatsCRC.setStatus('current')
dsxT1E1IfUserTotalStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2), )
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsTable.setStatus('current')
dsxT1E1IfUserTotalStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIndex"), (0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfUserTotalStatsDay"))
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsEntry.setStatus('current')
dsxT1E1IfUserTotalStatsDay = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsDay.setStatus('current')
dsxT1E1IfUserTotalStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsEEV.setStatus('current')
dsxT1E1IfUserTotalStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsES.setStatus('current')
dsxT1E1IfUserTotalStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsUAS.setStatus('current')
dsxT1E1IfUserTotalStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsBES.setStatus('current')
dsxT1E1IfUserTotalStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsSES.setStatus('current')
dsxT1E1IfUserTotalStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsLOFC.setStatus('current')
dsxT1E1IfUserTotalStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsCSS.setStatus('current')
dsxT1E1IfUserTotalStatsBPV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsBPV.setStatus('current')
dsxT1E1IfUserTotalStatsOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsOOF.setStatus('current')
dsxT1E1IfUserTotalStatsCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserTotalStatsCRC.setStatus('current')
dsxT1E1IfUserLifetimeStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3), )
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsTable.setStatus('current')
dsxT1E1IfUserLifetimeStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1), )
dsxT1E1IfConfigLineEntry.registerAugmentions(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfUserLifetimeStatsEntry"))
dsxT1E1IfUserLifetimeStatsEntry.setIndexNames(*dsxT1E1IfConfigLineEntry.getIndexNames())
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsEntry.setStatus('current')
dsxT1E1IfUserLifetimeStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsEEV.setStatus('current')
dsxT1E1IfUserLifetimeStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsES.setStatus('current')
dsxT1E1IfUserLifetimeStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsUAS.setStatus('current')
dsxT1E1IfUserLifetimeStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsBES.setStatus('current')
dsxT1E1IfUserLifetimeStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsSES.setStatus('current')
dsxT1E1IfUserLifetimeStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsLOFC.setStatus('current')
dsxT1E1IfUserLifetimeStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsCSS.setStatus('current')
dsxT1E1IfUserLifetimeStatsBPV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsBPV.setStatus('current')
dsxT1E1IfUserLifetimeStatsOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsOOF.setStatus('current')
dsxT1E1IfUserLifetimeStatsCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 3, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserLifetimeStatsCRC.setStatus('current')
dsxT1E1IfUserArchiveStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4), )
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsTable.setStatus('current')
dsxT1E1IfUserArchiveStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1), ).setIndexNames((0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIndex"), (0, "TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfUserArchiveStatsInterval"))
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsEntry.setStatus('current')
dsxT1E1IfUserArchiveStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsInterval.setStatus('current')
dsxT1E1IfUserArchiveStatsEEV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsEEV.setStatus('current')
dsxT1E1IfUserArchiveStatsES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsES.setStatus('current')
dsxT1E1IfUserArchiveStatsUAS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsUAS.setStatus('current')
dsxT1E1IfUserArchiveStatsBES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsBES.setStatus('current')
dsxT1E1IfUserArchiveStatsSES = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsSES.setStatus('current')
dsxT1E1IfUserArchiveStatsLOFC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsLOFC.setStatus('current')
dsxT1E1IfUserArchiveStatsCSS = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsCSS.setStatus('current')
dsxT1E1IfUserArchiveStatsBPV = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsBPV.setStatus('current')
dsxT1E1IfUserArchiveStatsOOF = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsOOF.setStatus('current')
dsxT1E1IfUserArchiveStatsCRC = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 1, 3, 5, 4, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dsxT1E1IfUserArchiveStatsCRC.setStatus('current')
dsxT1E1Number = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: dsxT1E1Number.setStatus('current')
dsxT1E1Type = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("type-t1", 1), ("type-t1-within-ct3", 2))))
if mibBuilder.loadTexts: dsxT1E1Type.setStatus('current')
dsxT1E1T3Number = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 2, 1, 3), Integer32())
if mibBuilder.loadTexts: dsxT1E1T3Number.setStatus('current')
dsxT1E1AlarmType = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22))).clone(namedValues=NamedValues(("te1-alarm-rais", 1), ("te1-alarm-rrai", 2), ("te1-alarm-roof", 3), ("te1-alarm-rlos", 4), ("te1-alarm-rlof", 5), ("te1-alarm-rexz", 6), ("te1-alarm-rfbe", 7), ("te1-alarm-lorc", 8), ("te1-alarm-tpde", 9), ("te1-alarm-tais", 10), ("te1-alarm-tblu", 11), ("te1-alarm-trai", 12), ("te1-alarm-threshold1", 13), ("te1-alarm-threshold2", 14), ("te1-alarm-threshold3", 15), ("te1-alarm-threshold4", 16), ("te1-alarm-threshold5", 17), ("te1-alarm-threshold6", 18), ("te1-alarm-threshold7", 19), ("te1-alarm-threshold8", 20), ("te1-alarm-threshold9", 21), ("te1-alarm-threshold10", 22))))
if mibBuilder.loadTexts: dsxT1E1AlarmType.setStatus('current')
dsxT1E1AlarmOnTrap = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 2) + (0,1)).setObjects(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIndex"), ("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1Number"), ("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1Type"), ("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1T3Number"), ("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1AlarmType"))
dsxT1E1AlarmOffTrap = NotificationType((1, 3, 6, 1, 4, 1, 3174, 2, 7, 1, 2, 2) + (0,2)).setObjects(("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1IfIndex"), ("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1Number"), ("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1Type"), ("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1T3Number"), ("TIARA-NETWORKS-DSX-TE1-MIB", "dsxT1E1AlarmType"))
mibBuilder.exportSymbols("TIARA-NETWORKS-DSX-TE1-MIB", dsxT1E1IfLastTestResultTestState=dsxT1E1IfLastTestResultTestState, dsxT1E1IfAnsiCurrentStatsTimeInCurrent=dsxT1E1IfAnsiCurrentStatsTimeInCurrent, dsxT1E1IfUserArchiveStatsEntry=dsxT1E1IfUserArchiveStatsEntry, dsxT1E1IfUserArchiveStatsTable=dsxT1E1IfUserArchiveStatsTable, dsxT1E1IfIetfTotalStatsSEFS=dsxT1E1IfIetfTotalStatsSEFS, dsxT1E1IfAlarmThresholdConfigSampleType=dsxT1E1IfAlarmThresholdConfigSampleType, dsxT1E1IfIetfTotalStatsSES=dsxT1E1IfIetfTotalStatsSES, dsxT1E1IfTestConfigPattern=dsxT1E1IfTestConfigPattern, dsxT1E1IfLastTestResultTestTime=dsxT1E1IfLastTestResultTestTime, dsxT1E1IfArchiveStatsValidIntervalsTable=dsxT1E1IfArchiveStatsValidIntervalsTable, dsxT1E1IfAnsiTotalPathStatsSES=dsxT1E1IfAnsiTotalPathStatsSES, dsxT1E1IfAlarmThresholdConfigRisingThreshold=dsxT1E1IfAlarmThresholdConfigRisingThreshold, dsxT1E1IfTestStatusSyncLossCount=dsxT1E1IfTestStatusSyncLossCount, dsxT1E1IfAttCurrentStatsTable=dsxT1E1IfAttCurrentStatsTable, dsxT1E1IfAnsiArchiveIntervalPathStatsCSS=dsxT1E1IfAnsiArchiveIntervalPathStatsCSS, dsxT1E1IfAttCurrentStatsTimeInCurrent=dsxT1E1IfAttCurrentStatsTimeInCurrent, dsxT1E1IfAttCurrentStatsES=dsxT1E1IfAttCurrentStatsES, dsxT1E1IfAttArchiveStatsTable=dsxT1E1IfAttArchiveStatsTable, dsxT1E1IfIetfTotalStatsUAS=dsxT1E1IfIetfTotalStatsUAS, dsxT1E1IfUserCurrentStatsCRC=dsxT1E1IfUserCurrentStatsCRC, dsxT1E1IfUserArchiveStatsEEV=dsxT1E1IfUserArchiveStatsEEV, dsxT1E1IfIetfTotalStatsLES=dsxT1E1IfIetfTotalStatsLES, dsxT1E1IfUserTotalStatsSES=dsxT1E1IfUserTotalStatsSES, dsxT1E1IfAttTotalStatsES=dsxT1E1IfAttTotalStatsES, dsxT1E1IfAttTotalStatsTable=dsxT1E1IfAttTotalStatsTable, dsxT1E1IfUserArchiveStatsLOFC=dsxT1E1IfUserArchiveStatsLOFC, dsxT1E1IfConfigLBO=dsxT1E1IfConfigLBO, dsxT1E1IfCircuitId=dsxT1E1IfCircuitId, dsxT1E1IfAnsiTotalPathStatsCSS=dsxT1E1IfAnsiTotalPathStatsCSS, dsxT1E1IfAnsiArchiveIntervalPathStatsSAS=dsxT1E1IfAnsiArchiveIntervalPathStatsSAS, dsxT1E1IfIetfCurrentStatsBES=dsxT1E1IfIetfCurrentStatsBES, dsxT1E1IfAttTotalStatsEntry=dsxT1E1IfAttTotalStatsEntry, dsxT1E1IfTestConfigTable=dsxT1E1IfTestConfigTable, dsxT1E1IfLastTestResultSyncLossCount=dsxT1E1IfLastTestResultSyncLossCount, dsxT1E1IfAnsiArchiveIntervalPathStatsSES=dsxT1E1IfAnsiArchiveIntervalPathStatsSES, dsxT1E1IfUserTotalStatsDay=dsxT1E1IfUserTotalStatsDay, dsxT1E1IfLastTestResultLockedSeconds=dsxT1E1IfLastTestResultLockedSeconds, dsxT1E1IfAnsiArchiveIntervalStatsTable=dsxT1E1IfAnsiArchiveIntervalStatsTable, dsxT1E1IfStatusLineStatus=dsxT1E1IfStatusLineStatus, dsxT1E1IfIetfTotalStatsCSS=dsxT1E1IfIetfTotalStatsCSS, dsxT1E1IfAnsiStatsGroup=dsxT1E1IfAnsiStatsGroup, dsxT1E1IfDescription=dsxT1E1IfDescription, dsxT1E1IfIetfCurrentStatsTable=dsxT1E1IfIetfCurrentStatsTable, dsxT1E1IfAnsiArchiveIntervalLineStatsCV=dsxT1E1IfAnsiArchiveIntervalLineStatsCV, dsxT1E1IfIetfCurrentStatsLCV=dsxT1E1IfIetfCurrentStatsLCV, dsxT1E1IfAlarmThresholdConfigEntry=dsxT1E1IfAlarmThresholdConfigEntry, dsxT1E1IfAlarmThresholdConfigStartupType=dsxT1E1IfAlarmThresholdConfigStartupType, dsxT1E1IfAnsiCurrentPathStatsSES=dsxT1E1IfAnsiCurrentPathStatsSES, dsxT1E1IfContactInfo=dsxT1E1IfContactInfo, dsxT1E1IfAnsiCurrentStatsUASState=dsxT1E1IfAnsiCurrentStatsUASState, dsxT1E1IfConfigFdlEntry=dsxT1E1IfConfigFdlEntry, dsxT1E1IfStatsGroup=dsxT1E1IfStatsGroup, dsxT1E1IfUserTotalStatsEEV=dsxT1E1IfUserTotalStatsEEV, dsxT1E1IfConfigLineMode=dsxT1E1IfConfigLineMode, dsxT1E1IfIetfCurrentStatsPCV=dsxT1E1IfIetfCurrentStatsPCV, dsxT1E1IfAnsiArchiveIntervalStatsEntry=dsxT1E1IfAnsiArchiveIntervalStatsEntry, dsxT1E1IfIetfTotalStatsDM=dsxT1E1IfIetfTotalStatsDM, dsxT1E1IfUserLifetimeStatsEntry=dsxT1E1IfUserLifetimeStatsEntry, dsxT1E1IfUserArchiveStatsCSS=dsxT1E1IfUserArchiveStatsCSS, dsxT1E1IfIetfCurrentStatsTimeInCurrent=dsxT1E1IfIetfCurrentStatsTimeInCurrent, dsxT1E1IfAnsiArchiveStatsInterval=dsxT1E1IfAnsiArchiveStatsInterval, dsxT1E1IfAttCurrentStatsSES=dsxT1E1IfAttCurrentStatsSES, dsxT1E1IfIetfArchiveStatsCSS=dsxT1E1IfIetfArchiveStatsCSS, dsxT1E1IfUserLifetimeStatsBES=dsxT1E1IfUserLifetimeStatsBES, dsxT1E1IfAnsiCurrentPathStatsUAS=dsxT1E1IfAnsiCurrentPathStatsUAS, dsxT1E1IfTestStatusEntry=dsxT1E1IfTestStatusEntry, dsxT1E1IfLastTestResultLoopCode=dsxT1E1IfLastTestResultLoopCode, dsxT1E1IfLastTestResultTable=dsxT1E1IfLastTestResultTable, dsxT1E1IfIetfCurrentStatsSES=dsxT1E1IfIetfCurrentStatsSES, dsxT1E1IfStatusTransmitClock=dsxT1E1IfStatusTransmitClock, dsxT1E1IfIetfArchiveStatsPCV=dsxT1E1IfIetfArchiveStatsPCV, dsxT1E1IfAlarmThresholdConfigFallingThreshold=dsxT1E1IfAlarmThresholdConfigFallingThreshold, dsxT1E1IfAttArchiveStatsBES=dsxT1E1IfAttArchiveStatsBES, dsxT1E1IfUserCurrentStatsSES=dsxT1E1IfUserCurrentStatsSES, dsxT1E1IfAnsiCurrentStatsEntry=dsxT1E1IfAnsiCurrentStatsEntry, dsxT1E1IfIetfArchiveStatsLES=dsxT1E1IfIetfArchiveStatsLES, dsxT1E1IfUserTotalStatsCRC=dsxT1E1IfUserTotalStatsCRC, dsxT1E1IfAlarmStatusTable=dsxT1E1IfAlarmStatusTable, dsxT1E1IfConfigServiceMode=dsxT1E1IfConfigServiceMode, dsxT1E1IfIetfCurrentStatsDM=dsxT1E1IfIetfCurrentStatsDM, dsxT1E1AlarmOnTrap=dsxT1E1AlarmOnTrap, dsxT1E1IfStatusGroup=dsxT1E1IfStatusGroup, dsxT1E1IfIetfArchiveStatsSES=dsxT1E1IfIetfArchiveStatsSES, dsxT1E1IfUserArchiveStatsCRC=dsxT1E1IfUserArchiveStatsCRC, dsxT1E1IfUserArchiveStatsBPV=dsxT1E1IfUserArchiveStatsBPV, dsxT1E1IfIetfCurrentStatsUAS=dsxT1E1IfIetfCurrentStatsUAS, dsxT1E1IfAttArchiveStatsEntry=dsxT1E1IfAttArchiveStatsEntry, dsxT1E1IfTestConfigEntry=dsxT1E1IfTestConfigEntry, dsxT1E1IfTestStatusLoopCode=dsxT1E1IfTestStatusLoopCode, dsxT1E1T3Number=dsxT1E1T3Number, dsxT1E1IfConfigLineType=dsxT1E1IfConfigLineType, dsxT1E1IfLastTestResultTestType=dsxT1E1IfLastTestResultTestType, dsxT1E1IfUserLifetimeStatsEEV=dsxT1E1IfUserLifetimeStatsEEV, dsxT1E1IfUserLifetimeStatsOOF=dsxT1E1IfUserLifetimeStatsOOF, dsxT1E1IfAnsiArchiveIntervalPathStatsES=dsxT1E1IfAnsiArchiveIntervalPathStatsES, dsxT1E1IfUserStatsGroup=dsxT1E1IfUserStatsGroup, dsxT1E1IfAttCurrentStatsEEV=dsxT1E1IfAttCurrentStatsEEV, dsxT1E1IfUserCurrentStatsUASState=dsxT1E1IfUserCurrentStatsUASState, dsxT1E1Traps=dsxT1E1Traps, dsxT1E1IfUserTotalStatsUAS=dsxT1E1IfUserTotalStatsUAS, dsxT1E1IfAnsiTotalPathStatsCV=dsxT1E1IfAnsiTotalPathStatsCV, dsxT1E1IfIetfArchiveStatsES=dsxT1E1IfIetfArchiveStatsES, dsxT1E1IfUserTotalStatsCSS=dsxT1E1IfUserTotalStatsCSS, dsxT1E1IfUserLifetimeStatsCRC=dsxT1E1IfUserLifetimeStatsCRC, dsxT1E1IfAnsiCurrentPathStatsSAS=dsxT1E1IfAnsiCurrentPathStatsSAS, dsxT1E1IfUserCurrentStatsCSS=dsxT1E1IfUserCurrentStatsCSS, dsxT1E1IfAttCurrentStatsLOFC=dsxT1E1IfAttCurrentStatsLOFC, dsxT1E1IfUserCurrentStatsES=dsxT1E1IfUserCurrentStatsES, dsxT1E1IfUserLifetimeStatsCSS=dsxT1E1IfUserLifetimeStatsCSS, dsxT1E1IfUserArchiveStatsOOF=dsxT1E1IfUserArchiveStatsOOF, dsxT1E1IfLastTestResultEntry=dsxT1E1IfLastTestResultEntry, dsxT1E1IfAttCurrentStatsBES=dsxT1E1IfAttCurrentStatsBES, dsxT1E1IfConfigFdlCsuDsuType=dsxT1E1IfConfigFdlCsuDsuType, dsxT1E1IfTestStatusLockedSeconds=dsxT1E1IfTestStatusLockedSeconds, dsxT1E1IfTestStatusTestState=dsxT1E1IfTestStatusTestState, dsxT1E1IfAnsiArchiveStatsValidIntervals=dsxT1E1IfAnsiArchiveStatsValidIntervals, dsxT1E1IfIetfCurrentStatsSEFS=dsxT1E1IfIetfCurrentStatsSEFS, dsxT1E1IfAttArchiveStatsValidIntervals=dsxT1E1IfAttArchiveStatsValidIntervals, dsxT1E1IfIetfArchiveStatsDM=dsxT1E1IfIetfArchiveStatsDM, dsxT1E1IfUserTotalStatsTable=dsxT1E1IfUserTotalStatsTable, dsxT1E1IfIetfArchiveStatsUAS=dsxT1E1IfIetfArchiveStatsUAS, dsxT1E1IfIetfCurrentStatsUASState=dsxT1E1IfIetfCurrentStatsUASState, dsxT1E1AlarmType=dsxT1E1AlarmType, dsxT1E1IfAlarmStatusEntry=dsxT1E1IfAlarmStatusEntry, dsxT1E1IfLastTestResultTestPattern=dsxT1E1IfLastTestResultTestPattern, dsxT1E1IfAttArchiveStatsSES=dsxT1E1IfAttArchiveStatsSES, dsxT1E1IfIetfArchiveStatsInterval=dsxT1E1IfIetfArchiveStatsInterval, dsxT1E1IfUserArchiveStatsSES=dsxT1E1IfUserArchiveStatsSES, dsxT1E1IfUserArchiveStatsValidIntervals=dsxT1E1IfUserArchiveStatsValidIntervals, dsxT1E1IfConfigRaiAlarm=dsxT1E1IfConfigRaiAlarm, dsxT1E1IfUserCurrentStatsTimeInCurrent=dsxT1E1IfUserCurrentStatsTimeInCurrent, dsxT1E1IfIetfStatsGroup=dsxT1E1IfIetfStatsGroup, dsxT1E1IfAnsiArchiveIntervalLineStatsSES=dsxT1E1IfAnsiArchiveIntervalLineStatsSES, dsxT1E1IfUserCurrentStatsOOF=dsxT1E1IfUserCurrentStatsOOF, dsxT1E1IfIetfArchiveStatsBES=dsxT1E1IfIetfArchiveStatsBES, dsxT1E1IfUserCurrentStatsUAS=dsxT1E1IfUserCurrentStatsUAS, dsxT1E1IfUserCurrentStatsTable=dsxT1E1IfUserCurrentStatsTable, dsxT1E1IfUserLifetimeStatsUAS=dsxT1E1IfUserLifetimeStatsUAS, dsxT1E1IfTestConfigTime=dsxT1E1IfTestConfigTime, dsxT1E1IfAttArchiveStatsCSS=dsxT1E1IfAttArchiveStatsCSS, dsxT1E1IfIetfArchiveStatsEntry=dsxT1E1IfIetfArchiveStatsEntry, dsxT1E1IfConfigFdl=dsxT1E1IfConfigFdl, dsxT1E1IfAttArchiveInterval=dsxT1E1IfAttArchiveInterval, dsxT1E1IfAnsiTotalLineStatsSES=dsxT1E1IfAnsiTotalLineStatsSES, dsxT1E1IfUserTotalStatsES=dsxT1E1IfUserTotalStatsES, dsxT1E1IfIetfArchiveStatsSEFS=dsxT1E1IfIetfArchiveStatsSEFS, dsxT1E1IfAttTotalStatsLOFC=dsxT1E1IfAttTotalStatsLOFC, dsxT1E1IfAlarmThresholdConfigIndex=dsxT1E1IfAlarmThresholdConfigIndex, dsxT1E1IfConfigCableLength=dsxT1E1IfConfigCableLength, dsxT1E1IfIetfArchiveStatsTable=dsxT1E1IfIetfArchiveStatsTable, dsxT1E1IfAnsiCurrentLineStatsES=dsxT1E1IfAnsiCurrentLineStatsES, dsxT1E1IfAttCurrentStatsCSS=dsxT1E1IfAttCurrentStatsCSS, dsxT1E1IfAttTotalStatsEEV=dsxT1E1IfAttTotalStatsEEV, dsxT1E1IfTestStatusTestTime=dsxT1E1IfTestStatusTestTime, PYSNMP_MODULE_ID=dsxT1E1MIB, dsxT1E1IfConfigFdlTable=dsxT1E1IfConfigFdlTable, dsxT1E1IfAttTotalStatsUAS=dsxT1E1IfAttTotalStatsUAS, dsxT1E1IfUserTotalStatsLOFC=dsxT1E1IfUserTotalStatsLOFC, dsxT1E1AlarmOffTrap=dsxT1E1AlarmOffTrap, dsxT1E1IfUserLifetimeStatsLOFC=dsxT1E1IfUserLifetimeStatsLOFC, dsxT1E1IfUserArchiveStatsUAS=dsxT1E1IfUserArchiveStatsUAS, dsxT1E1IfAttArchiveStatsLOFC=dsxT1E1IfAttArchiveStatsLOFC, dsxT1E1IfAnsiTotalLineStatsES=dsxT1E1IfAnsiTotalLineStatsES, dsxT1E1IfUserLifetimeStatsES=dsxT1E1IfUserLifetimeStatsES, dsxT1E1IfIndex=dsxT1E1IfIndex, dsxT1E1IfIetfArchiveStatsValidIntervals=dsxT1E1IfIetfArchiveStatsValidIntervals, dsxT1E1IfAttCurrentStatsEntry=dsxT1E1IfAttCurrentStatsEntry, dsxT1E1IfAttArchiveStatsES=dsxT1E1IfAttArchiveStatsES, dsxT1E1IfUserArchiveStatsInterval=dsxT1E1IfUserArchiveStatsInterval, dsxT1E1IfAnsiTotalStatsTable=dsxT1E1IfAnsiTotalStatsTable, dsxT1E1IfAlarmThresholdConfigObject=dsxT1E1IfAlarmThresholdConfigObject, dsxT1E1IfArchiveStatsValidIntervalsEntry=dsxT1E1IfArchiveStatsValidIntervalsEntry, dsxT1E1IfConfigTimeSlotMap=dsxT1E1IfConfigTimeSlotMap, dsxT1E1IfAttArchiveStatsEEV=dsxT1E1IfAttArchiveStatsEEV, dsxT1E1IfUserTotalStatsBES=dsxT1E1IfUserTotalStatsBES, dsxT1E1IfAnsiTotalStatsEntry=dsxT1E1IfAnsiTotalStatsEntry, dsxT1E1IfUserCurrentStatsBES=dsxT1E1IfUserCurrentStatsBES, dsxT1E1IfAnsiCurrentPathStatsES=dsxT1E1IfAnsiCurrentPathStatsES, dsxT1E1Number=dsxT1E1Number, dsxT1E1IfConfigLineTable=dsxT1E1IfConfigLineTable, dsxT1E1IfAnsiCurrentPathStatsCV=dsxT1E1IfAnsiCurrentPathStatsCV, dsxT1E1Type=dsxT1E1Type, dsxT1E1IfUserTotalStatsBPV=dsxT1E1IfUserTotalStatsBPV, dsxT1E1IfTestStatusTestPattern=dsxT1E1IfTestStatusTestPattern, dsxT1E1IfTestConfigType=dsxT1E1IfTestConfigType, dsxT1E1IfTestStatusErrorCount=dsxT1E1IfTestStatusErrorCount, dsxT1E1IfAlarmThresholdConfigTable=dsxT1E1IfAlarmThresholdConfigTable, dsxT1E1IfLastTestResultErrorCount=dsxT1E1IfLastTestResultErrorCount, dsxT1E1TrapVariables=dsxT1E1TrapVariables, dsxT1E1IfUserCurrentStatsEEV=dsxT1E1IfUserCurrentStatsEEV, dsxT1E1IfUserCurrentStatsLOFC=dsxT1E1IfUserCurrentStatsLOFC, dsxT1E1IfAlarmStatusAlarmStatus=dsxT1E1IfAlarmStatusAlarmStatus, dsxT1E1IfIetfTotalStatsLCV=dsxT1E1IfIetfTotalStatsLCV, dsxT1E1IfUserTotalStatsValidDays=dsxT1E1IfUserTotalStatsValidDays, dsxT1E1IfUserArchiveStatsES=dsxT1E1IfUserArchiveStatsES, dsxT1E1IfIetfCurrentStatsCSS=dsxT1E1IfIetfCurrentStatsCSS, dsxT1E1IfUserLifetimeStatsTable=dsxT1E1IfUserLifetimeStatsTable, dsxT1E1IfTestConfigLoopCode=dsxT1E1IfTestConfigLoopCode, dsxT1E1IfAnsiArchiveIntervalPathStatsCV=dsxT1E1IfAnsiArchiveIntervalPathStatsCV, dsxT1E1IfIetfTotalStatsPCV=dsxT1E1IfIetfTotalStatsPCV, dsxT1E1IfIetfTotalStatsEntry=dsxT1E1IfIetfTotalStatsEntry, dsxT1E1IfUserCurrentStatsEntry=dsxT1E1IfUserCurrentStatsEntry, dsxT1E1IfAttTotalStatsCSS=dsxT1E1IfAttTotalStatsCSS, dsxT1E1IfTestStatusTestType=dsxT1E1IfTestStatusTestType, dsxT1E1IfAnsiTotalPathStatsUAS=dsxT1E1IfAnsiTotalPathStatsUAS, dsxT1E1IfConfigLineCode=dsxT1E1IfConfigLineCode, dsxT1E1IfAlarmStatusThresholdStatus=dsxT1E1IfAlarmStatusThresholdStatus, dsxT1E1IfUserCurrentStatsBPV=dsxT1E1IfUserCurrentStatsBPV, dsxT1E1IfIetfTotalStatsTable=dsxT1E1IfIetfTotalStatsTable, dsxT1E1IfAnsiCurrentLineStatsSES=dsxT1E1IfAnsiCurrentLineStatsSES, dsxT1E1IfAttArchiveStatsUAS=dsxT1E1IfAttArchiveStatsUAS, dsxT1E1IfAttCurrentStatsUAS=dsxT1E1IfAttCurrentStatsUAS, dsxT1E1MIB=dsxT1E1MIB, dsxT1E1IfIetfCurrentStatsES=dsxT1E1IfIetfCurrentStatsES, dsxT1E1IfAnsiCurrentStatsTable=dsxT1E1IfAnsiCurrentStatsTable, dsxT1E1IfAttCurrentStatsUASState=dsxT1E1IfAttCurrentStatsUASState, dsxT1E1IfUserTotalStatsOOF=dsxT1E1IfUserTotalStatsOOF, dsxT1E1IfAnsiCurrentLineStatsCV=dsxT1E1IfAnsiCurrentLineStatsCV, dsxT1E1IfStatusEntry=dsxT1E1IfStatusEntry, dsxT1E1IfIetfTotalStatsES=dsxT1E1IfIetfTotalStatsES, dsxT1E1IfAttStatsGroup=dsxT1E1IfAttStatsGroup, dsxT1E1IfTestStatusTable=dsxT1E1IfTestStatusTable, dsxT1E1IfAnsiTotalPathStatsSAS=dsxT1E1IfAnsiTotalPathStatsSAS, dsxT1E1IfIetfTotalStatsBES=dsxT1E1IfIetfTotalStatsBES, dsxT1E1IfAnsiCurrentPathStatsCSS=dsxT1E1IfAnsiCurrentPathStatsCSS, dsxT1E1IfIetfArchiveStatsLCV=dsxT1E1IfIetfArchiveStatsLCV, dsxT1E1IfUserTotalStatsEntry=dsxT1E1IfUserTotalStatsEntry, dsxT1E1IfAnsiArchiveIntervalLineStatsES=dsxT1E1IfAnsiArchiveIntervalLineStatsES, dsxT1E1IfUserLifetimeStatsBPV=dsxT1E1IfUserLifetimeStatsBPV, dsxT1E1IfUserArchiveStatsBES=dsxT1E1IfUserArchiveStatsBES, dsxT1E1IfAttTotalStatsBES=dsxT1E1IfAttTotalStatsBES, dsxT1E1IfStatusTable=dsxT1E1IfStatusTable, dsxT1E1IfAlarmConfigGroup=dsxT1E1IfAlarmConfigGroup, dsxT1E1IfAnsiTotalLineStatsCV=dsxT1E1IfAnsiTotalLineStatsCV, dsxT1E1IfConfigLineEntry=dsxT1E1IfConfigLineEntry, dsxT1E1IfIetfCurrentStatsLES=dsxT1E1IfIetfCurrentStatsLES, dsxT1E1IfUserLifetimeStatsSES=dsxT1E1IfUserLifetimeStatsSES, dsxT1E1IfAttTotalStatsSES=dsxT1E1IfAttTotalStatsSES, dsxT1E1IfIetfCurrentStatsEntry=dsxT1E1IfIetfCurrentStatsEntry, dsxT1E1IfConfigTransmitClock=dsxT1E1IfConfigTransmitClock, dsxT1E1IfAnsiArchiveIntervalPathStatsUAS=dsxT1E1IfAnsiArchiveIntervalPathStatsUAS, dsxT1E1IfAlarmThresholdConfigSamplingInterval=dsxT1E1IfAlarmThresholdConfigSamplingInterval, dsxT1E1IfAnsiTotalPathStatsES=dsxT1E1IfAnsiTotalPathStatsES, dsxT1E1IfConfigGroup=dsxT1E1IfConfigGroup)
