#
# PySNMP MIB module A3COM-HUAWEI-LswINF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/A3COM-HUAWEI-LswINF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:49:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
lswCommon, = mibBuilder.importSymbols("A3COM-HUAWEI-OID-MIB", "lswCommon")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
ifIndex, ifEntry = mibBuilder.importSymbols("IF-MIB", "ifIndex", "ifEntry")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, ModuleIdentity, Counter64, Bits, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Gauge32, IpAddress, Integer32, iso, TimeTicks, MibIdentifier, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "ModuleIdentity", "Counter64", "Bits", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Gauge32", "IpAddress", "Integer32", "iso", "TimeTicks", "MibIdentifier", "Unsigned32")
TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
hwLswL2InfMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5))
hwLswL2InfMib.setRevisions(('2001-06-29 00:00',))
if mibBuilder.loadTexts: hwLswL2InfMib.setLastUpdated('200106290000Z')
if mibBuilder.loadTexts: hwLswL2InfMib.setOrganization('')
class PortList(TextualConvention, OctetString):
    status = 'current'

class VlanIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4294967295)

class InterfaceIndex(TextualConvention, Integer32):
    status = 'current'
    displayHint = 'd'

class DropDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("disable", 1), ("enableInbound", 2), ("enableOutbound", 3), ("enableBoth", 4))

class SpeedModeFlag(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("s10M", 0), ("s100M", 1), ("s1000M", 2), ("s10000M", 3), ("s24000M", 4), ("s40000M", 5), ("s100000M", 6))

hwLswExtInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1))
hwifXXTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1), )
if mibBuilder.loadTexts: hwifXXTable.setStatus('current')
hwifXXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1), )
ifEntry.registerAugmentions(("A3COM-HUAWEI-LswINF-MIB", "hwifXXEntry"))
hwifXXEntry.setIndexNames(*ifEntry.getIndexNames())
if mibBuilder.loadTexts: hwifXXEntry.setStatus('current')
hwifUnBoundPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifUnBoundPort.setStatus('current')
hwifISPhyPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifISPhyPort.setStatus('current')
hwifAggregatePort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifAggregatePort.setStatus('current')
hwifMirrorPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifMirrorPort.setStatus('current')
hwifVLANType = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("vLANTrunk", 1), ("access", 2), ("hybrid", 3), ("fabric", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifVLANType.setStatus('current')
hwifMcastControl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifMcastControl.setStatus('current')
hwifFlowControl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 7), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifFlowControl.setStatus('current')
hwifSrcMacControl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifSrcMacControl.setStatus('current')
hwifClearStat = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifClearStat.setStatus('current')
hwifXXBasePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifXXBasePortIndex.setStatus('current')
hwifXXDevPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifXXDevPortIndex.setStatus('current')
hwifPpsMcastControl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifPpsMcastControl.setStatus('current')
hwifPpsBcastDisValControl = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifPpsBcastDisValControl.setStatus('current')
hwifUniSuppressionStep = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifUniSuppressionStep.setStatus('current')
hwifPpsUniSuppressionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifPpsUniSuppressionMax.setStatus('current')
hwifMulSuppressionStep = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifMulSuppressionStep.setStatus('current')
hwifPpsMulSuppressionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifPpsMulSuppressionMax.setStatus('current')
hwifUniSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 18), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifUniSuppression.setStatus('current')
hwifPpsUniSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 19), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifPpsUniSuppression.setStatus('current')
hwifMulSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 20), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifMulSuppression.setStatus('current')
hwifPpsMulSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifPpsMulSuppression.setStatus('current')
hwifComboActivePort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fiber", 1), ("copper", 2), ("na", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifComboActivePort.setStatus('obsolete')
hwifBMbpsMulSuppressionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifBMbpsMulSuppressionMax.setStatus('current')
hwifBMbpsMulSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifBMbpsMulSuppression.setStatus('current')
hwifBKbpsMulSuppressionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifBKbpsMulSuppressionMax.setStatus('current')
hwifBKbpsMulSuppressionStep = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifBKbpsMulSuppressionStep.setStatus('current')
hwifBKbpsMulSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifBKbpsMulSuppression.setStatus('current')
hwifUnknownPacketDropMul = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 28), DropDirection().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifUnknownPacketDropMul.setStatus('current')
hwifUnknownPacketDropUni = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 29), DropDirection().clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifUnknownPacketDropUni.setStatus('current')
hwifBMbpsUniSuppressionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifBMbpsUniSuppressionMax.setStatus('current')
hwifBMbpsUniSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifBMbpsUniSuppression.setStatus('current')
hwifBKbpsUniSuppressionMax = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifBKbpsUniSuppressionMax.setStatus('current')
hwifBKbpsUniSuppressionStep = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifBKbpsUniSuppressionStep.setStatus('current')
hwifBKbpsUniSuppression = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifBKbpsUniSuppression.setStatus('current')
hwifOutPayloadOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifOutPayloadOctets.setStatus('current')
hwifInPayloadOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifInPayloadOctets.setStatus('current')
hwifInErrorPktsRate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifInErrorPktsRate.setStatus('current')
hwifInPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifInPkts.setStatus('current')
hwifInNormalPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifInNormalPkts.setStatus('current')
hwifOutPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 1, 1, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifOutPkts.setStatus('current')
hwifAggregateTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 2), )
if mibBuilder.loadTexts: hwifAggregateTable.setStatus('current')
hwifAggregateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 2, 1), ).setIndexNames((0, "A3COM-HUAWEI-LswINF-MIB", "hwifAggregatePortIndex"))
if mibBuilder.loadTexts: hwifAggregateEntry.setStatus('current')
hwifAggregatePortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifAggregatePortIndex.setStatus('current')
hwifAggregatePortName = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifAggregatePortName.setStatus('current')
hwifAggregatePortListPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 2, 1, 3), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifAggregatePortListPorts.setStatus('current')
hwifAggregateModel = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ingress", 1), ("both", 2), ("round-robin", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifAggregateModel.setStatus('current')
hwifAggregateOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwifAggregateOperStatus.setStatus('current')
hwifHybridPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 3), )
if mibBuilder.loadTexts: hwifHybridPortTable.setStatus('current')
hwifHybridPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-LswINF-MIB", "hwifHybridPortIndex"))
if mibBuilder.loadTexts: hwifHybridPortEntry.setStatus('current')
hwifHybridPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifHybridPortIndex.setStatus('current')
hwifHybridTaggedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifHybridTaggedVlanListLow.setStatus('current')
hwifHybridTaggedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 3, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifHybridTaggedVlanListHigh.setStatus('current')
hwifHybridUnTaggedVlanListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 3, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifHybridUnTaggedVlanListLow.setStatus('current')
hwifHybridUnTaggedVlanListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifHybridUnTaggedVlanListHigh.setStatus('current')
hwifComboPortTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 4), )
if mibBuilder.loadTexts: hwifComboPortTable.setStatus('current')
hwifComboPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 4, 1), ).setIndexNames((0, "A3COM-HUAWEI-LswINF-MIB", "hwifComboPortIndex"))
if mibBuilder.loadTexts: hwifComboPortEntry.setStatus('current')
hwifComboPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 4, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifComboPortIndex.setStatus('current')
hwifComboPortCurActive = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fiber", 1), ("copper", 2), ("na", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifComboPortCurActive.setStatus('current')
hwLswL2InfMibObject = MibIdentifier((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1))
hwSlotPortMax = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSlotPortMax.setStatus('current')
hwSwitchPortMax = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwSwitchPortMax.setStatus('current')
hwifVLANTrunkStatusTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 3), )
if mibBuilder.loadTexts: hwifVLANTrunkStatusTable.setStatus('current')
hwifVLANTrunkStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 3, 1), ).setIndexNames((0, "A3COM-HUAWEI-LswINF-MIB", "hwifVLANTrunkIndex"))
if mibBuilder.loadTexts: hwifVLANTrunkStatusEntry.setStatus('current')
hwifVLANTrunkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 3, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifVLANTrunkIndex.setStatus('current')
hwifVLANTrunkGvrpRegistration = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("normal", 1), ("fixed", 2), ("forbidden", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifVLANTrunkGvrpRegistration.setStatus('current')
hwifVLANTrunkPassListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifVLANTrunkPassListLow.setStatus('current')
hwifVLANTrunkPassListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifVLANTrunkPassListHigh.setStatus('current')
hwifVLANTrunkAllowListLow = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 3, 1, 6), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifVLANTrunkAllowListLow.setStatus('current')
hwifVLANTrunkAllowListHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 3, 1, 7), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifVLANTrunkAllowListHigh.setStatus('current')
hwethernetTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4), )
if mibBuilder.loadTexts: hwethernetTable.setStatus('current')
hwethernetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1), )
ifEntry.registerAugmentions(("A3COM-HUAWEI-LswINF-MIB", "hwethernetEntry"))
hwethernetEntry.setIndexNames(*ifEntry.getIndexNames())
if mibBuilder.loadTexts: hwethernetEntry.setStatus('current')
hwifEthernetDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("full", 1), ("half", 2), ("auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifEthernetDuplex.setStatus('current')
hwifEthernetMTU = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifEthernetMTU.setStatus('current')
hwifEthernetSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 10, 100, 1000, 10000, 24000, 40000, 100000))).clone(namedValues=NamedValues(("auto", 0), ("s10M", 10), ("s100M", 100), ("s1000M", 1000), ("s10000M", 10000), ("s24000M", 24000), ("s40000M", 40000), ("s100000M", 100000)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifEthernetSpeed.setStatus('current')
hwifEthernetMdi = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("mdi-ii", 1), ("mdi-x", 2), ("mdi-auto", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifEthernetMdi.setStatus('current')
hwMaxMacLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwMaxMacLearn.setStatus('current')
hwifMacAddressLearn = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifMacAddressLearn.setStatus('current')
hwifEthernetTest = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("test", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifEthernetTest.setStatus('current')
hwifMacAddrLearnMode = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("iVL", 1), ("sVL", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifMacAddrLearnMode.setStatus('current')
hwifEthernetFlowInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifEthernetFlowInterval.setStatus('current')
hwifEthernetIsolate = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 13), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifEthernetIsolate.setStatus('current')
hwifVlanVPNStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifVlanVPNStatus.setStatus('current')
hwifVlanVPNUplinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifVlanVPNUplinkStatus.setStatus('current')
hwifVlanVPNTPID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifVlanVPNTPID.setStatus('current')
hwifIsolateGroupID = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 17), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifIsolateGroupID.setStatus('current')
hwifisUplinkPort = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifisUplinkPort.setStatus('current')
hwifEthernetAutoSpeedMask = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 19), SpeedModeFlag()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwifEthernetAutoSpeedMask.setStatus('current')
hwifEthernetAutoSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 4, 1, 20), SpeedModeFlag()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwifEthernetAutoSpeed.setStatus('current')
hwIsolateGroupMax = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwIsolateGroupMax.setStatus('current')
hwGlobalBroadcastMaxPps = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 14881000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalBroadcastMaxPps.setStatus('current')
hwGlobalBroadcastMaxRatio = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwGlobalBroadcastMaxRatio.setStatus('current')
hwBpduTunnelStatus = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwBpduTunnelStatus.setStatus('current')
hwVlanVPNTPIDMode = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("port-based", 1), ("global", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwVlanVPNTPIDMode.setStatus('current')
hwVlanVPNTPID = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hwVlanVPNTPID.setStatus('current')
hwPortIsolateGroupTable = MibTable((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 11), )
if mibBuilder.loadTexts: hwPortIsolateGroupTable.setStatus('current')
hwPortIsolateGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 11, 1), ).setIndexNames((0, "A3COM-HUAWEI-LswINF-MIB", "hwPortIsolateGroupIndex"))
if mibBuilder.loadTexts: hwPortIsolateGroupEntry.setStatus('current')
hwPortIsolateGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 11, 1, 1), Integer32())
if mibBuilder.loadTexts: hwPortIsolateGroupIndex.setStatus('current')
hwPortIsolateUplinkIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 11, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortIsolateUplinkIfIndex.setStatus('current')
hwPortIsolateGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 11, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortIsolateGroupRowStatus.setStatus('current')
hwPortIsolateGroupDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 11, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hwPortIsolateGroupDescription.setStatus('current')
hwMaxMacLearnRange = MibScalar((1, 3, 6, 1, 4, 1, 43, 45, 1, 2, 23, 1, 5, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hwMaxMacLearnRange.setStatus('current')
mibBuilder.exportSymbols("A3COM-HUAWEI-LswINF-MIB", hwifVLANTrunkStatusTable=hwifVLANTrunkStatusTable, hwifBMbpsUniSuppression=hwifBMbpsUniSuppression, hwifEthernetAutoSpeedMask=hwifEthernetAutoSpeedMask, hwifUniSuppressionStep=hwifUniSuppressionStep, hwLswExtInterface=hwLswExtInterface, hwifBMbpsMulSuppression=hwifBMbpsMulSuppression, hwifPpsUniSuppressionMax=hwifPpsUniSuppressionMax, hwifInPkts=hwifInPkts, hwifPpsMulSuppressionMax=hwifPpsMulSuppressionMax, hwifBKbpsMulSuppressionMax=hwifBKbpsMulSuppressionMax, hwVlanVPNTPID=hwVlanVPNTPID, hwifComboPortCurActive=hwifComboPortCurActive, hwPortIsolateUplinkIfIndex=hwPortIsolateUplinkIfIndex, hwifHybridUnTaggedVlanListHigh=hwifHybridUnTaggedVlanListHigh, hwPortIsolateGroupEntry=hwPortIsolateGroupEntry, hwifMirrorPort=hwifMirrorPort, VlanIndex=VlanIndex, hwifEthernetDuplex=hwifEthernetDuplex, hwifBKbpsUniSuppressionStep=hwifBKbpsUniSuppressionStep, hwethernetTable=hwethernetTable, hwifFlowControl=hwifFlowControl, hwifPpsMcastControl=hwifPpsMcastControl, hwifHybridPortEntry=hwifHybridPortEntry, hwifVlanVPNTPID=hwifVlanVPNTPID, hwifAggregatePort=hwifAggregatePort, PortList=PortList, hwethernetEntry=hwethernetEntry, hwifHybridTaggedVlanListHigh=hwifHybridTaggedVlanListHigh, hwifMcastControl=hwifMcastControl, hwifAggregatePortListPorts=hwifAggregatePortListPorts, hwifAggregateEntry=hwifAggregateEntry, hwVlanVPNTPIDMode=hwVlanVPNTPIDMode, hwifEthernetTest=hwifEthernetTest, hwifEthernetMdi=hwifEthernetMdi, hwifInErrorPktsRate=hwifInErrorPktsRate, hwifVLANTrunkStatusEntry=hwifVLANTrunkStatusEntry, hwifisUplinkPort=hwifisUplinkPort, hwifHybridPortTable=hwifHybridPortTable, hwIsolateGroupMax=hwIsolateGroupMax, hwLswL2InfMib=hwLswL2InfMib, hwifBKbpsMulSuppressionStep=hwifBKbpsMulSuppressionStep, hwifInPayloadOctets=hwifInPayloadOctets, hwifUnknownPacketDropUni=hwifUnknownPacketDropUni, hwifBKbpsUniSuppressionMax=hwifBKbpsUniSuppressionMax, hwifHybridPortIndex=hwifHybridPortIndex, hwifXXDevPortIndex=hwifXXDevPortIndex, hwifBMbpsMulSuppressionMax=hwifBMbpsMulSuppressionMax, hwifAggregatePortName=hwifAggregatePortName, hwifClearStat=hwifClearStat, hwifInNormalPkts=hwifInNormalPkts, hwifOutPayloadOctets=hwifOutPayloadOctets, hwifEthernetAutoSpeed=hwifEthernetAutoSpeed, hwifComboPortIndex=hwifComboPortIndex, hwifVLANTrunkAllowListHigh=hwifVLANTrunkAllowListHigh, hwifOutPkts=hwifOutPkts, hwifVLANTrunkPassListHigh=hwifVLANTrunkPassListHigh, hwifMulSuppressionStep=hwifMulSuppressionStep, hwPortIsolateGroupDescription=hwPortIsolateGroupDescription, hwifIsolateGroupID=hwifIsolateGroupID, hwBpduTunnelStatus=hwBpduTunnelStatus, hwifVLANTrunkPassListLow=hwifVLANTrunkPassListLow, hwifEthernetMTU=hwifEthernetMTU, hwifBMbpsUniSuppressionMax=hwifBMbpsUniSuppressionMax, hwifMulSuppression=hwifMulSuppression, hwifBKbpsMulSuppression=hwifBKbpsMulSuppression, hwifAggregateModel=hwifAggregateModel, hwifComboPortEntry=hwifComboPortEntry, hwifPpsBcastDisValControl=hwifPpsBcastDisValControl, hwGlobalBroadcastMaxPps=hwGlobalBroadcastMaxPps, DropDirection=DropDirection, hwifXXBasePortIndex=hwifXXBasePortIndex, hwGlobalBroadcastMaxRatio=hwGlobalBroadcastMaxRatio, hwifComboActivePort=hwifComboActivePort, hwifSrcMacControl=hwifSrcMacControl, hwMaxMacLearn=hwMaxMacLearn, hwifEthernetFlowInterval=hwifEthernetFlowInterval, hwifBKbpsUniSuppression=hwifBKbpsUniSuppression, hwifXXTable=hwifXXTable, hwLswL2InfMibObject=hwLswL2InfMibObject, hwifUnknownPacketDropMul=hwifUnknownPacketDropMul, hwifAggregatePortIndex=hwifAggregatePortIndex, hwifUnBoundPort=hwifUnBoundPort, hwifVLANTrunkIndex=hwifVLANTrunkIndex, hwifEthernetSpeed=hwifEthernetSpeed, hwifVlanVPNUplinkStatus=hwifVlanVPNUplinkStatus, hwifHybridTaggedVlanListLow=hwifHybridTaggedVlanListLow, hwifHybridUnTaggedVlanListLow=hwifHybridUnTaggedVlanListLow, hwifVlanVPNStatus=hwifVlanVPNStatus, hwifUniSuppression=hwifUniSuppression, hwSwitchPortMax=hwSwitchPortMax, hwPortIsolateGroupTable=hwPortIsolateGroupTable, hwifVLANTrunkGvrpRegistration=hwifVLANTrunkGvrpRegistration, hwSlotPortMax=hwSlotPortMax, InterfaceIndex=InterfaceIndex, hwifComboPortTable=hwifComboPortTable, hwifMacAddressLearn=hwifMacAddressLearn, hwifMacAddrLearnMode=hwifMacAddrLearnMode, hwPortIsolateGroupRowStatus=hwPortIsolateGroupRowStatus, hwMaxMacLearnRange=hwMaxMacLearnRange, hwifVLANType=hwifVLANType, hwifXXEntry=hwifXXEntry, SpeedModeFlag=SpeedModeFlag, hwifISPhyPort=hwifISPhyPort, hwifPpsUniSuppression=hwifPpsUniSuppression, PYSNMP_MODULE_ID=hwLswL2InfMib, hwifVLANTrunkAllowListLow=hwifVLANTrunkAllowListLow, hwifAggregateTable=hwifAggregateTable, hwifAggregateOperStatus=hwifAggregateOperStatus, hwifPpsMulSuppression=hwifPpsMulSuppression, hwPortIsolateGroupIndex=hwPortIsolateGroupIndex, hwifEthernetIsolate=hwifEthernetIsolate)
