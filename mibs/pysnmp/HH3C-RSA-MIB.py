#
# PySNMP MIB module HH3C-RSA-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-RSA-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:16:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
hh3cCommon, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cCommon")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, iso, Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, ModuleIdentity, Counter64, NotificationType, Gauge32, MibIdentifier, IpAddress, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "ModuleIdentity", "Counter64", "NotificationType", "Gauge32", "MibIdentifier", "IpAddress", "Integer32", "Counter32")
TextualConvention, DateAndTime, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DateAndTime", "RowStatus", "DisplayString")
hh3cRSA = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 2, 23))
hh3cRSA.setRevisions(('2004-10-10 00:00',))
if mibBuilder.loadTexts: hh3cRSA.setLastUpdated('200410100000Z')
if mibBuilder.loadTexts: hh3cRSA.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
class RSAKeyErrorCode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36))
    namedValues = NamedValues(("rsaSuccess", 1), ("rsaFailure", 2), ("rsaErrNoMemory", 3), ("rsaErrKeyNotReplaced", 4), ("rsaErrKeyBackup", 5), ("rsaErrKeySaved", 6), ("rsaErrKeyGenerate", 7), ("rsaErrKeyDestroy", 8), ("rsaErrHostEncKeyBackup", 9), ("rsaErrHostEncKeySave", 10), ("rsaErrHostEncKeyGenerate", 11), ("rsaErrHostEncKeyDestroy", 12), ("rsaErrHostSigKeyBackup", 13), ("rsaErrHostSigKeySave", 14), ("rsaErrHostSigKeyGenerate", 15), ("rsaErrHostSigKeyDestroy", 16), ("rsaErrServerKeyBackup", 17), ("rsaErrServerKeySave", 18), ("rsaErrServerKeyGenerate", 19), ("rsaErrServerKeyDestroy", 20), ("rsaErrPeerKeyNotReplaced", 21), ("rsaErrPeerKeyNumArriveMax", 22), ("rsaErrPeerKeyNotRemoved", 23), ("rsaErrPeerKeyNotExist", 24), ("rsaStatusKeyExist", 25), ("rsaStatusKeyNotExist", 26), ("rsaStatusKeyInvalid", 27), ("rsaStatusHostEncKeyExist", 28), ("rsaStatusHostEncKeyNotExist", 29), ("rsaStatusHostEncKeyInvalid", 30), ("rsaStatusHostSigKeyExist", 31), ("rsaStatusHostSigKeyNotExist", 32), ("rsaStatusHostSigKeyInvalid", 33), ("rsaStatusServerKeyExist", 34), ("rsaStatusServerKeyNotExist", 35), ("rsaStatusServerKeyInvalid", 36))

hh3cRSAMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1))
hh3cRSAPeerPublicKeyTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 1), )
if mibBuilder.loadTexts: hh3cRSAPeerPublicKeyTable.setStatus('current')
hh3cRSAPeerPublicKeyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 1, 1), ).setIndexNames((0, "HH3C-RSA-MIB", "hh3cRSAPeerPublicKeyName"))
if mibBuilder.loadTexts: hh3cRSAPeerPublicKeyEntry.setStatus('current')
hh3cRSAPeerPublicKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 64)))
if mibBuilder.loadTexts: hh3cRSAPeerPublicKeyName.setStatus('current')
hh3cRSAPeerIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cRSAPeerIpAddress.setStatus('current')
hh3cRSAPeerFQDN = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 1, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hh3cRSAPeerFQDN.setStatus('current')
hh3cRSAPeerPublicKeyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1024))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRSAPeerPublicKeyCode.setStatus('current')
hh3cRSAPeerPublicKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRSAPeerPublicKeyStatus.setStatus('current')
hh3cRSALocalKeyPairTable = MibTable((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2), )
if mibBuilder.loadTexts: hh3cRSALocalKeyPairTable.setStatus('current')
hh3cRSALocalKeyPairEntry = MibTableRow((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1), ).setIndexNames((0, "HH3C-RSA-MIB", "hh3cRSALocalKeyIndex"))
if mibBuilder.loadTexts: hh3cRSALocalKeyPairEntry.setStatus('current')
hh3cRSALocalKeyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1)))
if mibBuilder.loadTexts: hh3cRSALocalKeyIndex.setStatus('current')
hh3cRSALocalHostKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRSALocalHostKeyName.setStatus('current')
hh3cRSALocalHostKeyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRSALocalHostKeyCode.setStatus('current')
hh3cRSALocalHostKeyCreatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRSALocalHostKeyCreatedTime.setStatus('current')
hh3cRSALocalServerKeyName = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRSALocalServerKeyName.setStatus('current')
hh3cRSALocalServerKeyCode = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(512, 1024))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRSALocalServerKeyCode.setStatus('current')
hh3cRSALocalServerKeyCreatedTime = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cRSALocalServerKeyCreatedTime.setStatus('current')
hh3cRSALocalKeyPairBits = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 2048)).clone(512)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRSALocalKeyPairBits.setStatus('current')
hh3cRSALocalKeyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 2, 1, 9), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hh3cRSALocalKeyStatus.setStatus('current')
hh3cRSAPeerKeyConfigFailReason = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 3), RSAKeyErrorCode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cRSAPeerKeyConfigFailReason.setStatus('current')
hh3cRSALocalKeyFailReason = MibScalar((1, 3, 6, 1, 4, 1, 25506, 2, 23, 1, 4), RSAKeyErrorCode()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cRSALocalKeyFailReason.setStatus('current')
hh3cRSANotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 2, 23, 2))
hh3cRSALocalKeyPairOpeFail = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 23, 2, 1)).setObjects(("HH3C-RSA-MIB", "hh3cRSALocalKeyFailReason"))
if mibBuilder.loadTexts: hh3cRSALocalKeyPairOpeFail.setStatus('current')
hh3cRSAPeerKeyConfigFail = NotificationType((1, 3, 6, 1, 4, 1, 25506, 2, 23, 2, 2)).setObjects(("HH3C-RSA-MIB", "hh3cRSAPeerKeyConfigFailReason"))
if mibBuilder.loadTexts: hh3cRSAPeerKeyConfigFail.setStatus('current')
mibBuilder.exportSymbols("HH3C-RSA-MIB", hh3cRSALocalKeyPairTable=hh3cRSALocalKeyPairTable, hh3cRSAPeerFQDN=hh3cRSAPeerFQDN, hh3cRSAPeerPublicKeyTable=hh3cRSAPeerPublicKeyTable, hh3cRSA=hh3cRSA, hh3cRSAPeerKeyConfigFail=hh3cRSAPeerKeyConfigFail, hh3cRSANotifications=hh3cRSANotifications, hh3cRSALocalHostKeyCode=hh3cRSALocalHostKeyCode, hh3cRSAPeerPublicKeyName=hh3cRSAPeerPublicKeyName, hh3cRSAPeerPublicKeyCode=hh3cRSAPeerPublicKeyCode, hh3cRSAPeerPublicKeyStatus=hh3cRSAPeerPublicKeyStatus, hh3cRSALocalHostKeyName=hh3cRSALocalHostKeyName, hh3cRSAPeerIpAddress=hh3cRSAPeerIpAddress, hh3cRSALocalServerKeyName=hh3cRSALocalServerKeyName, hh3cRSALocalKeyFailReason=hh3cRSALocalKeyFailReason, hh3cRSALocalServerKeyCode=hh3cRSALocalServerKeyCode, hh3cRSALocalServerKeyCreatedTime=hh3cRSALocalServerKeyCreatedTime, hh3cRSAPeerPublicKeyEntry=hh3cRSAPeerPublicKeyEntry, hh3cRSAPeerKeyConfigFailReason=hh3cRSAPeerKeyConfigFailReason, hh3cRSALocalKeyPairBits=hh3cRSALocalKeyPairBits, hh3cRSALocalKeyIndex=hh3cRSALocalKeyIndex, hh3cRSALocalKeyPairEntry=hh3cRSALocalKeyPairEntry, hh3cRSALocalHostKeyCreatedTime=hh3cRSALocalHostKeyCreatedTime, PYSNMP_MODULE_ID=hh3cRSA, RSAKeyErrorCode=RSAKeyErrorCode, hh3cRSAMIBObjects=hh3cRSAMIBObjects, hh3cRSALocalKeyPairOpeFail=hh3cRSALocalKeyPairOpeFail, hh3cRSALocalKeyStatus=hh3cRSALocalKeyStatus)
