#
# PySNMP MIB module DNOS-DNS-RESOLVER-CONTROL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/DNOS-DNS-RESOLVER-CONTROL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:36:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
dnOS, = mibBuilder.importSymbols("DELL-REF-MIB", "dnOS")
InterfaceIndexOrZero, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, MibIdentifier, ModuleIdentity, TimeTicks, Integer32, NotificationType, Bits, Counter64, Unsigned32, iso, IpAddress, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "MibIdentifier", "ModuleIdentity", "TimeTicks", "Integer32", "NotificationType", "Bits", "Counter64", "Unsigned32", "iso", "IpAddress", "Gauge32")
RowStatus, TruthValue, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "TextualConvention", "DisplayString")
fastPathDnsResControlMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37))
fastPathDnsResControlMIB.setRevisions(('2011-12-14 00:00', '2011-01-26 00:00', '2007-05-23 00:00', '2005-03-28 11:00',))
if mibBuilder.loadTexts: fastPathDnsResControlMIB.setLastUpdated('201112140000Z')
if mibBuilder.loadTexts: fastPathDnsResControlMIB.setOrganization('Dell, Inc.')
class DnsCacheEntryType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("dnsCacheAddresstype", 1), ("dnsCacheCnametye", 2))

fastPathDnsResCtlMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1))
agentResCtlglobal = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1))
agentResCtlServConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 2))
agentResCtlStaticServConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 3))
agentResCtlAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentResCtlAdminMode.setStatus('current')
agentResCtlDefDomainName = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentResCtlDefDomainName.setStatus('current')
agentResCtlCacheFlushStatus = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dnsCacheFlushEnable", 1), ("dnsCacheFlushDisable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentResCtlCacheFlushStatus.setStatus('current')
agentResCtlRequestTimeout = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3600)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentResCtlRequestTimeout.setStatus('current')
agentResCtlRequestRetransmits = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentResCtlRequestRetransmits.setStatus('current')
agentResCtlDomainListTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 6), )
if mibBuilder.loadTexts: agentResCtlDomainListTable.setStatus('current')
agentResCtlDomainListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 6, 1), ).setIndexNames((0, "DNOS-DNS-RESOLVER-CONTROL-MIB", "agentResCtlDomainListName"))
if mibBuilder.loadTexts: agentResCtlDomainListEntry.setStatus('current')
agentResCtlDomainListName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 6, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: agentResCtlDomainListName.setStatus('current')
agentResCtlDomainListNameStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentResCtlDomainListNameStatus.setStatus('current')
agentResCtlServConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 2, 1), )
if mibBuilder.loadTexts: agentResCtlServConfigTable.setStatus('current')
agentResCtlConfigIPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 2, 1, 1), ).setIndexNames((0, "DNOS-DNS-RESOLVER-CONTROL-MIB", "agentResCtlDnsNameServerIPType"), (0, "DNOS-DNS-RESOLVER-CONTROL-MIB", "agentResCtlDnsNameServerIP"))
if mibBuilder.loadTexts: agentResCtlConfigIPEntry.setStatus('current')
agentResCtlDnsNameServerIPType = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 2, 1, 1, 1), InetAddressType())
if mibBuilder.loadTexts: agentResCtlDnsNameServerIPType.setStatus('current')
agentResCtlDnsNameServerIP = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 2, 1, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: agentResCtlDnsNameServerIP.setStatus('current')
agentResCtlDnsNameServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 2, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentResCtlDnsNameServerStatus.setStatus('current')
agentResCtlStaticServConfigTable = MibTable((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 3, 1), )
if mibBuilder.loadTexts: agentResCtlStaticServConfigTable.setStatus('current')
agentResCtlStaticServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 3, 1, 1), ).setIndexNames((0, "DNOS-DNS-RESOLVER-CONTROL-MIB", "agentResCtlStaticHostName"), (0, "DNOS-DNS-RESOLVER-CONTROL-MIB", "agentResCtlStaticIPAddress"))
if mibBuilder.loadTexts: agentResCtlStaticServEntry.setStatus('current')
agentResCtlStaticHostName = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 3, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255)))
if mibBuilder.loadTexts: agentResCtlStaticHostName.setStatus('current')
agentResCtlStaticIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 3, 1, 1, 2), IpAddress())
if mibBuilder.loadTexts: agentResCtlStaticIPAddress.setStatus('current')
agentResCtlStaticNameServerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 3, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: agentResCtlStaticNameServerStatus.setStatus('current')
agentResCtlSourceInterface = MibScalar((1, 3, 6, 1, 4, 1, 674, 10895, 5000, 2, 6132, 1, 1, 37, 1, 1, 7), InterfaceIndexOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: agentResCtlSourceInterface.setStatus('current')
mibBuilder.exportSymbols("DNOS-DNS-RESOLVER-CONTROL-MIB", fastPathDnsResCtlMIBObjects=fastPathDnsResCtlMIBObjects, agentResCtlStaticServEntry=agentResCtlStaticServEntry, agentResCtlDomainListName=agentResCtlDomainListName, agentResCtlServConfigTable=agentResCtlServConfigTable, agentResCtlDomainListTable=agentResCtlDomainListTable, agentResCtlDomainListNameStatus=agentResCtlDomainListNameStatus, agentResCtlDefDomainName=agentResCtlDefDomainName, agentResCtlConfigIPEntry=agentResCtlConfigIPEntry, agentResCtlCacheFlushStatus=agentResCtlCacheFlushStatus, agentResCtlglobal=agentResCtlglobal, agentResCtlDnsNameServerIP=agentResCtlDnsNameServerIP, agentResCtlRequestRetransmits=agentResCtlRequestRetransmits, agentResCtlStaticIPAddress=agentResCtlStaticIPAddress, agentResCtlDnsNameServerStatus=agentResCtlDnsNameServerStatus, agentResCtlDomainListEntry=agentResCtlDomainListEntry, PYSNMP_MODULE_ID=fastPathDnsResControlMIB, fastPathDnsResControlMIB=fastPathDnsResControlMIB, agentResCtlStaticHostName=agentResCtlStaticHostName, agentResCtlStaticServConfig=agentResCtlStaticServConfig, agentResCtlDnsNameServerIPType=agentResCtlDnsNameServerIPType, agentResCtlAdminMode=agentResCtlAdminMode, agentResCtlSourceInterface=agentResCtlSourceInterface, agentResCtlServConfig=agentResCtlServConfig, agentResCtlStaticNameServerStatus=agentResCtlStaticNameServerStatus, agentResCtlRequestTimeout=agentResCtlRequestTimeout, DnsCacheEntryType=DnsCacheEntryType, agentResCtlStaticServConfigTable=agentResCtlStaticServConfigTable)
