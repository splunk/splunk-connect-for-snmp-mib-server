#
# PySNMP MIB module ZYXEL-MVR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ZYXEL-MVR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:44:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
dot1dBasePort, = mibBuilder.importSymbols("BRIDGE-MIB", "dot1dBasePort")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
EnabledStatus, = mibBuilder.importSymbols("P-BRIDGE-MIB", "EnabledStatus")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, IpAddress, iso, MibIdentifier, Unsigned32, ModuleIdentity, NotificationType, Gauge32, Counter64, TimeTicks, Counter32, Bits, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "IpAddress", "iso", "MibIdentifier", "Unsigned32", "ModuleIdentity", "NotificationType", "Gauge32", "Counter64", "TimeTicks", "Counter32", "Bits", "ObjectIdentity")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
esMgmt, = mibBuilder.importSymbols("ZYXEL-ES-SMI", "esMgmt")
zyxelMvr = ModuleIdentity((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55))
if mibBuilder.loadTexts: zyxelMvr.setLastUpdated('201207010000Z')
if mibBuilder.loadTexts: zyxelMvr.setOrganization('Enterprise Solution ZyXEL')
zyxelMvrSetup = MibIdentifier((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1))
zyMvrMaxNumberOfVlans = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMvrMaxNumberOfVlans.setStatus('current')
zyxelMvrTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 2), )
if mibBuilder.loadTexts: zyxelMvrTable.setStatus('current')
zyxelMvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 2, 1), ).setIndexNames((0, "ZYXEL-MVR-MIB", "zyMvrVid"))
if mibBuilder.loadTexts: zyxelMvrEntry.setStatus('current')
zyMvrVid = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 2, 1, 1), Integer32())
if mibBuilder.loadTexts: zyMvrVid.setStatus('current')
zyMvrName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 2, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMvrName.setStatus('current')
zyMvrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("dynamic", 0), ("compatible", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMvrMode.setStatus('current')
zyMvr8021pPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMvr8021pPriority.setStatus('current')
zyMvrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 2, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyMvrRowStatus.setStatus('current')
zyxelMvrPortTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 3), )
if mibBuilder.loadTexts: zyxelMvrPortTable.setStatus('current')
zyxelMvrPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 3, 1), ).setIndexNames((0, "ZYXEL-MVR-MIB", "zyMvrVid"), (0, "BRIDGE-MIB", "dot1dBasePort"))
if mibBuilder.loadTexts: zyxelMvrPortEntry.setStatus('current')
zyMvrPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("sourcePort", 2), ("receiverPort", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMvrPortRole.setStatus('current')
zyMvrPortTagging = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 3, 1, 2), EnabledStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMvrPortTagging.setStatus('current')
zyMvrMaxNumberOfGroups = MibScalar((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMvrMaxNumberOfGroups.setStatus('current')
zyxelMvrGroupTable = MibTable((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 5), )
if mibBuilder.loadTexts: zyxelMvrGroupTable.setStatus('current')
zyxelMvrGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 5, 1), ).setIndexNames((0, "ZYXEL-MVR-MIB", "zyMvrVid"), (0, "ZYXEL-MVR-MIB", "zyMvrGroupName"))
if mibBuilder.loadTexts: zyxelMvrGroupEntry.setStatus('current')
zyMvrGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 5, 1, 1), DisplayString())
if mibBuilder.loadTexts: zyMvrGroupName.setStatus('current')
zyMvrGroupStartIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 5, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMvrGroupStartIpAddressType.setStatus('current')
zyMvrGroupStartIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 5, 1, 3), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMvrGroupStartIpAddress.setStatus('current')
zyMvrGroupEndIpAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 5, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zyMvrGroupEndIpAddressType.setStatus('current')
zyMvrGroupEndIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 5, 1, 5), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zyMvrGroupEndIpAddress.setStatus('current')
zyMvrGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 890, 1, 15, 3, 55, 1, 5, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zyMvrGroupRowStatus.setStatus('current')
mibBuilder.exportSymbols("ZYXEL-MVR-MIB", zyMvrRowStatus=zyMvrRowStatus, zyxelMvrGroupEntry=zyxelMvrGroupEntry, zyMvrMode=zyMvrMode, zyMvrVid=zyMvrVid, zyMvrMaxNumberOfVlans=zyMvrMaxNumberOfVlans, zyMvrName=zyMvrName, zyMvrGroupEndIpAddressType=zyMvrGroupEndIpAddressType, zyMvrPortTagging=zyMvrPortTagging, zyxelMvrSetup=zyxelMvrSetup, zyxelMvrPortTable=zyxelMvrPortTable, zyxelMvrEntry=zyxelMvrEntry, zyxelMvrTable=zyxelMvrTable, PYSNMP_MODULE_ID=zyxelMvr, zyMvrGroupStartIpAddress=zyMvrGroupStartIpAddress, zyMvrPortRole=zyMvrPortRole, zyMvrGroupRowStatus=zyMvrGroupRowStatus, zyxelMvrPortEntry=zyxelMvrPortEntry, zyMvr8021pPriority=zyMvr8021pPriority, zyMvrGroupEndIpAddress=zyMvrGroupEndIpAddress, zyMvrMaxNumberOfGroups=zyMvrMaxNumberOfGroups, zyxelMvrGroupTable=zyxelMvrGroupTable, zyxelMvr=zyxelMvr, zyMvrGroupStartIpAddressType=zyMvrGroupStartIpAddressType, zyMvrGroupName=zyMvrGroupName)
