#
# PySNMP MIB module BWM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BWM-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:25:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ValueSizeConstraint")
ipAddrEntry, = mibBuilder.importSymbols("IP-MIB", "ipAddrEntry")
rndErrorDesc, rsBWM, rndErrorSeverity = mibBuilder.importSymbols("RADWARE-MIB", "rndErrorDesc", "rsBWM", "rndErrorSeverity")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Integer32, Bits, NotificationType, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter32, Gauge32, IpAddress, NotificationType, enterprises, ModuleIdentity, MibIdentifier, Unsigned32, iso = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Integer32", "Bits", "NotificationType", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter32", "Gauge32", "IpAddress", "NotificationType", "enterprises", "ModuleIdentity", "MibIdentifier", "Unsigned32", "iso")
PhysAddress, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress", "TextualConvention", "DisplayString")
class TruthValue(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("true", 1), ("false", 2))

class RowStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("active", 1), ("notInService", 2), ("notReady", 3), ("createAndGo", 4), ("createAndWait", 5), ("destroy", 6))

class NetNumber(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(4, 4)
    fixedLength = 4

rsBWMRulesTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1), )
if mibBuilder.loadTexts: rsBWMRulesTable.setStatus('mandatory')
rsBWMRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMRulesName"))
if mibBuilder.loadTexts: rsBWMRulesEntry.setStatus('mandatory')
rsBWMRulesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesIndex.setStatus('mandatory')
rsBWMRulesName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMRulesName.setStatus('mandatory')
rsBWMRulesDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesDestination.setStatus('mandatory')
rsBWMRulesSource = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesSource.setStatus('mandatory')
rsBWMRulesStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesStatus.setStatus('mandatory')
rsBWMRulesAction = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("forward", 1), ("block", 2), ("blockAndReset", 3), ("blockAndBiDirectionalReset", 4), ("monitorHTTP", 5), ("monitorHTTPS", 6))).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesAction.setStatus('mandatory')
rsBWMRulesDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oneway", 1), ("twoway", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesDirection.setStatus('mandatory')
rsBWMRulesPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 8), Integer32().clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesPriority.setStatus('mandatory')
rsBWMRulesPhysicalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesPhysicalPort.setStatus('mandatory')
rsBWMRulesType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("facsBandwidth", 1), ("counter", 2), ("ids", 3))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesType.setStatus('mandatory')
rsBWMRulesDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesDescription.setStatus('mandatory')
rsBWMRulesGuaranteedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 12), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesGuaranteedBW.setStatus('mandatory')
rsBWMRulesPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("filter", 2), ("group", 3), ("policy", 4))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesPolicyType.setStatus('mandatory')
rsBWMRulesPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesPolicy.setStatus('mandatory')
rsBWMRulesOperationalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("inactive", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesOperationalStatus.setStatus('mandatory')
rsBWMRulesDSCPMarking = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesDSCPMarking.setStatus('mandatory')
rsBWMRulesReportBlockedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesReportBlockedPackets.setStatus('mandatory')
rsBWMRulesMaxBW = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 1, 18), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesMaxBW.setStatus('mandatory')
rsBWMDummy1 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy1.setStatus('mandatory')
rsBWMRulesIPObjectTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2), )
if mibBuilder.loadTexts: rsBWMRulesIPObjectTable.setStatus('mandatory')
rsBWMRulesIPObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMRulesIPObjectName"), (0, "BWM-MIB", "rsBWMRulesIPObjectSubIndex"))
if mibBuilder.loadTexts: rsBWMRulesIPObjectEntry.setStatus('mandatory')
rsBWMRulesIPObjectName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMRulesIPObjectName.setStatus('mandatory')
rsBWMRulesIPObjectSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMRulesIPObjectSubIndex.setStatus('mandatory')
rsBWMRulesIPObjectAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesIPObjectAddress.setStatus('mandatory')
rsBWMRulesIPObjectMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesIPObjectMask.setStatus('mandatory')
rsBWMRulesIPObjectFromIP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesIPObjectFromIP.setStatus('mandatory')
rsBWMRulesIPObjectToIP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesIPObjectToIP.setStatus('mandatory')
rsBWMRulesIPObjectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipMask", 1), ("ipRange", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesIPObjectMode.setStatus('mandatory')
rsBWMRulesIPObjectStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 1, 8), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRulesIPObjectStatus.setStatus('mandatory')
rsBWMDummy2 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 2, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy2.setStatus('mandatory')
rsBWMCBQMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("cyclic", 1), ("cbq", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMCBQMode.setStatus('mandatory')
rsBWMActualQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMActualQueueSize.setStatus('mandatory')
rsBWMAverageQueueSize = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMAverageQueueSize.setStatus('mandatory')
rsBWMQueueRedDropped = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMQueueRedDropped.setStatus('mandatory')
rsBWMPriorityTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 7), )
if mibBuilder.loadTexts: rsBWMPriorityTable.setStatus('mandatory')
rsBWMPriorityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 7, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMPriority"))
if mibBuilder.loadTexts: rsBWMPriorityEntry.setStatus('mandatory')
rsBWMPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMPriority.setStatus('mandatory')
rsBWMPacketsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMPacketsSent.setStatus('mandatory')
rsBWMDummy3 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 7, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy3.setStatus('mandatory')
rsBWMRedMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("global", 2), ("weighted", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMRedMode.setStatus('mandatory')
rsBWMCurrentRulesTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9), )
if mibBuilder.loadTexts: rsBWMCurrentRulesTable.setStatus('mandatory')
rsBWMCurrentRulesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMCurrentRulesName"))
if mibBuilder.loadTexts: rsBWMCurrentRulesEntry.setStatus('mandatory')
rsBWMCurrentRulesIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesIndex.setStatus('mandatory')
rsBWMCurrentRulesName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesName.setStatus('mandatory')
rsBWMCurrentRulesDestination = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesDestination.setStatus('mandatory')
rsBWMCurrentRulesSource = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesSource.setStatus('mandatory')
rsBWMCurrentRulesAction = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("forward", 1), ("block", 2), ("blockAndReset", 3), ("blockAndBiDirectionalReset", 4), ("monitorHTTP", 5), ("monitorHTTPS", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesAction.setStatus('mandatory')
rsBWMCurrentRulesDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oneway", 1), ("twoway", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesDirection.setStatus('mandatory')
rsBWMCurrentRulesPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesPriority.setStatus('mandatory')
rsBWMCurrentRulesPhysicalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesPhysicalPort.setStatus('mandatory')
rsBWMCurrentRulesType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("facsBandwidth", 1), ("counter", 2), ("ids", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesType.setStatus('mandatory')
rsBWMCurrentRulesDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesDescription.setStatus('mandatory')
rsBWMCurrentRulesGuaranteedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesGuaranteedBW.setStatus('mandatory')
rsBWMCurrentRulesMaxBW = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesMaxBW.setStatus('mandatory')
rsBWMCurrentRulesPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("filter", 2), ("group", 3), ("policy", 4))).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesPolicyType.setStatus('mandatory')
rsBWMCurrentRulesPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesPolicy.setStatus('mandatory')
rsBWMCurrentRulesDSCPMarking = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesDSCPMarking.setStatus('mandatory')
rsBWMCurrentRulesReportBlockedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesReportBlockedPackets.setStatus('mandatory')
rsBWMDummy4 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 9, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy4.setStatus('mandatory')
rsBWMCurrentRulesIPObjectTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10), )
if mibBuilder.loadTexts: rsBWMCurrentRulesIPObjectTable.setStatus('mandatory')
rsBWMCurrentRulesIPObjectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMCurrentRulesIPObjectName"), (0, "BWM-MIB", "rsBWMCurrentRulesIPObjectSubIndex"))
if mibBuilder.loadTexts: rsBWMCurrentRulesIPObjectEntry.setStatus('mandatory')
rsBWMCurrentRulesIPObjectName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesIPObjectName.setStatus('mandatory')
rsBWMCurrentRulesIPObjectSubIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesIPObjectSubIndex.setStatus('mandatory')
rsBWMCurrentRulesIPObjectAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesIPObjectAddress.setStatus('mandatory')
rsBWMCurrentRulesIPObjectMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10, 1, 4), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesIPObjectMask.setStatus('mandatory')
rsBWMCurrentRulesIPObjectFromIP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10, 1, 5), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesIPObjectFromIP.setStatus('mandatory')
rsBWMCurrentRulesIPObjectToIP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10, 1, 6), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesIPObjectToIP.setStatus('mandatory')
rsBWMCurrentRulesIPObjectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipMask", 1), ("ipRange", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentRulesIPObjectMode.setStatus('mandatory')
rsBWMDummy5 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 10, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy5.setStatus('mandatory')
rsBWMClassificationMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("policies", 1), ("disabled", 2), ("diffserv", 3), ("tos", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMClassificationMode.setStatus('mandatory')
rsBWMMaximumBandwidth = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMMaximumBandwidth.setStatus('mandatory')
rsBWMBandwidthBorrowingMode = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMBandwidthBorrowingMode.setStatus('mandatory')
rsBWMActions = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("updateRules", 1), ("defaultDSCPs", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMActions.setStatus('mandatory')
rsBWMFilterEntryTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15), )
if mibBuilder.loadTexts: rsBWMFilterEntryTable.setStatus('mandatory')
rsBWMFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMFilterName"))
if mibBuilder.loadTexts: rsBWMFilterEntry.setStatus('mandatory')
rsBWMFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMFilterName.setStatus('mandatory')
rsBWMFilterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterDescription.setStatus('mandatory')
rsBWMFilterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ip", 1), ("tcp", 2), ("udp", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterProtocol.setStatus('mandatory')
rsBWMFilterDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterDestinationPort.setStatus('mandatory')
rsBWMFilterSourceFromPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterSourceFromPort.setStatus('mandatory')
rsBWMFilterSourceToPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterSourceToPort.setStatus('mandatory')
rsBWMFilterOMPCOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterOMPCOffset.setStatus('mandatory')
rsBWMFilterOMPCMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterOMPCMask.setStatus('mandatory')
rsBWMFilterOMPCPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterOMPCPattern.setStatus('mandatory')
rsBWMFilterOMPCCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notApplicable", 1), ("equal", 2), ("notEqual", 3), ("greaterThan", 4), ("lessThan", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterOMPCCondition.setStatus('mandatory')
rsBWMFilterOMPCLength = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("oneByte", 1), ("twoBytes", 2), ("threeBytes", 3), ("fourBytes", 4), ("notApplicable", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterOMPCLength.setStatus('mandatory')
rsBWMFilterContentOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterContentOffset.setStatus('mandatory')
rsBWMFilterContent = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterContent.setStatus('mandatory')
rsBWMFilterContentType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("url", 2), ("text", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterContentType.setStatus('mandatory')
rsBWMFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("regular", 1), ("static", 2), ("ids", 3), ("idsStatic", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterType.setStatus('mandatory')
rsBWMFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 1, 16), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterStatus.setStatus('mandatory')
rsBWMDummy6 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 15, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy6.setStatus('mandatory')
rsBWMCurrentFilterEntryTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16), )
if mibBuilder.loadTexts: rsBWMCurrentFilterEntryTable.setStatus('mandatory')
rsBWMCurrentFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMCurrentFilterName"))
if mibBuilder.loadTexts: rsBWMCurrentFilterEntry.setStatus('mandatory')
rsBWMCurrentFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterName.setStatus('mandatory')
rsBWMCurrentFilterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterDescription.setStatus('mandatory')
rsBWMCurrentFilterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ip", 1), ("tcp", 2), ("udp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterProtocol.setStatus('mandatory')
rsBWMCurrentFilterDestinationPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterDestinationPort.setStatus('mandatory')
rsBWMCurrentFilterSourceFromPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterSourceFromPort.setStatus('mandatory')
rsBWMCurrentFilterSourceToPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterSourceToPort.setStatus('mandatory')
rsBWMCurrentFilterOMPCOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterOMPCOffset.setStatus('mandatory')
rsBWMCurrentFilterOMPCMask = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterOMPCMask.setStatus('mandatory')
rsBWMCurrentFilterOMPCPattern = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterOMPCPattern.setStatus('mandatory')
rsBWMCurrentFilterOMPCCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("notApplicable", 1), ("equal", 2), ("notEqual", 3), ("greaterThan", 4), ("lessThan", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterOMPCCondition.setStatus('mandatory')
rsBWMCurrentFilterOMPCLength = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("oneByte", 1), ("twoBytes", 2), ("threeBytes", 3), ("fourBytes", 4), ("notApplicable", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterOMPCLength.setStatus('mandatory')
rsBWMCurrentFilterContentOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterContentOffset.setStatus('mandatory')
rsBWMCurrentFilterContent = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterContent.setStatus('mandatory')
rsBWMCurrentFilterContentType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("notApplicable", 1), ("url", 2), ("text", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterContentType.setStatus('mandatory')
rsBWMCurrentFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("regular", 1), ("static", 2), ("ids", 3), ("idsStatic", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterType.setStatus('mandatory')
rsBWMDummy7 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 16, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy7.setStatus('mandatory')
rsBWMFilterGroupTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 17), )
if mibBuilder.loadTexts: rsBWMFilterGroupTable.setStatus('mandatory')
rsBWMFilterGroup = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 17, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMFilterGroupName"), (0, "BWM-MIB", "rsBWMFilterEntryName"))
if mibBuilder.loadTexts: rsBWMFilterGroup.setStatus('mandatory')
rsBWMFilterGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 17, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMFilterGroupName.setStatus('mandatory')
rsBWMFilterEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 17, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMFilterEntryName.setStatus('mandatory')
rsBWMFilterGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 17, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("regular", 1), ("static", 2), ("ids", 3), ("idsStatic", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterGroupType.setStatus('mandatory')
rsBWMFilterGroupStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 17, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterGroupStatus.setStatus('mandatory')
rsBWMDummy8 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 17, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy8.setStatus('mandatory')
rsBWMCurrentFilterGroupTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 18), )
if mibBuilder.loadTexts: rsBWMCurrentFilterGroupTable.setStatus('mandatory')
rsBWMCurrentFilterGroup = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 18, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMCurrentFilterGroupName"), (0, "BWM-MIB", "rsBWMCurrentFilterEntryName"))
if mibBuilder.loadTexts: rsBWMCurrentFilterGroup.setStatus('mandatory')
rsBWMCurrentFilterGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 18, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterGroupName.setStatus('mandatory')
rsBWMCurrentFilterEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 18, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterEntryName.setStatus('mandatory')
rsBWMCurrentFilterGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 18, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("regular", 1), ("static", 2), ("ids", 3), ("idsStatic", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterGroupType.setStatus('mandatory')
rsBWMDummy9 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 18, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy9.setStatus('mandatory')
rsBWMFilterPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 19), )
if mibBuilder.loadTexts: rsBWMFilterPolicyTable.setStatus('mandatory')
rsBWMFilterPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 19, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMFilterPolicyName"), (0, "BWM-MIB", "rsBWMFilterPolicyEntryName"))
if mibBuilder.loadTexts: rsBWMFilterPolicyEntry.setStatus('mandatory')
rsBWMFilterPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 19, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMFilterPolicyName.setStatus('mandatory')
rsBWMFilterPolicyEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 19, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMFilterPolicyEntryName.setStatus('mandatory')
rsBWMFilterPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 19, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("regular", 1), ("static", 2), ("ids", 3), ("idsStatic", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterPolicyType.setStatus('mandatory')
rsBWMFilterPolicyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 19, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterPolicyStatus.setStatus('mandatory')
rsBWMDummy10 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 19, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy10.setStatus('mandatory')
rsBWMCurrentFilterPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 20), )
if mibBuilder.loadTexts: rsBWMCurrentFilterPolicyTable.setStatus('mandatory')
rsBWMCurrentFilterPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 20, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMCurrentFilterPolicyName"), (0, "BWM-MIB", "rsBWMCurrentFilterPolicyEntryName"))
if mibBuilder.loadTexts: rsBWMCurrentFilterPolicyEntry.setStatus('mandatory')
rsBWMCurrentFilterPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 20, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterPolicyName.setStatus('mandatory')
rsBWMCurrentFilterPolicyEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 20, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentFilterPolicyEntryName.setStatus('mandatory')
rsBWMCurrentFilterPolicyType = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 20, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("regular", 1), ("static", 2), ("ids", 3), ("idsStatic", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMCurrentFilterPolicyType.setStatus('mandatory')
rsBWMDummy11 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 20, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy11.setStatus('mandatory')
rsBWMApplicationClassification = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMApplicationClassification.setStatus('mandatory')
rsBWMPortBandwidthEntryTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 22), )
if mibBuilder.loadTexts: rsBWMPortBandwidthEntryTable.setStatus('mandatory')
rsBWMPortBandwidthEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 22, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMPortIndex"))
if mibBuilder.loadTexts: rsBWMPortBandwidthEntry.setStatus('mandatory')
rsBWMPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 22, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMPortIndex.setStatus('mandatory')
rsBWMPortBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 22, 1, 2), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMPortBandwidth.setStatus('mandatory')
rsBwmPortUsedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 22, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBwmPortUsedBandwidth.setStatus('mandatory')
rsBWMDummy12 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 22, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy12.setStatus('mandatory')
rsBWMTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23))
rsBWMPolicyTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 1))
rsBWMPolicyEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMPolicyEntries.setStatus('mandatory')
rsBWMPolicyEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMPolicyEntriesAfterReset.setStatus('mandatory')
rsBWMNetworkTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 2))
rsBWMNetworkEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMNetworkEntries.setStatus('mandatory')
rsBWMNetworkEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 2, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMNetworkEntriesAfterReset.setStatus('mandatory')
rsBWMFilterTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 3))
rsBWMFilterEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 3, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMFilterEntries.setStatus('mandatory')
rsBWMFilterEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 3, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMFilterEntriesAfterReset.setStatus('mandatory')
rsBWMAdvancedTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 4))
rsBWMAdvancedEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 4, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMAdvancedEntries.setStatus('mandatory')
rsBWMAdvancedEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMAdvancedEntriesAfterReset.setStatus('mandatory')
rsBWMGroupTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 5))
rsBWMGroupEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 5, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMGroupEntries.setStatus('mandatory')
rsBWMGroupEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 5, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMGroupEntriesAfterReset.setStatus('mandatory')
rsBWMDestinationTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 6))
rsBWMDestinationEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 6, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDestinationEntries.setStatus('mandatory')
rsBWMDestinationEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMDestinationEntriesAfterReset.setStatus('mandatory')
rsBWMSessionTuning = MibIdentifier((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 7))
rsBWMSessionEntries = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 7, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMSessionEntries.setStatus('mandatory')
rsBWMSessionEntriesAfterReset = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 23, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMSessionEntriesAfterReset.setStatus('mandatory')
rsBWMDSCPEntryTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 24), )
if mibBuilder.loadTexts: rsBWMDSCPEntryTable.setStatus('mandatory')
rsBWMDSCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 24, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMDSCP"))
if mibBuilder.loadTexts: rsBWMDSCPEntry.setStatus('mandatory')
rsBWMDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDSCP.setStatus('mandatory')
rsBWMDSCPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 24, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMDSCPPriority.setStatus('mandatory')
rsBWMDSCPGuaranteedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 24, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMDSCPGuaranteedBW.setStatus('mandatory')
rsBWMDSCPMaxBW = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 24, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMDSCPMaxBW.setStatus('mandatory')
rsBWMDummy13 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 24, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy13.setStatus('mandatory')
rsBWMCurrentDSCPEntryTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 25), )
if mibBuilder.loadTexts: rsBWMCurrentDSCPEntryTable.setStatus('mandatory')
rsBWMCurrentDSCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 25, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMCurrentDSCP"))
if mibBuilder.loadTexts: rsBWMCurrentDSCPEntry.setStatus('mandatory')
rsBWMCurrentDSCP = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMCurrentDSCP.setStatus('mandatory')
rsBWMCurrentDSCPPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 25, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMCurrentDSCPPriority.setStatus('mandatory')
rsBWMCurrentDSCPGuaranteedBW = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 25, 1, 3), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMCurrentDSCPGuaranteedBW.setStatus('mandatory')
rsBWMCurrentDSCPMaxBW = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 25, 1, 4), Counter32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMCurrentDSCPMaxBW.setStatus('mandatory')
rsBWMDummy14 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 25, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy14.setStatus('mandatory')
rsBWMVersion = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 26), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMVersion.setStatus('mandatory')
rsBWMBwmPortOperationTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 27), )
if mibBuilder.loadTexts: rsBWMBwmPortOperationTable.setStatus('mandatory')
rsBWMBwmPortOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 27, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMBwmInboundPort"), (0, "BWM-MIB", "rsBWMBwmOutboundPort"))
if mibBuilder.loadTexts: rsBWMBwmPortOperationEntry.setStatus('mandatory')
rsBWMBwmInboundPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 27, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMBwmInboundPort.setStatus('mandatory')
rsBWMBwmOutboundPort = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 27, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMBwmOutboundPort.setStatus('mandatory')
rsBWMBwmDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 27, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("oneway", 1), ("twoway", 2))).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMBwmDirection.setStatus('mandatory')
rsBWMBwmOperationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 27, 1, 4), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMBwmOperationStatus.setStatus('mandatory')
rsBWMDummy15 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 27, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy15.setStatus('mandatory')
rsBWMBwmVLANOperationTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 28), )
if mibBuilder.loadTexts: rsBWMBwmVLANOperationTable.setStatus('mandatory')
rsBWMBwmVLANOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 28, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMBwmVLAN"))
if mibBuilder.loadTexts: rsBWMBwmVLANOperationEntry.setStatus('mandatory')
rsBWMBwmVLAN = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 28, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMBwmVLAN.setStatus('mandatory')
rsBWMBwmVLANOperationStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 28, 1, 2), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMBwmVLANOperationStatus.setStatus('mandatory')
rsBWMDummy16 = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 28, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMDummy16.setStatus('mandatory')
rsBWMSessionAgingTime = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMSessionAgingTime.setStatus('mandatory')
rsBWMStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30), )
if mibBuilder.loadTexts: rsBWMStatisticsTable.setStatus('mandatory')
rsBWMStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1), ).setIndexNames((0, "BWM-MIB", "rsBWMStatisticsPolicyName"))
if mibBuilder.loadTexts: rsBWMStatisticsEntry.setStatus('mandatory')
rsBWMStatisticsPolicyName = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsPolicyName.setStatus('mandatory')
rsBWMStatisticsBandwidthUsedLastSec = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsBandwidthUsedLastSec.setStatus('mandatory')
rsBWMStatisticsPacketNumberLastSec = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsPacketNumberLastSec.setStatus('mandatory')
rsBWMStatisticsFullQueueFailuresBWLastSec = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsFullQueueFailuresBWLastSec.setStatus('mandatory')
rsBWMStatisticsAgedPacketsFailuresBWLastSec = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsAgedPacketsFailuresBWLastSec.setStatus('mandatory')
rsBWMStatisticsGuaranteedReachedLastSec = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsGuaranteedReachedLastSec.setStatus('mandatory')
rsBWMStatisticsMaximumReachedLastSec = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsMaximumReachedLastSec.setStatus('mandatory')
rsBWMStatisticsBandwidthUsedLastPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsBandwidthUsedLastPeriod.setStatus('mandatory')
rsBWMStatisticsPeakBandwidthLastPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsPeakBandwidthLastPeriod.setStatus('mandatory')
rsBWMStatisticsPacketNumberLastPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsPacketNumberLastPeriod.setStatus('mandatory')
rsBWMStatisticsFullQueueFailuresBWLastPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsFullQueueFailuresBWLastPeriod.setStatus('mandatory')
rsBWMStatisticsAgedPacketsFailuresBWLastPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsAgedPacketsFailuresBWLastPeriod.setStatus('mandatory')
rsBWMStatisticsGuaranteedReachedCounterLastPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsGuaranteedReachedCounterLastPeriod.setStatus('mandatory')
rsBWMStatisticsMaximumReachedCounterLastPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rsBWMStatisticsMaximumReachedCounterLastPeriod.setStatus('mandatory')
rsBWMStatisticsMonitorPolicy = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMStatisticsMonitorPolicy.setStatus('mandatory')
rsBWMStatisticsTableUseSRP = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMStatisticsTableUseSRP.setStatus('mandatory')
rsBWMStatisticsReportingPeriod = MibScalar((1, 3, 6, 1, 4, 1, 89, 35, 1, 60, 30, 4), Integer32().clone(60)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rsBWMStatisticsReportingPeriod.setStatus('mandatory')
rsBWMPacketBlocked = NotificationType((1, 3, 6, 1, 4, 1, 89, 35, 1, 60) + (0,1)).setObjects(("RADWARE-MIB", "rndErrorDesc"), ("RADWARE-MIB", "rndErrorSeverity"))
mibBuilder.exportSymbols("BWM-MIB", rsBWMCurrentFilterPolicyType=rsBWMCurrentFilterPolicyType, rsBWMCurrentRulesIPObjectName=rsBWMCurrentRulesIPObjectName, rsBWMClassificationMode=rsBWMClassificationMode, rsBWMCurrentFilterOMPCLength=rsBWMCurrentFilterOMPCLength, rsBWMDummy9=rsBWMDummy9, rsBWMBwmVLANOperationStatus=rsBWMBwmVLANOperationStatus, rsBWMFilterGroupName=rsBWMFilterGroupName, rsBWMDSCPMaxBW=rsBWMDSCPMaxBW, rsBWMFilterOMPCLength=rsBWMFilterOMPCLength, rsBWMFilterPolicyTable=rsBWMFilterPolicyTable, rsBWMCurrentRulesIPObjectToIP=rsBWMCurrentRulesIPObjectToIP, rsBWMRulesIPObjectEntry=rsBWMRulesIPObjectEntry, rsBWMCurrentRulesIPObjectFromIP=rsBWMCurrentRulesIPObjectFromIP, rsBWMDummy13=rsBWMDummy13, rsBWMRulesReportBlockedPackets=rsBWMRulesReportBlockedPackets, rsBWMActualQueueSize=rsBWMActualQueueSize, rsBWMRulesIPObjectSubIndex=rsBWMRulesIPObjectSubIndex, rsBWMCurrentRulesDirection=rsBWMCurrentRulesDirection, rsBWMPacketsSent=rsBWMPacketsSent, rsBWMCurrentFilterEntryTable=rsBWMCurrentFilterEntryTable, rsBWMCurrentFilterOMPCPattern=rsBWMCurrentFilterOMPCPattern, rsBWMFilterEntries=rsBWMFilterEntries, rsBWMRulesOperationalStatus=rsBWMRulesOperationalStatus, rsBWMRulesPolicy=rsBWMRulesPolicy, rsBWMCurrentRulesIPObjectEntry=rsBWMCurrentRulesIPObjectEntry, rsBWMApplicationClassification=rsBWMApplicationClassification, rsBWMRulesIPObjectTable=rsBWMRulesIPObjectTable, rsBWMStatisticsPacketNumberLastSec=rsBWMStatisticsPacketNumberLastSec, rsBWMDestinationEntriesAfterReset=rsBWMDestinationEntriesAfterReset, rsBWMDummy11=rsBWMDummy11, rsBWMFilterOMPCPattern=rsBWMFilterOMPCPattern, rsBWMCurrentFilterName=rsBWMCurrentFilterName, rsBWMRulesSource=rsBWMRulesSource, rsBWMDummy15=rsBWMDummy15, rsBWMCurrentFilterPolicyEntry=rsBWMCurrentFilterPolicyEntry, rsBWMStatisticsPacketNumberLastPeriod=rsBWMStatisticsPacketNumberLastPeriod, rsBWMRulesIPObjectAddress=rsBWMRulesIPObjectAddress, rsBWMCurrentDSCPGuaranteedBW=rsBWMCurrentDSCPGuaranteedBW, rsBWMFilterEntry=rsBWMFilterEntry, rsBWMSessionTuning=rsBWMSessionTuning, rsBWMRulesIPObjectName=rsBWMRulesIPObjectName, rsBWMFilterPolicyType=rsBWMFilterPolicyType, rsBWMStatisticsFullQueueFailuresBWLastPeriod=rsBWMStatisticsFullQueueFailuresBWLastPeriod, rsBWMStatisticsAgedPacketsFailuresBWLastPeriod=rsBWMStatisticsAgedPacketsFailuresBWLastPeriod, rsBWMCurrentRulesPolicy=rsBWMCurrentRulesPolicy, rsBWMStatisticsPolicyName=rsBWMStatisticsPolicyName, rsBWMDestinationEntries=rsBWMDestinationEntries, rsBWMFilterPolicyEntryName=rsBWMFilterPolicyEntryName, rsBWMBwmOperationStatus=rsBWMBwmOperationStatus, rsBWMFilterDestinationPort=rsBWMFilterDestinationPort, rsBWMPortBandwidth=rsBWMPortBandwidth, rsBWMGroupEntriesAfterReset=rsBWMGroupEntriesAfterReset, rsBWMStatisticsBandwidthUsedLastPeriod=rsBWMStatisticsBandwidthUsedLastPeriod, rsBWMRulesIPObjectToIP=rsBWMRulesIPObjectToIP, rsBWMRulesPolicyType=rsBWMRulesPolicyType, rsBWMRulesType=rsBWMRulesType, rsBWMPriorityEntry=rsBWMPriorityEntry, rsBWMPortBandwidthEntry=rsBWMPortBandwidthEntry, rsBWMGroupEntries=rsBWMGroupEntries, rsBWMFilterOMPCOffset=rsBWMFilterOMPCOffset, rsBWMStatisticsMaximumReachedLastSec=rsBWMStatisticsMaximumReachedLastSec, rsBWMDSCPPriority=rsBWMDSCPPriority, rsBWMCurrentFilterType=rsBWMCurrentFilterType, rsBWMFilterGroupStatus=rsBWMFilterGroupStatus, rsBWMDSCP=rsBWMDSCP, rsBWMFilterPolicyStatus=rsBWMFilterPolicyStatus, rsBWMDSCPEntry=rsBWMDSCPEntry, rsBWMCurrentRulesTable=rsBWMCurrentRulesTable, rsBWMDummy12=rsBWMDummy12, rsBWMFilterContent=rsBWMFilterContent, rsBWMBwmVLAN=rsBWMBwmVLAN, rsBWMFilterContentOffset=rsBWMFilterContentOffset, NetNumber=NetNumber, rsBWMAdvancedTuning=rsBWMAdvancedTuning, rsBWMBwmPortOperationTable=rsBWMBwmPortOperationTable, rsBWMCurrentRulesMaxBW=rsBWMCurrentRulesMaxBW, rsBWMPriorityTable=rsBWMPriorityTable, rsBWMDummy10=rsBWMDummy10, rsBWMRulesDirection=rsBWMRulesDirection, rsBWMFilterType=rsBWMFilterType, rsBWMRulesName=rsBWMRulesName, rsBWMCurrentRulesDestination=rsBWMCurrentRulesDestination, rsBWMRulesAction=rsBWMRulesAction, rsBWMPolicyEntries=rsBWMPolicyEntries, rsBWMGroupTuning=rsBWMGroupTuning, rsBWMCurrentRulesPriority=rsBWMCurrentRulesPriority, rsBWMCBQMode=rsBWMCBQMode, rsBWMPortBandwidthEntryTable=rsBWMPortBandwidthEntryTable, rsBWMFilterGroupType=rsBWMFilterGroupType, rsBWMRulesEntry=rsBWMRulesEntry, rsBWMRulesPhysicalPort=rsBWMRulesPhysicalPort, rsBWMDummy6=rsBWMDummy6, rsBWMStatisticsEntry=rsBWMStatisticsEntry, rsBWMTuning=rsBWMTuning, rsBWMRulesStatus=rsBWMRulesStatus, rsBWMRulesDescription=rsBWMRulesDescription, rsBWMFilterEntryName=rsBWMFilterEntryName, rsBWMCurrentRulesIPObjectMask=rsBWMCurrentRulesIPObjectMask, rsBWMCurrentDSCPMaxBW=rsBWMCurrentDSCPMaxBW, rsBWMCurrentRulesType=rsBWMCurrentRulesType, rsBWMCurrentFilterEntryName=rsBWMCurrentFilterEntryName, rsBWMCurrentDSCPPriority=rsBWMCurrentDSCPPriority, rsBWMCurrentFilterDescription=rsBWMCurrentFilterDescription, rsBWMAverageQueueSize=rsBWMAverageQueueSize, rsBWMCurrentDSCPEntryTable=rsBWMCurrentDSCPEntryTable, rsBWMSessionEntriesAfterReset=rsBWMSessionEntriesAfterReset, rsBWMFilterTuning=rsBWMFilterTuning, rsBWMCurrentRulesIndex=rsBWMCurrentRulesIndex, rsBWMStatisticsBandwidthUsedLastSec=rsBWMStatisticsBandwidthUsedLastSec, rsBWMDummy14=rsBWMDummy14, rsBWMNetworkEntriesAfterReset=rsBWMNetworkEntriesAfterReset, rsBWMRulesGuaranteedBW=rsBWMRulesGuaranteedBW, rsBWMPriority=rsBWMPriority, rsBWMRulesIPObjectStatus=rsBWMRulesIPObjectStatus, rsBWMCurrentFilterOMPCOffset=rsBWMCurrentFilterOMPCOffset, rsBWMCurrentFilterPolicyEntryName=rsBWMCurrentFilterPolicyEntryName, rsBWMRulesTable=rsBWMRulesTable, rsBWMStatisticsFullQueueFailuresBWLastSec=rsBWMStatisticsFullQueueFailuresBWLastSec, rsBWMFilterEntriesAfterReset=rsBWMFilterEntriesAfterReset, rsBWMCurrentFilterGroupTable=rsBWMCurrentFilterGroupTable, rsBWMFilterContentType=rsBWMFilterContentType, rsBWMCurrentFilterPolicyName=rsBWMCurrentFilterPolicyName, rsBWMRulesDSCPMarking=rsBWMRulesDSCPMarking, rsBWMCurrentFilterDestinationPort=rsBWMCurrentFilterDestinationPort, rsBWMDummy8=rsBWMDummy8, rsBWMCurrentFilterPolicyTable=rsBWMCurrentFilterPolicyTable, rsBWMBwmPortOperationEntry=rsBWMBwmPortOperationEntry, rsBWMCurrentRulesSource=rsBWMCurrentRulesSource, rsBWMBwmVLANOperationEntry=rsBWMBwmVLANOperationEntry, rsBWMAdvancedEntriesAfterReset=rsBWMAdvancedEntriesAfterReset, rsBWMPolicyEntriesAfterReset=rsBWMPolicyEntriesAfterReset, rsBWMRulesDestination=rsBWMRulesDestination, rsBWMStatisticsReportingPeriod=rsBWMStatisticsReportingPeriod, rsBWMCurrentFilterGroupType=rsBWMCurrentFilterGroupType, rsBWMRedMode=rsBWMRedMode, rsBWMRulesIPObjectMask=rsBWMRulesIPObjectMask, rsBWMCurrentFilterOMPCCondition=rsBWMCurrentFilterOMPCCondition, rsBWMAdvancedEntries=rsBWMAdvancedEntries, rsBWMStatisticsPeakBandwidthLastPeriod=rsBWMStatisticsPeakBandwidthLastPeriod, rsBWMCurrentDSCP=rsBWMCurrentDSCP, rsBWMCurrentFilterSourceToPort=rsBWMCurrentFilterSourceToPort, rsBWMDSCPEntryTable=rsBWMDSCPEntryTable, rsBWMFilterSourceFromPort=rsBWMFilterSourceFromPort, rsBWMCurrentFilterEntry=rsBWMCurrentFilterEntry, rsBWMDummy16=rsBWMDummy16, rsBWMCurrentFilterProtocol=rsBWMCurrentFilterProtocol, rsBWMStatisticsGuaranteedReachedLastSec=rsBWMStatisticsGuaranteedReachedLastSec, rsBWMFilterName=rsBWMFilterName, rsBWMDummy4=rsBWMDummy4, rsBWMCurrentRulesName=rsBWMCurrentRulesName, rsBWMRulesPriority=rsBWMRulesPriority, rsBWMCurrentFilterContentType=rsBWMCurrentFilterContentType, TruthValue=TruthValue, rsBWMCurrentRulesDescription=rsBWMCurrentRulesDescription, rsBWMMaximumBandwidth=rsBWMMaximumBandwidth, rsBWMDummy2=rsBWMDummy2, rsBWMCurrentFilterOMPCMask=rsBWMCurrentFilterOMPCMask, rsBWMActions=rsBWMActions, rsBWMBwmInboundPort=rsBWMBwmInboundPort, rsBWMFilterGroupTable=rsBWMFilterGroupTable, rsBWMRulesIPObjectFromIP=rsBWMRulesIPObjectFromIP, rsBWMCurrentRulesIPObjectMode=rsBWMCurrentRulesIPObjectMode, rsBWMCurrentRulesIPObjectTable=rsBWMCurrentRulesIPObjectTable, rsBWMCurrentFilterContentOffset=rsBWMCurrentFilterContentOffset, rsBwmPortUsedBandwidth=rsBwmPortUsedBandwidth, rsBWMFilterDescription=rsBWMFilterDescription, rsBWMPolicyTuning=rsBWMPolicyTuning, rsBWMStatisticsTableUseSRP=rsBWMStatisticsTableUseSRP, rsBWMCurrentRulesReportBlockedPackets=rsBWMCurrentRulesReportBlockedPackets, rsBWMNetworkEntries=rsBWMNetworkEntries, rsBWMDummy7=rsBWMDummy7, RowStatus=RowStatus, rsBWMSessionAgingTime=rsBWMSessionAgingTime, rsBWMCurrentRulesGuaranteedBW=rsBWMCurrentRulesGuaranteedBW, rsBWMCurrentRulesIPObjectAddress=rsBWMCurrentRulesIPObjectAddress, rsBWMBwmVLANOperationTable=rsBWMBwmVLANOperationTable, rsBWMBandwidthBorrowingMode=rsBWMBandwidthBorrowingMode, rsBWMPacketBlocked=rsBWMPacketBlocked, rsBWMFilterEntryTable=rsBWMFilterEntryTable, rsBWMFilterGroup=rsBWMFilterGroup, rsBWMCurrentRulesPhysicalPort=rsBWMCurrentRulesPhysicalPort, rsBWMFilterOMPCCondition=rsBWMFilterOMPCCondition, rsBWMVersion=rsBWMVersion, rsBWMBwmOutboundPort=rsBWMBwmOutboundPort, rsBWMStatisticsAgedPacketsFailuresBWLastSec=rsBWMStatisticsAgedPacketsFailuresBWLastSec, rsBWMStatisticsMonitorPolicy=rsBWMStatisticsMonitorPolicy, rsBWMCurrentFilterSourceFromPort=rsBWMCurrentFilterSourceFromPort, rsBWMCurrentRulesEntry=rsBWMCurrentRulesEntry, rsBWMSessionEntries=rsBWMSessionEntries, rsBWMNetworkTuning=rsBWMNetworkTuning, rsBWMDummy3=rsBWMDummy3, rsBWMQueueRedDropped=rsBWMQueueRedDropped, rsBWMCurrentRulesAction=rsBWMCurrentRulesAction, rsBWMFilterStatus=rsBWMFilterStatus, rsBWMFilterProtocol=rsBWMFilterProtocol, rsBWMFilterPolicyName=rsBWMFilterPolicyName, rsBWMBwmDirection=rsBWMBwmDirection, rsBWMDSCPGuaranteedBW=rsBWMDSCPGuaranteedBW, rsBWMStatisticsTable=rsBWMStatisticsTable, rsBWMCurrentRulesIPObjectSubIndex=rsBWMCurrentRulesIPObjectSubIndex, rsBWMCurrentRulesPolicyType=rsBWMCurrentRulesPolicyType, rsBWMCurrentRulesDSCPMarking=rsBWMCurrentRulesDSCPMarking, rsBWMRulesIndex=rsBWMRulesIndex, rsBWMDestinationTuning=rsBWMDestinationTuning, rsBWMStatisticsGuaranteedReachedCounterLastPeriod=rsBWMStatisticsGuaranteedReachedCounterLastPeriod, rsBWMRulesMaxBW=rsBWMRulesMaxBW, rsBWMRulesIPObjectMode=rsBWMRulesIPObjectMode, rsBWMDummy5=rsBWMDummy5, rsBWMCurrentFilterContent=rsBWMCurrentFilterContent, rsBWMCurrentFilterGroup=rsBWMCurrentFilterGroup, rsBWMFilterPolicyEntry=rsBWMFilterPolicyEntry, rsBWMStatisticsMaximumReachedCounterLastPeriod=rsBWMStatisticsMaximumReachedCounterLastPeriod, rsBWMDummy1=rsBWMDummy1, rsBWMCurrentDSCPEntry=rsBWMCurrentDSCPEntry, rsBWMCurrentFilterGroupName=rsBWMCurrentFilterGroupName, rsBWMPortIndex=rsBWMPortIndex, rsBWMFilterOMPCMask=rsBWMFilterOMPCMask, rsBWMFilterSourceToPort=rsBWMFilterSourceToPort)
