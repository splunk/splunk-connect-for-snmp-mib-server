#
# PySNMP MIB module HH3C-VM-MAN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HH3C-VM-MAN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:17:29 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint")
entPhysicalAssetID, = mibBuilder.importSymbols("ENTITY-MIB", "entPhysicalAssetID")
hh3cSurveillanceMIB, = mibBuilder.importSymbols("HH3C-OID-MIB", "hh3cSurveillanceMIB")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibIdentifier, iso, Bits, Gauge32, ObjectIdentity, Unsigned32, Integer32, TimeTicks, ModuleIdentity, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibIdentifier", "iso", "Bits", "Gauge32", "ObjectIdentity", "Unsigned32", "Integer32", "TimeTicks", "ModuleIdentity", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Counter32")
DisplayString, TextualConvention, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "DateAndTime")
hh3cVMMan = ModuleIdentity((1, 3, 6, 1, 4, 1, 25506, 9, 1))
if mibBuilder.loadTexts: hh3cVMMan.setLastUpdated('200704130000Z')
if mibBuilder.loadTexts: hh3cVMMan.setOrganization('Hangzhou H3C Tech. Co., Ltd.')
hh3cVMManMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1))
hh3cVMCapabilitySet = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1, 1), Bits().clone(namedValues=NamedValues(("cms", 0), ("css", 1), ("dm", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVMCapabilitySet.setStatus('current')
hh3cVMStat = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1, 2))
hh3cVMStatTotalConnEstablishRequests = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1, 2, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVMStatTotalConnEstablishRequests.setStatus('current')
hh3cVMStatSuccConnEstablishRequests = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1, 2, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVMStatSuccConnEstablishRequests.setStatus('current')
hh3cVMStatFailConnEstablishRequests = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1, 2, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVMStatFailConnEstablishRequests.setStatus('current')
hh3cVMStatTotalConnReleaseRequests = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1, 2, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVMStatTotalConnReleaseRequests.setStatus('current')
hh3cVMStatSuccConnReleaseRequests = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1, 2, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVMStatSuccConnReleaseRequests.setStatus('current')
hh3cVMStatFailConnReleaseRequests = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1, 2, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVMStatFailConnReleaseRequests.setStatus('current')
hh3cVMStatExceptionTerminationConn = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 1, 2, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hh3cVMStatExceptionTerminationConn.setStatus('current')
hh3cVMManMIBTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2))
hh3cVMManTrapPrex = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0))
hh3cVMManDeviceOnlineTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 1)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"))
if mibBuilder.loadTexts: hh3cVMManDeviceOnlineTrap.setStatus('current')
hh3cVMManDeviceOfflineTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 2)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"))
if mibBuilder.loadTexts: hh3cVMManDeviceOfflineTrap.setStatus('current')
hh3cVMManForwardDeviceExternalSemaphoreTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 3)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUExternalInputAlarmChannelID"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceExternalSemaphoreTrap.setStatus('current')
hh3cVMManForwardDeviceVideoLossTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 4)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceVideoLossTrap.setStatus('current')
hh3cVMManForwardDeviceVideoRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 5)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceVideoRecoverTrap.setStatus('current')
hh3cVMManForwardDeviceMotionDetectTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 6)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegionCoordinateX1"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegionCoordinateY1"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegionCoordinateX2"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegionCoordinateY2"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceMotionDetectTrap.setStatus('current')
hh3cVMManForwardDeviceCoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 7)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegionCoordinateX1"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegionCoordinateY1"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegionCoordinateX2"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegionCoordinateY2"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceCoverTrap.setStatus('current')
hh3cVMManForwardDeviceCpuUsageThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 8)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManCpuUsage"), ("HH3C-VM-MAN-MIB", "hh3cVMManCpuUsageThreshold"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceCpuUsageThresholdTrap.setStatus('current')
hh3cVMManForwardDeviceMemUsageThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 9)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManMemUsage"), ("HH3C-VM-MAN-MIB", "hh3cVMManMemUsageThreshold"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceMemUsageThresholdTrap.setStatus('current')
hh3cVMManForwardDeviceHardDiskUsageThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 10)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManHardDiskUsage"), ("HH3C-VM-MAN-MIB", "hh3cVMManHardDiskUsageThreshold"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceHardDiskUsageThresholdTrap.setStatus('current')
hh3cVMManForwardDeviceTemperatureThresholdTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 11)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManTemperature"), ("HH3C-VM-MAN-MIB", "hh3cVMManTemperatureThreshold"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceTemperatureThresholdTrap.setStatus('current')
hh3cVMManForwardDeviceStartKinescopeTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 12)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceStartKinescopeTrap.setStatus('current')
hh3cVMManForwardDeviceStopKinescopeTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 13)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: hh3cVMManForwardDeviceStopKinescopeTrap.setStatus('current')
hh3cVMManClientReportTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 14)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManUserName"), ("HH3C-VM-MAN-MIB", "hh3cVMManReportContent"))
if mibBuilder.loadTexts: hh3cVMManClientReportTrap.setStatus('current')
hh3cVMManClientRealtimeSurveillanceNoVideoTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 15)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManUserName"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: hh3cVMManClientRealtimeSurveillanceNoVideoTrap.setStatus('current')
hh3cVMManClientVODNoVideoTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 16)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManUserName"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVODStart"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVODEnd"), ("HH3C-VM-MAN-MIB", "hh3cVMManIPSANDevIP"))
if mibBuilder.loadTexts: hh3cVMManClientVODNoVideoTrap.setStatus('current')
hh3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 17)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManUserName"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVideoStreamDiscontinuityInterval"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientStatPeriod"))
if mibBuilder.loadTexts: hh3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap.setStatus('current')
hh3cVMManClientVODVideoStreamDiscontinuityTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 18)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManUserName"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevName"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVODStart"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVODEnd"), ("HH3C-VM-MAN-MIB", "hh3cVMManIPSANDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVideoStreamDiscontinuityInterval"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientStatPeriod"))
if mibBuilder.loadTexts: hh3cVMManClientVODVideoStreamDiscontinuityTrap.setStatus('current')
hh3cVMManClientCtlConnExceptionTerminationTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 19)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManUserName"))
if mibBuilder.loadTexts: hh3cVMManClientCtlConnExceptionTerminationTrap.setStatus('current')
hh3cVMManClientFrequencyLoginFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 20)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManUserName"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientLoginFailNum"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientLoginFailNumThreshold"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientStatPeriod"))
if mibBuilder.loadTexts: hh3cVMManClientFrequencyLoginFailTrap.setStatus('current')
hh3cVMManClientFrequencyVODFailTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 21)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManUserName"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVODFailNum"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientVODFailNumThreshold"), ("HH3C-VM-MAN-MIB", "hh3cVMManClientStatPeriod"))
if mibBuilder.loadTexts: hh3cVMManClientFrequencyVODFailTrap.setStatus('current')
hh3cVMManDMECDisobeyStorageScheduleTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 22)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: hh3cVMManDMECDisobeyStorageScheduleTrap.setStatus('current')
hh3cVMManDMECDisobeyStorageScheduleRecoverTrap = NotificationType((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 0, 23)).setObjects(("ENTITY-MIB", "entPhysicalAssetID"), ("HH3C-VM-MAN-MIB", "hh3cVMManRegDevIP"), ("HH3C-VM-MAN-MIB", "hh3cVMManPUECVideoChannelName"))
if mibBuilder.loadTexts: hh3cVMManDMECDisobeyStorageScheduleRecoverTrap.setStatus('current')
hh3cVMManTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1))
hh3cVMManIPSANDevIP = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 1), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManIPSANDevIP.setStatus('current')
hh3cVMManRegDevIP = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 2), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManRegDevIP.setStatus('current')
hh3cVMManRegDevName = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManRegDevName.setStatus('current')
hh3cVMManRegionCoordinateX1 = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 4), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManRegionCoordinateX1.setStatus('current')
hh3cVMManRegionCoordinateY1 = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 5), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManRegionCoordinateY1.setStatus('current')
hh3cVMManRegionCoordinateX2 = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 6), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManRegionCoordinateX2.setStatus('current')
hh3cVMManRegionCoordinateY2 = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 7), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManRegionCoordinateY2.setStatus('current')
hh3cVMManCpuUsage = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManCpuUsage.setStatus('current')
hh3cVMManCpuUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManCpuUsageThreshold.setStatus('current')
hh3cVMManMemUsage = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManMemUsage.setStatus('current')
hh3cVMManMemUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManMemUsageThreshold.setStatus('current')
hh3cVMManHardDiskUsage = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManHardDiskUsage.setStatus('current')
hh3cVMManHardDiskUsageThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManHardDiskUsageThreshold.setStatus('current')
hh3cVMManTemperature = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 14), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManTemperature.setStatus('current')
hh3cVMManTemperatureThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 15), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManTemperatureThreshold.setStatus('current')
hh3cVMManClientIP = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 16), IpAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientIP.setStatus('current')
hh3cVMManUserName = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManUserName.setStatus('current')
hh3cVMManReportContent = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManReportContent.setStatus('current')
hh3cVMManClientVideoStreamDiscontinuityInterval = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 19), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientVideoStreamDiscontinuityInterval.setStatus('current')
hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 20), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold.setStatus('current')
hh3cVMManClientStatPeriod = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 21), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientStatPeriod.setStatus('current')
hh3cVMManClientLoginFailNum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 22), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientLoginFailNum.setStatus('current')
hh3cVMManClientLoginFailNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 23), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientLoginFailNumThreshold.setStatus('current')
hh3cVMManClientVODFailNum = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 24), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientVODFailNum.setStatus('current')
hh3cVMManClientVODFailNumThreshold = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 25), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientVODFailNumThreshold.setStatus('current')
hh3cVMManClientVODStart = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 26), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientVODStart.setStatus('current')
hh3cVMManClientVODEnd = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 27), DateAndTime()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManClientVODEnd.setStatus('current')
hh3cVMManPUExternalInputAlarmChannelID = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 28), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManPUExternalInputAlarmChannelID.setStatus('current')
hh3cVMManPUECVideoChannelName = MibScalar((1, 3, 6, 1, 4, 1, 25506, 9, 1, 2, 1, 29), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hh3cVMManPUECVideoChannelName.setStatus('current')
mibBuilder.exportSymbols("HH3C-VM-MAN-MIB", hh3cVMManPUExternalInputAlarmChannelID=hh3cVMManPUExternalInputAlarmChannelID, hh3cVMManPUECVideoChannelName=hh3cVMManPUECVideoChannelName, hh3cVMManClientIP=hh3cVMManClientIP, hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold=hh3cVMManClientVideoStreamDiscontinuityIntervalThreshold, hh3cVMManClientFrequencyVODFailTrap=hh3cVMManClientFrequencyVODFailTrap, hh3cVMManMemUsage=hh3cVMManMemUsage, hh3cVMManMIBObjects=hh3cVMManMIBObjects, hh3cVMManTemperatureThreshold=hh3cVMManTemperatureThreshold, hh3cVMManClientCtlConnExceptionTerminationTrap=hh3cVMManClientCtlConnExceptionTerminationTrap, hh3cVMManRegDevIP=hh3cVMManRegDevIP, hh3cVMManClientReportTrap=hh3cVMManClientReportTrap, hh3cVMManTemperature=hh3cVMManTemperature, hh3cVMStatExceptionTerminationConn=hh3cVMStatExceptionTerminationConn, PYSNMP_MODULE_ID=hh3cVMMan, hh3cVMManUserName=hh3cVMManUserName, hh3cVMManClientVODEnd=hh3cVMManClientVODEnd, hh3cVMStatSuccConnEstablishRequests=hh3cVMStatSuccConnEstablishRequests, hh3cVMManClientVODStart=hh3cVMManClientVODStart, hh3cVMStatTotalConnEstablishRequests=hh3cVMStatTotalConnEstablishRequests, hh3cVMManClientVODNoVideoTrap=hh3cVMManClientVODNoVideoTrap, hh3cVMCapabilitySet=hh3cVMCapabilitySet, hh3cVMManClientLoginFailNumThreshold=hh3cVMManClientLoginFailNumThreshold, hh3cVMStatFailConnEstablishRequests=hh3cVMStatFailConnEstablishRequests, hh3cVMManForwardDeviceMotionDetectTrap=hh3cVMManForwardDeviceMotionDetectTrap, hh3cVMManReportContent=hh3cVMManReportContent, hh3cVMManClientVideoStreamDiscontinuityInterval=hh3cVMManClientVideoStreamDiscontinuityInterval, hh3cVMStatFailConnReleaseRequests=hh3cVMStatFailConnReleaseRequests, hh3cVMManDeviceOfflineTrap=hh3cVMManDeviceOfflineTrap, hh3cVMManTrapPrex=hh3cVMManTrapPrex, hh3cVMManHardDiskUsageThreshold=hh3cVMManHardDiskUsageThreshold, hh3cVMManForwardDeviceVideoRecoverTrap=hh3cVMManForwardDeviceVideoRecoverTrap, hh3cVMManForwardDeviceCoverTrap=hh3cVMManForwardDeviceCoverTrap, hh3cVMManClientFrequencyLoginFailTrap=hh3cVMManClientFrequencyLoginFailTrap, hh3cVMManForwardDeviceStartKinescopeTrap=hh3cVMManForwardDeviceStartKinescopeTrap, hh3cVMManClientRealtimeSurveillanceNoVideoTrap=hh3cVMManClientRealtimeSurveillanceNoVideoTrap, hh3cVMManCpuUsage=hh3cVMManCpuUsage, hh3cVMManForwardDeviceMemUsageThresholdTrap=hh3cVMManForwardDeviceMemUsageThresholdTrap, hh3cVMManForwardDeviceExternalSemaphoreTrap=hh3cVMManForwardDeviceExternalSemaphoreTrap, hh3cVMManForwardDeviceHardDiskUsageThresholdTrap=hh3cVMManForwardDeviceHardDiskUsageThresholdTrap, hh3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap=hh3cVMManClientRealtimeSurveillanceVideoStreamDiscontinuityTrap, hh3cVMManDMECDisobeyStorageScheduleTrap=hh3cVMManDMECDisobeyStorageScheduleTrap, hh3cVMManHardDiskUsage=hh3cVMManHardDiskUsage, hh3cVMManClientStatPeriod=hh3cVMManClientStatPeriod, hh3cVMStatTotalConnReleaseRequests=hh3cVMStatTotalConnReleaseRequests, hh3cVMManDMECDisobeyStorageScheduleRecoverTrap=hh3cVMManDMECDisobeyStorageScheduleRecoverTrap, hh3cVMManRegionCoordinateX1=hh3cVMManRegionCoordinateX1, hh3cVMManCpuUsageThreshold=hh3cVMManCpuUsageThreshold, hh3cVMManClientLoginFailNum=hh3cVMManClientLoginFailNum, hh3cVMManClientVODFailNumThreshold=hh3cVMManClientVODFailNumThreshold, hh3cVMManRegionCoordinateY2=hh3cVMManRegionCoordinateY2, hh3cVMManClientVODFailNum=hh3cVMManClientVODFailNum, hh3cVMStatSuccConnReleaseRequests=hh3cVMStatSuccConnReleaseRequests, hh3cVMManForwardDeviceTemperatureThresholdTrap=hh3cVMManForwardDeviceTemperatureThresholdTrap, hh3cVMManIPSANDevIP=hh3cVMManIPSANDevIP, hh3cVMManRegionCoordinateX2=hh3cVMManRegionCoordinateX2, hh3cVMManDeviceOnlineTrap=hh3cVMManDeviceOnlineTrap, hh3cVMManTrapObjects=hh3cVMManTrapObjects, hh3cVMMan=hh3cVMMan, hh3cVMManClientVODVideoStreamDiscontinuityTrap=hh3cVMManClientVODVideoStreamDiscontinuityTrap, hh3cVMManForwardDeviceStopKinescopeTrap=hh3cVMManForwardDeviceStopKinescopeTrap, hh3cVMManMIBTrap=hh3cVMManMIBTrap, hh3cVMManRegDevName=hh3cVMManRegDevName, hh3cVMManRegionCoordinateY1=hh3cVMManRegionCoordinateY1, hh3cVMManForwardDeviceVideoLossTrap=hh3cVMManForwardDeviceVideoLossTrap, hh3cVMManForwardDeviceCpuUsageThresholdTrap=hh3cVMManForwardDeviceCpuUsageThresholdTrap, hh3cVMManMemUsageThreshold=hh3cVMManMemUsageThreshold, hh3cVMStat=hh3cVMStat)
