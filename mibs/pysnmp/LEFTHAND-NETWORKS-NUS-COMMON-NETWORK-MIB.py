#
# PySNMP MIB module LEFTHAND-NETWORKS-NUS-COMMON-NETWORK-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/LEFTHAND-NETWORKS-NUS-COMMON-NETWORK-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:55:51 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
lhnModules, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-GLOBAL-REG", "lhnModules")
lhnNusCommonNetwork, = mibBuilder.importSymbols("LEFTHAND-NETWORKS-NUS-COMMON-MIB", "lhnNusCommonNetwork")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, ObjectIdentity, Integer32, iso, NotificationType, Gauge32, Counter32, ModuleIdentity, TimeTicks, Counter64, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "ObjectIdentity", "Integer32", "iso", "NotificationType", "Gauge32", "Counter32", "ModuleIdentity", "TimeTicks", "Counter64", "MibIdentifier")
DisplayString, TextualConvention, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "RowStatus")
lhnNusCommonNetworkModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 9804, 1, 1, 5))
if mibBuilder.loadTexts: lhnNusCommonNetworkModule.setLastUpdated('0106010000Z')
if mibBuilder.loadTexts: lhnNusCommonNetworkModule.setOrganization('LeftHand Networks, Inc.')
networkDeviceCount = MibScalar((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkDeviceCount.setStatus('current')
networkDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2), )
if mibBuilder.loadTexts: networkDeviceTable.setStatus('current')
networkDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1), ).setIndexNames((0, "LEFTHAND-NETWORKS-NUS-COMMON-NETWORK-MIB", "networkIndex"))
if mibBuilder.loadTexts: networkDeviceEntry.setStatus('current')
networkDeviceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkDeviceIndex.setStatus('current')
networkDeviceName = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkDeviceName.setStatus('current')
networkDeviceIpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkDeviceIpAddress.setStatus('current')
networkDeviceMask = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkDeviceMask.setStatus('current')
networkDeviceDefaultGateway = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkDeviceDefaultGateway.setStatus('current')
networkDeviceMode = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("disabled", 1), ("auto", 2), ("static", 3), ("slave", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: networkDeviceMode.setStatus('current')
networkDeviceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 9804, 3, 1, 1, 2, 2, 2, 1, 11), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: networkDeviceStatus.setStatus('current')
mibBuilder.exportSymbols("LEFTHAND-NETWORKS-NUS-COMMON-NETWORK-MIB", networkDeviceCount=networkDeviceCount, networkDeviceStatus=networkDeviceStatus, networkDeviceIndex=networkDeviceIndex, lhnNusCommonNetworkModule=lhnNusCommonNetworkModule, networkDeviceEntry=networkDeviceEntry, networkDeviceMask=networkDeviceMask, PYSNMP_MODULE_ID=lhnNusCommonNetworkModule, networkDeviceDefaultGateway=networkDeviceDefaultGateway, networkDeviceIpAddress=networkDeviceIpAddress, networkDeviceTable=networkDeviceTable, networkDeviceMode=networkDeviceMode, networkDeviceName=networkDeviceName)
