#
# PySNMP MIB module CISCO-WAN-SVC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-WAN-SVC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:04:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint")
AtmAddress, NetPrefix = mibBuilder.importSymbols("ATM-FORUM-TC-MIB", "AtmAddress", "NetPrefix")
CiscoWanNsapAtmAddress, = mibBuilder.importSymbols("CISCO-WAN-ATM-CONN-MIB", "CiscoWanNsapAtmAddress")
stratacom, = mibBuilder.importSymbols("CISCOWAN-SMI", "stratacom")
InterfaceIndex, ifIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex", "ifIndex")
PnniNodeId, PnniPortId = mibBuilder.importSymbols("PNNI-MIB", "PnniNodeId", "PnniPortId")
ObjectGroup, ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "ModuleCompliance", "NotificationGroup")
Counter32, Gauge32, IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Unsigned32, Counter64, TimeTicks, ObjectIdentity, Integer32, iso, MibIdentifier, ModuleIdentity, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Gauge32", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Unsigned32", "Counter64", "TimeTicks", "ObjectIdentity", "Integer32", "iso", "MibIdentifier", "ModuleIdentity", "NotificationType")
TextualConvention, RowStatus, DisplayString, TimeStamp, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "TimeStamp", "TruthValue")
ciscoWANSvcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 140))
ciscoWANSvcMIB.setRevisions(('2003-03-10 00:00', '2002-09-16 00:00', '2002-03-01 00:00', '2001-07-19 00:00', '2001-07-06 00:00', '2001-06-06 00:00', '2001-05-10 00:00', '2000-10-20 00:00', '2000-09-01 00:00', '2000-08-03 00:00', '2000-06-15 00:00', '2000-04-01 00:00',))
if mibBuilder.loadTexts: ciscoWANSvcMIB.setLastUpdated('200303100000Z')
if mibBuilder.loadTexts: ciscoWANSvcMIB.setOrganization('Cisco System, Inc')
ciscoWANSvcMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1))
ciscoWANSvcInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 1))
ciscoWANSvcPort = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2))
ciscoWANPnniRouting = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 3))
ciscoWANSpvc = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 4))
cwspConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1))
cwspCacConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2))
cwspSigConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3))
cwspSscopConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4))
cwspCallStats = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5))
cwspSigStats = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6))
cwspSscopStats = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7))
cwspCall = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8))
cwspAbrCall = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9))
cwspPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 10))
cwspAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11))
cwspRegAddress = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 12))
cwspLoad = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13))
cwspConnTrace = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14))
cwspOperation = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15))
class CwspSpvcState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))
    namedValues = NamedValues(("genSpvcErr", 1), ("mPvcDelFail", 2), ("sPvcDelFail", 3), ("mRelPendHalfTmout", 4), ("mInstlPvcFail", 5), ("sInstlPvcFail", 6), ("mRecmtPvcFail", 7), ("sRecmtPvcFail", 8), ("mCmtHalfFail", 9), ("sCmtHalfFail", 10), ("mInstlXconnFail", 11), ("sRecvSetupConfmMismatch", 12), ("sRecvSetupServMismatch", 13), ("sRecvSetupTrafParmMismatch", 14), ("masterSpvcAutoDelete", 15), ("slaveSpvcAutoDelete", 16))

class CwspControllerState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("ready", 1), ("unavilable", 2))

cwsSwRevision = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsSwRevision.setStatus('current')
cwsControllerStatus = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 1, 6), CwspControllerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwsControllerStatus.setStatus('current')
cwspPnniStndbyControllerStatus = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 1, 7), CwspControllerState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspPnniStndbyControllerStatus.setStatus('current')
cwspPnniControllerStatus = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("active", 1), ("stndby", 2), ("unavailable", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspPnniControllerStatus.setStatus('current')
cwspPnniControllerPhySlot = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspPnniControllerPhySlot.setStatus('current')
cwspSscopTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1), )
if mibBuilder.loadTexts: cwspSscopTable.setStatus('current')
cwspSscopEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwspSscopEntry.setStatus('current')
cwspSscopTmrCC = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSscopTmrCC.setStatus('current')
cwspSscopTmrKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(5)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSscopTmrKeepAlive.setStatus('current')
cwspSscopTmrNoResp = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSscopTmrNoResp.setStatus('current')
cwspSscopTmrPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSscopTmrPoll.setStatus('current')
cwspSscopTmtIdle = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSscopTmtIdle.setStatus('current')
cwspSscopMaxCC = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSscopMaxCC.setStatus('current')
cwspSscopMaxPD = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSscopMaxPD.setStatus('current')
cwspSscopMaxSTAT = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 4, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(67)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSscopMaxSTAT.setStatus('current')
cwspSscopStatsTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1), )
if mibBuilder.loadTexts: cwspSscopStatsTable.setStatus('current')
cwspSscopStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwspSscopStatsEntry.setStatus('current')
cwspSscopCounterReset = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("reset", 2))).clone('noop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSscopCounterReset.setStatus('current')
cwspSscopIgnoredPduRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopIgnoredPduRcv.setStatus('current')
cwspSscopBgnRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopBgnRcv.setStatus('current')
cwspSscopBgakRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopBgakRcv.setStatus('current')
cwspSscopEndRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopEndRcv.setStatus('current')
cwspSscopEndakRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopEndakRcv.setStatus('current')
cwspSscopRsRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopRsRcv.setStatus('current')
cwspSscopRsakRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopRsakRcv.setStatus('current')
cwspSscopBgrejRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopBgrejRcv.setStatus('current')
cwspSscopSdRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopSdRcv.setStatus('current')
cwspSscopSdpRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopSdpRcv.setStatus('current')
cwspSscopPollRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopPollRcv.setStatus('current')
cwspSscopStatRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopStatRcv.setStatus('current')
cwspSscopUstatRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopUstatRcv.setStatus('current')
cwspSscopUdRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopUdRcv.setStatus('current')
cwspSscopMdRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopMdRcv.setStatus('current')
cwspSscopErakRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopErakRcv.setStatus('current')
cwspSscopBgnXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopBgnXmt.setStatus('current')
cwspSscopBgakXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopBgakXmt.setStatus('current')
cwspSscopEndXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopEndXmt.setStatus('current')
cwspSscopEndakXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopEndakXmt.setStatus('current')
cwspSscopRsXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopRsXmt.setStatus('current')
cwspSscopRsakXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopRsakXmt.setStatus('current')
cwspSscopBgrejXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopBgrejXmt.setStatus('current')
cwspSscopSdXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopSdXmt.setStatus('current')
cwspSscopSdpXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopSdpXmt.setStatus('current')
cwspSscopPollXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopPollXmt.setStatus('current')
cwspSscopStatXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopStatXmt.setStatus('current')
cwspSscopUstatXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopUstatXmt.setStatus('current')
cwspSscopUdXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopUdXmt.setStatus('current')
cwspSscopMdXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopMdXmt.setStatus('current')
cwspSscopErakXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 7, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopErakXmt.setStatus('current')
cwspSigConfigTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1), )
if mibBuilder.loadTexts: cwspSigConfigTable.setStatus('current')
cwspSigConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwspSigConfigEntry.setStatus('current')
cwspSigCfgT301 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(150, 240)).clone(180)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT301.setStatus('current')
cwspSigCfgT303 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 8)).clone(4)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT303.setStatus('current')
cwspSigCfgT308 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 45)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT308.setStatus('current')
cwspSigCfgT310 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(10, 120)).clone(10)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT310.setStatus('current')
cwspSigCfgT316 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(90, 300)).clone(90)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT316.setStatus('current')
cwspSigCfgT317 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(60, 300)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT317.setStatus('current')
cwspSigCfgT322 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 20)).clone(4)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT322.setStatus('current')
cwspSigCfgT397 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(180, 240)).clone(180)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT397.setStatus('current')
cwspSigCfgT398 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4, 20)).clone(4)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT398.setStatus('current')
cwspSigCfgT399 = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(14, 124)).clone(14)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCfgT399.setStatus('current')
cwspSigStatsTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1), )
if mibBuilder.loadTexts: cwspSigStatsTable.setStatus('current')
cwspSigStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwspSigStatsEntry.setStatus('current')
cwspSigCounterReset = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("reset", 2))).clone('noop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSigCounterReset.setStatus('current')
cwspCallProcRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallProcRcv.setStatus('current')
cwspConnectRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnectRcv.setStatus('current')
cwspConnectAckRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnectAckRcv.setStatus('current')
cwspSetupRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSetupRcv.setStatus('current')
cwspReleaseRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspReleaseRcv.setStatus('current')
cwspReleaseComplRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspReleaseComplRcv.setStatus('current')
cwspRestartRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspRestartRcv.setStatus('current')
cwspRestartAckRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspRestartAckRcv.setStatus('current')
cwspStatusRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspStatusRcv.setStatus('current')
cwspStatusEnqRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspStatusEnqRcv.setStatus('current')
cwspNotifyRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspNotifyRcv.setStatus('current')
cwspAlertRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAlertRcv.setStatus('current')
cwspProgressRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspProgressRcv.setStatus('current')
cwspAddPtyRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAddPtyRcv.setStatus('current')
cwspAddPtyAckRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAddPtyAckRcv.setStatus('current')
cwspAddPtyRejRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAddPtyRejRcv.setStatus('current')
cwspDropPtyRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspDropPtyRcv.setStatus('current')
cwspIncorrectMsgRcv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspIncorrectMsgRcv.setStatus('current')
cwspTimerExpiries = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspTimerExpiries.setStatus('current')
cwspLastCause = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLastCause.setStatus('current')
cwspLastDiagnostic = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 214743647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLastDiagnostic.setStatus('current')
cwspCallProcXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallProcXmt.setStatus('current')
cwspConnectXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnectXmt.setStatus('current')
cwspConnectAckXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnectAckXmt.setStatus('current')
cwspSetupXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSetupXmt.setStatus('current')
cwspReleaseXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspReleaseXmt.setStatus('current')
cwspReleaseComplXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspReleaseComplXmt.setStatus('current')
cwspRestartXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspRestartXmt.setStatus('current')
cwspRestartAckXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 31), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspRestartAckXmt.setStatus('current')
cwspStatusXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspStatusXmt.setStatus('current')
cwspStatusEnqXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspStatusEnqXmt.setStatus('current')
cwspNotifyXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspNotifyXmt.setStatus('current')
cwspAlertXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAlertXmt.setStatus('current')
cwspProgressXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspProgressXmt.setStatus('current')
cwspAddPtyXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAddPtyXmt.setStatus('current')
cwspAddPtyAckXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 38), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAddPtyAckXmt.setStatus('current')
cwspAddPtyRejXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAddPtyRejXmt.setStatus('current')
cwspDropPtyXmt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 40), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspDropPtyXmt.setStatus('current')
cwspSscopStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 6, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSscopStatus.setStatus('current')
cwspConfigTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1), )
if mibBuilder.loadTexts: cwspConfigTable.setStatus('current')
cwspConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwspConfigEntry.setStatus('current')
cwspAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("inService", 1), ("outService", 2))).clone('outService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspAdminStatus.setStatus('current')
cwspOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ok", 1), ("failed", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperStatus.setStatus('current')
cwspSvcBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 3), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspSvcBlocked.setStatus('current')
cwspSpvcBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspSpvcBlocked.setStatus('current')
cwspIlmiAddrRegEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 5), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspIlmiAddrRegEnable.setStatus('current')
cwspIlmiAutoConfEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspIlmiAutoConfEnable.setStatus('current')
cwspIlmiServRegEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 7), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspIlmiServRegEnable.setStatus('current')
cwspPhyIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 8), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspPhyIdentifier.setStatus('current')
cwspSignallingVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspSignallingVpi.setStatus('current')
cwspSignallingVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(5)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspSignallingVci.setStatus('current')
cwspRoutingVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspRoutingVpi.setStatus('current')
cwspRoutingVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(18)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspRoutingVci.setStatus('current')
cwspMaxVpiBits = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspMaxVpiBits.setStatus('current')
cwspMaxVciBits = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspMaxVciBits.setStatus('current')
cwspUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("uni20", 1), ("uni30", 2), ("uni31", 3), ("uni40", 4), ("ituDss2", 5), ("frf4", 6), ("unsupported", 7), ("ip", 8), ("self", 9))).clone('unsupported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspUniVersion.setStatus('current')
cwspNniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 7))).clone(namedValues=NamedValues(("iisp30", 1), ("iisp31", 2), ("pnni10", 3), ("enni", 4), ("aini", 5), ("unsupported", 7))).clone('unsupported')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspNniVersion.setStatus('current')
cwspUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("public", 1), ("private", 2))).clone('private')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspUniType.setStatus('current')
cwspSide = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("network", 2))).clone('network')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspSide.setStatus('current')
cwspMaxP2pCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(10000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspMaxP2pCalls.setStatus('current')
cwspMaxP2mpRoots = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspMaxP2mpRoots.setStatus('current')
cwspMaxP2mpLeafs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspMaxP2mpLeafs.setStatus('current')
cwspMinSvccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspMinSvccVpi.setStatus('current')
cwspMaxSvccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspMaxSvccVpi.setStatus('current')
cwspMinSvccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)).clone(35)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspMinSvccVci.setStatus('current')
cwspMaxSvccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(35, 65535)).clone(65535)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspMaxSvccVci.setStatus('current')
cwspMinSvpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspMinSvpcVpi.setStatus('current')
cwspMaxSvpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095)).clone(4095)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspMaxSvpcVpi.setStatus('current')
cwspEnhancedIisp = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 28), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspEnhancedIisp.setStatus('current')
cwspConfigTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 29), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspConfigTableRowStatus.setStatus('current')
cwspAddrPlanSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("aesa", 2), ("e164", 3))).clone('aesa')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspAddrPlanSupported.setStatus('current')
cwspIlmiSecureLink = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 31), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspIlmiSecureLink.setStatus('current')
cwspIlmiAttachmentPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 32), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspIlmiAttachmentPoint.setStatus('current')
cwspIlmiLocalAttrStd = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 33), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspIlmiLocalAttrStd.setStatus('current')
cwspIlmiUCSMEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 34), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspIlmiUCSMEnable.setStatus('current')
cwspRoutingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 15)).clone(8)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspRoutingPriority.setStatus('current')
cwspSpvcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 1, 1, 1, 36), CiscoWanNsapAtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspSpvcAddress.setStatus('current')
cwspCallStatsTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1), )
if mibBuilder.loadTexts: cwspCallStatsTable.setStatus('current')
cwspCallStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwspCallStatsEntry.setStatus('current')
cwspCountReset = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("noop", 1), ("reset", 2))).clone('noop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspCountReset.setStatus('current')
cwspInCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspInCallAttempts.setStatus('current')
cwspInCallEstabs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspInCallEstabs.setStatus('current')
cwspInCallFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspInCallFailures.setStatus('current')
cwspInFilterFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspInFilterFailures.setStatus('current')
cwspInRouteFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspInRouteFailures.setStatus('current')
cwspInResrcFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspInResrcFailures.setStatus('current')
cwspInTimerFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspInTimerFailures.setStatus('current')
cwspInCrankbacks = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspInCrankbacks.setStatus('current')
cwspOutCallAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOutCallAttempts.setStatus('current')
cwspOutCallEstabs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOutCallEstabs.setStatus('current')
cwspOutCallFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOutCallFailures.setStatus('current')
cwspOutFilterFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOutFilterFailures.setStatus('current')
cwspOutRouteFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOutRouteFailures.setStatus('current')
cwspOutResrcFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOutResrcFailures.setStatus('current')
cwspOutTimerFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOutTimerFailures.setStatus('current')
cwspOutCrankbacks = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 5, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOutCrankbacks.setStatus('current')
cwspPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 10, 1), )
if mibBuilder.loadTexts: cwspPrefixTable.setStatus('current')
cwspPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 10, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-SVC-MIB", "cwspNetPrefix"))
if mibBuilder.loadTexts: cwspPrefixEntry.setStatus('current')
cwspNetPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 10, 1, 1, 1), NetPrefix())
if mibBuilder.loadTexts: cwspNetPrefix.setStatus('current')
cwspPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 10, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspPrefixRowStatus.setStatus('current')
cwspAddressTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1), )
if mibBuilder.loadTexts: cwspAddressTable.setStatus('current')
cwspAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-SVC-MIB", "cwspAtmAddress"), (0, "CISCO-WAN-SVC-MIB", "cwspAddrLen"))
if mibBuilder.loadTexts: cwspAddressEntry.setStatus('current')
cwspAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1, 1, 1), AtmAddress())
if mibBuilder.loadTexts: cwspAtmAddress.setStatus('current')
cwspAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 160)))
if mibBuilder.loadTexts: cwspAddrLen.setStatus('current')
cwspAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("internal", 1), ("exterior", 2))).clone('exterior')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspAddrType.setStatus('current')
cwspAddrProto = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("static", 2))).clone('local')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspAddrProto.setStatus('current')
cwspAddrPlan = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("e164", 1), ("nsap", 2))).clone('nsap')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspAddrPlan.setStatus('current')
cwspAddrScope = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 104))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspAddrScope.setStatus('current')
cwspAddrRedistribute = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspAddrRedistribute.setStatus('current')
cwspAddressRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 11, 1, 1, 8), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspAddressRowStatus.setStatus('current')
cwspRegAddressTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 12, 1), )
if mibBuilder.loadTexts: cwspRegAddressTable.setStatus('current')
cwspRegAddressEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 12, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-SVC-MIB", "cwspRegAtmAddress"))
if mibBuilder.loadTexts: cwspRegAddressEntry.setStatus('current')
cwspRegAtmAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 12, 1, 1, 1), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspRegAtmAddress.setStatus('current')
cwspRegAddressOrgSscope = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 15))).clone(namedValues=NamedValues(("localNetwork", 1), ("global", 15))).clone('global')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspRegAddressOrgSscope.setStatus('current')
cwspCacConfigTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1), )
if mibBuilder.loadTexts: cwspCacConfigTable.setStatus('current')
cwspCacConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwspCacConfigEntry.setStatus('current')
cwspUtilFactorCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspUtilFactorCbr.setStatus('current')
cwspUtilFactorRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspUtilFactorRtVbr.setStatus('current')
cwspUtilFactorNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspUtilFactorNrtVbr.setStatus('current')
cwspUtilFactorAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspUtilFactorAbr.setStatus('current')
cwspUtilFactorUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 200)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspUtilFactorUbr.setStatus('current')
cwspMaxBwCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxBwCbr.setStatus('current')
cwspMaxBwRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxBwRtVbr.setStatus('current')
cwspMaxBwNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxBwNrtVbr.setStatus('current')
cwspMaxBwAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxBwAbr.setStatus('current')
cwspMaxBwUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxBwUbr.setStatus('current')
cwspMinBwCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMinBwCbr.setStatus('current')
cwspMinBwRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMinBwRtVbr.setStatus('current')
cwspMinBwNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMinBwNrtVbr.setStatus('current')
cwspMinBwAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMinBwAbr.setStatus('current')
cwspMinBwUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspMinBwUbr.setStatus('current')
cwspMaxVcCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcCbr.setStatus('current')
cwspMaxVcRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcRtVbr.setStatus('current')
cwspMaxVcNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcNrtVbr.setStatus('current')
cwspMaxVcAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcAbr.setStatus('current')
cwspMaxVcUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000)).clone(1000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcUbr.setStatus('current')
cwspMinVcCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMinVcCbr.setStatus('current')
cwspMinVcRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMinVcRtVbr.setStatus('current')
cwspMinVcNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMinVcNrtVbr.setStatus('current')
cwspMinVcAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMinVcAbr.setStatus('current')
cwspMinVcUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMinVcUbr.setStatus('current')
cwspMaxVcBwCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcBwCbr.setStatus('current')
cwspMaxVcBwRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcBwRtVbr.setStatus('current')
cwspMaxVcBwNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcBwNrtVbr.setStatus('current')
cwspMaxVcBwAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcBwAbr.setStatus('current')
cwspMaxVcBwUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspMaxVcBwUbr.setStatus('current')
cwspDefaultCdvtCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspDefaultCdvtCbr.setStatus('current')
cwspDefaultCdvtRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspDefaultCdvtRtVbr.setStatus('current')
cwspDefaultCdvtNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspDefaultCdvtNrtVbr.setStatus('current')
cwspDefaultCdvtAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspDefaultCdvtAbr.setStatus('current')
cwspDefaultCdvtUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspDefaultCdvtUbr.setStatus('current')
cwspDefaultMbsRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspDefaultMbsRtVbr.setStatus('current')
cwspDefaultMbsNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 2, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspDefaultMbsNrtVbr.setStatus('current')
cwspLoadTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1), )
if mibBuilder.loadTexts: cwspLoadTable.setStatus('current')
cwspLoadEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwspLoadEntry.setStatus('current')
cwspLoadBwTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadBwTotal.setStatus('current')
cwspLoadMaxBwCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMaxBwCbr.setStatus('current')
cwspLoadMaxBwRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMaxBwRtVbr.setStatus('current')
cwspLoadMaxBwNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMaxBwNrtVbr.setStatus('current')
cwspLoadMaxBwAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMaxBwAbr.setStatus('current')
cwspLoadMaxBwUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMaxBwUbr.setStatus('current')
cwspLoadBwAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadBwAvail.setStatus('current')
cwspLoadAvlBwCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlBwCbr.setStatus('current')
cwspLoadAvlBwRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlBwRtVbr.setStatus('current')
cwspLoadAvlBwNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlBwNrtVbr.setStatus('current')
cwspLoadAvlBwAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlBwAbr.setStatus('current')
cwspLoadAvlBwUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlBwUbr.setStatus('current')
cwspLoadVcAvail = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadVcAvail.setStatus('current')
cwspLoadAvlVcCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlVcCbr.setStatus('current')
cwspLoadAvlVcRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlVcRtVbr.setStatus('current')
cwspLoadAvlVcNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlVcNrtVbr.setStatus('current')
cwspLoadAvlVcAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlVcAbr.setStatus('current')
cwspLoadAvlVcUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadAvlVcUbr.setStatus('current')
cwspLoadCtdCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCtdCbr.setStatus('current')
cwspLoadCtdRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCtdRtVbr.setStatus('current')
cwspLoadCtdNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCtdNrtVbr.setStatus('current')
cwspLoadCtdAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCtdAbr.setStatus('current')
cwspLoadCtdUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCtdUbr.setStatus('current')
cwspLoadCdvCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCdvCbr.setStatus('current')
cwspLoadCdvRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCdvRtVbr.setStatus('current')
cwspLoadCdvNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCdvNrtVbr.setStatus('current')
cwspLoadCdvAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCdvAbr.setStatus('current')
cwspLoadCdvUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadCdvUbr.setStatus('current')
cwspLoadClr0Cbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr0Cbr.setStatus('current')
cwspLoadClr0RtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr0RtVbr.setStatus('current')
cwspLoadClr0NrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr0NrtVbr.setStatus('current')
cwspLoadClr0Abr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr0Abr.setStatus('current')
cwspLoadClr0Ubr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr0Ubr.setStatus('current')
cwspLoadClr01Cbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr01Cbr.setStatus('current')
cwspLoadClr01RtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr01RtVbr.setStatus('current')
cwspLoadClr01NrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr01NrtVbr.setStatus('current')
cwspLoadClr01Abr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr01Abr.setStatus('current')
cwspLoadClr01Ubr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadClr01Ubr.setStatus('current')
cwspLoadMinGurCrCbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMinGurCrCbr.setStatus('current')
cwspLoadMinGurCrRtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMinGurCrRtVbr.setStatus('current')
cwspLoadMinGurCrNrtVbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMinGurCrNrtVbr.setStatus('current')
cwspLoadMinGurCrAbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMinGurCrAbr.setStatus('current')
cwspLoadMinGurCrUbr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 13, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspLoadMinGurCrUbr.setStatus('current')
cwspCallTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1), )
if mibBuilder.loadTexts: cwspCallTable.setStatus('current')
cwspCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-SVC-MIB", "cwspCallVpi"), (0, "CISCO-WAN-SVC-MIB", "cwspCallVci"), (0, "CISCO-WAN-SVC-MIB", "cwspCallLeafReference"))
if mibBuilder.loadTexts: cwspCallEntry.setStatus('current')
cwspCallVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: cwspCallVpi.setStatus('current')
cwspCallVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cwspCallVci.setStatus('current')
cwspCallLeafReference = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cwspCallLeafReference.setStatus('current')
cwspCallCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallCallRef.setStatus('current')
cwspCallCallingAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 5), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallCallingAddress.setStatus('current')
cwspCallCalledAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 6), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallCalledAddress.setStatus('current')
cwspCallCallingSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 7), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallCallingSubAddr.setStatus('current')
cwspCallCalledSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 8), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallCalledSubAddr.setStatus('current')
cwspCallOtherIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallOtherIntfIndex.setStatus('current')
cwspCallOtherIntfVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallOtherIntfVpi.setStatus('current')
cwspCallOtherIntfVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallOtherIntfVci.setStatus('current')
cwspCallOtherIntfCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallOtherIntfCallRef.setStatus('current')
cwspCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("svc", 1), ("spvc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallType.setStatus('current')
cwspCallStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallStartTime.setStatus('current')
cwspCallBearerClass = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bcobA", 1), ("bcobC", 2), ("bcobX", 3), ("vp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallBearerClass.setStatus('current')
cwspCallServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3), ("abr", 4), ("ubr", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallServiceCategory.setStatus('current')
cwspCallCastType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("p2p", 1), ("p2mp", 2), ("mp2p", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallCastType.setStatus('current')
cwspCallClipSusceptibility = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallClipSusceptibility.setStatus('current')
cwspCallFwdConformance = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("cbr1", 1), ("cbr2", 2), ("cbr3", 3), ("vbr1", 4), ("vbr2", 5), ("vbr3", 6), ("abr", 7), ("ubr1", 8), ("ubr2", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallFwdConformance.setStatus('current')
cwspCallFwdPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallFwdPcr.setStatus('current')
cwspCallFwdScr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallFwdScr.setStatus('current')
cwspCallFwdMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallFwdMbs.setStatus('current')
cwspCallFwdCdvt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallFwdCdvt.setStatus('current')
cwspCallFwdFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallFwdFrameDiscard.setStatus('current')
cwspCallBwdConformance = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("cbr1", 1), ("cbr2", 2), ("cbr3", 3), ("vbr1", 4), ("vbr2", 5), ("vbr3", 6), ("abr", 7), ("ubr1", 8), ("ubr2", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallBwdConformance.setStatus('current')
cwspCallBwdPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallBwdPcr.setStatus('current')
cwspCallBwdScr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallBwdScr.setStatus('current')
cwspCallBwdMbs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallBwdMbs.setStatus('current')
cwspCallBwdCdvt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallBwdCdvt.setStatus('current')
cwspCallBwdFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallBwdFrameDiscard.setStatus('current')
cwspCallMaxCtd = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallMaxCtd.setStatus('current')
cwspCallMaxFwdCdv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallMaxFwdCdv.setStatus('current')
cwspCallMaxFwdClr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallMaxFwdClr.setStatus('current')
cwspCallMaxBwdCdv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallMaxBwdCdv.setStatus('current')
cwspCallMaxBwdClr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 8, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspCallMaxBwdClr.setStatus('current')
cwspAbrCallTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1), )
if mibBuilder.loadTexts: cwspAbrCallTable.setStatus('current')
cwspAbrCallEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "CISCO-WAN-SVC-MIB", "cwspAbrCallVpi"), (0, "CISCO-WAN-SVC-MIB", "cwspAbrCallVci"))
if mibBuilder.loadTexts: cwspAbrCallEntry.setStatus('current')
cwspAbrCallVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095)))
if mibBuilder.loadTexts: cwspAbrCallVpi.setStatus('current')
cwspAbrCallVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535)))
if mibBuilder.loadTexts: cwspAbrCallVci.setStatus('current')
cwspAbrCallCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallCallRef.setStatus('current')
cwspAbrCallClgAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 4), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallClgAddress.setStatus('current')
cwspAbrCallCldAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 5), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallCldAddress.setStatus('current')
cwspAbrCallClgSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 6), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallClgSubAddr.setStatus('current')
cwspAbrCallCldSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 7), AtmAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallCldSubAddr.setStatus('current')
cwspAbrCallOtherIntfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallOtherIntfIndex.setStatus('current')
cwspAbrCallOtherIntfVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallOtherIntfVpi.setStatus('current')
cwspAbrCallOtherIntfVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallOtherIntfVci.setStatus('current')
cwspAbrCallOtherIntfCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallOtherIntfCallRef.setStatus('current')
cwspAbrCallType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("svc", 1), ("spvc", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallType.setStatus('current')
cwspAbrCallStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallStartTime.setStatus('current')
cwspAbrCallBearerClass = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("bcobA", 1), ("bcobC", 2), ("bcobX", 3), ("vp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBearerClass.setStatus('current')
cwspAbrCallServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(4))).clone(namedValues=NamedValues(("abr", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallServiceCategory.setStatus('current')
cwspAbrCallCastType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("p2p", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallCastType.setStatus('current')
cwspAbrCallClipSusceptibility = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallClipSusceptibility.setStatus('current')
cwspAbrCallFwdConformance = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(7))).clone(namedValues=NamedValues(("abr", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdConformance.setStatus('current')
cwspAbrCallFwdPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdPcr.setStatus('current')
cwspAbrCallFwdMcr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdMcr.setStatus('current')
cwspAbrCallFwdIcr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdIcr.setStatus('current')
cwspAbrCallFwdRif = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rifOneOver32768", 1), ("rifOneOver16384", 2), ("rifOneOver8192", 3), ("rifOneOver4096", 4), ("rifOneOver2048", 5), ("rifOneOver1024", 6), ("rifOneOver512", 7), ("rifOneOver256", 8), ("rifOneOver128", 9), ("rifOneOver64", 10), ("rifOneOver32", 11), ("rifOneOver16", 12), ("rifOneOver8", 13), ("rifOneOver4", 14), ("rifOneOver2", 15), ("rifOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdRif.setStatus('current')
cwspAbrCallFwdRdf = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rdfOneOver32768", 1), ("rdfOneOver16384", 2), ("rdfOneOver8192", 3), ("rdfOneOver4096", 4), ("rdfOneOver2048", 5), ("rdfOneOver1024", 6), ("rdfOneOver512", 7), ("rdfOneOver256", 8), ("rdfOneOver128", 9), ("rdfOneOver64", 10), ("rdfOneOver32", 11), ("rdfOneOver16", 12), ("rdfOneOver8", 13), ("rdfOneOver4", 14), ("rdfOneOver2", 15), ("rdfOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdRdf.setStatus('current')
cwspAbrCallFwdTbe = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdTbe.setStatus('current')
cwspAbrCallFwdNrm = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("nrm2", 1), ("nrm4", 2), ("nrm8", 3), ("nrm16", 4), ("nrm32", 5), ("nrm64", 6), ("nrm128", 7), ("nrm256", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdNrm.setStatus('current')
cwspAbrCallFwdTrm = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("trm0point78125", 1), ("trm1point5625", 2), ("trm3point125", 3), ("trm6point25", 4), ("trm12point5", 5), ("trm25", 6), ("trm50", 7), ("trm100", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdTrm.setStatus('current')
cwspAbrCallFwdAdtf = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdAdtf.setStatus('current')
cwspAbrCallFwdCdf = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("cdf0", 1), ("cdfOneOver64", 2), ("cdfOneOver32", 3), ("cdfOneOver16", 4), ("cdfOneOver8", 5), ("cdfOneOver4", 6), ("cdfOneOver2", 7), ("cdfOne", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdCdf.setStatus('current')
cwspAbrCallFwdFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFwdFrameDiscard.setStatus('current')
cwspAbrCallBwdPcr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdPcr.setStatus('current')
cwspAbrCallBwdMcr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdMcr.setStatus('current')
cwspAbrCallBwdIcr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdIcr.setStatus('current')
cwspAbrCallBwdRif = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rifOneOver32768", 1), ("rifOneOver16384", 2), ("rifOneOver8192", 3), ("rifOneOver4096", 4), ("rifOneOver2048", 5), ("rifOneOver1024", 6), ("rifOneOver512", 7), ("rifOneOver256", 8), ("rifOneOver128", 9), ("rifOneOver64", 10), ("rifOneOver32", 11), ("rifOneOver16", 12), ("rifOneOver8", 13), ("rifOneOver4", 14), ("rifOneOver2", 15), ("rifOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdRif.setStatus('current')
cwspAbrCallBwdRdf = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("rdfOneOver32768", 1), ("rdfOneOver16384", 2), ("rdfOneOver8192", 3), ("rdfOneOver4096", 4), ("rdfOneOver2048", 5), ("rdfOneOver1024", 6), ("rdfOneOver512", 7), ("rdfOneOver256", 8), ("rdfOneOver128", 9), ("rdfOneOver64", 10), ("rdfOneOver32", 11), ("rdfOneOver16", 12), ("rdfOneOver8", 13), ("rdfOneOver4", 14), ("rdfOneOver2", 15), ("rdfOne", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdRdf.setStatus('current')
cwspAbrCallBwdTbe = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 35), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdTbe.setStatus('current')
cwspAbrCallBwdNrm = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("nrm2", 1), ("nrm4", 2), ("nrm8", 3), ("nrm16", 4), ("nrm32", 5), ("nrm64", 6), ("nrm128", 7), ("nrm256", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdNrm.setStatus('current')
cwspAbrCallBwdTrm = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("trm0point78125", 1), ("trm1point5625", 2), ("trm3point125", 3), ("trm6point25", 4), ("trm12point5", 5), ("trm25", 6), ("trm50", 7), ("trm100", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdTrm.setStatus('current')
cwspAbrCallBwdAdtf = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1023))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdAdtf.setStatus('current')
cwspAbrCallBwdCdf = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("cdf0", 1), ("cdfOneOver64", 2), ("cdfOneOver32", 3), ("cdfOneOver16", 4), ("cdfOneOver8", 5), ("cdfOneOver4", 6), ("cdfOneOver2", 7), ("cdfOne", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdCdf.setStatus('current')
cwspAbrCallBwdFrameDiscard = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallBwdFrameDiscard.setStatus('current')
cwspAbrCallFrtt = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallFrtt.setStatus('current')
cwspAbrCallMaxCtd = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 42), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallMaxCtd.setStatus('current')
cwspAbrCallMaxFwdCdv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 43), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallMaxFwdCdv.setStatus('current')
cwspAbrCallMaxFwdClr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 44), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallMaxFwdClr.setStatus('current')
cwspAbrCallMaxBwdCdv = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 45), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallMaxBwdCdv.setStatus('current')
cwspAbrCallMaxBwdClr = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 9, 1, 1, 46), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspAbrCallMaxBwdClr.setStatus('current')
cwspConnTraceAvail = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceAvail.setStatus('current')
cwspConnTraceNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceNextIndex.setStatus('current')
cwspConnTraceCntlTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3), )
if mibBuilder.loadTexts: cwspConnTraceCntlTable.setStatus('current')
cwspConnTraceCntlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1), ).setIndexNames((0, "CISCO-WAN-SVC-MIB", "cwspConnTraceIndex"))
if mibBuilder.loadTexts: cwspConnTraceCntlEntry.setStatus('current')
cwspConnTraceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: cwspConnTraceIndex.setStatus('current')
cwspConnTraceifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspConnTraceifIndex.setStatus('current')
cwspConnTraceSrcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspConnTraceSrcVpi.setStatus('current')
cwspConnTraceSrcVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspConnTraceSrcVci.setStatus('current')
cwspConnTraceType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("p2p", 1), ("p2mp", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspConnTraceType.setStatus('current')
cwspConnTraceCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceCallRef.setStatus('current')
cwspConnTraceLeafRef = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspConnTraceLeafRef.setStatus('current')
cwspConnTraceDestVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceDestVpi.setStatus('current')
cwspConnTraceDestVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceDestVci.setStatus('current')
cwspConnTraceDestCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceDestCallRef.setStatus('current')
cwspConnTraceResultStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("traceInProgress", 1), ("traceCompleted", 2), ("traceIncompleted", 3), ("traceExceededLength", 4), ("traceContRefused", 5), ("traceLackResource", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceResultStatus.setStatus('current')
cwspConnTraceQueryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 3, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: cwspConnTraceQueryStatus.setStatus('current')
cwspConnTraceTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4), )
if mibBuilder.loadTexts: cwspConnTraceTable.setStatus('current')
cwspConnTraceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4, 1), ).setIndexNames((0, "CISCO-WAN-SVC-MIB", "cwspConnTraceIndex"), (0, "CISCO-WAN-SVC-MIB", "cwspConnTraceDataIndex"))
if mibBuilder.loadTexts: cwspConnTraceEntry.setStatus('current')
cwspConnTraceDataIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)))
if mibBuilder.loadTexts: cwspConnTraceDataIndex.setStatus('current')
cwspConnTraceNodeId = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4, 1, 2), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceNodeId.setStatus('current')
cwspConnTraceEgressPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4, 1, 3), PnniPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceEgressPortId.setStatus('current')
cwspConnTraceEgressVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceEgressVpi.setStatus('current')
cwspConnTraceEgressVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceEgressVci.setStatus('current')
cwspConnTraceEgressCallRef = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceEgressCallRef.setStatus('current')
cwspConnTraceEgressPhyPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceEgressPhyPortId.setStatus('current')
cwspConnTraceLastNode = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 14, 4, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspConnTraceLastNode.setStatus('current')
ciscoWANPnniLinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 3, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("in2win", 1), ("out2win", 2), ("in2wout", 3), ("out2wout", 4), ("inCout", 5), ("outCout", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoWANPnniLinkStatus.setStatus('current')
ciscoWANPnniPglStatus = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("hung", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoWANPnniPglStatus.setStatus('current')
ciscoWANPnniReachability = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 3, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ok", 1), ("fail", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoWANPnniReachability.setStatus('current')
ciscoWANPnniRemoteNodeId = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 3, 4), PnniNodeId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoWANPnniRemoteNodeId.setStatus('current')
ciscoWANPnniPortId = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 3, 5), PnniPortId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoWANPnniPortId.setStatus('current')
cwspOperationTable = MibTable((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1), )
if mibBuilder.loadTexts: cwspOperationTable.setStatus('current')
cwspOperationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: cwspOperationEntry.setStatus('current')
cwspOperIlmiEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 1), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperIlmiEnable.setStatus('current')
cwspOperIfcType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("publicUni", 1), ("privateUni", 2), ("iisp", 3), ("pnni", 4), ("aini", 5), ("enni", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperIfcType.setStatus('current')
cwspOperIfcSide = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("userSide", 1), ("networkSide", 2), ("symmetric", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperIfcSide.setStatus('current')
cwspOperMaxVPCs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4096))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMaxVPCs.setStatus('current')
cwspOperMaxVCCs = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65536))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMaxVCCs.setStatus('current')
cwspOperMaxVpiBits = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 12))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMaxVpiBits.setStatus('current')
cwspOperMaxVciBits = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMaxVciBits.setStatus('current')
cwspOperUniType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("public", 1), ("private", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperUniType.setStatus('current')
cwspOperUniVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("version2point0", 1), ("version3poing0", 2), ("version3poing1", 3), ("version4poing0", 4), ("unsupported", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperUniVersion.setStatus('current')
cwspOperDeviceType = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("user", 1), ("node", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperDeviceType.setStatus('current')
cwspOperIlmiVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unsupported", 1), ("version4point0", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperIlmiVersion.setStatus('current')
cwspOperNniSigVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unsupported", 1), ("iisp", 2), ("pnniVersion1point0", 3), ("enni", 4), ("aini", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperNniSigVersion.setStatus('current')
cwspOperMaxSvpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMaxSvpcVpi.setStatus('current')
cwspOperMinSvpcVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMinSvpcVpi.setStatus('current')
cwspOperMaxSvccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMaxSvccVpi.setStatus('current')
cwspOperMinSvccVpi = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMinSvccVpi.setStatus('current')
cwspOperMaxSvccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(35, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMaxSvccVci.setStatus('current')
cwspOperMinSvccVci = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperMinSvccVci.setStatus('current')
cwspOperAddrPlanSupported = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("both", 1), ("aesa", 2), ("e164", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperAddrPlanSupported.setStatus('current')
cwspOperFailReason = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 2, 15, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("ilmiDown", 1), ("portDown", 2), ("vsiOperDown", 3), ("vccfailure", 4), ("neighIpChanged", 5), ("vsiRemove", 6), ("vsiAdminDown", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cwspOperFailReason.setStatus('current')
ciscoWANSpvcFailReason = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 4, 1), CwspSpvcState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ciscoWANSpvcFailReason.setStatus('current')
cwspSpvcNodePrefix = MibScalar((1, 3, 6, 1, 4, 1, 351, 140, 1, 4, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(13, 13)).setFixedLength(13)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cwspSpvcNodePrefix.setStatus('current')
ciscoWANSvcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 3))
ciscoWANSvcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 3, 1))
ciscoWANSvcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 140, 3, 2))
ciscoWANSvcMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 140, 3, 1, 1)).setObjects(("CISCO-WAN-SVC-MIB", "cwsInfoGrp"), ("CISCO-WAN-SVC-MIB", "cwspConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspCacConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspCallStatsGrp"), ("CISCO-WAN-SVC-MIB", "cwspSigStatsGrp"), ("CISCO-WAN-SVC-MIB", "cwspCallGrp"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallGrp"), ("CISCO-WAN-SVC-MIB", "cwspPrefixGrp"), ("CISCO-WAN-SVC-MIB", "cwspLoadGrp"), ("CISCO-WAN-SVC-MIB", "cwspAddressGrp"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceGrp"), ("CISCO-WAN-SVC-MIB", "cwspOperationGrp"), ("CISCO-WAN-SVC-MIB", "cwspSigConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspSscopConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspSscopStatsGrp"), ("CISCO-WAN-SVC-MIB", "cwspRegAddressGrp"), ("CISCO-WAN-SVC-MIB", "cwspRoutingGrp"), ("CISCO-WAN-SVC-MIB", "cwspSpvcGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSvcMIBCompliance = ciscoWANSvcMIBCompliance.setStatus('deprecated')
ciscoWANSvcMIBCompliance2 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 140, 3, 1, 2)).setObjects(("CISCO-WAN-SVC-MIB", "cwsInfoGrp"), ("CISCO-WAN-SVC-MIB", "cwspConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspCacConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspCallStatsGrp"), ("CISCO-WAN-SVC-MIB", "cwspSigStatsGrp"), ("CISCO-WAN-SVC-MIB", "cwspCallGrp"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallGrp"), ("CISCO-WAN-SVC-MIB", "cwspPrefixGrp"), ("CISCO-WAN-SVC-MIB", "cwspLoadGrp"), ("CISCO-WAN-SVC-MIB", "cwspAddressGrp"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceGrp2"), ("CISCO-WAN-SVC-MIB", "cwspOperationGrp"), ("CISCO-WAN-SVC-MIB", "cwspSigConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspSscopConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspSscopStatsGrp"), ("CISCO-WAN-SVC-MIB", "cwspRegAddressGrp"), ("CISCO-WAN-SVC-MIB", "cwspRoutingGrp"), ("CISCO-WAN-SVC-MIB", "cwspSpvcGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSvcMIBCompliance2 = ciscoWANSvcMIBCompliance2.setStatus('deprecated')
ciscoWANSvcMIBCompliance3 = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 140, 3, 1, 3)).setObjects(("CISCO-WAN-SVC-MIB", "cwsInfoGrp"), ("CISCO-WAN-SVC-MIB", "cwspConfigGrp3"), ("CISCO-WAN-SVC-MIB", "cwspCacConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspCallStatsGrp"), ("CISCO-WAN-SVC-MIB", "cwspSigStatsGrp"), ("CISCO-WAN-SVC-MIB", "cwspCallGrp"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallGrp"), ("CISCO-WAN-SVC-MIB", "cwspPrefixGrp"), ("CISCO-WAN-SVC-MIB", "cwspLoadGrp"), ("CISCO-WAN-SVC-MIB", "cwspAddressGrp"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceGrp2"), ("CISCO-WAN-SVC-MIB", "cwspOperationGrp"), ("CISCO-WAN-SVC-MIB", "cwspSigConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspSscopConfigGrp"), ("CISCO-WAN-SVC-MIB", "cwspSscopStatsGrp"), ("CISCO-WAN-SVC-MIB", "cwspRegAddressGrp"), ("CISCO-WAN-SVC-MIB", "cwspRoutingGrp"), ("CISCO-WAN-SVC-MIB", "cwspSpvcGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoWANSvcMIBCompliance3 = ciscoWANSvcMIBCompliance3.setStatus('current')
cwsInfoGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 1)).setObjects(("CISCO-WAN-SVC-MIB", "cwsSwRevision"), ("CISCO-WAN-SVC-MIB", "cwsControllerStatus"), ("CISCO-WAN-SVC-MIB", "cwspPnniStndbyControllerStatus"), ("CISCO-WAN-SVC-MIB", "cwspPnniControllerStatus"), ("CISCO-WAN-SVC-MIB", "cwspPnniControllerPhySlot"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwsInfoGrp = cwsInfoGrp.setStatus('current')
cwspConfigGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 2)).setObjects(("CISCO-WAN-SVC-MIB", "cwspAdminStatus"), ("CISCO-WAN-SVC-MIB", "cwspOperStatus"), ("CISCO-WAN-SVC-MIB", "cwspSvcBlocked"), ("CISCO-WAN-SVC-MIB", "cwspSpvcBlocked"), ("CISCO-WAN-SVC-MIB", "cwspIlmiAddrRegEnable"), ("CISCO-WAN-SVC-MIB", "cwspIlmiAutoConfEnable"), ("CISCO-WAN-SVC-MIB", "cwspIlmiServRegEnable"), ("CISCO-WAN-SVC-MIB", "cwspPhyIdentifier"), ("CISCO-WAN-SVC-MIB", "cwspSignallingVpi"), ("CISCO-WAN-SVC-MIB", "cwspSignallingVci"), ("CISCO-WAN-SVC-MIB", "cwspRoutingVpi"), ("CISCO-WAN-SVC-MIB", "cwspRoutingVci"), ("CISCO-WAN-SVC-MIB", "cwspMaxVpiBits"), ("CISCO-WAN-SVC-MIB", "cwspMaxVciBits"), ("CISCO-WAN-SVC-MIB", "cwspUniVersion"), ("CISCO-WAN-SVC-MIB", "cwspNniVersion"), ("CISCO-WAN-SVC-MIB", "cwspUniType"), ("CISCO-WAN-SVC-MIB", "cwspSide"), ("CISCO-WAN-SVC-MIB", "cwspMaxP2pCalls"), ("CISCO-WAN-SVC-MIB", "cwspMaxP2mpRoots"), ("CISCO-WAN-SVC-MIB", "cwspMaxP2mpLeafs"), ("CISCO-WAN-SVC-MIB", "cwspMinSvccVpi"), ("CISCO-WAN-SVC-MIB", "cwspMaxSvccVpi"), ("CISCO-WAN-SVC-MIB", "cwspMinSvccVci"), ("CISCO-WAN-SVC-MIB", "cwspMaxSvccVci"), ("CISCO-WAN-SVC-MIB", "cwspMinSvpcVpi"), ("CISCO-WAN-SVC-MIB", "cwspMaxSvpcVpi"), ("CISCO-WAN-SVC-MIB", "cwspEnhancedIisp"), ("CISCO-WAN-SVC-MIB", "cwspConfigTableRowStatus"), ("CISCO-WAN-SVC-MIB", "cwspAddrPlanSupported"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspConfigGrp = cwspConfigGrp.setStatus('deprecated')
cwspCacConfigGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 3)).setObjects(("CISCO-WAN-SVC-MIB", "cwspUtilFactorCbr"), ("CISCO-WAN-SVC-MIB", "cwspUtilFactorRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspUtilFactorNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspUtilFactorAbr"), ("CISCO-WAN-SVC-MIB", "cwspUtilFactorUbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxBwCbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxBwRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxBwNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxBwAbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxBwUbr"), ("CISCO-WAN-SVC-MIB", "cwspMinBwCbr"), ("CISCO-WAN-SVC-MIB", "cwspMinBwRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMinBwNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMinBwAbr"), ("CISCO-WAN-SVC-MIB", "cwspMinBwUbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcCbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcAbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcUbr"), ("CISCO-WAN-SVC-MIB", "cwspMinVcCbr"), ("CISCO-WAN-SVC-MIB", "cwspMinVcRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMinVcNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMinVcAbr"), ("CISCO-WAN-SVC-MIB", "cwspMinVcUbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcBwCbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcBwRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcBwNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcBwAbr"), ("CISCO-WAN-SVC-MIB", "cwspMaxVcBwUbr"), ("CISCO-WAN-SVC-MIB", "cwspDefaultCdvtCbr"), ("CISCO-WAN-SVC-MIB", "cwspDefaultCdvtRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspDefaultCdvtNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspDefaultCdvtAbr"), ("CISCO-WAN-SVC-MIB", "cwspDefaultCdvtUbr"), ("CISCO-WAN-SVC-MIB", "cwspDefaultMbsRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspDefaultMbsNrtVbr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspCacConfigGrp = cwspCacConfigGrp.setStatus('current')
cwspCallStatsGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 4)).setObjects(("CISCO-WAN-SVC-MIB", "cwspCountReset"), ("CISCO-WAN-SVC-MIB", "cwspInCallAttempts"), ("CISCO-WAN-SVC-MIB", "cwspInCallEstabs"), ("CISCO-WAN-SVC-MIB", "cwspInCallFailures"), ("CISCO-WAN-SVC-MIB", "cwspInFilterFailures"), ("CISCO-WAN-SVC-MIB", "cwspInRouteFailures"), ("CISCO-WAN-SVC-MIB", "cwspInResrcFailures"), ("CISCO-WAN-SVC-MIB", "cwspInTimerFailures"), ("CISCO-WAN-SVC-MIB", "cwspInCrankbacks"), ("CISCO-WAN-SVC-MIB", "cwspOutCallAttempts"), ("CISCO-WAN-SVC-MIB", "cwspOutCallEstabs"), ("CISCO-WAN-SVC-MIB", "cwspOutCallFailures"), ("CISCO-WAN-SVC-MIB", "cwspOutFilterFailures"), ("CISCO-WAN-SVC-MIB", "cwspOutRouteFailures"), ("CISCO-WAN-SVC-MIB", "cwspOutResrcFailures"), ("CISCO-WAN-SVC-MIB", "cwspOutTimerFailures"), ("CISCO-WAN-SVC-MIB", "cwspOutCrankbacks"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspCallStatsGrp = cwspCallStatsGrp.setStatus('current')
cwspSigStatsGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 5)).setObjects(("CISCO-WAN-SVC-MIB", "cwspSigCounterReset"), ("CISCO-WAN-SVC-MIB", "cwspCallProcRcv"), ("CISCO-WAN-SVC-MIB", "cwspConnectRcv"), ("CISCO-WAN-SVC-MIB", "cwspConnectAckRcv"), ("CISCO-WAN-SVC-MIB", "cwspSetupRcv"), ("CISCO-WAN-SVC-MIB", "cwspReleaseRcv"), ("CISCO-WAN-SVC-MIB", "cwspReleaseComplRcv"), ("CISCO-WAN-SVC-MIB", "cwspRestartRcv"), ("CISCO-WAN-SVC-MIB", "cwspRestartAckRcv"), ("CISCO-WAN-SVC-MIB", "cwspStatusRcv"), ("CISCO-WAN-SVC-MIB", "cwspStatusEnqRcv"), ("CISCO-WAN-SVC-MIB", "cwspNotifyRcv"), ("CISCO-WAN-SVC-MIB", "cwspAlertRcv"), ("CISCO-WAN-SVC-MIB", "cwspProgressRcv"), ("CISCO-WAN-SVC-MIB", "cwspAddPtyRcv"), ("CISCO-WAN-SVC-MIB", "cwspAddPtyAckRcv"), ("CISCO-WAN-SVC-MIB", "cwspAddPtyRejRcv"), ("CISCO-WAN-SVC-MIB", "cwspDropPtyRcv"), ("CISCO-WAN-SVC-MIB", "cwspIncorrectMsgRcv"), ("CISCO-WAN-SVC-MIB", "cwspTimerExpiries"), ("CISCO-WAN-SVC-MIB", "cwspLastCause"), ("CISCO-WAN-SVC-MIB", "cwspLastDiagnostic"), ("CISCO-WAN-SVC-MIB", "cwspCallProcXmt"), ("CISCO-WAN-SVC-MIB", "cwspConnectXmt"), ("CISCO-WAN-SVC-MIB", "cwspConnectAckXmt"), ("CISCO-WAN-SVC-MIB", "cwspSetupXmt"), ("CISCO-WAN-SVC-MIB", "cwspReleaseXmt"), ("CISCO-WAN-SVC-MIB", "cwspReleaseComplXmt"), ("CISCO-WAN-SVC-MIB", "cwspRestartXmt"), ("CISCO-WAN-SVC-MIB", "cwspRestartAckXmt"), ("CISCO-WAN-SVC-MIB", "cwspStatusXmt"), ("CISCO-WAN-SVC-MIB", "cwspStatusEnqXmt"), ("CISCO-WAN-SVC-MIB", "cwspNotifyXmt"), ("CISCO-WAN-SVC-MIB", "cwspAlertXmt"), ("CISCO-WAN-SVC-MIB", "cwspProgressXmt"), ("CISCO-WAN-SVC-MIB", "cwspAddPtyXmt"), ("CISCO-WAN-SVC-MIB", "cwspAddPtyAckXmt"), ("CISCO-WAN-SVC-MIB", "cwspAddPtyRejXmt"), ("CISCO-WAN-SVC-MIB", "cwspDropPtyXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspSigStatsGrp = cwspSigStatsGrp.setStatus('current')
cwspCallGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 6)).setObjects(("CISCO-WAN-SVC-MIB", "cwspCallCallRef"), ("CISCO-WAN-SVC-MIB", "cwspCallCallingAddress"), ("CISCO-WAN-SVC-MIB", "cwspCallCalledAddress"), ("CISCO-WAN-SVC-MIB", "cwspCallCallingSubAddr"), ("CISCO-WAN-SVC-MIB", "cwspCallCalledSubAddr"), ("CISCO-WAN-SVC-MIB", "cwspCallOtherIntfIndex"), ("CISCO-WAN-SVC-MIB", "cwspCallOtherIntfVpi"), ("CISCO-WAN-SVC-MIB", "cwspCallOtherIntfVci"), ("CISCO-WAN-SVC-MIB", "cwspCallOtherIntfCallRef"), ("CISCO-WAN-SVC-MIB", "cwspCallType"), ("CISCO-WAN-SVC-MIB", "cwspCallStartTime"), ("CISCO-WAN-SVC-MIB", "cwspCallBearerClass"), ("CISCO-WAN-SVC-MIB", "cwspCallServiceCategory"), ("CISCO-WAN-SVC-MIB", "cwspCallCastType"), ("CISCO-WAN-SVC-MIB", "cwspCallClipSusceptibility"), ("CISCO-WAN-SVC-MIB", "cwspCallFwdConformance"), ("CISCO-WAN-SVC-MIB", "cwspCallFwdPcr"), ("CISCO-WAN-SVC-MIB", "cwspCallFwdScr"), ("CISCO-WAN-SVC-MIB", "cwspCallFwdMbs"), ("CISCO-WAN-SVC-MIB", "cwspCallFwdCdvt"), ("CISCO-WAN-SVC-MIB", "cwspCallFwdFrameDiscard"), ("CISCO-WAN-SVC-MIB", "cwspCallBwdConformance"), ("CISCO-WAN-SVC-MIB", "cwspCallBwdPcr"), ("CISCO-WAN-SVC-MIB", "cwspCallBwdScr"), ("CISCO-WAN-SVC-MIB", "cwspCallBwdMbs"), ("CISCO-WAN-SVC-MIB", "cwspCallBwdCdvt"), ("CISCO-WAN-SVC-MIB", "cwspCallBwdFrameDiscard"), ("CISCO-WAN-SVC-MIB", "cwspCallMaxCtd"), ("CISCO-WAN-SVC-MIB", "cwspCallMaxFwdCdv"), ("CISCO-WAN-SVC-MIB", "cwspCallMaxFwdClr"), ("CISCO-WAN-SVC-MIB", "cwspCallMaxBwdCdv"), ("CISCO-WAN-SVC-MIB", "cwspCallMaxBwdClr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspCallGrp = cwspCallGrp.setStatus('current')
cwspAbrCallGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 7)).setObjects(("CISCO-WAN-SVC-MIB", "cwspAbrCallCallRef"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallClgAddress"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallCldAddress"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallClgSubAddr"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallCldSubAddr"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallOtherIntfIndex"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallOtherIntfVpi"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallOtherIntfVci"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallOtherIntfCallRef"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallType"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallStartTime"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBearerClass"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallServiceCategory"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallCastType"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallClipSusceptibility"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdConformance"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdPcr"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdMcr"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdIcr"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdRif"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdRdf"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdTbe"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdNrm"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdTrm"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdAdtf"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdCdf"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFwdFrameDiscard"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdPcr"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdMcr"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdIcr"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdRif"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdRdf"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdTbe"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdNrm"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdTrm"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdAdtf"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdCdf"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallBwdFrameDiscard"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallFrtt"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallMaxCtd"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallMaxFwdCdv"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallMaxFwdClr"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallMaxBwdCdv"), ("CISCO-WAN-SVC-MIB", "cwspAbrCallMaxBwdClr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspAbrCallGrp = cwspAbrCallGrp.setStatus('current')
cwspPrefixGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 8)).setObjects(("CISCO-WAN-SVC-MIB", "cwspPrefixRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspPrefixGrp = cwspPrefixGrp.setStatus('current')
cwspLoadGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 9)).setObjects(("CISCO-WAN-SVC-MIB", "cwspLoadBwTotal"), ("CISCO-WAN-SVC-MIB", "cwspLoadMaxBwCbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadMaxBwRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadMaxBwNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadMaxBwAbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadMaxBwUbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadBwAvail"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlBwCbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlBwRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlBwNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlBwAbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlBwUbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadVcAvail"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlVcCbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlVcRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlVcNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlVcAbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadAvlVcUbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCtdCbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCtdRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCtdNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCtdAbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCtdUbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCdvCbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCdvRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCdvNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCdvAbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadCdvUbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr0Cbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr0RtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr0NrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr0Abr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr0Ubr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr01Cbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr01RtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr01NrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr01Abr"), ("CISCO-WAN-SVC-MIB", "cwspLoadClr01Ubr"), ("CISCO-WAN-SVC-MIB", "cwspLoadMinGurCrCbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadMinGurCrRtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadMinGurCrNrtVbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadMinGurCrAbr"), ("CISCO-WAN-SVC-MIB", "cwspLoadMinGurCrUbr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspLoadGrp = cwspLoadGrp.setStatus('current')
cwspAddressGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 10)).setObjects(("CISCO-WAN-SVC-MIB", "cwspAddrType"), ("CISCO-WAN-SVC-MIB", "cwspAddrProto"), ("CISCO-WAN-SVC-MIB", "cwspAddrPlan"), ("CISCO-WAN-SVC-MIB", "cwspAddrScope"), ("CISCO-WAN-SVC-MIB", "cwspAddrRedistribute"), ("CISCO-WAN-SVC-MIB", "cwspAddressRowStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspAddressGrp = cwspAddressGrp.setStatus('current')
cwspSigConfigGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 11)).setObjects(("CISCO-WAN-SVC-MIB", "cwspSigCfgT301"), ("CISCO-WAN-SVC-MIB", "cwspSigCfgT303"), ("CISCO-WAN-SVC-MIB", "cwspSigCfgT308"), ("CISCO-WAN-SVC-MIB", "cwspSigCfgT310"), ("CISCO-WAN-SVC-MIB", "cwspSigCfgT316"), ("CISCO-WAN-SVC-MIB", "cwspSigCfgT317"), ("CISCO-WAN-SVC-MIB", "cwspSigCfgT322"), ("CISCO-WAN-SVC-MIB", "cwspSigCfgT397"), ("CISCO-WAN-SVC-MIB", "cwspSigCfgT398"), ("CISCO-WAN-SVC-MIB", "cwspSigCfgT399"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspSigConfigGrp = cwspSigConfigGrp.setStatus('current')
cwspSscopConfigGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 12)).setObjects(("CISCO-WAN-SVC-MIB", "cwspSscopTmrCC"), ("CISCO-WAN-SVC-MIB", "cwspSscopTmrKeepAlive"), ("CISCO-WAN-SVC-MIB", "cwspSscopTmrNoResp"), ("CISCO-WAN-SVC-MIB", "cwspSscopTmrPoll"), ("CISCO-WAN-SVC-MIB", "cwspSscopTmtIdle"), ("CISCO-WAN-SVC-MIB", "cwspSscopMaxCC"), ("CISCO-WAN-SVC-MIB", "cwspSscopMaxPD"), ("CISCO-WAN-SVC-MIB", "cwspSscopMaxSTAT"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspSscopConfigGrp = cwspSscopConfigGrp.setStatus('current')
cwspSscopStatsGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 13)).setObjects(("CISCO-WAN-SVC-MIB", "cwspSscopCounterReset"), ("CISCO-WAN-SVC-MIB", "cwspSscopIgnoredPduRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopBgnRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopBgakRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopEndRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopEndakRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopRsRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopRsakRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopBgrejRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopSdRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopSdpRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopPollRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopStatRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopUstatRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopUdRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopMdRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopErakRcv"), ("CISCO-WAN-SVC-MIB", "cwspSscopBgnXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopBgakXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopEndXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopEndakXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopRsXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopRsakXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopBgrejXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopSdXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopSdpXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopPollXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopStatXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopUstatXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopUdXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopMdXmt"), ("CISCO-WAN-SVC-MIB", "cwspSscopErakXmt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspSscopStatsGrp = cwspSscopStatsGrp.setStatus('current')
cwspRegAddressGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 14)).setObjects(("CISCO-WAN-SVC-MIB", "cwspRegAtmAddress"), ("CISCO-WAN-SVC-MIB", "cwspRegAddressOrgSscope"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspRegAddressGrp = cwspRegAddressGrp.setStatus('current')
cwspRoutingGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 15)).setObjects(("CISCO-WAN-SVC-MIB", "ciscoWANPnniLinkStatus"), ("CISCO-WAN-SVC-MIB", "ciscoWANPnniPglStatus"), ("CISCO-WAN-SVC-MIB", "ciscoWANPnniReachability"), ("CISCO-WAN-SVC-MIB", "ciscoWANPnniRemoteNodeId"), ("CISCO-WAN-SVC-MIB", "ciscoWANPnniPortId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspRoutingGrp = cwspRoutingGrp.setStatus('current')
cwspConnTraceGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 16)).setObjects(("CISCO-WAN-SVC-MIB", "cwspConnTraceAvail"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceNextIndex"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceifIndex"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceSrcVpi"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceSrcVci"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceType"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceCallRef"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceLeafRef"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceDestVpi"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceDestVci"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceDestCallRef"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceResultStatus"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceQueryStatus"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceNodeId"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressPortId"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressVpi"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressVci"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressCallRef"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressPhyPortId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspConnTraceGrp = cwspConnTraceGrp.setStatus('deprecated')
cwspOperationGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 17)).setObjects(("CISCO-WAN-SVC-MIB", "cwspOperIlmiEnable"), ("CISCO-WAN-SVC-MIB", "cwspOperIfcType"), ("CISCO-WAN-SVC-MIB", "cwspOperIfcSide"), ("CISCO-WAN-SVC-MIB", "cwspOperMaxVPCs"), ("CISCO-WAN-SVC-MIB", "cwspOperMaxVCCs"), ("CISCO-WAN-SVC-MIB", "cwspOperMaxVpiBits"), ("CISCO-WAN-SVC-MIB", "cwspOperMaxVciBits"), ("CISCO-WAN-SVC-MIB", "cwspOperUniType"), ("CISCO-WAN-SVC-MIB", "cwspOperUniVersion"), ("CISCO-WAN-SVC-MIB", "cwspOperDeviceType"), ("CISCO-WAN-SVC-MIB", "cwspOperIlmiVersion"), ("CISCO-WAN-SVC-MIB", "cwspOperNniSigVersion"), ("CISCO-WAN-SVC-MIB", "cwspOperMaxSvpcVpi"), ("CISCO-WAN-SVC-MIB", "cwspOperMinSvpcVpi"), ("CISCO-WAN-SVC-MIB", "cwspOperMaxSvccVpi"), ("CISCO-WAN-SVC-MIB", "cwspOperMinSvccVpi"), ("CISCO-WAN-SVC-MIB", "cwspOperMaxSvccVci"), ("CISCO-WAN-SVC-MIB", "cwspOperMinSvccVci"), ("CISCO-WAN-SVC-MIB", "cwspOperFailReason"), ("CISCO-WAN-SVC-MIB", "cwspOperAddrPlanSupported"), ("CISCO-WAN-SVC-MIB", "cwspIlmiSecureLink"), ("CISCO-WAN-SVC-MIB", "cwspIlmiAttachmentPoint"), ("CISCO-WAN-SVC-MIB", "cwspIlmiLocalAttrStd"), ("CISCO-WAN-SVC-MIB", "cwspIlmiUCSMEnable"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspOperationGrp = cwspOperationGrp.setStatus('current')
cwspSpvcGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 18)).setObjects(("CISCO-WAN-SVC-MIB", "ciscoWANSpvcFailReason"), ("CISCO-WAN-SVC-MIB", "cwspSpvcNodePrefix"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspSpvcGrp = cwspSpvcGrp.setStatus('current')
cwspConnTraceGrp2 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 19)).setObjects(("CISCO-WAN-SVC-MIB", "cwspConnTraceAvail"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceNextIndex"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceifIndex"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceSrcVpi"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceSrcVci"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceType"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceCallRef"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceLeafRef"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceDestVpi"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceDestVci"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceDestCallRef"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceResultStatus"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceQueryStatus"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceNodeId"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressPortId"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressVpi"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressVci"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressCallRef"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceEgressPhyPortId"), ("CISCO-WAN-SVC-MIB", "cwspConnTraceLastNode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspConnTraceGrp2 = cwspConnTraceGrp2.setStatus('current')
cwspConfigGrp2 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 20)).setObjects(("CISCO-WAN-SVC-MIB", "cwspAdminStatus"), ("CISCO-WAN-SVC-MIB", "cwspOperStatus"), ("CISCO-WAN-SVC-MIB", "cwspSvcBlocked"), ("CISCO-WAN-SVC-MIB", "cwspSpvcBlocked"), ("CISCO-WAN-SVC-MIB", "cwspIlmiAddrRegEnable"), ("CISCO-WAN-SVC-MIB", "cwspIlmiAutoConfEnable"), ("CISCO-WAN-SVC-MIB", "cwspIlmiServRegEnable"), ("CISCO-WAN-SVC-MIB", "cwspPhyIdentifier"), ("CISCO-WAN-SVC-MIB", "cwspSignallingVpi"), ("CISCO-WAN-SVC-MIB", "cwspSignallingVci"), ("CISCO-WAN-SVC-MIB", "cwspRoutingVpi"), ("CISCO-WAN-SVC-MIB", "cwspRoutingVci"), ("CISCO-WAN-SVC-MIB", "cwspMaxVpiBits"), ("CISCO-WAN-SVC-MIB", "cwspMaxVciBits"), ("CISCO-WAN-SVC-MIB", "cwspUniVersion"), ("CISCO-WAN-SVC-MIB", "cwspNniVersion"), ("CISCO-WAN-SVC-MIB", "cwspUniType"), ("CISCO-WAN-SVC-MIB", "cwspSide"), ("CISCO-WAN-SVC-MIB", "cwspMaxP2pCalls"), ("CISCO-WAN-SVC-MIB", "cwspMaxP2mpRoots"), ("CISCO-WAN-SVC-MIB", "cwspMaxP2mpLeafs"), ("CISCO-WAN-SVC-MIB", "cwspMinSvccVpi"), ("CISCO-WAN-SVC-MIB", "cwspMaxSvccVpi"), ("CISCO-WAN-SVC-MIB", "cwspMinSvccVci"), ("CISCO-WAN-SVC-MIB", "cwspMaxSvccVci"), ("CISCO-WAN-SVC-MIB", "cwspMinSvpcVpi"), ("CISCO-WAN-SVC-MIB", "cwspMaxSvpcVpi"), ("CISCO-WAN-SVC-MIB", "cwspEnhancedIisp"), ("CISCO-WAN-SVC-MIB", "cwspConfigTableRowStatus"), ("CISCO-WAN-SVC-MIB", "cwspAddrPlanSupported"), ("CISCO-WAN-SVC-MIB", "cwspIlmiSecureLink"), ("CISCO-WAN-SVC-MIB", "cwspIlmiAttachmentPoint"), ("CISCO-WAN-SVC-MIB", "cwspIlmiLocalAttrStd"), ("CISCO-WAN-SVC-MIB", "cwspIlmiUCSMEnable"), ("CISCO-WAN-SVC-MIB", "cwspRoutingPriority"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspConfigGrp2 = cwspConfigGrp2.setStatus('deprecated')
cwspConfigGrp3 = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 140, 3, 2, 21)).setObjects(("CISCO-WAN-SVC-MIB", "cwspAdminStatus"), ("CISCO-WAN-SVC-MIB", "cwspOperStatus"), ("CISCO-WAN-SVC-MIB", "cwspSvcBlocked"), ("CISCO-WAN-SVC-MIB", "cwspSpvcBlocked"), ("CISCO-WAN-SVC-MIB", "cwspIlmiAddrRegEnable"), ("CISCO-WAN-SVC-MIB", "cwspIlmiAutoConfEnable"), ("CISCO-WAN-SVC-MIB", "cwspIlmiServRegEnable"), ("CISCO-WAN-SVC-MIB", "cwspPhyIdentifier"), ("CISCO-WAN-SVC-MIB", "cwspSignallingVpi"), ("CISCO-WAN-SVC-MIB", "cwspSignallingVci"), ("CISCO-WAN-SVC-MIB", "cwspRoutingVpi"), ("CISCO-WAN-SVC-MIB", "cwspRoutingVci"), ("CISCO-WAN-SVC-MIB", "cwspMaxVpiBits"), ("CISCO-WAN-SVC-MIB", "cwspMaxVciBits"), ("CISCO-WAN-SVC-MIB", "cwspUniVersion"), ("CISCO-WAN-SVC-MIB", "cwspNniVersion"), ("CISCO-WAN-SVC-MIB", "cwspUniType"), ("CISCO-WAN-SVC-MIB", "cwspSide"), ("CISCO-WAN-SVC-MIB", "cwspMaxP2pCalls"), ("CISCO-WAN-SVC-MIB", "cwspMaxP2mpRoots"), ("CISCO-WAN-SVC-MIB", "cwspMaxP2mpLeafs"), ("CISCO-WAN-SVC-MIB", "cwspMinSvccVpi"), ("CISCO-WAN-SVC-MIB", "cwspMaxSvccVpi"), ("CISCO-WAN-SVC-MIB", "cwspMinSvccVci"), ("CISCO-WAN-SVC-MIB", "cwspMaxSvccVci"), ("CISCO-WAN-SVC-MIB", "cwspMinSvpcVpi"), ("CISCO-WAN-SVC-MIB", "cwspMaxSvpcVpi"), ("CISCO-WAN-SVC-MIB", "cwspEnhancedIisp"), ("CISCO-WAN-SVC-MIB", "cwspConfigTableRowStatus"), ("CISCO-WAN-SVC-MIB", "cwspAddrPlanSupported"), ("CISCO-WAN-SVC-MIB", "cwspIlmiSecureLink"), ("CISCO-WAN-SVC-MIB", "cwspIlmiAttachmentPoint"), ("CISCO-WAN-SVC-MIB", "cwspIlmiLocalAttrStd"), ("CISCO-WAN-SVC-MIB", "cwspIlmiUCSMEnable"), ("CISCO-WAN-SVC-MIB", "cwspRoutingPriority"), ("CISCO-WAN-SVC-MIB", "cwspSpvcAddress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cwspConfigGrp3 = cwspConfigGrp3.setStatus('current')
mibBuilder.exportSymbols("CISCO-WAN-SVC-MIB", cwspPnniControllerStatus=cwspPnniControllerStatus, cwspAbrCallType=cwspAbrCallType, cwspConnTraceCallRef=cwspConnTraceCallRef, cwspLoadClr0Cbr=cwspLoadClr0Cbr, cwspOutCrankbacks=cwspOutCrankbacks, cwspTimerExpiries=cwspTimerExpiries, cwspConnTraceDestCallRef=cwspConnTraceDestCallRef, cwspLoadClr0NrtVbr=cwspLoadClr0NrtVbr, cwspSscopMaxSTAT=cwspSscopMaxSTAT, ciscoWANPnniRemoteNodeId=ciscoWANPnniRemoteNodeId, cwspSscopStats=cwspSscopStats, cwspConnTraceEgressPortId=cwspConnTraceEgressPortId, cwspMaxVcBwRtVbr=cwspMaxVcBwRtVbr, cwspRoutingVci=cwspRoutingVci, cwspAbrCallMaxBwdClr=cwspAbrCallMaxBwdClr, cwspUniVersion=cwspUniVersion, cwspCallServiceCategory=cwspCallServiceCategory, cwspAbrCallMaxFwdCdv=cwspAbrCallMaxFwdCdv, cwspConnTraceNodeId=cwspConnTraceNodeId, cwspMinBwCbr=cwspMinBwCbr, cwspMinVcCbr=cwspMinVcCbr, cwspAbrCallServiceCategory=cwspAbrCallServiceCategory, cwspConnTraceGrp=cwspConnTraceGrp, cwspConnTraceCntlTable=cwspConnTraceCntlTable, cwspPhyIdentifier=cwspPhyIdentifier, cwspConfigTableRowStatus=cwspConfigTableRowStatus, cwspProgressXmt=cwspProgressXmt, cwspSscopEndakRcv=cwspSscopEndakRcv, cwspPrefixRowStatus=cwspPrefixRowStatus, cwspConnTraceTable=cwspConnTraceTable, cwspSscopTmtIdle=cwspSscopTmtIdle, cwspPrefix=cwspPrefix, cwspAbrCallBwdAdtf=cwspAbrCallBwdAdtf, cwspCallMaxFwdCdv=cwspCallMaxFwdCdv, cwspCallMaxCtd=cwspCallMaxCtd, cwspCallBwdMbs=cwspCallBwdMbs, cwspAddPtyXmt=cwspAddPtyXmt, cwspOutResrcFailures=cwspOutResrcFailures, cwspLoadCtdNrtVbr=cwspLoadCtdNrtVbr, cwspAbrCallClgSubAddr=cwspAbrCallClgSubAddr, cwspSscopMaxCC=cwspSscopMaxCC, cwspSigConfigGrp=cwspSigConfigGrp, cwspLoadClr01Cbr=cwspLoadClr01Cbr, cwspOperDeviceType=cwspOperDeviceType, cwspOperIfcSide=cwspOperIfcSide, cwspOperationEntry=cwspOperationEntry, cwspAddrScope=cwspAddrScope, cwspCallBwdScr=cwspCallBwdScr, cwspUtilFactorAbr=cwspUtilFactorAbr, cwspCallType=cwspCallType, cwspCallFwdConformance=cwspCallFwdConformance, cwspAbrCallMaxBwdCdv=cwspAbrCallMaxBwdCdv, cwspMaxVciBits=cwspMaxVciBits, cwspSpvcAddress=cwspSpvcAddress, cwspLoadCdvRtVbr=cwspLoadCdvRtVbr, cwspCallVpi=cwspCallVpi, cwspMinVcNrtVbr=cwspMinVcNrtVbr, cwspAbrCallFwdFrameDiscard=cwspAbrCallFwdFrameDiscard, ciscoWANPnniReachability=ciscoWANPnniReachability, cwspOperationGrp=cwspOperationGrp, cwspAbrCallBwdRif=cwspAbrCallBwdRif, cwspOperMinSvpcVpi=cwspOperMinSvpcVpi, cwspMaxSvccVci=cwspMaxSvccVci, cwspIlmiServRegEnable=cwspIlmiServRegEnable, cwspMaxVcUbr=cwspMaxVcUbr, cwspMaxP2mpLeafs=cwspMaxP2mpLeafs, cwspAddressRowStatus=cwspAddressRowStatus, cwspConnTraceEgressPhyPortId=cwspConnTraceEgressPhyPortId, cwspSscopMaxPD=cwspSscopMaxPD, cwspRestartXmt=cwspRestartXmt, cwspSscopBgnRcv=cwspSscopBgnRcv, ciscoWANSvcMIBCompliances=ciscoWANSvcMIBCompliances, cwspSscopRsakXmt=cwspSscopRsakXmt, cwspMaxBwUbr=cwspMaxBwUbr, cwspCall=cwspCall, cwspSscopMdRcv=cwspSscopMdRcv, cwspConnTraceGrp2=cwspConnTraceGrp2, cwspAbrCallFwdIcr=cwspAbrCallFwdIcr, cwspSscopUdRcv=cwspSscopUdRcv, cwspConnTraceType=cwspConnTraceType, cwspSscopBgakRcv=cwspSscopBgakRcv, cwspOperMinSvccVci=cwspOperMinSvccVci, cwspAbrCallBwdTbe=cwspAbrCallBwdTbe, cwspAdminStatus=cwspAdminStatus, cwspSscopSdXmt=cwspSscopSdXmt, cwspAddPtyRejRcv=cwspAddPtyRejRcv, cwspSscopBgrejXmt=cwspSscopBgrejXmt, cwspCallBwdCdvt=cwspCallBwdCdvt, cwspRoutingGrp=cwspRoutingGrp, cwspUniType=cwspUniType, cwspCallEntry=cwspCallEntry, cwspNniVersion=cwspNniVersion, cwspRestartRcv=cwspRestartRcv, cwspPrefixGrp=cwspPrefixGrp, cwspAbrCallFwdAdtf=cwspAbrCallFwdAdtf, cwspSscopBgrejRcv=cwspSscopBgrejRcv, cwspLoadCtdRtVbr=cwspLoadCtdRtVbr, cwspLoadBwAvail=cwspLoadBwAvail, cwspConnectAckXmt=cwspConnectAckXmt, cwspIlmiAddrRegEnable=cwspIlmiAddrRegEnable, cwspAbrCallOtherIntfVpi=cwspAbrCallOtherIntfVpi, cwspIncorrectMsgRcv=cwspIncorrectMsgRcv, cwspAbrCallFwdTbe=cwspAbrCallFwdTbe, cwspAbrCallVpi=cwspAbrCallVpi, cwspConnTrace=cwspConnTrace, cwspLoadAvlVcNrtVbr=cwspLoadAvlVcNrtVbr, cwspLoadCtdUbr=cwspLoadCtdUbr, cwspLoadClr0RtVbr=cwspLoadClr0RtVbr, cwspLoadClr01Ubr=cwspLoadClr01Ubr, cwspLoadAvlVcAbr=cwspLoadAvlVcAbr, cwspLoadAvlVcCbr=cwspLoadAvlVcCbr, cwspOperUniType=cwspOperUniType, cwspNotifyXmt=cwspNotifyXmt, cwspMaxVcBwUbr=cwspMaxVcBwUbr, cwspConnTraceDestVci=cwspConnTraceDestVci, cwspCallCallRef=cwspCallCallRef, cwspCallStartTime=cwspCallStartTime, cwspLoadAvlVcUbr=cwspLoadAvlVcUbr, cwspAbrCallCldAddress=cwspAbrCallCldAddress, cwspMaxBwCbr=cwspMaxBwCbr, ciscoWANSvcMIB=ciscoWANSvcMIB, ciscoWANPnniLinkStatus=ciscoWANPnniLinkStatus, cwspConfig=cwspConfig, cwspSignallingVci=cwspSignallingVci, cwspOutCallEstabs=cwspOutCallEstabs, cwspLoadClr01RtVbr=cwspLoadClr01RtVbr, cwspSscopUstatRcv=cwspSscopUstatRcv, cwspSigCfgT397=cwspSigCfgT397, cwspRegAtmAddress=cwspRegAtmAddress, cwspCallCalledSubAddr=cwspCallCalledSubAddr, cwspSscopStatsGrp=cwspSscopStatsGrp, cwspAbrCallClipSusceptibility=cwspAbrCallClipSusceptibility, cwspStatusRcv=cwspStatusRcv, cwspAbrCallCastType=cwspAbrCallCastType, cwspAddrPlanSupported=cwspAddrPlanSupported, cwspRoutingVpi=cwspRoutingVpi, cwspCallCastType=cwspCallCastType, cwspAbrCallFwdConformance=cwspAbrCallFwdConformance, cwspMaxVcNrtVbr=cwspMaxVcNrtVbr, cwspOperIlmiVersion=cwspOperIlmiVersion, cwspSscopTable=cwspSscopTable, cwspSscopRsakRcv=cwspSscopRsakRcv, cwspAbrCallFwdNrm=cwspAbrCallFwdNrm, cwspLoadBwTotal=cwspLoadBwTotal, cwspRegAddressGrp=cwspRegAddressGrp, cwspMaxVpiBits=cwspMaxVpiBits, cwspDefaultCdvtAbr=cwspDefaultCdvtAbr, cwspConnTraceLastNode=cwspConnTraceLastNode, cwspSscopIgnoredPduRcv=cwspSscopIgnoredPduRcv, cwspOperMaxVciBits=cwspOperMaxVciBits, cwspLastDiagnostic=cwspLastDiagnostic, cwspUtilFactorRtVbr=cwspUtilFactorRtVbr, cwspSscopSdpRcv=cwspSscopSdpRcv, cwspInCallAttempts=cwspInCallAttempts, cwspConnTraceResultStatus=cwspConnTraceResultStatus, cwspCallProcXmt=cwspCallProcXmt, cwspOperMaxSvpcVpi=cwspOperMaxSvpcVpi, cwspMaxBwNrtVbr=cwspMaxBwNrtVbr, cwspReleaseComplXmt=cwspReleaseComplXmt, cwspAddrType=cwspAddrType, cwspMaxVcBwCbr=cwspMaxVcBwCbr, cwspConnTraceDataIndex=cwspConnTraceDataIndex, cwspSpvcBlocked=cwspSpvcBlocked, cwspSscopPollRcv=cwspSscopPollRcv, cwspRoutingPriority=cwspRoutingPriority, cwspUtilFactorUbr=cwspUtilFactorUbr, cwspLoadCdvAbr=cwspLoadCdvAbr, cwspLoadMaxBwNrtVbr=cwspLoadMaxBwNrtVbr, cwspMaxVcAbr=cwspMaxVcAbr, cwspCountReset=cwspCountReset, cwspAddrPlan=cwspAddrPlan, cwspAbrCallFrtt=cwspAbrCallFrtt, cwspCallBwdConformance=cwspCallBwdConformance, cwspInRouteFailures=cwspInRouteFailures, ciscoWANSpvcFailReason=ciscoWANSpvcFailReason, cwspReleaseComplRcv=cwspReleaseComplRcv, ciscoWANPnniRouting=ciscoWANPnniRouting, cwspReleaseRcv=cwspReleaseRcv, cwspMinVcRtVbr=cwspMinVcRtVbr, cwspLoadMaxBwAbr=cwspLoadMaxBwAbr, cwspLoadGrp=cwspLoadGrp, cwspSigCfgT322=cwspSigCfgT322, cwspSigStats=cwspSigStats, cwspUtilFactorNrtVbr=cwspUtilFactorNrtVbr, cwspConnTraceDestVpi=cwspConnTraceDestVpi, cwspSscopSdpXmt=cwspSscopSdpXmt, cwspSigCfgT301=cwspSigCfgT301, cwspLoadMaxBwCbr=cwspLoadMaxBwCbr, cwspLoadCdvNrtVbr=cwspLoadCdvNrtVbr, cwspSigCfgT310=cwspSigCfgT310, cwspConnTraceEntry=cwspConnTraceEntry, cwspAddressEntry=cwspAddressEntry, cwspAbrCallFwdRdf=cwspAbrCallFwdRdf, cwspIlmiAttachmentPoint=cwspIlmiAttachmentPoint, cwspAbrCallBwdFrameDiscard=cwspAbrCallBwdFrameDiscard, cwspAbrCallBwdTrm=cwspAbrCallBwdTrm, cwspSigCfgT317=cwspSigCfgT317, cwspLoadMinGurCrAbr=cwspLoadMinGurCrAbr, cwspCallFwdFrameDiscard=cwspCallFwdFrameDiscard, cwspLoadEntry=cwspLoadEntry, cwspAddPtyRejXmt=cwspAddPtyRejXmt, cwspSscopBgakXmt=cwspSscopBgakXmt, cwspAbrCallCldSubAddr=cwspAbrCallCldSubAddr, cwspCallOtherIntfVpi=cwspCallOtherIntfVpi, cwspConnectRcv=cwspConnectRcv, cwspSetupXmt=cwspSetupXmt, cwspDefaultCdvtCbr=cwspDefaultCdvtCbr, cwspSscopTmrKeepAlive=cwspSscopTmrKeepAlive, cwspAddrLen=cwspAddrLen, cwspProgressRcv=cwspProgressRcv, cwspMaxBwAbr=cwspMaxBwAbr, cwspMinVcUbr=cwspMinVcUbr, cwspMinVcAbr=cwspMinVcAbr, cwspIlmiSecureLink=cwspIlmiSecureLink, cwspReleaseXmt=cwspReleaseXmt, cwspDefaultMbsNrtVbr=cwspDefaultMbsNrtVbr, cwspOperation=cwspOperation, cwspAbrCallVci=cwspAbrCallVci, cwspInCallFailures=cwspInCallFailures, cwspInCrankbacks=cwspInCrankbacks, cwspCallCallingAddress=cwspCallCallingAddress, ciscoWANSvcMIBCompliance3=ciscoWANSvcMIBCompliance3, cwspMaxSvpcVpi=cwspMaxSvpcVpi, ciscoWANSvcPort=ciscoWANSvcPort, cwspLoad=cwspLoad, cwspSscopTmrCC=cwspSscopTmrCC, cwspOutTimerFailures=cwspOutTimerFailures, cwspRegAddressEntry=cwspRegAddressEntry, cwspLoadAvlBwCbr=cwspLoadAvlBwCbr, cwspConnTraceEgressVpi=cwspConnTraceEgressVpi, cwspCallProcRcv=cwspCallProcRcv, cwspAbrCallFwdMcr=cwspAbrCallFwdMcr, cwspMinBwUbr=cwspMinBwUbr, cwspLoadClr01Abr=cwspLoadClr01Abr, cwspCallCallingSubAddr=cwspCallCallingSubAddr, cwspAbrCallOtherIntfCallRef=cwspAbrCallOtherIntfCallRef, cwspSigCfgT303=cwspSigCfgT303, cwspConnectAckRcv=cwspConnectAckRcv, cwspLoadTable=cwspLoadTable, cwspSscopStatsEntry=cwspSscopStatsEntry, cwspInTimerFailures=cwspInTimerFailures, cwspOutCallAttempts=cwspOutCallAttempts, cwspConnTraceAvail=cwspConnTraceAvail, cwspSscopTmrNoResp=cwspSscopTmrNoResp, cwspDefaultCdvtUbr=cwspDefaultCdvtUbr, cwspSscopCounterReset=cwspSscopCounterReset, cwspCallTable=cwspCallTable, cwspLoadVcAvail=cwspLoadVcAvail, cwspCallBwdFrameDiscard=cwspCallBwdFrameDiscard, cwspSigConfigTable=cwspSigConfigTable, cwspAddrRedistribute=cwspAddrRedistribute, cwspCallFwdScr=cwspCallFwdScr, cwspStatusXmt=cwspStatusXmt, cwspOperStatus=cwspOperStatus)
mibBuilder.exportSymbols("CISCO-WAN-SVC-MIB", cwspNetPrefix=cwspNetPrefix, cwspCallOtherIntfCallRef=cwspCallOtherIntfCallRef, cwspMaxP2mpRoots=cwspMaxP2mpRoots, cwspLoadMinGurCrNrtVbr=cwspLoadMinGurCrNrtVbr, cwspSscopUdXmt=cwspSscopUdXmt, cwspAbrCallBwdRdf=cwspAbrCallBwdRdf, cwspSignallingVpi=cwspSignallingVpi, cwspLoadMinGurCrRtVbr=cwspLoadMinGurCrRtVbr, ciscoWANSvcMIBObjects=ciscoWANSvcMIBObjects, cwspCallBwdPcr=cwspCallBwdPcr, PYSNMP_MODULE_ID=ciscoWANSvcMIB, cwspSpvcNodePrefix=cwspSpvcNodePrefix, cwspConnTraceIndex=cwspConnTraceIndex, cwspOperFailReason=cwspOperFailReason, cwspConnTraceEgressVci=cwspConnTraceEgressVci, cwspAbrCallTable=cwspAbrCallTable, cwspAddressTable=cwspAddressTable, cwspAbrCallOtherIntfVci=cwspAbrCallOtherIntfVci, cwspCallOtherIntfIndex=cwspCallOtherIntfIndex, cwspAlertRcv=cwspAlertRcv, cwspConnTraceifIndex=cwspConnTraceifIndex, cwspAddPtyRcv=cwspAddPtyRcv, cwspOperAddrPlanSupported=cwspOperAddrPlanSupported, cwspDefaultCdvtNrtVbr=cwspDefaultCdvtNrtVbr, cwspCallLeafReference=cwspCallLeafReference, cwspOperMaxVPCs=cwspOperMaxVPCs, cwspAbrCallFwdCdf=cwspAbrCallFwdCdf, cwspMinSvpcVpi=cwspMinSvpcVpi, cwspOperMaxSvccVpi=cwspOperMaxSvccVpi, cwspConnTraceNextIndex=cwspConnTraceNextIndex, cwspCallStatsEntry=cwspCallStatsEntry, cwspSscopBgnXmt=cwspSscopBgnXmt, cwspOutRouteFailures=cwspOutRouteFailures, cwspCallCalledAddress=cwspCallCalledAddress, cwspCallMaxBwdCdv=cwspCallMaxBwdCdv, cwspSigCfgT398=cwspSigCfgT398, cwspCallGrp=cwspCallGrp, cwspSscopUstatXmt=cwspSscopUstatXmt, cwspSigCfgT308=cwspSigCfgT308, cwspAddrProto=cwspAddrProto, cwspLoadCtdAbr=cwspLoadCtdAbr, cwspCallFwdCdvt=cwspCallFwdCdvt, cwspRestartAckXmt=cwspRestartAckXmt, cwspLoadCtdCbr=cwspLoadCtdCbr, cwspAbrCallClgAddress=cwspAbrCallClgAddress, cwspAbrCallMaxFwdClr=cwspAbrCallMaxFwdClr, cwspSigStatsGrp=cwspSigStatsGrp, cwspMaxVcBwNrtVbr=cwspMaxVcBwNrtVbr, cwspLoadCdvCbr=cwspLoadCdvCbr, cwspOperIlmiEnable=cwspOperIlmiEnable, cwspSscopEndXmt=cwspSscopEndXmt, cwspMaxVcRtVbr=cwspMaxVcRtVbr, cwspSscopErakXmt=cwspSscopErakXmt, cwspAddressGrp=cwspAddressGrp, cwspMinBwAbr=cwspMinBwAbr, cwspConnTraceLeafRef=cwspConnTraceLeafRef, cwspAddPtyAckRcv=cwspAddPtyAckRcv, cwspUtilFactorCbr=cwspUtilFactorCbr, cwsControllerStatus=cwsControllerStatus, cwspAddress=cwspAddress, cwspOperMaxVpiBits=cwspOperMaxVpiBits, cwspMaxSvccVpi=cwspMaxSvccVpi, cwsSwRevision=cwsSwRevision, cwspSscopEndRcv=cwspSscopEndRcv, cwspMaxVcCbr=cwspMaxVcCbr, cwspCacConfig=cwspCacConfig, ciscoWANSvcMIBCompliance2=ciscoWANSvcMIBCompliance2, cwspSetupRcv=cwspSetupRcv, cwspSscopErakRcv=cwspSscopErakRcv, cwspCallMaxFwdClr=cwspCallMaxFwdClr, cwspOperMaxSvccVci=cwspOperMaxSvccVci, cwspStatusEnqRcv=cwspStatusEnqRcv, cwspSvcBlocked=cwspSvcBlocked, cwspOutFilterFailures=cwspOutFilterFailures, cwspOperMaxVCCs=cwspOperMaxVCCs, cwspSigConfigEntry=cwspSigConfigEntry, cwspConfigGrp3=cwspConfigGrp3, cwspOperUniVersion=cwspOperUniVersion, cwspLoadMinGurCrUbr=cwspLoadMinGurCrUbr, cwspCallStatsTable=cwspCallStatsTable, cwspConnTraceCntlEntry=cwspConnTraceCntlEntry, cwspCallMaxBwdClr=cwspCallMaxBwdClr, cwspLoadCdvUbr=cwspLoadCdvUbr, cwspRestartAckRcv=cwspRestartAckRcv, cwspConnTraceSrcVpi=cwspConnTraceSrcVpi, cwspSigCounterReset=cwspSigCounterReset, ciscoWANSvcMIBCompliance=ciscoWANSvcMIBCompliance, cwspNotifyRcv=cwspNotifyRcv, cwspCallFwdMbs=cwspCallFwdMbs, cwspCacConfigTable=cwspCacConfigTable, cwspDefaultCdvtRtVbr=cwspDefaultCdvtRtVbr, cwspAbrCallMaxCtd=cwspAbrCallMaxCtd, cwspInCallEstabs=cwspInCallEstabs, cwspCallBearerClass=cwspCallBearerClass, cwspCallFwdPcr=cwspCallFwdPcr, cwspSscopEntry=cwspSscopEntry, cwspSscopEndakXmt=cwspSscopEndakXmt, cwspMinSvccVci=cwspMinSvccVci, cwspSigStatsTable=cwspSigStatsTable, cwspCallVci=cwspCallVci, cwspIlmiUCSMEnable=cwspIlmiUCSMEnable, cwspCallOtherIntfVci=cwspCallOtherIntfVci, cwspRegAddressTable=cwspRegAddressTable, cwspSscopRsRcv=cwspSscopRsRcv, cwspPrefixTable=cwspPrefixTable, cwspCallClipSusceptibility=cwspCallClipSusceptibility, cwsInfoGrp=cwsInfoGrp, cwspConfigGrp2=cwspConfigGrp2, cwspCacConfigEntry=cwspCacConfigEntry, cwspSigConfig=cwspSigConfig, cwspSscopStatRcv=cwspSscopStatRcv, cwspConfigTable=cwspConfigTable, cwspAlertXmt=cwspAlertXmt, cwspSscopStatXmt=cwspSscopStatXmt, cwspAbrCall=cwspAbrCall, cwspLoadAvlBwUbr=cwspLoadAvlBwUbr, cwspStatusEnqXmt=cwspStatusEnqXmt, cwspAbrCallBearerClass=cwspAbrCallBearerClass, cwspCallStats=cwspCallStats, cwspLoadMinGurCrCbr=cwspLoadMinGurCrCbr, cwspAbrCallStartTime=cwspAbrCallStartTime, cwspLoadAvlBwAbr=cwspLoadAvlBwAbr, cwspMinBwNrtVbr=cwspMinBwNrtVbr, cwspDefaultMbsRtVbr=cwspDefaultMbsRtVbr, cwspPnniStndbyControllerStatus=cwspPnniStndbyControllerStatus, cwspLoadAvlBwRtVbr=cwspLoadAvlBwRtVbr, cwspLoadMaxBwRtVbr=cwspLoadMaxBwRtVbr, cwspAbrCallBwdPcr=cwspAbrCallBwdPcr, cwspLoadAvlBwNrtVbr=cwspLoadAvlBwNrtVbr, cwspSigCfgT399=cwspSigCfgT399, cwspConfigEntry=cwspConfigEntry, cwspAddPtyAckXmt=cwspAddPtyAckXmt, cwspSscopTmrPoll=cwspSscopTmrPoll, cwspSigCfgT316=cwspSigCfgT316, ciscoWANPnniPortId=ciscoWANPnniPortId, cwspSide=cwspSide, cwspSscopConfig=cwspSscopConfig, ciscoWANSvcMIBGroups=ciscoWANSvcMIBGroups, cwspDropPtyRcv=cwspDropPtyRcv, cwspEnhancedIisp=cwspEnhancedIisp, cwspRegAddressOrgSscope=cwspRegAddressOrgSscope, cwspConnectXmt=cwspConnectXmt, cwspAbrCallBwdCdf=cwspAbrCallBwdCdf, cwspIlmiAutoConfEnable=cwspIlmiAutoConfEnable, cwspSscopSdRcv=cwspSscopSdRcv, cwspSscopStatus=cwspSscopStatus, cwspAbrCallBwdMcr=cwspAbrCallBwdMcr, cwspConnTraceQueryStatus=cwspConnTraceQueryStatus, cwspLoadAvlVcRtVbr=cwspLoadAvlVcRtVbr, cwspMaxP2pCalls=cwspMaxP2pCalls, cwspMaxBwRtVbr=cwspMaxBwRtVbr, cwspConfigGrp=cwspConfigGrp, cwspSscopStatsTable=cwspSscopStatsTable, cwspAbrCallFwdRif=cwspAbrCallFwdRif, cwspAbrCallOtherIntfIndex=cwspAbrCallOtherIntfIndex, cwspSigStatsEntry=cwspSigStatsEntry, cwspMinSvccVpi=cwspMinSvccVpi, cwspCacConfigGrp=cwspCacConfigGrp, cwspIlmiLocalAttrStd=cwspIlmiLocalAttrStd, cwspOutCallFailures=cwspOutCallFailures, cwspSpvcGrp=cwspSpvcGrp, cwspOperIfcType=cwspOperIfcType, cwspAtmAddress=cwspAtmAddress, CwspControllerState=CwspControllerState, cwspInResrcFailures=cwspInResrcFailures, cwspSscopMdXmt=cwspSscopMdXmt, cwspAbrCallCallRef=cwspAbrCallCallRef, cwspAbrCallFwdTrm=cwspAbrCallFwdTrm, cwspConnTraceEgressCallRef=cwspConnTraceEgressCallRef, ciscoWANSpvc=ciscoWANSpvc, cwspOperMinSvccVpi=cwspOperMinSvccVpi, cwspAbrCallBwdNrm=cwspAbrCallBwdNrm, cwspSscopRsXmt=cwspSscopRsXmt, cwspConnTraceSrcVci=cwspConnTraceSrcVci, cwspCallStatsGrp=cwspCallStatsGrp, cwspAbrCallGrp=cwspAbrCallGrp, cwspOperationTable=cwspOperationTable, cwspSscopConfigGrp=cwspSscopConfigGrp, cwspPnniControllerPhySlot=cwspPnniControllerPhySlot, cwspLoadClr0Abr=cwspLoadClr0Abr, cwspLoadClr01NrtVbr=cwspLoadClr01NrtVbr, cwspSscopPollXmt=cwspSscopPollXmt, ciscoWANPnniPglStatus=ciscoWANPnniPglStatus, CwspSpvcState=CwspSpvcState, cwspPrefixEntry=cwspPrefixEntry, ciscoWANSvcInfo=ciscoWANSvcInfo, cwspMinBwRtVbr=cwspMinBwRtVbr, ciscoWANSvcMIBConformance=ciscoWANSvcMIBConformance, cwspLastCause=cwspLastCause, cwspLoadClr0Ubr=cwspLoadClr0Ubr, cwspInFilterFailures=cwspInFilterFailures, cwspOperNniSigVersion=cwspOperNniSigVersion, cwspAbrCallBwdIcr=cwspAbrCallBwdIcr, cwspLoadMaxBwUbr=cwspLoadMaxBwUbr, cwspMaxVcBwAbr=cwspMaxVcBwAbr, cwspDropPtyXmt=cwspDropPtyXmt, cwspRegAddress=cwspRegAddress, cwspAbrCallFwdPcr=cwspAbrCallFwdPcr, cwspAbrCallEntry=cwspAbrCallEntry)
