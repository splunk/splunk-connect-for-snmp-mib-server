#
# PySNMP MIB module RADIUS-ACC-CLIENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RADIUS-ACC-CLIENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 16:52:06 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint")
InetPortNumber, InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetPortNumber", "InetAddress", "InetAddressType")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
Unsigned32, mib_2, IpAddress, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, NotificationType, Integer32, Bits, ModuleIdentity, Counter64, iso, TimeTicks, ObjectIdentity, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "mib-2", "IpAddress", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "NotificationType", "Integer32", "Bits", "ModuleIdentity", "Counter64", "iso", "TimeTicks", "ObjectIdentity", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
radiusAccClientMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 67, 2, 2))
radiusAccClientMIB.setRevisions(('2006-08-21 00:00', '1999-06-11 00:00',))
if mibBuilder.loadTexts: radiusAccClientMIB.setLastUpdated('200608210000Z')
if mibBuilder.loadTexts: radiusAccClientMIB.setOrganization('IETF RADIUS Extensions Working Group.')
radiusMIB = ObjectIdentity((1, 3, 6, 1, 2, 1, 67))
if mibBuilder.loadTexts: radiusMIB.setStatus('current')
radiusAccounting = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 2))
radiusAccClientMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 2, 2, 1))
radiusAccClient = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1))
radiusAccClientInvalidServerAddresses = MibScalar((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 1), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientInvalidServerAddresses.setStatus('current')
radiusAccClientIdentifier = MibScalar((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 2), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientIdentifier.setStatus('current')
radiusAccServerTable = MibTable((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3), )
if mibBuilder.loadTexts: radiusAccServerTable.setStatus('deprecated')
radiusAccServerEntry = MibTableRow((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1), ).setIndexNames((0, "RADIUS-ACC-CLIENT-MIB", "radiusAccServerIndex"))
if mibBuilder.loadTexts: radiusAccServerEntry.setStatus('deprecated')
radiusAccServerIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: radiusAccServerIndex.setStatus('deprecated')
radiusAccServerAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 2), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccServerAddress.setStatus('deprecated')
radiusAccClientServerPortNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientServerPortNumber.setStatus('deprecated')
radiusAccClientRoundTripTime = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientRoundTripTime.setStatus('deprecated')
radiusAccClientRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientRequests.setStatus('deprecated')
radiusAccClientRetransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientRetransmissions.setStatus('deprecated')
radiusAccClientResponses = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientResponses.setStatus('deprecated')
radiusAccClientMalformedResponses = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientMalformedResponses.setStatus('deprecated')
radiusAccClientBadAuthenticators = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientBadAuthenticators.setStatus('deprecated')
radiusAccClientPendingRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 10), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientPendingRequests.setStatus('deprecated')
radiusAccClientTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 11), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientTimeouts.setStatus('deprecated')
radiusAccClientUnknownTypes = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientUnknownTypes.setStatus('deprecated')
radiusAccClientPacketsDropped = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 3, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientPacketsDropped.setStatus('deprecated')
radiusAccServerExtTable = MibTable((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4), )
if mibBuilder.loadTexts: radiusAccServerExtTable.setStatus('current')
radiusAccServerExtEntry = MibTableRow((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1), ).setIndexNames((0, "RADIUS-ACC-CLIENT-MIB", "radiusAccServerExtIndex"))
if mibBuilder.loadTexts: radiusAccServerExtEntry.setStatus('current')
radiusAccServerExtIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: radiusAccServerExtIndex.setStatus('current')
radiusAccServerInetAddressType = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccServerInetAddressType.setStatus('current')
radiusAccServerInetAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 3), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccServerInetAddress.setStatus('current')
radiusAccClientServerInetPortNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 4), InetPortNumber().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientServerInetPortNumber.setStatus('current')
radiusAccClientExtRoundTripTime = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtRoundTripTime.setStatus('current')
radiusAccClientExtRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtRequests.setStatus('current')
radiusAccClientExtRetransmissions = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtRetransmissions.setStatus('current')
radiusAccClientExtResponses = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtResponses.setStatus('current')
radiusAccClientExtMalformedResponses = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtMalformedResponses.setStatus('current')
radiusAccClientExtBadAuthenticators = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtBadAuthenticators.setStatus('current')
radiusAccClientExtPendingRequests = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 11), Gauge32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtPendingRequests.setStatus('current')
radiusAccClientExtTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 12), Counter32()).setUnits('timeouts').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtTimeouts.setStatus('current')
radiusAccClientExtUnknownTypes = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtUnknownTypes.setStatus('current')
radiusAccClientExtPacketsDropped = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientExtPacketsDropped.setStatus('current')
radiusAccClientCounterDiscontinuity = MibTableColumn((1, 3, 6, 1, 2, 1, 67, 2, 2, 1, 1, 4, 1, 15), TimeTicks()).setUnits('centiseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: radiusAccClientCounterDiscontinuity.setStatus('current')
radiusAccClientMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 2, 2, 2))
radiusAccClientMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 2, 2, 2, 1))
radiusAccClientMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 67, 2, 2, 2, 2))
radiusAccClientMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 67, 2, 2, 2, 1, 1)).setObjects(("RADIUS-ACC-CLIENT-MIB", "radiusAccClientMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusAccClientMIBCompliance = radiusAccClientMIBCompliance.setStatus('deprecated')
radiusAccClientExtMIBCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 67, 2, 2, 2, 1, 2)).setObjects(("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtMIBGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusAccClientExtMIBCompliance = radiusAccClientExtMIBCompliance.setStatus('current')
radiusAccClientMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 67, 2, 2, 2, 2, 1)).setObjects(("RADIUS-ACC-CLIENT-MIB", "radiusAccClientIdentifier"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientInvalidServerAddresses"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccServerAddress"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientServerPortNumber"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientRoundTripTime"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientRequests"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientRetransmissions"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientResponses"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientMalformedResponses"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientBadAuthenticators"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientPendingRequests"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientTimeouts"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientUnknownTypes"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientPacketsDropped"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusAccClientMIBGroup = radiusAccClientMIBGroup.setStatus('deprecated')
radiusAccClientExtMIBGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 67, 2, 2, 2, 2, 2)).setObjects(("RADIUS-ACC-CLIENT-MIB", "radiusAccClientIdentifier"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientInvalidServerAddresses"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccServerInetAddressType"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccServerInetAddress"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientServerInetPortNumber"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtRoundTripTime"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtRequests"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtRetransmissions"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtResponses"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtMalformedResponses"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtBadAuthenticators"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtPendingRequests"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtTimeouts"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtUnknownTypes"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientExtPacketsDropped"), ("RADIUS-ACC-CLIENT-MIB", "radiusAccClientCounterDiscontinuity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    radiusAccClientExtMIBGroup = radiusAccClientExtMIBGroup.setStatus('current')
mibBuilder.exportSymbols("RADIUS-ACC-CLIENT-MIB", radiusAccClientRoundTripTime=radiusAccClientRoundTripTime, radiusAccClientTimeouts=radiusAccClientTimeouts, radiusAccServerInetAddress=radiusAccServerInetAddress, PYSNMP_MODULE_ID=radiusAccClientMIB, radiusAccClientExtBadAuthenticators=radiusAccClientExtBadAuthenticators, radiusAccServerIndex=radiusAccServerIndex, radiusAccounting=radiusAccounting, radiusAccClientMIBCompliance=radiusAccClientMIBCompliance, radiusAccClientServerInetPortNumber=radiusAccClientServerInetPortNumber, radiusAccClient=radiusAccClient, radiusAccClientExtMalformedResponses=radiusAccClientExtMalformedResponses, radiusAccClientMIBObjects=radiusAccClientMIBObjects, radiusAccClientResponses=radiusAccClientResponses, radiusAccClientPacketsDropped=radiusAccClientPacketsDropped, radiusAccClientExtRequests=radiusAccClientExtRequests, radiusAccClientRetransmissions=radiusAccClientRetransmissions, radiusAccClientExtResponses=radiusAccClientExtResponses, radiusAccClientMIBGroup=radiusAccClientMIBGroup, radiusAccClientCounterDiscontinuity=radiusAccClientCounterDiscontinuity, radiusAccServerTable=radiusAccServerTable, radiusAccClientInvalidServerAddresses=radiusAccClientInvalidServerAddresses, radiusAccClientMIBConformance=radiusAccClientMIBConformance, radiusAccServerExtEntry=radiusAccServerExtEntry, radiusAccServerInetAddressType=radiusAccServerInetAddressType, radiusAccClientPendingRequests=radiusAccClientPendingRequests, radiusAccClientExtRoundTripTime=radiusAccClientExtRoundTripTime, radiusAccClientExtRetransmissions=radiusAccClientExtRetransmissions, radiusAccClientExtUnknownTypes=radiusAccClientExtUnknownTypes, radiusAccClientMIBGroups=radiusAccClientMIBGroups, radiusAccClientIdentifier=radiusAccClientIdentifier, radiusAccClientExtMIBCompliance=radiusAccClientExtMIBCompliance, radiusAccClientMIBCompliances=radiusAccClientMIBCompliances, radiusAccServerEntry=radiusAccServerEntry, radiusAccServerAddress=radiusAccServerAddress, radiusAccClientBadAuthenticators=radiusAccClientBadAuthenticators, radiusAccClientExtMIBGroup=radiusAccClientExtMIBGroup, radiusAccClientServerPortNumber=radiusAccClientServerPortNumber, radiusAccClientExtTimeouts=radiusAccClientExtTimeouts, radiusMIB=radiusMIB, radiusAccServerExtTable=radiusAccServerExtTable, radiusAccClientExtPendingRequests=radiusAccClientExtPendingRequests, radiusAccClientMalformedResponses=radiusAccClientMalformedResponses, radiusAccClientExtPacketsDropped=radiusAccClientExtPacketsDropped, radiusAccClientUnknownTypes=radiusAccClientUnknownTypes, radiusAccServerExtIndex=radiusAccServerExtIndex, radiusAccClientMIB=radiusAccClientMIB, radiusAccClientRequests=radiusAccClientRequests)
