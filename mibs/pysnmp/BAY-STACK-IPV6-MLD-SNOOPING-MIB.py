#
# PySNMP MIB module BAY-STACK-IPV6-MLD-SNOOPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BAY-STACK-IPV6-MLD-SNOOPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:18:49 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
InterfaceIndexOrZero, InterfaceIndex = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "InterfaceIndex")
InetAddressIPv6, = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressIPv6")
PortList, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList")
PortSet, = mibBuilder.importSymbols("RAPID-CITY", "PortSet")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Gauge32, ModuleIdentity, Unsigned32, IpAddress, ObjectIdentity, iso, Bits, Counter64, Integer32, TimeTicks, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Gauge32", "ModuleIdentity", "Unsigned32", "IpAddress", "ObjectIdentity", "iso", "Bits", "Counter64", "Integer32", "TimeTicks", "Counter32")
RowStatus, DisplayString, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "DisplayString", "TruthValue", "TextualConvention")
bayStackMibs, = mibBuilder.importSymbols("SYNOPTICS-ROOT-MIB", "bayStackMibs")
bayStackIpv6MldSnoopingMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 5, 44))
bayStackIpv6MldSnoopingMib.setRevisions(('2015-05-29 00:00', '2015-01-22 00:00', '2014-10-23 00:00', '2014-08-11 00:00', '2014-01-16 00:00', '2013-01-22 00:00',))
if mibBuilder.loadTexts: bayStackIpv6MldSnoopingMib.setLastUpdated('201505290000Z')
if mibBuilder.loadTexts: bayStackIpv6MldSnoopingMib.setOrganization('Avaya')
bsIpv6MldSnoopingNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 44, 0))
bsIpv6MldSnoopingObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 44, 1))
bsIpv6MldSnoopingScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 5, 44, 2))
bsIpv6MldSnoopingInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1), )
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceTable.setStatus('current')
bsIpv6MldSnoopingInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1), ).setIndexNames((0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingInterfaceIfIndex"))
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceEntry.setStatus('current')
bsIpv6MldSnoopingInterfaceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceIfIndex.setStatus('current')
bsIpv6MldSnoopingInterfaceQueryInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 2), Unsigned32().clone(125)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceQueryInterval.setStatus('current')
bsIpv6MldSnoopingInterfaceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceStatus.setStatus('current')
bsIpv6MldSnoopingInterfaceVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 4), Unsigned32().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceVersion.setStatus('current')
bsIpv6MldSnoopingInterfaceQuerier = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 5), InetAddressIPv6().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceQuerier.setStatus('current')
bsIpv6MldSnoopingInterfaceQueryMaxResponseDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 6), Unsigned32().clone(10)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceQueryMaxResponseDelay.setStatus('current')
bsIpv6MldSnoopingInterfaceJoins = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceJoins.setStatus('current')
bsIpv6MldSnoopingInterfaceGroups = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceGroups.setStatus('current')
bsIpv6MldSnoopingInterfaceRobustness = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 9), Unsigned32().clone(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceRobustness.setStatus('current')
bsIpv6MldSnoopingInterfaceLastListenQueryIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 10), Unsigned32().clone(1)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceLastListenQueryIntvl.setStatus('current')
bsIpv6MldSnoopingInterfaceProxyIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 11), InterfaceIndexOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceProxyIfIndex.setStatus('current')
bsIpv6MldSnoopingInterfaceQuerierUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 12), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceQuerierUpTime.setStatus('current')
bsIpv6MldSnoopingInterfaceQuerierExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 13), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceQuerierExpiryTime.setStatus('current')
bsIpv6MldSnoopingInterfaceEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 14), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceEnabled.setStatus('current')
bsIpv6MldSnoopingInterfaceIgmpMRouterPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 15), PortSet()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceIgmpMRouterPorts.setStatus('current')
bsIpv6MldSnoopingInterfaceIgmpActiveMRouterPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 16), PortSet()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceIgmpActiveMRouterPorts.setStatus('current')
bsIpv6MldSnoopingInterfaceIgmpMRouterExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 17), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceIgmpMRouterExpiration.setStatus('current')
bsIpv6MldSnoopingInterfaceOperationalVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 18), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceOperationalVersion.setStatus('current')
bsIpv6MldSnoopingInterfaceSendQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 19), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceSendQuery.setStatus('current')
bsIpv6MldSnoopingInterfaceProxy = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 20), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceProxy.setStatus('current')
bsIpv6MldSnoopingInterfaceFlush = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAction", 1), ("groups", 2), ("mrouters", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceFlush.setStatus('current')
bsIpv6MldSnoopingInterfaceFlushPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 1, 1, 22), PortSet()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIpv6MldSnoopingInterfaceFlushPorts.setStatus('current')
bsIpv6MldSnoopingCacheTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2), )
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheTable.setStatus('current')
bsIpv6MldSnoopingCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2, 1), ).setIndexNames((0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingCacheAddress"), (0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingCacheIfIndex"))
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheEntry.setStatus('current')
bsIpv6MldSnoopingCacheAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2, 1, 1), InetAddressIPv6().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16))
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheAddress.setStatus('current')
bsIpv6MldSnoopingCacheIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2, 1, 2), InterfaceIndex())
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheIfIndex.setStatus('current')
bsIpv6MldSnoopingCacheSelf = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2, 1, 3), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheSelf.setStatus('current')
bsIpv6MldSnoopingCacheLastReporter = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2, 1, 4), InetAddressIPv6().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheLastReporter.setStatus('current')
bsIpv6MldSnoopingCacheUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheUpTime.setStatus('current')
bsIpv6MldSnoopingCacheExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheExpiryTime.setStatus('current')
bsIpv6MldSnoopingCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheStatus.setStatus('current')
bsIpv6MldSnoopingCacheType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("dynamic", 2), ("static", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingCacheType.setStatus('current')
bsIpv6MldSnoopingIgmpGroupTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3), )
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupTable.setStatus('current')
bsIpv6MldSnoopingIgmpGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1), ).setIndexNames((0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingIgmpGroupIpv6Address"), (0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingIgmpGroupMembers"), (0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingIgmpGroupSourceAddress"), (0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingIgmpGroupIfIndex"))
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupEntry.setStatus('current')
bsIpv6MldSnoopingIgmpGroupIpv6Address = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 1), InetAddressIPv6().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16))
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupIpv6Address.setStatus('current')
bsIpv6MldSnoopingIgmpGroupMembers = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 2), InetAddressIPv6().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16))
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupMembers.setStatus('current')
bsIpv6MldSnoopingIgmpGroupSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 3), InetAddressIPv6().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16))
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupSourceAddress.setStatus('current')
bsIpv6MldSnoopingIgmpGroupIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 4), InterfaceIndex())
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupIfIndex.setStatus('current')
bsIpv6MldSnoopingIgmpGroupInPort = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 5), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupInPort.setStatus('current')
bsIpv6MldSnoopingIgmpGroupExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupExpiration.setStatus('current')
bsIpv6MldSnoopingIgmpGroupUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupUserId.setStatus('current')
bsIpv6MldSnoopingIgmpGroupType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("dynamic", 2), ("static", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupType.setStatus('current')
bsIpv6MldSnoopingIgmpGroupMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("received", 1), ("include", 2), ("exclude", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupMode.setStatus('current')
bsIpv6MldSnoopingIgmpGroupVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("version1", 1), ("version2", 2))).clone('version1')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: bsIpv6MldSnoopingIgmpGroupVersion.setStatus('current')
bsIpv6MldSnoopingProxyCacheTable = MibTable((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 4), )
if mibBuilder.loadTexts: bsIpv6MldSnoopingProxyCacheTable.setStatus('current')
bsIpv6MldSnoopingProxyCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 4, 1), ).setIndexNames((0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingProxyCacheIfIndex"), (0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingProxyCacheGroupAddress"), (0, "BAY-STACK-IPV6-MLD-SNOOPING-MIB", "bsIpv6MldSnoopingProxyCacheSourceAddress"))
if mibBuilder.loadTexts: bsIpv6MldSnoopingProxyCacheEntry.setStatus('current')
bsIpv6MldSnoopingProxyCacheIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 4, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: bsIpv6MldSnoopingProxyCacheIfIndex.setStatus('current')
bsIpv6MldSnoopingProxyCacheGroupAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 4, 1, 2), InetAddressIPv6().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16))
if mibBuilder.loadTexts: bsIpv6MldSnoopingProxyCacheGroupAddress.setStatus('current')
bsIpv6MldSnoopingProxyCacheSourceAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 4, 1, 3), InetAddressIPv6().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16))
if mibBuilder.loadTexts: bsIpv6MldSnoopingProxyCacheSourceAddress.setStatus('current')
bsIpv6MldSnoopingProxyCacheVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("version1", 1), ("version2", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingProxyCacheVersion.setStatus('current')
bsIpv6MldSnoopingProxyCacheType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("static", 1), ("dynamic", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingProxyCacheType.setStatus('current')
bsIpv6MldSnoopingProxyCacheMode = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 5, 44, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("version1", 1), ("include", 2), ("exclude", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: bsIpv6MldSnoopingProxyCacheMode.setStatus('current')
bsIpv6MldSnoopingFlush = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 44, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("noAction", 1), ("groups", 2), ("mrouters", 3), ("all", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIpv6MldSnoopingFlush.setStatus('current')
bsIpv6MldSnoopingFlushPorts = MibScalar((1, 3, 6, 1, 4, 1, 45, 5, 44, 2, 2), PortSet()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: bsIpv6MldSnoopingFlushPorts.setStatus('current')
mibBuilder.exportSymbols("BAY-STACK-IPV6-MLD-SNOOPING-MIB", bsIpv6MldSnoopingInterfaceTable=bsIpv6MldSnoopingInterfaceTable, bsIpv6MldSnoopingInterfaceIgmpActiveMRouterPorts=bsIpv6MldSnoopingInterfaceIgmpActiveMRouterPorts, bsIpv6MldSnoopingObjects=bsIpv6MldSnoopingObjects, bsIpv6MldSnoopingInterfaceRobustness=bsIpv6MldSnoopingInterfaceRobustness, bsIpv6MldSnoopingIgmpGroupMembers=bsIpv6MldSnoopingIgmpGroupMembers, bsIpv6MldSnoopingProxyCacheIfIndex=bsIpv6MldSnoopingProxyCacheIfIndex, bayStackIpv6MldSnoopingMib=bayStackIpv6MldSnoopingMib, bsIpv6MldSnoopingIgmpGroupExpiration=bsIpv6MldSnoopingIgmpGroupExpiration, bsIpv6MldSnoopingCacheSelf=bsIpv6MldSnoopingCacheSelf, bsIpv6MldSnoopingCacheAddress=bsIpv6MldSnoopingCacheAddress, bsIpv6MldSnoopingInterfaceIfIndex=bsIpv6MldSnoopingInterfaceIfIndex, bsIpv6MldSnoopingInterfaceVersion=bsIpv6MldSnoopingInterfaceVersion, bsIpv6MldSnoopingInterfaceProxyIfIndex=bsIpv6MldSnoopingInterfaceProxyIfIndex, bsIpv6MldSnoopingProxyCacheMode=bsIpv6MldSnoopingProxyCacheMode, bsIpv6MldSnoopingProxyCacheType=bsIpv6MldSnoopingProxyCacheType, bsIpv6MldSnoopingFlush=bsIpv6MldSnoopingFlush, bsIpv6MldSnoopingIgmpGroupIpv6Address=bsIpv6MldSnoopingIgmpGroupIpv6Address, PYSNMP_MODULE_ID=bayStackIpv6MldSnoopingMib, bsIpv6MldSnoopingInterfaceQuerier=bsIpv6MldSnoopingInterfaceQuerier, bsIpv6MldSnoopingInterfaceLastListenQueryIntvl=bsIpv6MldSnoopingInterfaceLastListenQueryIntvl, bsIpv6MldSnoopingInterfaceEnabled=bsIpv6MldSnoopingInterfaceEnabled, bsIpv6MldSnoopingInterfaceFlush=bsIpv6MldSnoopingInterfaceFlush, bsIpv6MldSnoopingInterfaceIgmpMRouterPorts=bsIpv6MldSnoopingInterfaceIgmpMRouterPorts, bsIpv6MldSnoopingIgmpGroupType=bsIpv6MldSnoopingIgmpGroupType, bsIpv6MldSnoopingCacheType=bsIpv6MldSnoopingCacheType, bsIpv6MldSnoopingInterfaceQuerierExpiryTime=bsIpv6MldSnoopingInterfaceQuerierExpiryTime, bsIpv6MldSnoopingInterfaceSendQuery=bsIpv6MldSnoopingInterfaceSendQuery, bsIpv6MldSnoopingCacheStatus=bsIpv6MldSnoopingCacheStatus, bsIpv6MldSnoopingInterfaceGroups=bsIpv6MldSnoopingInterfaceGroups, bsIpv6MldSnoopingNotifications=bsIpv6MldSnoopingNotifications, bsIpv6MldSnoopingProxyCacheSourceAddress=bsIpv6MldSnoopingProxyCacheSourceAddress, bsIpv6MldSnoopingProxyCacheVersion=bsIpv6MldSnoopingProxyCacheVersion, bsIpv6MldSnoopingCacheUpTime=bsIpv6MldSnoopingCacheUpTime, bsIpv6MldSnoopingProxyCacheTable=bsIpv6MldSnoopingProxyCacheTable, bsIpv6MldSnoopingInterfaceQueryInterval=bsIpv6MldSnoopingInterfaceQueryInterval, bsIpv6MldSnoopingCacheTable=bsIpv6MldSnoopingCacheTable, bsIpv6MldSnoopingIgmpGroupMode=bsIpv6MldSnoopingIgmpGroupMode, bsIpv6MldSnoopingInterfaceQueryMaxResponseDelay=bsIpv6MldSnoopingInterfaceQueryMaxResponseDelay, bsIpv6MldSnoopingInterfaceJoins=bsIpv6MldSnoopingInterfaceJoins, bsIpv6MldSnoopingInterfaceIgmpMRouterExpiration=bsIpv6MldSnoopingInterfaceIgmpMRouterExpiration, bsIpv6MldSnoopingIgmpGroupInPort=bsIpv6MldSnoopingIgmpGroupInPort, bsIpv6MldSnoopingInterfaceFlushPorts=bsIpv6MldSnoopingInterfaceFlushPorts, bsIpv6MldSnoopingInterfaceStatus=bsIpv6MldSnoopingInterfaceStatus, bsIpv6MldSnoopingCacheEntry=bsIpv6MldSnoopingCacheEntry, bsIpv6MldSnoopingIgmpGroupTable=bsIpv6MldSnoopingIgmpGroupTable, bsIpv6MldSnoopingIgmpGroupVersion=bsIpv6MldSnoopingIgmpGroupVersion, bsIpv6MldSnoopingCacheLastReporter=bsIpv6MldSnoopingCacheLastReporter, bsIpv6MldSnoopingIgmpGroupSourceAddress=bsIpv6MldSnoopingIgmpGroupSourceAddress, bsIpv6MldSnoopingCacheIfIndex=bsIpv6MldSnoopingCacheIfIndex, bsIpv6MldSnoopingInterfaceOperationalVersion=bsIpv6MldSnoopingInterfaceOperationalVersion, bsIpv6MldSnoopingInterfaceQuerierUpTime=bsIpv6MldSnoopingInterfaceQuerierUpTime, bsIpv6MldSnoopingFlushPorts=bsIpv6MldSnoopingFlushPorts, bsIpv6MldSnoopingIgmpGroupEntry=bsIpv6MldSnoopingIgmpGroupEntry, bsIpv6MldSnoopingIgmpGroupUserId=bsIpv6MldSnoopingIgmpGroupUserId, bsIpv6MldSnoopingInterfaceEntry=bsIpv6MldSnoopingInterfaceEntry, bsIpv6MldSnoopingProxyCacheEntry=bsIpv6MldSnoopingProxyCacheEntry, bsIpv6MldSnoopingProxyCacheGroupAddress=bsIpv6MldSnoopingProxyCacheGroupAddress, bsIpv6MldSnoopingCacheExpiryTime=bsIpv6MldSnoopingCacheExpiryTime, bsIpv6MldSnoopingIgmpGroupIfIndex=bsIpv6MldSnoopingIgmpGroupIfIndex, bsIpv6MldSnoopingInterfaceProxy=bsIpv6MldSnoopingInterfaceProxy, bsIpv6MldSnoopingScalars=bsIpv6MldSnoopingScalars)
