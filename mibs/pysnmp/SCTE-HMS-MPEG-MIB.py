#
# PySNMP MIB module SCTE-HMS-MPEG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SCTE-HMS-MPEG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:29:50 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetPortNumber")
ProgDataType, HePIDValue = mibBuilder.importSymbols("SCTE-HMS-HEADENDIDENT-TC-MIB", "ProgDataType", "HePIDValue")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Counter64, Integer32, ObjectIdentity, ModuleIdentity, TimeTicks, MibIdentifier, Unsigned32, Gauge32, iso, IpAddress, Bits, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Counter64", "Integer32", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "MibIdentifier", "Unsigned32", "Gauge32", "iso", "IpAddress", "Bits", "NotificationType", "Counter32")
DateAndTime, TruthValue, DisplayString, TextualConvention, AutonomousType, RowPointer = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TruthValue", "DisplayString", "TextualConvention", "AutonomousType", "RowPointer")
heMpegCommonMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1))
heMpegCommonMIB.setRevisions(('2008-10-03 17:00', '2008-10-03 06:49', '2008-10-03 01:35', '2008-10-03 00:00', '2008-02-04 17:00', '2007-12-17 17:00', '2007-10-03 17:00',))
if mibBuilder.loadTexts: heMpegCommonMIB.setLastUpdated('200810031700Z')
if mibBuilder.loadTexts: heMpegCommonMIB.setOrganization('SCTE HMS Subcommittee')
mpegMIBObjects = ObjectIdentity((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1))
if mibBuilder.loadTexts: mpegMIBObjects.setStatus('current')
mpegDigitalInputs = ObjectIdentity((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1))
if mibBuilder.loadTexts: mpegDigitalInputs.setStatus('current')
mpegOutputs = ObjectIdentity((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2))
if mibBuilder.loadTexts: mpegOutputs.setStatus('current')
mpegMIBConformance = ObjectIdentity((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2))
if mibBuilder.loadTexts: mpegMIBConformance.setStatus('current')
mpegMIBCompliances = ObjectIdentity((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2, 1))
if mibBuilder.loadTexts: mpegMIBCompliances.setStatus('current')
mpegMIBGroups = ObjectIdentity((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2, 2))
if mibBuilder.loadTexts: mpegMIBGroups.setStatus('current')
mpegLossOfSignalTimeout = MibScalar((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 1), Unsigned32()).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: mpegLossOfSignalTimeout.setStatus('current')
mpegInputTSTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2), )
if mibBuilder.loadTexts: mpegInputTSTable.setStatus('current')
mpegInputTSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegInputTSIndex"))
if mibBuilder.loadTexts: mpegInputTSEntry.setStatus('current')
mpegInputTSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegInputTSIndex.setStatus('current')
mpegInputTSType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("spts", 1), ("mpts", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSType.setStatus('current')
mpegInputTSConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("udp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSConnectionType.setStatus('current')
mpegInputTSConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 4), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSConnection.setStatus('current')
mpegInputTSActiveConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSActiveConnection.setStatus('current')
mpegInputTSPsiDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSPsiDetected.setStatus('current')
mpegInputTSStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSStartTime.setStatus('current')
mpegInputTSResourceAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSResourceAllocated.setStatus('current')
mpegInputTSNumPrograms = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSNumPrograms.setStatus('current')
mpegInputTSRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSRate.setStatus('current')
mpegInputTSMaxRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSMaxRate.setStatus('current')
mpegInputTSPatVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 31)).clone(-1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSPatVersion.setStatus('current')
mpegInputTSCatVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 31))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSCatVersion.setStatus('current')
mpegInputTSNitPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 14), HePIDValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSNitPid.setStatus('current')
mpegInputTSNumEmms = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 15), Unsigned32().clone(9999)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSNumEmms.setStatus('current')
mpegInputTSTSID = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSTSID.setStatus('current')
mpegInputTSLock = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("locked", 1), ("notLocked", 2), ("intermittent", 3), ("notMonitored", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSLock.setStatus('current')
mpegInputProgTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3), )
if mibBuilder.loadTexts: mpegInputProgTable.setStatus('current')
mpegInputProgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegInputTSIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegInputProgIndex"))
if mibBuilder.loadTexts: mpegInputProgEntry.setStatus('current')
mpegInputProgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegInputProgIndex.setStatus('current')
mpegInputProgNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgNo.setStatus('current')
mpegInputProgPmtVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgPmtVersion.setStatus('current')
mpegInputProgPmtPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 4), HePIDValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgPmtPid.setStatus('current')
mpegInputProgPcrPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 5), HePIDValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgPcrPid.setStatus('current')
mpegInputProgEcmPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 6), HePIDValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgEcmPid.setStatus('current')
mpegInputProgNumElems = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgNumElems.setStatus('current')
mpegInputProgNumEcms = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 8), Unsigned32().clone(9999)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgNumEcms.setStatus('current')
mpegInputProgCaDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgCaDescr.setStatus('current')
mpegInputProgScte35Descr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgScte35Descr.setStatus('current')
mpegInputProgScte18Descr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 3, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputProgScte18Descr.setStatus('current')
mpegProgESTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 4), )
if mibBuilder.loadTexts: mpegProgESTable.setStatus('current')
mpegProgESEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 4, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegInputTSIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegInputProgIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegProgESIndex"))
if mibBuilder.loadTexts: mpegProgESEntry.setStatus('current')
mpegProgESIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegProgESIndex.setStatus('current')
mpegProgESPID = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegProgESPID.setStatus('current')
mpegProgESType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 4, 1, 3), ProgDataType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegProgESType.setStatus('current')
mpegProgESCaDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegProgESCaDescr.setStatus('current')
mpegProgESScte35Descr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegProgESScte35Descr.setStatus('current')
mpegProgESScte18Descr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegProgESScte18Descr.setStatus('current')
mpegInputStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5), )
if mibBuilder.loadTexts: mpegInputStatsTable.setStatus('current')
mpegInputStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegInputTSIndex"))
if mibBuilder.loadTexts: mpegInputStatsEntry.setStatus('current')
mpegInputStatsPcrJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('nanoseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputStatsPcrJitter.setStatus('current')
mpegInputStatsMaxPacketJitter = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputStatsMaxPacketJitter.setStatus('current')
mpegInputStatsPcrPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputStatsPcrPackets.setStatus('current')
mpegInputStatsNonPcrPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputStatsNonPcrPackets.setStatus('current')
mpegInputStatsUnexpectedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputStatsUnexpectedPackets.setStatus('current')
mpegInputStatsContinuityErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputStatsContinuityErrors.setStatus('current')
mpegInputStatsSyncLossPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputStatsSyncLossPackets.setStatus('current')
mpegInputStatsPcrIntervalExceeds = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputStatsPcrIntervalExceeds.setStatus('current')
mpegInputUdpOriginationTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6), )
if mibBuilder.loadTexts: mpegInputUdpOriginationTable.setStatus('current')
mpegInputUdpOriginationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationId"))
if mibBuilder.loadTexts: mpegInputUdpOriginationEntry.setStatus('current')
mpegInputUdpOriginationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegInputUdpOriginationIndex.setStatus('current')
mpegInputUdpOriginationId = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 2), Unsigned32())
if mibBuilder.loadTexts: mpegInputUdpOriginationId.setStatus('current')
mpegInputUdpOriginationIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputUdpOriginationIfIndex.setStatus('current')
mpegInputUdpOriginationInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputUdpOriginationInetAddrType.setStatus('current')
mpegInputUdpOriginationSrcInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputUdpOriginationSrcInetAddr.setStatus('current')
mpegInputUdpOriginationDestInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputUdpOriginationDestInetAddr.setStatus('current')
mpegInputUdpOriginationDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputUdpOriginationDestPort.setStatus('current')
mpegInputUdpOriginationActive = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputUdpOriginationActive.setStatus('current')
mpegInputUdpOriginationPacketsDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 9), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputUdpOriginationPacketsDetected.setStatus('current')
mpegInputUdpOriginationRank = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputUdpOriginationRank.setStatus('current')
mpegInputUdpOriginationInputTSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 1, 6, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputUdpOriginationInputTSIndex.setStatus('current')
mpegInsertPacketTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1), )
if mibBuilder.loadTexts: mpegInsertPacketTable.setStatus('current')
mpegInsertPacketEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegInsertPacketIndex"))
if mibBuilder.loadTexts: mpegInsertPacketEntry.setStatus('current')
mpegInsertPacketIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65536)))
if mibBuilder.loadTexts: mpegInsertPacketIndex.setStatus('current')
mpegInsertPacketListId = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInsertPacketListId.setStatus('current')
mpegInsertPacketImmediateExecution = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInsertPacketImmediateExecution.setStatus('current')
mpegInsertPacketStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1, 1, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInsertPacketStartTime.setStatus('current')
mpegInsertPacketRepeat = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("repeat", 1), ("oneTime", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInsertPacketRepeat.setStatus('current')
mpegInsertPacketContinuousFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1, 1, 6), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInsertPacketContinuousFlag.setStatus('current')
mpegInsertPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1, 1, 7), Unsigned32()).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInsertPacketRate.setStatus('current')
mpegInsertPacketDeviceIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 1, 1, 8), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInsertPacketDeviceIfIndex.setStatus('current')
mpegOutputStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 2), )
if mibBuilder.loadTexts: mpegOutputStatsTable.setStatus('current')
mpegOutputStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 2, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegOutputTSIndex"))
if mibBuilder.loadTexts: mpegOutputStatsEntry.setStatus('current')
mpegOutputStatsDroppedPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputStatsDroppedPackets.setStatus('current')
mpegOutputStatsFifoOverflow = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputStatsFifoOverflow.setStatus('current')
mpegOutputStatsFifoUnderflow = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputStatsFifoUnderflow.setStatus('current')
mpegOutputStatsDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 2, 1, 4), Unsigned32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputStatsDataRate.setStatus('current')
mpegOutputStatsAvailableBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 2, 1, 5), Unsigned32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputStatsAvailableBandwidth.setStatus('current')
mpegOutputStatsChannelUtilization = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 1000), ))).setUnits('0.1 Percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputStatsChannelUtilization.setStatus('current')
mpegOutputStatsTotalPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputStatsTotalPackets.setStatus('current')
mpegOutputTSTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3), )
if mibBuilder.loadTexts: mpegOutputTSTable.setStatus('current')
mpegOutputTSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegOutputTSIndex"))
if mibBuilder.loadTexts: mpegOutputTSEntry.setStatus('current')
mpegOutputTSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegOutputTSIndex.setStatus('current')
mpegOutputTSType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("spts", 1), ("mpts", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSType.setStatus('current')
mpegOutputTSConnectionType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("qam", 2), ("udp", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSConnectionType.setStatus('current')
mpegOutputTSConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 4), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSConnection.setStatus('current')
mpegOutputTSNumPrograms = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSNumPrograms.setStatus('current')
mpegOutputTSTSID = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSTSID.setStatus('current')
mpegOutputTSNitPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 7), HePIDValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSNitPid.setStatus('current')
mpegOutputTSCaPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 8), HePIDValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSCaPid.setStatus('current')
mpegOutputTSCatInsertRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 9), Unsigned32()).setUnits('tables/ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSCatInsertRate.setStatus('current')
mpegOutputTSPatInsertRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 10), Unsigned32()).setUnits('tables/ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSPatInsertRate.setStatus('current')
mpegOutputTSPmtInsertRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 11), Unsigned32()).setUnits('tables/ms').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSPmtInsertRate.setStatus('current')
mpegOutputTSStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 3, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputTSStartTime.setStatus('current')
mpegOutputProgTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4), )
if mibBuilder.loadTexts: mpegOutputProgTable.setStatus('current')
mpegOutputProgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegOutputTSIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegOutputProgIndex"))
if mibBuilder.loadTexts: mpegOutputProgEntry.setStatus('current')
mpegOutputProgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegOutputProgIndex.setStatus('current')
mpegOutputProgNo = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgNo.setStatus('current')
mpegOutputProgPmtVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgPmtVersion.setStatus('current')
mpegOutputProgPmtPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 4), HePIDValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgPmtPid.setStatus('current')
mpegOutputProgPcrPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 5), HePIDValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgPcrPid.setStatus('current')
mpegOutputProgEcmPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 6), HePIDValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgEcmPid.setStatus('current')
mpegOutputProgNumElems = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgNumElems.setStatus('current')
mpegOutputProgNumEcms = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 8), Unsigned32().clone(9999)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgNumEcms.setStatus('current')
mpegOutputProgCaDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgCaDescr.setStatus('current')
mpegOutputProgScte35Descr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgScte35Descr.setStatus('current')
mpegOutputProgScte18Descr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 4, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 256))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgScte18Descr.setStatus('current')
mpegOutputProgElemStatsTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 5), )
if mibBuilder.loadTexts: mpegOutputProgElemStatsTable.setStatus('current')
mpegOutputProgElemStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 5, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegOutputTSIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegOutputProgIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegOutputProgElemStatsIndex"))
if mibBuilder.loadTexts: mpegOutputProgElemStatsEntry.setStatus('current')
mpegOutputProgElemStatsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegOutputProgElemStatsIndex.setStatus('current')
mpegOutputProgElemStatsPid = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 5, 1, 2), HePIDValue())
if mibBuilder.loadTexts: mpegOutputProgElemStatsPid.setStatus('current')
mpegOutputProgElemStatsElemType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 5, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("video", 1), ("audio", 2), ("data", 3), ("scte18", 4), ("scte35", 5), ("unknown", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgElemStatsElemType.setStatus('current')
mpegOutputProgElemStatsDataRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 5, 1, 4), Integer32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputProgElemStatsDataRate.setStatus('current')
mpegOutputUdpDestinationTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6), )
if mibBuilder.loadTexts: mpegOutputUdpDestinationTable.setStatus('current')
mpegOutputUdpDestinationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegOutputUdpDestinationIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegOutputUdpDestinationId"))
if mibBuilder.loadTexts: mpegOutputUdpDestinationEntry.setStatus('current')
mpegOutputUdpDestinationIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegOutputUdpDestinationIndex.setStatus('current')
mpegOutputUdpDestinationId = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6, 1, 2), Unsigned32())
if mibBuilder.loadTexts: mpegOutputUdpDestinationId.setStatus('current')
mpegOutputUdpDestinationIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputUdpDestinationIfIndex.setStatus('current')
mpegOutputUdpDestinationInetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputUdpDestinationInetAddrType.setStatus('current')
mpegOutputUdpDestinationSrcInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputUdpDestinationSrcInetAddr.setStatus('current')
mpegOutputUdpDestinationDestInetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6, 1, 6), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputUdpDestinationDestInetAddr.setStatus('current')
mpegOutputUdpDestinationDestPort = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputUdpDestinationDestPort.setStatus('current')
mpegOutputUdpDestinationOutputTSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 2, 6, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegOutputUdpDestinationOutputTSIndex.setStatus('current')
mpegProgramMappingTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 3), )
if mibBuilder.loadTexts: mpegProgramMappingTable.setStatus('current')
mpegProgramMappingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 3, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegProgramMappingIndex"))
if mibBuilder.loadTexts: mpegProgramMappingEntry.setStatus('current')
mpegProgramMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegProgramMappingIndex.setStatus('current')
mpegProgramMappingOutputProgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegProgramMappingOutputProgIndex.setStatus('current')
mpegProgramMappingOutputTSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegProgramMappingOutputTSIndex.setStatus('current')
mpegProgramMappingInputProgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegProgramMappingInputProgIndex.setStatus('current')
mpegProgramMappingInputTSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegProgramMappingInputTSIndex.setStatus('current')
mpegVideoSessionTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4), )
if mibBuilder.loadTexts: mpegVideoSessionTable.setStatus('current')
mpegVideoSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionIndex"))
if mibBuilder.loadTexts: mpegVideoSessionEntry.setStatus('current')
mpegVideoSessionIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegVideoSessionIndex.setStatus('current')
mpegVideoSessionPhyMappingIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionPhyMappingIndex.setStatus('current')
mpegVideoSessionPIDRemap = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 3), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionPIDRemap.setStatus('current')
mpegVideoSessionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("passThrough", 2), ("multiplexing", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionMode.setStatus('current')
mpegVideoSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("provisioned", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionState.setStatus('current')
mpegVideoSessionProvMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("tableBased", 1), ("sessionBased", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionProvMethod.setStatus('current')
mpegVideoSessionEncryptionType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("none", 1), ("other", 2), ("preencrypted", 3), ("des", 4), ("des3", 5), ("aes", 6), ("dvbCsa", 7), ("pkey", 8), ("mediac", 9), ("dvs042", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionEncryptionType.setStatus('current')
mpegVideoSessionEncryptionInfo = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 8), AutonomousType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionEncryptionInfo.setStatus('current')
mpegVideoSessionBitRate = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 9), Unsigned32()).setUnits('bps').setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionBitRate.setStatus('current')
mpegVideoSessionID = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionID.setStatus('current')
mpegVideoSessionSelectedInput = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 11), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionSelectedInput.setStatus('current')
mpegVideoSessionSelectedOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 4, 1, 12), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionSelectedOutput.setStatus('current')
mpegVideoSessionPtrTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5), )
if mibBuilder.loadTexts: mpegVideoSessionPtrTable.setStatus('current')
mpegVideoSessionPtrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionPtrInputProgIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionPtrInputTSIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionPtrInputTSConnType"), (0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionPtrInputTSConnection"), (0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionPtrOutputProgIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionPtrOutputTSIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionPtrOutputTSConnType"), (0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionPtrOutputTSConnection"))
if mibBuilder.loadTexts: mpegVideoSessionPtrEntry.setStatus('current')
mpegVideoSessionPtrInputProgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1, 1), Unsigned32())
if mibBuilder.loadTexts: mpegVideoSessionPtrInputProgIndex.setStatus('current')
mpegVideoSessionPtrInputTSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1, 2), Unsigned32())
if mibBuilder.loadTexts: mpegVideoSessionPtrInputTSIndex.setStatus('current')
mpegVideoSessionPtrInputTSConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1, 3), Unsigned32())
if mibBuilder.loadTexts: mpegVideoSessionPtrInputTSConnType.setStatus('current')
mpegVideoSessionPtrInputTSConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1, 4), Unsigned32())
if mibBuilder.loadTexts: mpegVideoSessionPtrInputTSConnection.setStatus('current')
mpegVideoSessionPtrOutputProgIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1, 5), Unsigned32())
if mibBuilder.loadTexts: mpegVideoSessionPtrOutputProgIndex.setStatus('current')
mpegVideoSessionPtrOutputTSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1, 6), Unsigned32())
if mibBuilder.loadTexts: mpegVideoSessionPtrOutputTSIndex.setStatus('current')
mpegVideoSessionPtrOutputTSConnType = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1, 7), Unsigned32())
if mibBuilder.loadTexts: mpegVideoSessionPtrOutputTSConnType.setStatus('current')
mpegVideoSessionPtrOutputTSConnection = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1, 8), Unsigned32())
if mibBuilder.loadTexts: mpegVideoSessionPtrOutputTSConnection.setStatus('current')
mpegVideoSessionPtrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("closed", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegVideoSessionPtrStatus.setStatus('current')
mpegInputTSOutputSessionTable = MibTable((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 6), )
if mibBuilder.loadTexts: mpegInputTSOutputSessionTable.setStatus('current')
mpegInputTSOutputSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 6, 1), ).setIndexNames((0, "SCTE-HMS-MPEG-MIB", "mpegInputTSIndex"), (0, "SCTE-HMS-MPEG-MIB", "mpegVideoSessionIndex"))
if mibBuilder.loadTexts: mpegInputTSOutputSessionEntry.setStatus('current')
mpegInputTSOutputSessionCreateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 1, 6, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mpegInputTSOutputSessionCreateTime.setStatus('current')
mpegSupport = ModuleCompliance((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2, 1, 1)).setObjects(("SCTE-HMS-MPEG-MIB", "mpegInputGroup"), ("SCTE-HMS-MPEG-MIB", "mpegOutputGroup"), ("SCTE-HMS-MPEG-MIB", "mpegMappingsGroup"), ("SCTE-HMS-MPEG-MIB", "mpegSessionsGroup"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgESGroup"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgElemStatsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpegSupport = mpegSupport.setStatus('current')
mpegInputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2, 2, 1)).setObjects(("SCTE-HMS-MPEG-MIB", "mpegInputTSType"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSConnectionType"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSConnection"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSActiveConnection"), ("SCTE-HMS-MPEG-MIB", "mpegLossOfSignalTimeout"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSPsiDetected"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSStartTime"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSResourceAllocated"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSNumPrograms"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSRate"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSMaxRate"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSPatVersion"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSCatVersion"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSNitPid"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSNumEmms"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSTSID"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSLock"), ("SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationIfIndex"), ("SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationInetAddrType"), ("SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationSrcInetAddr"), ("SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationDestInetAddr"), ("SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationDestPort"), ("SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationActive"), ("SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationPacketsDetected"), ("SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationRank"), ("SCTE-HMS-MPEG-MIB", "mpegInputUdpOriginationInputTSIndex"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgPmtVersion"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgNo"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgPmtVersion"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgPmtPid"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgPcrPid"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgEcmPid"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgNumElems"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgNumEcms"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgCaDescr"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgScte35Descr"), ("SCTE-HMS-MPEG-MIB", "mpegInputProgScte18Descr"), ("SCTE-HMS-MPEG-MIB", "mpegInputStatsPcrPackets"), ("SCTE-HMS-MPEG-MIB", "mpegInputStatsNonPcrPackets"), ("SCTE-HMS-MPEG-MIB", "mpegInputStatsUnexpectedPackets"), ("SCTE-HMS-MPEG-MIB", "mpegInputStatsContinuityErrors"), ("SCTE-HMS-MPEG-MIB", "mpegInputStatsSyncLossPackets"), ("SCTE-HMS-MPEG-MIB", "mpegInputStatsPcrIntervalExceeds"), ("SCTE-HMS-MPEG-MIB", "mpegInputStatsPcrJitter"), ("SCTE-HMS-MPEG-MIB", "mpegInputStatsMaxPacketJitter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpegInputGroup = mpegInputGroup.setStatus('current')
mpegInputProgESGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2, 2, 2)).setObjects(("SCTE-HMS-MPEG-MIB", "mpegProgESScte18Descr"), ("SCTE-HMS-MPEG-MIB", "mpegProgESScte35Descr"), ("SCTE-HMS-MPEG-MIB", "mpegProgESCaDescr"), ("SCTE-HMS-MPEG-MIB", "mpegProgESPID"), ("SCTE-HMS-MPEG-MIB", "mpegProgESType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpegInputProgESGroup = mpegInputProgESGroup.setStatus('current')
mpegOutputGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2, 2, 3)).setObjects(("SCTE-HMS-MPEG-MIB", "mpegInsertPacketListId"), ("SCTE-HMS-MPEG-MIB", "mpegInsertPacketImmediateExecution"), ("SCTE-HMS-MPEG-MIB", "mpegInsertPacketStartTime"), ("SCTE-HMS-MPEG-MIB", "mpegInsertPacketRepeat"), ("SCTE-HMS-MPEG-MIB", "mpegInsertPacketContinuousFlag"), ("SCTE-HMS-MPEG-MIB", "mpegInsertPacketRate"), ("SCTE-HMS-MPEG-MIB", "mpegInsertPacketDeviceIfIndex"), ("SCTE-HMS-MPEG-MIB", "mpegOutputStatsDroppedPackets"), ("SCTE-HMS-MPEG-MIB", "mpegOutputStatsFifoOverflow"), ("SCTE-HMS-MPEG-MIB", "mpegOutputStatsFifoUnderflow"), ("SCTE-HMS-MPEG-MIB", "mpegOutputStatsDataRate"), ("SCTE-HMS-MPEG-MIB", "mpegOutputStatsAvailableBandwidth"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgNo"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgPmtVersion"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgPmtPid"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgPcrPid"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgEcmPid"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgNumElems"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgNumEcms"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgCaDescr"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgScte35Descr"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSType"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSConnectionType"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSConnection"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSNumPrograms"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSTSID"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSNitPid"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSCaPid"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSCatInsertRate"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSPatInsertRate"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgScte18Descr"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSPmtInsertRate"), ("SCTE-HMS-MPEG-MIB", "mpegOutputTSStartTime"), ("SCTE-HMS-MPEG-MIB", "mpegOutputUdpDestinationIfIndex"), ("SCTE-HMS-MPEG-MIB", "mpegOutputUdpDestinationInetAddrType"), ("SCTE-HMS-MPEG-MIB", "mpegOutputUdpDestinationSrcInetAddr"), ("SCTE-HMS-MPEG-MIB", "mpegOutputUdpDestinationDestInetAddr"), ("SCTE-HMS-MPEG-MIB", "mpegOutputUdpDestinationDestPort"), ("SCTE-HMS-MPEG-MIB", "mpegOutputUdpDestinationOutputTSIndex"), ("SCTE-HMS-MPEG-MIB", "mpegOutputStatsChannelUtilization"), ("SCTE-HMS-MPEG-MIB", "mpegOutputStatsTotalPackets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpegOutputGroup = mpegOutputGroup.setStatus('current')
mpegOutputProgElemStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2, 2, 4)).setObjects(("SCTE-HMS-MPEG-MIB", "mpegOutputProgElemStatsDataRate"), ("SCTE-HMS-MPEG-MIB", "mpegOutputProgElemStatsElemType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpegOutputProgElemStatsGroup = mpegOutputProgElemStatsGroup.setStatus('current')
mpegMappingsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2, 2, 5)).setObjects(("SCTE-HMS-MPEG-MIB", "mpegProgramMappingOutputProgIndex"), ("SCTE-HMS-MPEG-MIB", "mpegProgramMappingOutputTSIndex"), ("SCTE-HMS-MPEG-MIB", "mpegProgramMappingInputProgIndex"), ("SCTE-HMS-MPEG-MIB", "mpegProgramMappingInputTSIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpegMappingsGroup = mpegMappingsGroup.setStatus('current')
mpegSessionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 5591, 1, 11, 5, 4, 1, 2, 2, 6)).setObjects(("SCTE-HMS-MPEG-MIB", "mpegVideoSessionPhyMappingIndex"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionPIDRemap"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionMode"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionState"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionProvMethod"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionEncryptionType"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionEncryptionInfo"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionBitRate"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionID"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionSelectedInput"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionSelectedOutput"), ("SCTE-HMS-MPEG-MIB", "mpegVideoSessionPtrStatus"), ("SCTE-HMS-MPEG-MIB", "mpegInputTSOutputSessionCreateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    mpegSessionsGroup = mpegSessionsGroup.setStatus('current')
mibBuilder.exportSymbols("SCTE-HMS-MPEG-MIB", mpegInputProgCaDescr=mpegInputProgCaDescr, mpegOutputTSConnection=mpegOutputTSConnection, mpegOutputProgScte35Descr=mpegOutputProgScte35Descr, mpegOutputUdpDestinationOutputTSIndex=mpegOutputUdpDestinationOutputTSIndex, mpegInputTSNitPid=mpegInputTSNitPid, mpegInputUdpOriginationActive=mpegInputUdpOriginationActive, mpegOutputUdpDestinationIfIndex=mpegOutputUdpDestinationIfIndex, mpegProgESPID=mpegProgESPID, mpegInsertPacketRepeat=mpegInsertPacketRepeat, mpegInputProgNumElems=mpegInputProgNumElems, mpegInputStatsMaxPacketJitter=mpegInputStatsMaxPacketJitter, mpegInputProgNo=mpegInputProgNo, mpegInputTSType=mpegInputTSType, mpegVideoSessionPtrTable=mpegVideoSessionPtrTable, mpegInsertPacketListId=mpegInsertPacketListId, mpegProgESCaDescr=mpegProgESCaDescr, mpegProgramMappingOutputProgIndex=mpegProgramMappingOutputProgIndex, mpegVideoSessionPtrOutputTSIndex=mpegVideoSessionPtrOutputTSIndex, mpegInputTSOutputSessionEntry=mpegInputTSOutputSessionEntry, mpegVideoSessionPtrOutputTSConnType=mpegVideoSessionPtrOutputTSConnType, mpegOutputProgCaDescr=mpegOutputProgCaDescr, mpegOutputProgElemStatsGroup=mpegOutputProgElemStatsGroup, mpegInputProgScte18Descr=mpegInputProgScte18Descr, mpegVideoSessionPtrInputTSIndex=mpegVideoSessionPtrInputTSIndex, mpegOutputTSNitPid=mpegOutputTSNitPid, mpegInputStatsEntry=mpegInputStatsEntry, mpegVideoSessionPtrOutputTSConnection=mpegVideoSessionPtrOutputTSConnection, mpegProgESTable=mpegProgESTable, mpegInputStatsSyncLossPackets=mpegInputStatsSyncLossPackets, mpegVideoSessionMode=mpegVideoSessionMode, mpegVideoSessionTable=mpegVideoSessionTable, mpegOutputTSCatInsertRate=mpegOutputTSCatInsertRate, mpegOutputProgElemStatsElemType=mpegOutputProgElemStatsElemType, mpegInputProgNumEcms=mpegInputProgNumEcms, mpegOutputUdpDestinationDestPort=mpegOutputUdpDestinationDestPort, mpegOutputProgNumElems=mpegOutputProgNumElems, mpegProgESScte35Descr=mpegProgESScte35Descr, mpegInputTSActiveConnection=mpegInputTSActiveConnection, mpegInsertPacketDeviceIfIndex=mpegInsertPacketDeviceIfIndex, mpegInputTSLock=mpegInputTSLock, mpegProgESType=mpegProgESType, mpegInputTSStartTime=mpegInputTSStartTime, mpegVideoSessionSelectedInput=mpegVideoSessionSelectedInput, mpegProgramMappingIndex=mpegProgramMappingIndex, mpegInsertPacketEntry=mpegInsertPacketEntry, mpegProgramMappingInputTSIndex=mpegProgramMappingInputTSIndex, mpegSessionsGroup=mpegSessionsGroup, mpegOutputStatsFifoOverflow=mpegOutputStatsFifoOverflow, mpegProgESEntry=mpegProgESEntry, mpegLossOfSignalTimeout=mpegLossOfSignalTimeout, mpegOutputProgPmtPid=mpegOutputProgPmtPid, mpegInputTSTable=mpegInputTSTable, mpegOutputProgIndex=mpegOutputProgIndex, mpegVideoSessionPIDRemap=mpegVideoSessionPIDRemap, mpegOutputProgEcmPid=mpegOutputProgEcmPid, mpegOutputs=mpegOutputs, mpegOutputProgScte18Descr=mpegOutputProgScte18Descr, mpegOutputUdpDestinationIndex=mpegOutputUdpDestinationIndex, mpegOutputProgElemStatsDataRate=mpegOutputProgElemStatsDataRate, mpegInputTSIndex=mpegInputTSIndex, mpegInputTSCatVersion=mpegInputTSCatVersion, mpegInputTSNumEmms=mpegInputTSNumEmms, mpegProgramMappingTable=mpegProgramMappingTable, mpegProgESIndex=mpegProgESIndex, mpegOutputProgNo=mpegOutputProgNo, mpegInputProgTable=mpegInputProgTable, mpegOutputStatsDroppedPackets=mpegOutputStatsDroppedPackets, mpegVideoSessionEncryptionInfo=mpegVideoSessionEncryptionInfo, mpegOutputStatsEntry=mpegOutputStatsEntry, mpegOutputTSNumPrograms=mpegOutputTSNumPrograms, mpegVideoSessionPtrInputTSConnType=mpegVideoSessionPtrInputTSConnType, mpegOutputTSEntry=mpegOutputTSEntry, mpegSupport=mpegSupport, mpegInputStatsContinuityErrors=mpegInputStatsContinuityErrors, mpegProgESScte18Descr=mpegProgESScte18Descr, mpegInputTSNumPrograms=mpegInputTSNumPrograms, mpegProgramMappingEntry=mpegProgramMappingEntry, mpegProgramMappingInputProgIndex=mpegProgramMappingInputProgIndex, mpegOutputTSType=mpegOutputTSType, mpegInputProgPcrPid=mpegInputProgPcrPid, mpegMIBObjects=mpegMIBObjects, mpegOutputTSPatInsertRate=mpegOutputTSPatInsertRate, mpegVideoSessionPtrEntry=mpegVideoSessionPtrEntry, mpegInsertPacketIndex=mpegInsertPacketIndex, mpegOutputProgNumEcms=mpegOutputProgNumEcms, mpegInputStatsPcrPackets=mpegInputStatsPcrPackets, PYSNMP_MODULE_ID=heMpegCommonMIB, mpegInsertPacketTable=mpegInsertPacketTable, mpegInputStatsUnexpectedPackets=mpegInputStatsUnexpectedPackets, mpegInputTSPsiDetected=mpegInputTSPsiDetected, mpegOutputUdpDestinationInetAddrType=mpegOutputUdpDestinationInetAddrType, mpegVideoSessionBitRate=mpegVideoSessionBitRate, mpegInsertPacketStartTime=mpegInsertPacketStartTime, mpegInsertPacketRate=mpegInsertPacketRate, mpegOutputUdpDestinationEntry=mpegOutputUdpDestinationEntry, mpegOutputTSCaPid=mpegOutputTSCaPid, mpegOutputStatsFifoUnderflow=mpegOutputStatsFifoUnderflow, mpegMIBGroups=mpegMIBGroups, mpegOutputTSPmtInsertRate=mpegOutputTSPmtInsertRate, mpegInputUdpOriginationDestPort=mpegInputUdpOriginationDestPort, mpegInputTSPatVersion=mpegInputTSPatVersion, mpegInputStatsTable=mpegInputStatsTable, mpegInputUdpOriginationIfIndex=mpegInputUdpOriginationIfIndex, mpegInputUdpOriginationSrcInetAddr=mpegInputUdpOriginationSrcInetAddr, mpegInputTSRate=mpegInputTSRate, mpegOutputGroup=mpegOutputGroup, mpegOutputProgElemStatsIndex=mpegOutputProgElemStatsIndex, mpegOutputStatsTotalPackets=mpegOutputStatsTotalPackets, mpegOutputProgElemStatsEntry=mpegOutputProgElemStatsEntry, mpegVideoSessionProvMethod=mpegVideoSessionProvMethod, mpegOutputTSTSID=mpegOutputTSTSID, mpegInputUdpOriginationIndex=mpegInputUdpOriginationIndex, mpegOutputUdpDestinationId=mpegOutputUdpDestinationId, mpegVideoSessionPtrInputProgIndex=mpegVideoSessionPtrInputProgIndex, mpegVideoSessionState=mpegVideoSessionState, mpegInputGroup=mpegInputGroup, mpegInputTSOutputSessionTable=mpegInputTSOutputSessionTable, mpegInputUdpOriginationRank=mpegInputUdpOriginationRank, mpegVideoSessionPtrOutputProgIndex=mpegVideoSessionPtrOutputProgIndex, mpegOutputTSIndex=mpegOutputTSIndex, mpegOutputUdpDestinationSrcInetAddr=mpegOutputUdpDestinationSrcInetAddr, mpegVideoSessionEntry=mpegVideoSessionEntry, mpegInputProgPmtPid=mpegInputProgPmtPid, mpegInputTSConnection=mpegInputTSConnection, mpegInputStatsPcrIntervalExceeds=mpegInputStatsPcrIntervalExceeds, mpegMappingsGroup=mpegMappingsGroup, mpegOutputProgEntry=mpegOutputProgEntry, mpegOutputStatsChannelUtilization=mpegOutputStatsChannelUtilization, mpegVideoSessionSelectedOutput=mpegVideoSessionSelectedOutput, mpegOutputStatsTable=mpegOutputStatsTable, mpegInputTSMaxRate=mpegInputTSMaxRate, mpegInputTSEntry=mpegInputTSEntry, mpegInputStatsPcrJitter=mpegInputStatsPcrJitter, mpegInputStatsNonPcrPackets=mpegInputStatsNonPcrPackets, mpegOutputTSTable=mpegOutputTSTable, mpegInputProgEntry=mpegInputProgEntry, mpegOutputUdpDestinationTable=mpegOutputUdpDestinationTable, mpegVideoSessionIndex=mpegVideoSessionIndex, mpegInputProgIndex=mpegInputProgIndex, mpegInputUdpOriginationInputTSIndex=mpegInputUdpOriginationInputTSIndex, mpegOutputTSConnectionType=mpegOutputTSConnectionType, mpegInputTSResourceAllocated=mpegInputTSResourceAllocated, mpegInputProgEcmPid=mpegInputProgEcmPid, mpegOutputStatsDataRate=mpegOutputStatsDataRate, mpegMIBCompliances=mpegMIBCompliances, mpegInputUdpOriginationDestInetAddr=mpegInputUdpOriginationDestInetAddr, mpegInputTSConnectionType=mpegInputTSConnectionType, mpegOutputStatsAvailableBandwidth=mpegOutputStatsAvailableBandwidth, heMpegCommonMIB=heMpegCommonMIB, mpegInsertPacketImmediateExecution=mpegInsertPacketImmediateExecution, mpegProgramMappingOutputTSIndex=mpegProgramMappingOutputTSIndex, mpegInputTSOutputSessionCreateTime=mpegInputTSOutputSessionCreateTime, mpegInputUdpOriginationEntry=mpegInputUdpOriginationEntry, mpegInputUdpOriginationTable=mpegInputUdpOriginationTable, mpegVideoSessionPtrInputTSConnection=mpegVideoSessionPtrInputTSConnection, mpegInputTSTSID=mpegInputTSTSID, mpegOutputProgTable=mpegOutputProgTable, mpegOutputProgPmtVersion=mpegOutputProgPmtVersion, mpegVideoSessionID=mpegVideoSessionID, mpegDigitalInputs=mpegDigitalInputs, mpegOutputTSStartTime=mpegOutputTSStartTime, mpegMIBConformance=mpegMIBConformance, mpegInsertPacketContinuousFlag=mpegInsertPacketContinuousFlag, mpegOutputProgElemStatsTable=mpegOutputProgElemStatsTable, mpegInputUdpOriginationPacketsDetected=mpegInputUdpOriginationPacketsDetected, mpegOutputProgElemStatsPid=mpegOutputProgElemStatsPid, mpegInputProgPmtVersion=mpegInputProgPmtVersion, mpegOutputUdpDestinationDestInetAddr=mpegOutputUdpDestinationDestInetAddr, mpegVideoSessionPhyMappingIndex=mpegVideoSessionPhyMappingIndex, mpegVideoSessionPtrStatus=mpegVideoSessionPtrStatus, mpegInputProgScte35Descr=mpegInputProgScte35Descr, mpegInputUdpOriginationInetAddrType=mpegInputUdpOriginationInetAddrType, mpegInputProgESGroup=mpegInputProgESGroup, mpegInputUdpOriginationId=mpegInputUdpOriginationId, mpegVideoSessionEncryptionType=mpegVideoSessionEncryptionType, mpegOutputProgPcrPid=mpegOutputProgPcrPid)
