#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-PppMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-PppMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:46 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueSizeConstraint, SingleValueConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueSizeConstraint", "SingleValueConstraint", "ValueRangeConstraint")
DisplayString, Gauge32, Integer32, Counter32, InterfaceIndex, RowStatus, StorageType, Unsigned32 = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "DisplayString", "Gauge32", "Integer32", "Counter32", "InterfaceIndex", "RowStatus", "StorageType", "Unsigned32")
Link, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "Link", "NonReplicated")
mscComponents, mscPassportMIBs = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscComponents", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, TimeTicks, Integer32, iso, Counter32, NotificationType, Gauge32, ModuleIdentity, MibIdentifier, ObjectIdentity, Counter64, IpAddress, Unsigned32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "TimeTicks", "Integer32", "iso", "Counter32", "NotificationType", "Gauge32", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "Counter64", "IpAddress", "Unsigned32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
pppMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 33))
mscPpp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102))
mscPppRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 1), )
if mibBuilder.loadTexts: mscPppRowStatusTable.setStatus('mandatory')
mscPppRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"))
if mibBuilder.loadTexts: mscPppRowStatusEntry.setStatus('mandatory')
mscPppRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppRowStatus.setStatus('mandatory')
mscPppComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppComponentName.setStatus('mandatory')
mscPppStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppStorageType.setStatus('mandatory')
mscPppIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: mscPppIndex.setStatus('mandatory')
mscPppCidDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 20), )
if mibBuilder.loadTexts: mscPppCidDataTable.setStatus('mandatory')
mscPppCidDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 20, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"))
if mibBuilder.loadTexts: mscPppCidDataEntry.setStatus('mandatory')
mscPppCustomerIdentifier = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 20, 1, 1), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8191), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppCustomerIdentifier.setStatus('mandatory')
mscPppIfEntryTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 21), )
if mibBuilder.loadTexts: mscPppIfEntryTable.setStatus('mandatory')
mscPppIfEntryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 21, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"))
if mibBuilder.loadTexts: mscPppIfEntryEntry.setStatus('mandatory')
mscPppIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 21, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppIfAdminStatus.setStatus('mandatory')
mscPppIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 21, 1, 2), InterfaceIndex().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppIfIndex.setStatus('mandatory')
mscPppMpTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 22), )
if mibBuilder.loadTexts: mscPppMpTable.setStatus('mandatory')
mscPppMpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 22, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"))
if mibBuilder.loadTexts: mscPppMpEntry.setStatus('mandatory')
mscPppLinkToProtocolPort = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 22, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLinkToProtocolPort.setStatus('mandatory')
mscPppStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 23), )
if mibBuilder.loadTexts: mscPppStateTable.setStatus('mandatory')
mscPppStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 23, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"))
if mibBuilder.loadTexts: mscPppStateEntry.setStatus('mandatory')
mscPppAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 23, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppAdminState.setStatus('mandatory')
mscPppOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 23, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppOperationalState.setStatus('mandatory')
mscPppUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 23, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppUsageState.setStatus('mandatory')
mscPppOperStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 24), )
if mibBuilder.loadTexts: mscPppOperStatusTable.setStatus('mandatory')
mscPppOperStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 24, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"))
if mibBuilder.loadTexts: mscPppOperStatusEntry.setStatus('mandatory')
mscPppSnmpOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 24, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('up')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppSnmpOperStatus.setStatus('mandatory')
mscPppLnk = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2))
mscPppLnkRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 1), )
if mibBuilder.loadTexts: mscPppLnkRowStatusTable.setStatus('mandatory')
mscPppLnkRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLnkIndex"))
if mibBuilder.loadTexts: mscPppLnkRowStatusEntry.setStatus('mandatory')
mscPppLnkRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkRowStatus.setStatus('mandatory')
mscPppLnkComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkComponentName.setStatus('mandatory')
mscPppLnkStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkStorageType.setStatus('mandatory')
mscPppLnkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscPppLnkIndex.setStatus('mandatory')
mscPppLnkProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10), )
if mibBuilder.loadTexts: mscPppLnkProvTable.setStatus('mandatory')
mscPppLnkProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLnkIndex"))
if mibBuilder.loadTexts: mscPppLnkProvEntry.setStatus('mandatory')
mscPppLnkConfigInitialMru = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(68, 18000)).clone(18000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLnkConfigInitialMru.setStatus('mandatory')
mscPppLnkConfigMagicNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLnkConfigMagicNumber.setStatus('mandatory')
mscPppLnkRestartTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1000, 10000)).clone(3000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLnkRestartTimer.setStatus('mandatory')
mscPppLnkContinuityMonitor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLnkContinuityMonitor.setStatus('mandatory')
mscPppLnkNegativeAckTries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLnkNegativeAckTries.setStatus('mandatory')
mscPppLnkQualityThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 99)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLnkQualityThreshold.setStatus('mandatory')
mscPppLnkQualityWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 400)).clone(30)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLnkQualityWindow.setStatus('mandatory')
mscPppLnkTerminateRequestTries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLnkTerminateRequestTries.setStatus('mandatory')
mscPppLnkConfigureRequestTries = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 10, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(1000000000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLnkConfigureRequestTries.setStatus('mandatory')
mscPppLnkOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11), )
if mibBuilder.loadTexts: mscPppLnkOperTable.setStatus('mandatory')
mscPppLnkOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLnkIndex"))
if mibBuilder.loadTexts: mscPppLnkOperEntry.setStatus('mandatory')
mscPppLnkOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkOperState.setStatus('mandatory')
mscPppLnkLineCondition = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 3, 4))).clone(namedValues=NamedValues(("ok", 0), ("looped", 1), ("noClock", 3), ("badLineCondition", 4))).clone('ok')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkLineCondition.setStatus('mandatory')
mscPppLnkBadAddresses = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkBadAddresses.setStatus('mandatory')
mscPppLnkBadControls = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkBadControls.setStatus('mandatory')
mscPppLnkPacketTooLongs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkPacketTooLongs.setStatus('mandatory')
mscPppLnkBadFcss = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkBadFcss.setStatus('mandatory')
mscPppLnkLocalMru = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483648)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkLocalMru.setStatus('mandatory')
mscPppLnkRemoteMru = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483648))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkRemoteMru.setStatus('mandatory')
mscPppLnkTransmitFcsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkTransmitFcsSize.setStatus('mandatory')
mscPppLnkReceiveFcsSize = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 2, 11, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLnkReceiveFcsSize.setStatus('mandatory')
mscPppLqm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3))
mscPppLqmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 1), )
if mibBuilder.loadTexts: mscPppLqmRowStatusTable.setStatus('mandatory')
mscPppLqmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLqmIndex"))
if mibBuilder.loadTexts: mscPppLqmRowStatusEntry.setStatus('mandatory')
mscPppLqmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLqmRowStatus.setStatus('mandatory')
mscPppLqmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLqmComponentName.setStatus('mandatory')
mscPppLqmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLqmStorageType.setStatus('mandatory')
mscPppLqmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscPppLqmIndex.setStatus('mandatory')
mscPppLqmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 10), )
if mibBuilder.loadTexts: mscPppLqmProvTable.setStatus('mandatory')
mscPppLqmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLqmIndex"))
if mibBuilder.loadTexts: mscPppLqmProvEntry.setStatus('mandatory')
mscPppLqmConfigPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLqmConfigPeriod.setStatus('mandatory')
mscPppLqmConfigStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLqmConfigStatus.setStatus('mandatory')
mscPppLqmOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 11), )
if mibBuilder.loadTexts: mscPppLqmOperTable.setStatus('mandatory')
mscPppLqmOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLqmIndex"))
if mibBuilder.loadTexts: mscPppLqmOperEntry.setStatus('mandatory')
mscPppLqmQuality = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("good", 1), ("bad", 2), ("notDetermined", 3))).clone('notDetermined')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLqmQuality.setStatus('mandatory')
mscPppLqmInGoodOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLqmInGoodOctets.setStatus('mandatory')
mscPppLqmLocalPeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLqmLocalPeriod.setStatus('mandatory')
mscPppLqmRemotePeriod = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLqmRemotePeriod.setStatus('mandatory')
mscPppLqmOutLqrs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLqmOutLqrs.setStatus('mandatory')
mscPppLqmInLqrs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 3, 11, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLqmInLqrs.setStatus('mandatory')
mscPppNcp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4))
mscPppNcpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 1), )
if mibBuilder.loadTexts: mscPppNcpRowStatusTable.setStatus('mandatory')
mscPppNcpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpIndex"))
if mibBuilder.loadTexts: mscPppNcpRowStatusEntry.setStatus('mandatory')
mscPppNcpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpRowStatus.setStatus('mandatory')
mscPppNcpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpComponentName.setStatus('mandatory')
mscPppNcpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpStorageType.setStatus('mandatory')
mscPppNcpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscPppNcpIndex.setStatus('mandatory')
mscPppNcpBprovTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 11), )
if mibBuilder.loadTexts: mscPppNcpBprovTable.setStatus('mandatory')
mscPppNcpBprovEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpIndex"))
if mibBuilder.loadTexts: mscPppNcpBprovEntry.setStatus('mandatory')
mscPppNcpBConfigTinygram = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppNcpBConfigTinygram.setStatus('mandatory')
mscPppNcpBConfigLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppNcpBConfigLanId.setStatus('mandatory')
mscPppNcpIpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 12), )
if mibBuilder.loadTexts: mscPppNcpIpOperTable.setStatus('mandatory')
mscPppNcpIpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpIndex"))
if mibBuilder.loadTexts: mscPppNcpIpOperEntry.setStatus('mandatory')
mscPppNcpIpOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpIpOperState.setStatus('mandatory')
mscPppNcpBoperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 14), )
if mibBuilder.loadTexts: mscPppNcpBoperTable.setStatus('mandatory')
mscPppNcpBoperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpIndex"))
if mibBuilder.loadTexts: mscPppNcpBoperEntry.setStatus('mandatory')
mscPppNcpBOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 14, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBOperState.setStatus('mandatory')
mscPppNcpBLocalToRemoteTinygramComp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 14, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBLocalToRemoteTinygramComp.setStatus('mandatory')
mscPppNcpBRemoteToLocalTinygramComp = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBRemoteToLocalTinygramComp.setStatus('mandatory')
mscPppNcpBLocalToRemoteLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 14, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBLocalToRemoteLanId.setStatus('mandatory')
mscPppNcpBRemoteToLocalLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBRemoteToLocalLanId.setStatus('mandatory')
mscPppNcpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 16), )
if mibBuilder.loadTexts: mscPppNcpOperTable.setStatus('mandatory')
mscPppNcpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 16, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpIndex"))
if mibBuilder.loadTexts: mscPppNcpOperEntry.setStatus('mandatory')
mscPppNcpAppletalkOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 16, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpAppletalkOperState.setStatus('mandatory')
mscPppNcpIpxOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpIpxOperState.setStatus('mandatory')
mscPppNcpXnsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 16, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpXnsOperState.setStatus('mandatory')
mscPppNcpDecnetOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 16, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("initial", 0), ("starting", 1), ("closed", 2), ("stopped", 3), ("closing", 4), ("stopping", 5), ("reqsent", 6), ("ackrcvd", 7), ("acksent", 8), ("opened", 9))).clone('initial')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpDecnetOperState.setStatus('mandatory')
mscPppNcpBmcEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2))
mscPppNcpBmcEntryRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2, 1), )
if mibBuilder.loadTexts: mscPppNcpBmcEntryRowStatusTable.setStatus('mandatory')
mscPppNcpBmcEntryRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpBmcEntryMacTypeIndex"))
if mibBuilder.loadTexts: mscPppNcpBmcEntryRowStatusEntry.setStatus('mandatory')
mscPppNcpBmcEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppNcpBmcEntryRowStatus.setStatus('mandatory')
mscPppNcpBmcEntryComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBmcEntryComponentName.setStatus('mandatory')
mscPppNcpBmcEntryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBmcEntryStorageType.setStatus('mandatory')
mscPppNcpBmcEntryMacTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernet", 1), ("tokenBus", 2), ("tokenRing", 3), ("fddi", 4))))
if mibBuilder.loadTexts: mscPppNcpBmcEntryMacTypeIndex.setStatus('mandatory')
mscPppNcpBmcEntryProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2, 10), )
if mibBuilder.loadTexts: mscPppNcpBmcEntryProvTable.setStatus('mandatory')
mscPppNcpBmcEntryProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpBmcEntryMacTypeIndex"))
if mibBuilder.loadTexts: mscPppNcpBmcEntryProvEntry.setStatus('mandatory')
mscPppNcpBmcEntryLocalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("accept", 1))).clone('accept')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppNcpBmcEntryLocalStatus.setStatus('mandatory')
mscPppNcpBmEntry = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3))
mscPppNcpBmEntryRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 1), )
if mibBuilder.loadTexts: mscPppNcpBmEntryRowStatusTable.setStatus('mandatory')
mscPppNcpBmEntryRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpBmEntryMacTypeIndex"))
if mibBuilder.loadTexts: mscPppNcpBmEntryRowStatusEntry.setStatus('mandatory')
mscPppNcpBmEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBmEntryRowStatus.setStatus('mandatory')
mscPppNcpBmEntryComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBmEntryComponentName.setStatus('mandatory')
mscPppNcpBmEntryStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBmEntryStorageType.setStatus('mandatory')
mscPppNcpBmEntryMacTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ethernet", 1), ("tokenBus", 2), ("tokenRing", 3), ("fddi", 4))))
if mibBuilder.loadTexts: mscPppNcpBmEntryMacTypeIndex.setStatus('mandatory')
mscPppNcpBmEntryOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 10), )
if mibBuilder.loadTexts: mscPppNcpBmEntryOperTable.setStatus('mandatory')
mscPppNcpBmEntryOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppNcpBmEntryMacTypeIndex"))
if mibBuilder.loadTexts: mscPppNcpBmEntryOperEntry.setStatus('mandatory')
mscPppNcpBmEntryLocalStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accept", 1), ("dontAccept", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBmEntryLocalStatus.setStatus('mandatory')
mscPppNcpBmEntryRemoteStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 4, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("accept", 1), ("dontAccept", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppNcpBmEntryRemoteStatus.setStatus('mandatory')
mscPppFramer = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5))
mscPppFramerRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 1), )
if mibBuilder.loadTexts: mscPppFramerRowStatusTable.setStatus('mandatory')
mscPppFramerRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppFramerIndex"))
if mibBuilder.loadTexts: mscPppFramerRowStatusEntry.setStatus('mandatory')
mscPppFramerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerRowStatus.setStatus('mandatory')
mscPppFramerComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerComponentName.setStatus('mandatory')
mscPppFramerStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerStorageType.setStatus('mandatory')
mscPppFramerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscPppFramerIndex.setStatus('mandatory')
mscPppFramerProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 10), )
if mibBuilder.loadTexts: mscPppFramerProvTable.setStatus('mandatory')
mscPppFramerProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppFramerIndex"))
if mibBuilder.loadTexts: mscPppFramerProvEntry.setStatus('mandatory')
mscPppFramerInterfaceName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 10, 1, 1), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppFramerInterfaceName.setStatus('mandatory')
mscPppFramerStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 12), )
if mibBuilder.loadTexts: mscPppFramerStateTable.setStatus('mandatory')
mscPppFramerStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppFramerIndex"))
if mibBuilder.loadTexts: mscPppFramerStateEntry.setStatus('mandatory')
mscPppFramerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerAdminState.setStatus('mandatory')
mscPppFramerOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 12, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerOperationalState.setStatus('mandatory')
mscPppFramerUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 12, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerUsageState.setStatus('mandatory')
mscPppFramerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13), )
if mibBuilder.loadTexts: mscPppFramerStatsTable.setStatus('mandatory')
mscPppFramerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppFramerIndex"))
if mibBuilder.loadTexts: mscPppFramerStatsEntry.setStatus('mandatory')
mscPppFramerFrmToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerFrmToIf.setStatus('mandatory')
mscPppFramerFrmFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerFrmFromIf.setStatus('mandatory')
mscPppFramerAborts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerAborts.setStatus('mandatory')
mscPppFramerCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerCrcErrors.setStatus('mandatory')
mscPppFramerLrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerLrcErrors.setStatus('mandatory')
mscPppFramerNonOctetErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerNonOctetErrors.setStatus('mandatory')
mscPppFramerOverruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerOverruns.setStatus('mandatory')
mscPppFramerUnderruns = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerUnderruns.setStatus('mandatory')
mscPppFramerLargeFrmErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 13, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerLargeFrmErrors.setStatus('mandatory')
mscPppFramerUtilTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 14), )
if mibBuilder.loadTexts: mscPppFramerUtilTable.setStatus('mandatory')
mscPppFramerUtilEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppFramerIndex"))
if mibBuilder.loadTexts: mscPppFramerUtilEntry.setStatus('mandatory')
mscPppFramerNormPrioLinkUtilToIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 14, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerNormPrioLinkUtilToIf.setStatus('mandatory')
mscPppFramerNormPrioLinkUtilFromIf = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 5, 14, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppFramerNormPrioLinkUtilFromIf.setStatus('mandatory')
mscPppLeq = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6))
mscPppLeqRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 1), )
if mibBuilder.loadTexts: mscPppLeqRowStatusTable.setStatus('mandatory')
mscPppLeqRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLeqIndex"))
if mibBuilder.loadTexts: mscPppLeqRowStatusEntry.setStatus('mandatory')
mscPppLeqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLeqRowStatus.setStatus('mandatory')
mscPppLeqComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqComponentName.setStatus('mandatory')
mscPppLeqStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqStorageType.setStatus('mandatory')
mscPppLeqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscPppLeqIndex.setStatus('mandatory')
mscPppLeqProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 10), )
if mibBuilder.loadTexts: mscPppLeqProvTable.setStatus('mandatory')
mscPppLeqProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLeqIndex"))
if mibBuilder.loadTexts: mscPppLeqProvEntry.setStatus('mandatory')
mscPppLeqMaxPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLeqMaxPackets.setStatus('mandatory')
mscPppLeqMaxMsecData = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLeqMaxMsecData.setStatus('mandatory')
mscPppLeqMaxPercentMulticast = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLeqMaxPercentMulticast.setStatus('mandatory')
mscPppLeqTimeToLive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(100, 60000)).clone(10000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscPppLeqTimeToLive.setStatus('mandatory')
mscPppLeqStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 11), )
if mibBuilder.loadTexts: mscPppLeqStatsTable.setStatus('mandatory')
mscPppLeqStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLeqIndex"))
if mibBuilder.loadTexts: mscPppLeqStatsEntry.setStatus('mandatory')
mscPppLeqTimedOutPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 11, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqTimedOutPkt.setStatus('mandatory')
mscPppLeqHardwareForcedPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 11, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqHardwareForcedPkt.setStatus('mandatory')
mscPppLeqForcedPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 11, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqForcedPktDiscards.setStatus('mandatory')
mscPppLeqQueuePurgeDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 11, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqQueuePurgeDiscards.setStatus('mandatory')
mscPppLeqTStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 12), )
if mibBuilder.loadTexts: mscPppLeqTStatsTable.setStatus('mandatory')
mscPppLeqTStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLeqIndex"))
if mibBuilder.loadTexts: mscPppLeqTStatsEntry.setStatus('mandatory')
mscPppLeqTotalPktHandled = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqTotalPktHandled.setStatus('mandatory')
mscPppLeqTotalPktForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqTotalPktForwarded.setStatus('mandatory')
mscPppLeqTotalPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 12, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqTotalPktQueued.setStatus('mandatory')
mscPppLeqTotalMulticastPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 12, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqTotalMulticastPkt.setStatus('mandatory')
mscPppLeqTotalPktDiscards = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 12, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqTotalPktDiscards.setStatus('mandatory')
mscPppLeqCStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 13), )
if mibBuilder.loadTexts: mscPppLeqCStatsTable.setStatus('mandatory')
mscPppLeqCStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 13, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLeqIndex"))
if mibBuilder.loadTexts: mscPppLeqCStatsEntry.setStatus('mandatory')
mscPppLeqCurrentPktQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 13, 1, 1), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqCurrentPktQueued.setStatus('mandatory')
mscPppLeqCurrentBytesQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 13, 1, 2), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqCurrentBytesQueued.setStatus('mandatory')
mscPppLeqCurrentMulticastQueued = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 13, 1, 3), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqCurrentMulticastQueued.setStatus('mandatory')
mscPppLeqThrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 14), )
if mibBuilder.loadTexts: mscPppLeqThrStatsTable.setStatus('mandatory')
mscPppLeqThrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 14, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppIndex"), (0, "Nortel-MsCarrier-MscPassport-PppMIB", "mscPppLeqIndex"))
if mibBuilder.loadTexts: mscPppLeqThrStatsEntry.setStatus('mandatory')
mscPppLeqQueuePktThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqQueuePktThreshold.setStatus('mandatory')
mscPppLeqPktThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 14, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqPktThresholdExceeded.setStatus('mandatory')
mscPppLeqQueueByteThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 14, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqQueueByteThreshold.setStatus('mandatory')
mscPppLeqByteThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 14, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqByteThresholdExceeded.setStatus('mandatory')
mscPppLeqQueueMulticastThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 14, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqQueueMulticastThreshold.setStatus('mandatory')
mscPppLeqMulThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 14, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqMulThresholdExceeded.setStatus('mandatory')
mscPppLeqMemThresholdExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 102, 6, 14, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscPppLeqMemThresholdExceeded.setStatus('mandatory')
pppGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 33, 1))
pppGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 33, 1, 1))
pppGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 33, 1, 1, 3))
pppGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 33, 1, 1, 3, 2))
pppCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 33, 3))
pppCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 33, 3, 1))
pppCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 33, 3, 1, 3))
pppCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 33, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-PppMIB", mscPppLnkConfigInitialMru=mscPppLnkConfigInitialMru, mscPppFramerAdminState=mscPppFramerAdminState, mscPppFramerNormPrioLinkUtilFromIf=mscPppFramerNormPrioLinkUtilFromIf, mscPppFramerFrmToIf=mscPppFramerFrmToIf, mscPppLeqStatsTable=mscPppLeqStatsTable, mscPppFramerLargeFrmErrors=mscPppFramerLargeFrmErrors, mscPppLeqTotalPktDiscards=mscPppLeqTotalPktDiscards, mscPppUsageState=mscPppUsageState, mscPppLnkProvTable=mscPppLnkProvTable, mscPppFramerInterfaceName=mscPppFramerInterfaceName, mscPppNcpBRemoteToLocalLanId=mscPppNcpBRemoteToLocalLanId, pppGroup=pppGroup, mscPppLnkComponentName=mscPppLnkComponentName, mscPppLnkRowStatusEntry=mscPppLnkRowStatusEntry, pppGroupCA02=pppGroupCA02, mscPppComponentName=mscPppComponentName, mscPppNcpBmEntryMacTypeIndex=mscPppNcpBmEntryMacTypeIndex, mscPppIfEntryEntry=mscPppIfEntryEntry, mscPppLqmInLqrs=mscPppLqmInLqrs, mscPppFramerStatsEntry=mscPppFramerStatsEntry, mscPppNcpStorageType=mscPppNcpStorageType, mscPppFramerRowStatusTable=mscPppFramerRowStatusTable, mscPppStateTable=mscPppStateTable, mscPppLeqPktThresholdExceeded=mscPppLeqPktThresholdExceeded, mscPppNcpBLocalToRemoteTinygramComp=mscPppNcpBLocalToRemoteTinygramComp, mscPppLnkLocalMru=mscPppLnkLocalMru, pppGroupCA02A=pppGroupCA02A, mscPppLqmProvEntry=mscPppLqmProvEntry, mscPppLnkIndex=mscPppLnkIndex, mscPppLqm=mscPppLqm, mscPppNcpBprovTable=mscPppNcpBprovTable, mscPppNcpBmcEntryProvTable=mscPppNcpBmcEntryProvTable, mscPppFramerStorageType=mscPppFramerStorageType, mscPppFramerOperationalState=mscPppFramerOperationalState, mscPppMpTable=mscPppMpTable, mscPppLnkBadFcss=mscPppLnkBadFcss, mscPppFramerFrmFromIf=mscPppFramerFrmFromIf, mscPppNcpBoperTable=mscPppNcpBoperTable, pppCapabilitiesCA02A=pppCapabilitiesCA02A, mscPppLnkProvEntry=mscPppLnkProvEntry, mscPppLeqQueueByteThreshold=mscPppLeqQueueByteThreshold, mscPppFramerRowStatus=mscPppFramerRowStatus, mscPppNcpBmcEntryRowStatusEntry=mscPppNcpBmcEntryRowStatusEntry, mscPppLqmRowStatus=mscPppLqmRowStatus, mscPppLqmOutLqrs=mscPppLqmOutLqrs, mscPppLeqTStatsTable=mscPppLeqTStatsTable, mscPppLeqByteThresholdExceeded=mscPppLeqByteThresholdExceeded, mscPppNcpDecnetOperState=mscPppNcpDecnetOperState, mscPppNcpBprovEntry=mscPppNcpBprovEntry, mscPppCidDataEntry=mscPppCidDataEntry, pppGroupCA=pppGroupCA, mscPppLnkNegativeAckTries=mscPppLnkNegativeAckTries, mscPppLeqThrStatsTable=mscPppLeqThrStatsTable, mscPppLnkOperState=mscPppLnkOperState, mscPppNcpBConfigTinygram=mscPppNcpBConfigTinygram, mscPppFramerStateTable=mscPppFramerStateTable, mscPppFramerStateEntry=mscPppFramerStateEntry, mscPppLnkReceiveFcsSize=mscPppLnkReceiveFcsSize, mscPppLqmProvTable=mscPppLqmProvTable, mscPppLeqRowStatus=mscPppLeqRowStatus, mscPppLeqMaxPackets=mscPppLeqMaxPackets, mscPppLnkBadControls=mscPppLnkBadControls, mscPppLqmConfigPeriod=mscPppLqmConfigPeriod, mscPppLeqStatsEntry=mscPppLeqStatsEntry, mscPppNcpBmcEntryComponentName=mscPppNcpBmcEntryComponentName, mscPppFramerCrcErrors=mscPppFramerCrcErrors, mscPppNcpBmEntryComponentName=mscPppNcpBmEntryComponentName, mscPppNcpAppletalkOperState=mscPppNcpAppletalkOperState, mscPppFramerOverruns=mscPppFramerOverruns, mscPppFramerUtilEntry=mscPppFramerUtilEntry, mscPppFramerComponentName=mscPppFramerComponentName, mscPppLeq=mscPppLeq, mscPppLeqTotalMulticastPkt=mscPppLeqTotalMulticastPkt, mscPppNcpBmcEntry=mscPppNcpBmcEntry, mscPppNcpBmEntryRowStatusEntry=mscPppNcpBmEntryRowStatusEntry, mscPppLeqQueuePktThreshold=mscPppLeqQueuePktThreshold, mscPppLnkConfigMagicNumber=mscPppLnkConfigMagicNumber, mscPppLnkRowStatus=mscPppLnkRowStatus, mscPppNcpOperEntry=mscPppNcpOperEntry, mscPppIndex=mscPppIndex, mscPppFramerStatsTable=mscPppFramerStatsTable, mscPppRowStatusEntry=mscPppRowStatusEntry, mscPppLnkRowStatusTable=mscPppLnkRowStatusTable, mscPppLqmComponentName=mscPppLqmComponentName, mscPppOperationalState=mscPppOperationalState, mscPppNcpBmEntryOperTable=mscPppNcpBmEntryOperTable, mscPppLeqCurrentBytesQueued=mscPppLeqCurrentBytesQueued, mscPppNcpRowStatusEntry=mscPppNcpRowStatusEntry, pppCapabilitiesCA=pppCapabilitiesCA, mscPppLqmStorageType=mscPppLqmStorageType, mscPppNcpBConfigLanId=mscPppNcpBConfigLanId, mscPppNcpBmEntryRowStatus=mscPppNcpBmEntryRowStatus, mscPppOperStatusTable=mscPppOperStatusTable, mscPppNcpBmEntry=mscPppNcpBmEntry, mscPppLeqRowStatusTable=mscPppLeqRowStatusTable, mscPppLqmOperTable=mscPppLqmOperTable, mscPppLeqComponentName=mscPppLeqComponentName, mscPppLnkContinuityMonitor=mscPppLnkContinuityMonitor, mscPppLeqTStatsEntry=mscPppLeqTStatsEntry, mscPppLnkOperTable=mscPppLnkOperTable, mscPppLqmRowStatusTable=mscPppLqmRowStatusTable, mscPppLeqTotalPktForwarded=mscPppLeqTotalPktForwarded, mscPppNcpBmEntryLocalStatus=mscPppNcpBmEntryLocalStatus, mscPppLnkQualityThreshold=mscPppLnkQualityThreshold, mscPppLeqMemThresholdExceeded=mscPppLeqMemThresholdExceeded, mscPppLqmInGoodOctets=mscPppLqmInGoodOctets, mscPppFramerLrcErrors=mscPppFramerLrcErrors, mscPppNcpBLocalToRemoteLanId=mscPppNcpBLocalToRemoteLanId, mscPppFramer=mscPppFramer, mscPppLqmOperEntry=mscPppLqmOperEntry, mscPppLnkPacketTooLongs=mscPppLnkPacketTooLongs, pppCapabilities=pppCapabilities, mscPppLeqHardwareForcedPkt=mscPppLeqHardwareForcedPkt, mscPppNcpIpOperEntry=mscPppNcpIpOperEntry, mscPppLnkTransmitFcsSize=mscPppLnkTransmitFcsSize, mscPppLnkTerminateRequestTries=mscPppLnkTerminateRequestTries, mscPppNcp=mscPppNcp, mscPppFramerRowStatusEntry=mscPppFramerRowStatusEntry, mscPppNcpBOperState=mscPppNcpBOperState, mscPppFramerUnderruns=mscPppFramerUnderruns, mscPppFramerProvEntry=mscPppFramerProvEntry, mscPppLnkBadAddresses=mscPppLnkBadAddresses, mscPppIfAdminStatus=mscPppIfAdminStatus, mscPppLnk=mscPppLnk, mscPppNcpBmcEntryStorageType=mscPppNcpBmcEntryStorageType, mscPppNcpBmEntryOperEntry=mscPppNcpBmEntryOperEntry, mscPppLinkToProtocolPort=mscPppLinkToProtocolPort, mscPppLeqCurrentMulticastQueued=mscPppLeqCurrentMulticastQueued, mscPppLeqTotalPktHandled=mscPppLeqTotalPktHandled, mscPppLeqQueuePurgeDiscards=mscPppLeqQueuePurgeDiscards, mscPppNcpBmcEntryProvEntry=mscPppNcpBmcEntryProvEntry, mscPppNcpBmcEntryLocalStatus=mscPppNcpBmcEntryLocalStatus, mscPppNcpBmEntryRowStatusTable=mscPppNcpBmEntryRowStatusTable, mscPppNcpBmcEntryRowStatus=mscPppNcpBmcEntryRowStatus, mscPppLeqMaxPercentMulticast=mscPppLeqMaxPercentMulticast, mscPppNcpBmEntryStorageType=mscPppNcpBmEntryStorageType, mscPppRowStatusTable=mscPppRowStatusTable, mscPppLeqTimedOutPkt=mscPppLeqTimedOutPkt, mscPppLeqCStatsEntry=mscPppLeqCStatsEntry, mscPppNcpBoperEntry=mscPppNcpBoperEntry, mscPppCidDataTable=mscPppCidDataTable, mscPppNcpXnsOperState=mscPppNcpXnsOperState, mscPpp=mscPpp, mscPppFramerUsageState=mscPppFramerUsageState, mscPppLeqTotalPktQueued=mscPppLeqTotalPktQueued, mscPppLnkStorageType=mscPppLnkStorageType, mscPppNcpIpOperTable=mscPppNcpIpOperTable, mscPppLnkOperEntry=mscPppLnkOperEntry, mscPppLqmIndex=mscPppLqmIndex, mscPppLqmRemotePeriod=mscPppLqmRemotePeriod, mscPppLnkRestartTimer=mscPppLnkRestartTimer, mscPppStorageType=mscPppStorageType, mscPppCustomerIdentifier=mscPppCustomerIdentifier, mscPppFramerAborts=mscPppFramerAborts, mscPppLqmLocalPeriod=mscPppLqmLocalPeriod, mscPppLeqStorageType=mscPppLeqStorageType, mscPppAdminState=mscPppAdminState, mscPppNcpIndex=mscPppNcpIndex, mscPppMpEntry=mscPppMpEntry, mscPppNcpOperTable=mscPppNcpOperTable, mscPppNcpBmcEntryRowStatusTable=mscPppNcpBmcEntryRowStatusTable, mscPppFramerIndex=mscPppFramerIndex, mscPppNcpBmcEntryMacTypeIndex=mscPppNcpBmcEntryMacTypeIndex, mscPppLqmRowStatusEntry=mscPppLqmRowStatusEntry, pppCapabilitiesCA02=pppCapabilitiesCA02, mscPppLnkRemoteMru=mscPppLnkRemoteMru, mscPppRowStatus=mscPppRowStatus, mscPppFramerProvTable=mscPppFramerProvTable, mscPppNcpRowStatusTable=mscPppNcpRowStatusTable, mscPppLeqRowStatusEntry=mscPppLeqRowStatusEntry, mscPppLnkQualityWindow=mscPppLnkQualityWindow, mscPppLeqProvEntry=mscPppLeqProvEntry, mscPppLeqForcedPktDiscards=mscPppLeqForcedPktDiscards, mscPppLeqThrStatsEntry=mscPppLeqThrStatsEntry, mscPppLeqTimeToLive=mscPppLeqTimeToLive, mscPppLeqIndex=mscPppLeqIndex, mscPppOperStatusEntry=mscPppOperStatusEntry, mscPppFramerNormPrioLinkUtilToIf=mscPppFramerNormPrioLinkUtilToIf, mscPppLeqCStatsTable=mscPppLeqCStatsTable, mscPppFramerNonOctetErrors=mscPppFramerNonOctetErrors, pppMIB=pppMIB, mscPppLnkLineCondition=mscPppLnkLineCondition, mscPppLnkConfigureRequestTries=mscPppLnkConfigureRequestTries, mscPppIfEntryTable=mscPppIfEntryTable, mscPppStateEntry=mscPppStateEntry, mscPppFramerUtilTable=mscPppFramerUtilTable, mscPppLeqCurrentPktQueued=mscPppLeqCurrentPktQueued, mscPppNcpIpOperState=mscPppNcpIpOperState, mscPppLqmConfigStatus=mscPppLqmConfigStatus, mscPppSnmpOperStatus=mscPppSnmpOperStatus, mscPppIfIndex=mscPppIfIndex, mscPppLeqMaxMsecData=mscPppLeqMaxMsecData, mscPppNcpIpxOperState=mscPppNcpIpxOperState, mscPppLqmQuality=mscPppLqmQuality, mscPppLeqProvTable=mscPppLeqProvTable, mscPppNcpRowStatus=mscPppNcpRowStatus, mscPppLeqQueueMulticastThreshold=mscPppLeqQueueMulticastThreshold, mscPppNcpBmEntryRemoteStatus=mscPppNcpBmEntryRemoteStatus, mscPppLeqMulThresholdExceeded=mscPppLeqMulThresholdExceeded, mscPppNcpComponentName=mscPppNcpComponentName, mscPppNcpBRemoteToLocalTinygramComp=mscPppNcpBRemoteToLocalTinygramComp)
