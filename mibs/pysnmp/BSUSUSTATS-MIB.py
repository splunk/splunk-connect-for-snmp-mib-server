#
# PySNMP MIB module BSUSUSTATS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/BSUSUSTATS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:24:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
aniBsuSuGroup, = mibBuilder.importSymbols("ANIROOT-MIB", "aniBsuSuGroup")
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsUnion")
aniBsuSuMacAddr, = mibBuilder.importSymbols("BSUSUINV-MIB", "aniBsuSuMacAddr")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
IpAddress, Gauge32, NotificationType, MibIdentifier, Integer32, Bits, Counter64, ObjectIdentity, iso, ModuleIdentity, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "Gauge32", "NotificationType", "MibIdentifier", "Integer32", "Bits", "Counter64", "ObjectIdentity", "iso", "ModuleIdentity", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
aniBsuSuStatistics = ModuleIdentity((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4))
if mibBuilder.loadTexts: aniBsuSuStatistics.setLastUpdated('0105091130Z')
if mibBuilder.loadTexts: aniBsuSuStatistics.setOrganization('Aperto Networks')
aniBsuSuServStatsTable = MibTable((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1), )
if mibBuilder.loadTexts: aniBsuSuServStatsTable.setStatus('current')
aniBsuSuServStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1), ).setIndexNames((0, "BSUSUINV-MIB", "aniBsuSuMacAddr"), (0, "BSUSUSTATS-MIB", "aniBsuSuServStatsFlowId"))
if mibBuilder.loadTexts: aniBsuSuServStatsEntry.setStatus('current')
aniBsuSuServStatsFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsFlowId.setStatus('current')
aniBsuSuServStatsDSEthernetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsDSEthernetPkts.setStatus('current')
aniBsuSuServStatsDSDropEthernetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsDSDropEthernetPkts.setStatus('current')
aniBsuSuServStatsDSBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsDSBytes.setStatus('current')
aniBsuSuServStatsDSWirelessPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsDSWirelessPkts.setStatus('current')
aniBsuSuServStatsDSWirelessPktsRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsDSWirelessPktsRetrans.setStatus('current')
aniBsuSuServStatsUSEthernetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsUSEthernetPkts.setStatus('current')
aniBsuSuServStatsUSDropEthernetPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsUSDropEthernetPkts.setStatus('current')
aniBsuSuServStatsUSBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsUSBytes.setStatus('current')
aniBsuSuServStatsUSWirelessPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuServStatsUSWirelessPkts.setStatus('current')
aniBsuSuSignalQualityTable = MibTable((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 2), )
if mibBuilder.loadTexts: aniBsuSuSignalQualityTable.setStatus('current')
aniBsuSuSignalQualityEntry = MibTableRow((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 2, 1), ).setIndexNames((0, "BSUSUINV-MIB", "aniBsuSuMacAddr"), (0, "BSUSUSTATS-MIB", "aniBsuSuServStatsFlowId"))
if mibBuilder.loadTexts: aniBsuSuSignalQualityEntry.setStatus('current')
aniBsuSuSigQCollidedBurstsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuSigQCollidedBurstsCount.setStatus('current')
aniBsuSuSigQCorrFecErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuSigQCorrFecErrorCount.setStatus('current')
aniBsuSuSigQUnCorrFecErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuSigQUnCorrFecErrorCount.setStatus('current')
aniBsuSuSigQNoFecErrorCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuSigQNoFecErrorCount.setStatus('current')
aniBsuSuSigQNoUniqWordDetectedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuSigQNoUniqWordDetectedCount.setStatus('current')
aniBsuSuSigQNoEnergyDetectedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 4325, 3, 7, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aniBsuSuSigQNoEnergyDetectedCount.setStatus('current')
mibBuilder.exportSymbols("BSUSUSTATS-MIB", aniBsuSuSigQCorrFecErrorCount=aniBsuSuSigQCorrFecErrorCount, aniBsuSuServStatsDSWirelessPkts=aniBsuSuServStatsDSWirelessPkts, aniBsuSuSignalQualityEntry=aniBsuSuSignalQualityEntry, aniBsuSuServStatsDSEthernetPkts=aniBsuSuServStatsDSEthernetPkts, aniBsuSuServStatsDSDropEthernetPkts=aniBsuSuServStatsDSDropEthernetPkts, aniBsuSuSigQUnCorrFecErrorCount=aniBsuSuSigQUnCorrFecErrorCount, aniBsuSuSignalQualityTable=aniBsuSuSignalQualityTable, aniBsuSuSigQNoFecErrorCount=aniBsuSuSigQNoFecErrorCount, PYSNMP_MODULE_ID=aniBsuSuStatistics, aniBsuSuStatistics=aniBsuSuStatistics, aniBsuSuSigQCollidedBurstsCount=aniBsuSuSigQCollidedBurstsCount, aniBsuSuServStatsUSDropEthernetPkts=aniBsuSuServStatsUSDropEthernetPkts, aniBsuSuServStatsDSBytes=aniBsuSuServStatsDSBytes, aniBsuSuSigQNoEnergyDetectedCount=aniBsuSuSigQNoEnergyDetectedCount, aniBsuSuServStatsDSWirelessPktsRetrans=aniBsuSuServStatsDSWirelessPktsRetrans, aniBsuSuServStatsFlowId=aniBsuSuServStatsFlowId, aniBsuSuSigQNoUniqWordDetectedCount=aniBsuSuSigQNoUniqWordDetectedCount, aniBsuSuServStatsEntry=aniBsuSuServStatsEntry, aniBsuSuServStatsTable=aniBsuSuServStatsTable, aniBsuSuServStatsUSBytes=aniBsuSuServStatsUSBytes, aniBsuSuServStatsUSEthernetPkts=aniBsuSuServStatsUSEthernetPkts, aniBsuSuServStatsUSWirelessPkts=aniBsuSuServStatsUSWirelessPkts)
