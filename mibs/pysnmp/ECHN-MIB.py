#
# PySNMP MIB module ECHN-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ECHN-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:44:35 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, iso, Unsigned32, TimeTicks, Counter64, ModuleIdentity, Counter32, enterprises, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, IpAddress, MibIdentifier, Integer32, Bits, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "iso", "Unsigned32", "TimeTicks", "Counter64", "ModuleIdentity", "Counter32", "enterprises", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "IpAddress", "MibIdentifier", "Integer32", "Bits", "Gauge32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
nbase = MibIdentifier((1, 3, 6, 1, 4, 1, 629))
nbSwitchG1 = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1))
nbSwitchG1Il = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50))
nbsEthChn = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 5))
nbsEthChnRun = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1))
nbsEthChnPerm = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2))
nbsEthChnPoss = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3))
nbsEthChnEnable = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnEnable.setStatus('mandatory')
nbsEthChnPossNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossNum.setStatus('mandatory')
nbsEthChnMaxNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnMaxNum.setStatus('mandatory')
nbsEthChnRunNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnRunNum.setStatus('mandatory')
nbsEthChnPermNum = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPermNum.setStatus('mandatory')
nbsEthChnRunTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1), )
if mibBuilder.loadTexts: nbsEthChnRunTable.setStatus('mandatory')
nbsEthChnRunEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1), ).setIndexNames((0, "ECHN-MIB", "nbsEthChnRunIndex"))
if mibBuilder.loadTexts: nbsEthChnRunEntry.setStatus('mandatory')
nbsEthChnRunIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnRunIndex.setStatus('mandatory')
nbsEthChnRunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEthChnRunStatus.setStatus('mandatory')
nbsEthChnRunList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEthChnRunList.setStatus('mandatory')
nbsEthChnRunLinkList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 1, 1, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnRunLinkList.setStatus('mandatory')
nbsEthChnPermTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1), )
if mibBuilder.loadTexts: nbsEthChnPermTable.setStatus('mandatory')
nbsEthChnPermEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1, 1), ).setIndexNames((0, "ECHN-MIB", "nbsEthChnPermIndex"))
if mibBuilder.loadTexts: nbsEthChnPermEntry.setStatus('mandatory')
nbsEthChnPermIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPermIndex.setStatus('mandatory')
nbsEthChnPermStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEthChnPermStatus.setStatus('mandatory')
nbsEthChnPermList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 2, 1, 1, 3), OctetString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbsEthChnPermList.setStatus('mandatory')
nbsEthChnPossTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1), )
if mibBuilder.loadTexts: nbsEthChnPossTable.setStatus('mandatory')
nbsEthChnPossEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1), ).setIndexNames((0, "ECHN-MIB", "nbsEthChnPossIndex"))
if mibBuilder.loadTexts: nbsEthChnPossEntry.setStatus('mandatory')
nbsEthChnPossIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossIndex.setStatus('mandatory')
nbsEthChnPossRunStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossRunStatus.setStatus('mandatory')
nbsEthChnPossPermStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("true", 1), ("false", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossPermStatus.setStatus('mandatory')
nbsEthChnPossPortMaxNum = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossPortMaxNum.setStatus('mandatory')
nbsEthChnPossList = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 5, 3, 1, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbsEthChnPossList.setStatus('mandatory')
mibBuilder.exportSymbols("ECHN-MIB", nbsEthChn=nbsEthChn, nbsEthChnRunList=nbsEthChnRunList, nbsEthChnRun=nbsEthChnRun, nbsEthChnRunEntry=nbsEthChnRunEntry, nbsEthChnPossNum=nbsEthChnPossNum, nbsEthChnRunIndex=nbsEthChnRunIndex, nbsEthChnPermStatus=nbsEthChnPermStatus, nbsEthChnPermEntry=nbsEthChnPermEntry, nbsEthChnPoss=nbsEthChnPoss, nbsEthChnPossIndex=nbsEthChnPossIndex, nbsEthChnRunStatus=nbsEthChnRunStatus, nbsEthChnPermList=nbsEthChnPermList, nbsEthChnPossRunStatus=nbsEthChnPossRunStatus, nbsEthChnPossPortMaxNum=nbsEthChnPossPortMaxNum, nbase=nbase, nbsEthChnPossEntry=nbsEthChnPossEntry, nbsEthChnEnable=nbsEthChnEnable, nbsEthChnMaxNum=nbsEthChnMaxNum, nbsEthChnPermTable=nbsEthChnPermTable, nbSwitchG1Il=nbSwitchG1Il, nbsEthChnPerm=nbsEthChnPerm, nbsEthChnPossTable=nbsEthChnPossTable, nbsEthChnPermNum=nbsEthChnPermNum, nbsEthChnPossList=nbsEthChnPossList, nbsEthChnPossPermStatus=nbsEthChnPossPermStatus, nbsEthChnRunNum=nbsEthChnRunNum, nbsEthChnRunTable=nbsEthChnRunTable, nbsEthChnPermIndex=nbsEthChnPermIndex, nbSwitchG1=nbSwitchG1, nbsEthChnRunLinkList=nbsEthChnRunLinkList)
