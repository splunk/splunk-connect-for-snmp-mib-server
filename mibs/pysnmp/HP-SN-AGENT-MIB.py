#
# PySNMP MIB module HP-SN-AGENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HP-SN-AGENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:23:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint")
snChassis, snAgentSys, snStack = mibBuilder.importSymbols("HP-SN-ROOT-MIB", "snChassis", "snAgentSys", "snStack")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
NotificationType, ModuleIdentity, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, MibIdentifier, Counter64, Gauge32, Unsigned32, TimeTicks, IpAddress, Counter32, ObjectIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "ModuleIdentity", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "MibIdentifier", "Counter64", "Gauge32", "Unsigned32", "TimeTicks", "IpAddress", "Counter32", "ObjectIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(6, 6)
    fixedLength = 6

snChasGen = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1))
snChasPwr = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 2))
snChasFan = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 3))
snChasType = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasType.setStatus('mandatory')
snChasSerNum = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasSerNum.setStatus('mandatory')
snChasPwrSupplyStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasPwrSupplyStatus.setStatus('mandatory')
snChasFanStatus = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasFanStatus.setStatus('mandatory')
snChasMainBrdDescription = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasMainBrdDescription.setStatus('mandatory')
snChasMainPortTotal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasMainPortTotal.setStatus('mandatory')
snChasExpBrdDescription = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasExpBrdDescription.setStatus('mandatory')
snChasExpPortTotal = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasExpPortTotal.setStatus('mandatory')
snChasStatusLeds = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasStatusLeds.setStatus('mandatory')
snChasTrafficLeds = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasTrafficLeds.setStatus('mandatory')
snChasMediaLeds = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasMediaLeds.setStatus('mandatory')
snChasEnablePwrSupplyTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snChasEnablePwrSupplyTrap.setStatus('mandatory')
snChasMainBrdId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasMainBrdId.setStatus('mandatory')
snChasExpBrdId = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 14), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasExpBrdId.setStatus('mandatory')
snChasSpeedLeds = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasSpeedLeds.setStatus('mandatory')
snChasEnableFanTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snChasEnableFanTrap.setStatus('mandatory')
snChasIdNumber = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snChasIdNumber.setStatus('mandatory')
snChasActualTemperature = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-110, 250))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasActualTemperature.setStatus('mandatory')
snChasWarningTemperature = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snChasWarningTemperature.setStatus('mandatory')
snChasShutdownTemperature = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 250))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snChasShutdownTemperature.setStatus('mandatory')
snChasEnableTempWarnTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snChasEnableTempWarnTrap.setStatus('mandatory')
snChasPwrSupplyTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 2, 1), )
if mibBuilder.loadTexts: snChasPwrSupplyTable.setStatus('mandatory')
snChasPwrSupplyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 2, 1, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snChasPwrSupplyIndex"))
if mibBuilder.loadTexts: snChasPwrSupplyEntry.setStatus('mandatory')
snChasPwrSupplyIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasPwrSupplyIndex.setStatus('mandatory')
snChasPwrSupplyDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasPwrSupplyDescription.setStatus('mandatory')
snChasPwrSupplyOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasPwrSupplyOperStatus.setStatus('mandatory')
snChasFanTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 3, 1), )
if mibBuilder.loadTexts: snChasFanTable.setStatus('mandatory')
snChasFanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 3, 1, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snChasFanIndex"))
if mibBuilder.loadTexts: snChasFanEntry.setStatus('mandatory')
snChasFanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasFanIndex.setStatus('mandatory')
snChasFanDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 3, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasFanDescription.setStatus('mandatory')
snChasFanOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 1, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("normal", 2), ("failure", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snChasFanOperStatus.setStatus('mandatory')
snAgentGbl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1))
snAgentBrd = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2))
snAgentTrp = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 3))
snAgentBoot = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 4))
snAgCfgEos = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 5))
snAgentLog = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6))
snAgentSysParaConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 7))
snAgentConfigModule = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 8))
snAgentUser = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9))
snAgentRedundant = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 10))
snAgReload = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("running", 2), ("reset", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgReload.setStatus('mandatory')
snAgEraseNVRAM = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("error", 2), ("erase", 3), ("erasing", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgEraseNVRAM.setStatus('mandatory')
snAgWriteNVRAM = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("error", 2), ("write", 3), ("writing", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgWriteNVRAM.setStatus('mandatory')
snAgConfigFromNVRAM = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 1), ("error", 2), ("config", 3), ("configing", 4))))
if mibBuilder.loadTexts: snAgConfigFromNVRAM.setStatus('mandatory')
snAgTftpServerIp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgTftpServerIp.setStatus('mandatory')
snAgImgFname = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgImgFname.setStatus('mandatory')
snAgImgLoad = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("normal", 1), ("flashPrepareReadFailure", 2), ("flashReadError", 3), ("flashPrepareWriteFailure", 4), ("flashWriteError", 5), ("tftpTimeoutError", 6), ("tftpOutOfBufferSpace", 7), ("tftpBusy", 8), ("tftpRemoteOtherErrors", 9), ("tftpRemoteNoFile", 10), ("tftpRemoteBadAccess", 11), ("tftpRemoteDiskFull", 12), ("tftpRemoteBadOperation", 13), ("tftpRemoteBadId", 14), ("tftpRemoteFileExists", 15), ("tftpRemoteNoUser", 16), ("operationError", 17), ("loading", 18), ("uploadPrimary", 19), ("downloadPrimary", 20), ("uploadSecondary", 21), ("downloadSecondary", 22), ("tftpWrongFileType", 23)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgImgLoad.setStatus('mandatory')
snAgCfgFname = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgCfgFname.setStatus('mandatory')
snAgCfgLoad = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29))).clone(namedValues=NamedValues(("normal", 1), ("flashPrepareReadFailure", 2), ("flashReadError", 3), ("flashPrepareWriteFailure", 4), ("flashWriteError", 5), ("tftpTimeoutError", 6), ("tftpOutOfBufferSpace", 7), ("tftpBusy", 8), ("tftpRemoteOtherErrors", 9), ("tftpRemoteNoFile", 10), ("tftpRemoteBadAccess", 11), ("tftpRemoteDiskFull", 12), ("tftpRemoteBadOperation", 13), ("tftpRemoteBadId", 14), ("tftpRemoteFileExists", 15), ("tftpRemoteNoUser", 16), ("operationError", 17), ("loading", 18), ("uploadFromFlashToServer", 20), ("downloadToFlashFromServer", 21), ("uploadFromDramToServer", 22), ("downloadToDramFromServer", 23), ("uploadFromFlashToNMS", 24), ("downloadToFlashFromNMS", 25), ("uploadFromDramToNMS", 26), ("downloadToDramFromNMS", 27), ("operationDoneWithNMS", 28), ("tftpWrongFileType", 29)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgCfgLoad.setStatus('mandatory')
snAgDefGwayIp = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgDefGwayIp.setStatus('mandatory')
snAgImgVer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgImgVer.setStatus('mandatory')
snAgFlashImgVer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgFlashImgVer.setStatus('mandatory')
snAgGblIfIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblIfIpAddr.setStatus('mandatory')
snAgGblIfIpMask = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 14), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblIfIpMask.setStatus('mandatory')
snAgGblPassword = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblPassword.setStatus('mandatory')
snAgTrpRcvrCurEntry = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgTrpRcvrCurEntry.setStatus('mandatory')
snAgGblDataRetrieveMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("nextbootCfg", 0), ("operationalData", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblDataRetrieveMode.setStatus('mandatory')
snAgSystemLog = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 20), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 5)).setFixedLength(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgSystemLog.setStatus('mandatory')
snAgGblEnableColdStartTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblEnableColdStartTrap.setStatus('mandatory')
snAgGblEnableLinkUpTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblEnableLinkUpTrap.setStatus('mandatory')
snAgGblEnableLinkDownTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblEnableLinkDownTrap.setStatus('mandatory')
snAgGblPasswordChangeMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("anyMgmtEntity", 1), ("consoleAndTelnet", 2), ("consoleOnly", 3), ("telnetOnly", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblPasswordChangeMode.setStatus('mandatory')
snAgGblReadOnlyCommunity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 25), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblReadOnlyCommunity.setStatus('mandatory')
snAgGblReadWriteCommunity = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 26), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblReadWriteCommunity.setStatus('mandatory')
snAgGblCurrentSecurityLevel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblCurrentSecurityLevel.setStatus('mandatory')
snAgGblSecurityLevelSet = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 5))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblSecurityLevelSet.setStatus('mandatory')
snAgGblLevelPasswordsMask = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblLevelPasswordsMask.setStatus('mandatory')
snAgGblQueueOverflow = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblQueueOverflow.setStatus('mandatory')
snAgGblBufferShortage = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblBufferShortage.setStatus('mandatory')
snAgGblDmaFailure = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblDmaFailure.setStatus('mandatory')
snAgGblResourceLowWarning = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblResourceLowWarning.setStatus('mandatory')
snAgGblExcessiveErrorWarning = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblExcessiveErrorWarning.setStatus('mandatory')
snAgGblCpuUtilData = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblCpuUtilData.setStatus('mandatory')
snAgGblCpuUtilCollect = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblCpuUtilCollect.setStatus('mandatory')
snAgGblTelnetTimeout = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 240))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblTelnetTimeout.setStatus('mandatory')
snAgGblEnableWebMgmt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblEnableWebMgmt.setStatus('mandatory')
snAgGblSecurityLevelBinding = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 39), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblSecurityLevelBinding.setStatus('mandatory')
snAgGblEnableSLB = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblEnableSLB.setStatus('mandatory')
snAgSoftwareFeature = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 41), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSoftwareFeature.setStatus('mandatory')
snAgGblEnableModuleInsertedTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblEnableModuleInsertedTrap.setStatus('mandatory')
snAgGblEnableModuleRemovedTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblEnableModuleRemovedTrap.setStatus('mandatory')
snAgGblTrapMessage = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 44), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgGblTrapMessage.setStatus('mandatory')
snAgGblEnableTelnetServer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblEnableTelnetServer.setStatus('mandatory')
snAgGblTelnetPassword = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 46), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgGblTelnetPassword.setStatus('mandatory')
snAgBuildDate = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 47), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgBuildDate.setStatus('mandatory')
snAgBuildtime = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 48), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgBuildtime.setStatus('mandatory')
snAgBuildVer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 1, 49), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgBuildVer.setStatus('mandatory')
snAgentBrdTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1), )
if mibBuilder.loadTexts: snAgentBrdTable.setStatus('mandatory')
snAgentBrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snAgentBrdIndex"))
if mibBuilder.loadTexts: snAgentBrdEntry.setStatus('mandatory')
snAgentBrdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdIndex.setStatus('mandatory')
snAgentBrdMainBrdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdMainBrdDescription.setStatus('mandatory')
snAgentBrdMainBrdId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdMainBrdId.setStatus('mandatory')
snAgentBrdMainPortTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdMainPortTotal.setStatus('mandatory')
snAgentBrdExpBrdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdExpBrdDescription.setStatus('mandatory')
snAgentBrdExpBrdId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 6), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdExpBrdId.setStatus('mandatory')
snAgentBrdExpPortTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdExpPortTotal.setStatus('mandatory')
snAgentBrdStatusLeds = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdStatusLeds.setStatus('mandatory')
snAgentBrdTrafficLeds = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdTrafficLeds.setStatus('mandatory')
snAgentBrdMediaLeds = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdMediaLeds.setStatus('mandatory')
snAgentBrdSpeedLeds = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdSpeedLeds.setStatus('mandatory')
snAgentBrdModuleStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 2, 3, 4, 9, 10))).clone(namedValues=NamedValues(("moduleEmpty", 0), ("moduleGoingDown", 2), ("moduleRejected", 3), ("moduleBad", 4), ("moduleComingUp", 9), ("moduleRunning", 10)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdModuleStatus.setStatus('mandatory')
snAgentBrdRedundantStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("active", 2), ("standby", 3), ("crashed", 4), ("comingUp", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdRedundantStatus.setStatus('mandatory')
snAgentBrdAlarmLeds = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdAlarmLeds.setStatus('mandatory')
snAgentBrdTxTrafficLeds = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 15), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdTxTrafficLeds.setStatus('mandatory')
snAgentBrdRxTrafficLeds = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 2, 1, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentBrdRxTrafficLeds.setStatus('mandatory')
snAgTrpRcvrTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 3, 1), )
if mibBuilder.loadTexts: snAgTrpRcvrTable.setStatus('mandatory')
snAgTrpRcvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 3, 1, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snAgTrpRcvrIndex"))
if mibBuilder.loadTexts: snAgTrpRcvrEntry.setStatus('mandatory')
snAgTrpRcvrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgTrpRcvrIndex.setStatus('mandatory')
snAgTrpRcvrIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 3, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgTrpRcvrIpAddr.setStatus('mandatory')
snAgTrpRcvrComm = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgTrpRcvrComm.setStatus('mandatory')
snAgTrpRcvrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4), ("ignore", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgTrpRcvrStatus.setStatus('mandatory')
snAgBootSeqTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 4, 1), )
if mibBuilder.loadTexts: snAgBootSeqTable.setStatus('mandatory')
snAgBootSeqEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 4, 1, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snAgBootSeqIndex"))
if mibBuilder.loadTexts: snAgBootSeqEntry.setStatus('mandatory')
snAgBootSeqIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgBootSeqIndex.setStatus('mandatory')
snAgBootSeqInstruction = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fromPrimaryFlash", 1), ("fromSecondaryFlash", 2), ("fromTftpServer", 3), ("fromBootpServer", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgBootSeqInstruction.setStatus('mandatory')
snAgBootSeqIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 4, 1, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgBootSeqIpAddr.setStatus('mandatory')
snAgBootSeqFilename = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 4, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgBootSeqFilename.setStatus('mandatory')
snAgBootSeqRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 4, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgBootSeqRowStatus.setStatus('mandatory')
snAgCfgEosTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 5, 1), )
if mibBuilder.loadTexts: snAgCfgEosTable.setStatus('mandatory')
snAgCfgEosEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 5, 1, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snAgCfgEosIndex"))
if mibBuilder.loadTexts: snAgCfgEosEntry.setStatus('mandatory')
snAgCfgEosIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 5, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgCfgEosIndex.setStatus('mandatory')
snAgCfgEosPacket = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 5, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgCfgEosPacket.setStatus('mandatory')
snAgCfgEosChkSum = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 5, 1, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgCfgEosChkSum.setStatus('mandatory')
snStackGen = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 1))
snStackSecSwitchInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2))
snStackPriSwitchMode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snStackPriSwitchMode.setStatus('mandatory')
snStackMaxSecSwitch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snStackMaxSecSwitch.setStatus('mandatory')
snStackTotalSecSwitch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snStackTotalSecSwitch.setStatus('mandatory')
snStackSyncAllSecSwitch = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 0), ("invalid", 1), ("device", 2), ("global", 3), ("local", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snStackSyncAllSecSwitch.setStatus('mandatory')
snStackSmSlotIndex = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snStackSmSlotIndex.setStatus('mandatory')
snStackFmpSetProcess = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("pending", 1), ("failure", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snStackFmpSetProcess.setStatus('mandatory')
snStackSecSwitchTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1), )
if mibBuilder.loadTexts: snStackSecSwitchTable.setStatus('mandatory')
snStackSecSwitchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snStackSecSwitchIndex"))
if mibBuilder.loadTexts: snStackSecSwitchEntry.setStatus('mandatory')
snStackSecSwitchIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 26))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snStackSecSwitchIndex.setStatus('mandatory')
snStackSecSwitchSlotId = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 26))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snStackSecSwitchSlotId.setStatus('mandatory')
snStackSecSwitchPortCnts = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 26))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snStackSecSwitchPortCnts.setStatus('mandatory')
snStackSecSwitchEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snStackSecSwitchEnabled.setStatus('mandatory')
snStackSecSwitchAck = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snStackSecSwitchAck.setStatus('mandatory')
snStackSecSwitchMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snStackSecSwitchMacAddr.setStatus('mandatory')
snStackSecSwitchSyncCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("normal", 0), ("invalid", 1), ("device", 2), ("global", 3), ("local", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snStackSecSwitchSyncCmd.setStatus('mandatory')
snStackSecSwitchIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 8), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snStackSecSwitchIpAddr.setStatus('mandatory')
snStackSecSwitchSubnetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snStackSecSwitchSubnetMask.setStatus('mandatory')
snStackSecSwitchCfgCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 5, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("normal", 0), ("invalid", 1), ("auto", 2), ("manual", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snStackSecSwitchCfgCmd.setStatus('mandatory')
snAgSysLogGbl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1))
snAgSysLogGblEnable = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgSysLogGblEnable.setStatus('mandatory')
snAgSysLogGblBufferSize = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100)).clone(50)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgSysLogGblBufferSize.setStatus('mandatory')
snAgSysLogGblClear = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("normal", 0), ("clearAll", 1), ("clearDynamic", 2), ("clearStatic", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgSysLogGblClear.setStatus('mandatory')
snAgSysLogGblCriticalLevel = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 4), Integer32().clone(255)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgSysLogGblCriticalLevel.setStatus('mandatory')
snAgSysLogGblLoggedCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSysLogGblLoggedCount.setStatus('mandatory')
snAgSysLogGblDroppedCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSysLogGblDroppedCount.setStatus('mandatory')
snAgSysLogGblFlushedCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSysLogGblFlushedCount.setStatus('mandatory')
snAgSysLogGblOverrunCount = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSysLogGblOverrunCount.setStatus('mandatory')
snAgSysLogGblServer = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgSysLogGblServer.setStatus('mandatory')
snAgSysLogGblFacility = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24))).clone(namedValues=NamedValues(("kern", 1), ("user", 2), ("mail", 3), ("daemon", 4), ("auth", 5), ("syslog", 6), ("lpr", 7), ("news", 8), ("uucp", 9), ("sys9", 10), ("sys10", 11), ("sys11", 12), ("sys12", 13), ("sys13", 14), ("sys14", 15), ("cron", 16), ("local0", 17), ("local1", 18), ("local2", 19), ("local3", 20), ("local4", 21), ("local5", 22), ("local6", 23), ("local7", 24))).clone('user')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgSysLogGblFacility.setStatus('mandatory')
snAgSysLogBufferTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 2), )
if mibBuilder.loadTexts: snAgSysLogBufferTable.setStatus('mandatory')
snAgSysLogBufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 2, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snAgSysLogBufferIndex"))
if mibBuilder.loadTexts: snAgSysLogBufferEntry.setStatus('mandatory')
snAgSysLogBufferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSysLogBufferIndex.setStatus('mandatory')
snAgSysLogBufferTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 2, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSysLogBufferTimeStamp.setStatus('mandatory')
snAgSysLogBufferCriticalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("alert", 2), ("critical", 3), ("debugging", 4), ("emergency", 5), ("error", 6), ("informational", 7), ("notification", 8), ("warning", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSysLogBufferCriticalLevel.setStatus('mandatory')
snAgSysLogBufferMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 2, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSysLogBufferMessage.setStatus('mandatory')
snAgSysLogBufferCalTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 2, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgSysLogBufferCalTimeStamp.setStatus('mandatory')
snAgStaticSysLogBufferTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 3), )
if mibBuilder.loadTexts: snAgStaticSysLogBufferTable.setStatus('mandatory')
snAgStaticSysLogBufferEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 3, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snAgStaticSysLogBufferIndex"))
if mibBuilder.loadTexts: snAgStaticSysLogBufferEntry.setStatus('mandatory')
snAgStaticSysLogBufferIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgStaticSysLogBufferIndex.setStatus('mandatory')
snAgStaticSysLogBufferTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 3, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgStaticSysLogBufferTimeStamp.setStatus('mandatory')
snAgStaticSysLogBufferCriticalLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("alert", 2), ("critical", 3), ("debugging", 4), ("emergency", 5), ("error", 6), ("informational", 7), ("notification", 8), ("warning", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgStaticSysLogBufferCriticalLevel.setStatus('mandatory')
snAgStaticSysLogBufferMessage = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 3, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgStaticSysLogBufferMessage.setStatus('mandatory')
snAgStaticSysLogBufferCalTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 6, 3, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgStaticSysLogBufferCalTimeStamp.setStatus('mandatory')
snAgentSysParaConfigTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 7, 1), )
if mibBuilder.loadTexts: snAgentSysParaConfigTable.setStatus('mandatory')
snAgentSysParaConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 7, 1, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snAgentSysParaConfigIndex"))
if mibBuilder.loadTexts: snAgentSysParaConfigEntry.setStatus('mandatory')
snAgentSysParaConfigIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 7, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentSysParaConfigIndex.setStatus('mandatory')
snAgentSysParaConfigDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 7, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentSysParaConfigDescription.setStatus('mandatory')
snAgentSysParaConfigMin = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 7, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentSysParaConfigMin.setStatus('mandatory')
snAgentSysParaConfigMax = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 7, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentSysParaConfigMax.setStatus('mandatory')
snAgentSysParaConfigDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 7, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentSysParaConfigDefault.setStatus('mandatory')
snAgentSysParaConfigCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 7, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentSysParaConfigCurrent.setStatus('mandatory')
snAgentConfigModuleTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 8, 1), )
if mibBuilder.loadTexts: snAgentConfigModuleTable.setStatus('mandatory')
snAgentConfigModuleEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 8, 1, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snAgentConfigModuleIndex"))
if mibBuilder.loadTexts: snAgentConfigModuleEntry.setStatus('mandatory')
snAgentConfigModuleIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentConfigModuleIndex.setStatus('mandatory')
snAgentConfigModuleType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 8, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34))).clone(namedValues=NamedValues(("bi8PortGigManagementModule", 0), ("bi4PortGigManagementModule", 1), ("bi16PortCopperManagementModule", 2), ("bi4PortGigModule", 3), ("fi2PortGigManagementModule", 4), ("fi4PortGigManagementModule", 5), ("bi8PortGigCopperManagementModule", 6), ("fi8PortGigManagementModule", 7), ("bi8PortGigModule", 8), ("bi24PortCopperModule", 10), ("fi24PortCopperModule", 11), ("bi16Port100FXModule", 12), ("bi8Port100FXModule", 13), ("bi8PortGigCopperModule", 14), ("bi2PortGigManagementModule", 18), ("bi24Port100FXModule", 19), ("bi0PortManagementModule", 20), ("pos622MbsModule", 21), ("pos155MbsModule", 22), ("bi2PortGigModule", 23), ("bi2PortGigCopperModule", 24), ("fi2PortGigModule", 25), ("fi4PortGigModule", 26), ("fi8PortGigModule", 27), ("fi8PortGigCopperModule", 28), ("fi8PortGigCopperManagementModule", 29), ("pos155Mbs2PModule", 30), ("fi2PortGigCopperManagementModule", 31), ("fi4PortGigCopperManagementModule", 32), ("bi4PortGigCopperManagementModule", 33), ("bi2PortGigCopperManagementModule", 34)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentConfigModuleType.setStatus('mandatory')
snAgentConfigModuleRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 8, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentConfigModuleRowStatus.setStatus('mandatory')
snAgentUserGbl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9, 1))
snAgentUserMaxAccnt = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentUserMaxAccnt.setStatus('mandatory')
snAgentUserAccntTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9, 2), )
if mibBuilder.loadTexts: snAgentUserAccntTable.setStatus('mandatory')
snAgentUserAccntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9, 2, 1), ).setIndexNames((0, "HP-SN-AGENT-MIB", "snAgentUserAccntName"))
if mibBuilder.loadTexts: snAgentUserAccntEntry.setStatus('mandatory')
snAgentUserAccntName = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 48))).setMaxAccess("readonly")
if mibBuilder.loadTexts: snAgentUserAccntName.setStatus('mandatory')
snAgentUserAccntPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentUserAccntPassword.setStatus('mandatory')
snAgentUserAccntEncryptCode = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentUserAccntEncryptCode.setStatus('mandatory')
snAgentUserAccntPrivilege = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9, 2, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentUserAccntPrivilege.setStatus('mandatory')
snAgentUserAccntRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 9, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("delete", 3), ("create", 4), ("modify", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentUserAccntRowStatus.setStatus('mandatory')
snAgentRedunGbl = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 10, 1))
snAgentRedunActiveMgmtMod = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 10, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentRedunActiveMgmtMod.setStatus('mandatory')
snAgentRedunSyncConfig = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 10, 1, 2), Integer32().clone(10)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentRedunSyncConfig.setStatus('mandatory')
snAgentRedunBkupCopyBootCode = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentRedunBkupCopyBootCode.setStatus('mandatory')
snAgentEnableMgmtModRedunStateChangeTrap = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('enabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentEnableMgmtModRedunStateChangeTrap.setStatus('mandatory')
snAgentRedunBkupBootLoad = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 17, 20))).clone(namedValues=NamedValues(("normal", 1), ("operationError", 17), ("downloadBackup", 20)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentRedunBkupBootLoad.setStatus('mandatory')
snAgentRedunSwitchOver = MibScalar((1, 3, 6, 1, 4, 1, 11, 2, 3, 7, 11, 12, 1, 2, 10, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("reset", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: snAgentRedunSwitchOver.setStatus('mandatory')
mibBuilder.exportSymbols("HP-SN-AGENT-MIB", snAgentBrdExpBrdDescription=snAgentBrdExpBrdDescription, snAgentUserAccntEncryptCode=snAgentUserAccntEncryptCode, snStackSmSlotIndex=snStackSmSlotIndex, snAgTrpRcvrTable=snAgTrpRcvrTable, snChasFanOperStatus=snChasFanOperStatus, snAgStaticSysLogBufferTimeStamp=snAgStaticSysLogBufferTimeStamp, snStackSecSwitchSlotId=snStackSecSwitchSlotId, snAgStaticSysLogBufferTable=snAgStaticSysLogBufferTable, snAgentConfigModuleEntry=snAgentConfigModuleEntry, snAgGblBufferShortage=snAgGblBufferShortage, snStackSecSwitchEntry=snStackSecSwitchEntry, snAgentSysParaConfigEntry=snAgentSysParaConfigEntry, snAgentRedundant=snAgentRedundant, snChasGen=snChasGen, snAgGblDataRetrieveMode=snAgGblDataRetrieveMode, snAgentSysParaConfigCurrent=snAgentSysParaConfigCurrent, snAgGblEnableWebMgmt=snAgGblEnableWebMgmt, snAgGblEnableTelnetServer=snAgGblEnableTelnetServer, snAgSoftwareFeature=snAgSoftwareFeature, snAgSysLogGblOverrunCount=snAgSysLogGblOverrunCount, snChasEnablePwrSupplyTrap=snChasEnablePwrSupplyTrap, snAgCfgEosEntry=snAgCfgEosEntry, snAgEraseNVRAM=snAgEraseNVRAM, snAgFlashImgVer=snAgFlashImgVer, snAgentUserAccntPassword=snAgentUserAccntPassword, snAgentSysParaConfigIndex=snAgentSysParaConfigIndex, snAgentUserMaxAccnt=snAgentUserMaxAccnt, snChasMainBrdDescription=snChasMainBrdDescription, snChasExpBrdId=snChasExpBrdId, snAgGblDmaFailure=snAgGblDmaFailure, snAgGblEnableLinkUpTrap=snAgGblEnableLinkUpTrap, snAgSysLogGblEnable=snAgSysLogGblEnable, snAgGblTrapMessage=snAgGblTrapMessage, snAgCfgEosIndex=snAgCfgEosIndex, snStackSecSwitchEnabled=snStackSecSwitchEnabled, snAgentBrdSpeedLeds=snAgentBrdSpeedLeds, snAgentBrdMainBrdDescription=snAgentBrdMainBrdDescription, snStackSecSwitchSubnetMask=snStackSecSwitchSubnetMask, snAgentConfigModuleType=snAgentConfigModuleType, snChasPwrSupplyStatus=snChasPwrSupplyStatus, MacAddress=MacAddress, snChasPwrSupplyEntry=snChasPwrSupplyEntry, snAgReload=snAgReload, snAgentRedunGbl=snAgentRedunGbl, snAgGblEnableModuleInsertedTrap=snAgGblEnableModuleInsertedTrap, snChasEnableFanTrap=snChasEnableFanTrap, snStackSecSwitchMacAddr=snStackSecSwitchMacAddr, snAgentRedunBkupBootLoad=snAgentRedunBkupBootLoad, snAgCfgFname=snAgCfgFname, snAgTrpRcvrCurEntry=snAgTrpRcvrCurEntry, snStackGen=snStackGen, snAgentBrdIndex=snAgentBrdIndex, snAgentBoot=snAgentBoot, snChasSerNum=snChasSerNum, snChasPwrSupplyTable=snChasPwrSupplyTable, snAgentUserAccntEntry=snAgentUserAccntEntry, snAgentUser=snAgentUser, snAgBuildtime=snAgBuildtime, snAgWriteNVRAM=snAgWriteNVRAM, snAgentBrdEntry=snAgentBrdEntry, snAgentBrdStatusLeds=snAgentBrdStatusLeds, snChasExpBrdDescription=snChasExpBrdDescription, snAgGblIfIpMask=snAgGblIfIpMask, snStackSecSwitchTable=snStackSecSwitchTable, snAgGblQueueOverflow=snAgGblQueueOverflow, snStackTotalSecSwitch=snStackTotalSecSwitch, snAgBootSeqEntry=snAgBootSeqEntry, snAgConfigFromNVRAM=snAgConfigFromNVRAM, snAgCfgEos=snAgCfgEos, snChasWarningTemperature=snChasWarningTemperature, snAgGblExcessiveErrorWarning=snAgGblExcessiveErrorWarning, snAgSysLogGblLoggedCount=snAgSysLogGblLoggedCount, snAgCfgEosPacket=snAgCfgEosPacket, snAgentTrp=snAgentTrp, snChasSpeedLeds=snChasSpeedLeds, snAgentConfigModuleTable=snAgentConfigModuleTable, snChasMainPortTotal=snChasMainPortTotal, snAgentGbl=snAgentGbl, snAgGblReadWriteCommunity=snAgGblReadWriteCommunity, snAgentBrd=snAgentBrd, snAgSysLogBufferCalTimeStamp=snAgSysLogBufferCalTimeStamp, snChasFanStatus=snChasFanStatus, snAgGblPasswordChangeMode=snAgGblPasswordChangeMode, snAgSysLogGblClear=snAgSysLogGblClear, snAgentBrdTable=snAgentBrdTable, snAgGblSecurityLevelSet=snAgGblSecurityLevelSet, snAgentRedunActiveMgmtMod=snAgentRedunActiveMgmtMod, snAgStaticSysLogBufferCalTimeStamp=snAgStaticSysLogBufferCalTimeStamp, snAgBootSeqFilename=snAgBootSeqFilename, snAgGblEnableColdStartTrap=snAgGblEnableColdStartTrap, snAgentBrdAlarmLeds=snAgentBrdAlarmLeds, snAgSysLogGblFacility=snAgSysLogGblFacility, snChasShutdownTemperature=snChasShutdownTemperature, snAgStaticSysLogBufferIndex=snAgStaticSysLogBufferIndex, snAgGblTelnetTimeout=snAgGblTelnetTimeout, snChasTrafficLeds=snChasTrafficLeds, snAgGblCpuUtilData=snAgGblCpuUtilData, snAgSysLogGblServer=snAgSysLogGblServer, snAgSysLogBufferTimeStamp=snAgSysLogBufferTimeStamp, snAgBootSeqInstruction=snAgBootSeqInstruction, snAgTrpRcvrIpAddr=snAgTrpRcvrIpAddr, snAgStaticSysLogBufferMessage=snAgStaticSysLogBufferMessage, snAgGblCpuUtilCollect=snAgGblCpuUtilCollect, snAgentConfigModuleIndex=snAgentConfigModuleIndex, snAgGblEnableLinkDownTrap=snAgGblEnableLinkDownTrap, snAgentBrdExpPortTotal=snAgentBrdExpPortTotal, snChasPwrSupplyDescription=snChasPwrSupplyDescription, snAgentBrdRedundantStatus=snAgentBrdRedundantStatus, snAgentUserAccntTable=snAgentUserAccntTable, snAgGblEnableModuleRemovedTrap=snAgGblEnableModuleRemovedTrap, snAgentEnableMgmtModRedunStateChangeTrap=snAgentEnableMgmtModRedunStateChangeTrap, snAgentBrdTxTrafficLeds=snAgentBrdTxTrafficLeds, snAgGblEnableSLB=snAgGblEnableSLB, snChasFan=snChasFan, snAgentUserGbl=snAgentUserGbl, snAgBootSeqTable=snAgBootSeqTable, snAgGblLevelPasswordsMask=snAgGblLevelPasswordsMask, snStackFmpSetProcess=snStackFmpSetProcess, snStackSecSwitchInfo=snStackSecSwitchInfo, snStackSyncAllSecSwitch=snStackSyncAllSecSwitch, snAgGblTelnetPassword=snAgGblTelnetPassword, snAgentUserAccntName=snAgentUserAccntName, snAgentUserAccntPrivilege=snAgentUserAccntPrivilege, snAgentLog=snAgentLog, snAgBootSeqIpAddr=snAgBootSeqIpAddr, snAgentRedunBkupCopyBootCode=snAgentRedunBkupCopyBootCode, snStackPriSwitchMode=snStackPriSwitchMode, snChasFanTable=snChasFanTable, snAgSysLogGblCriticalLevel=snAgSysLogGblCriticalLevel, snAgGblSecurityLevelBinding=snAgGblSecurityLevelBinding, snAgSysLogBufferCriticalLevel=snAgSysLogBufferCriticalLevel, snAgStaticSysLogBufferCriticalLevel=snAgStaticSysLogBufferCriticalLevel, snAgTrpRcvrIndex=snAgTrpRcvrIndex, snAgBuildDate=snAgBuildDate, snAgSysLogBufferEntry=snAgSysLogBufferEntry, snChasPwrSupplyOperStatus=snChasPwrSupplyOperStatus, snAgGblIfIpAddr=snAgGblIfIpAddr, snStackSecSwitchIpAddr=snStackSecSwitchIpAddr, snAgentBrdMediaLeds=snAgentBrdMediaLeds, snStackSecSwitchPortCnts=snStackSecSwitchPortCnts, snChasMainBrdId=snChasMainBrdId, snChasFanIndex=snChasFanIndex, snAgStaticSysLogBufferEntry=snAgStaticSysLogBufferEntry, snAgentBrdMainBrdId=snAgentBrdMainBrdId, snAgBootSeqRowStatus=snAgBootSeqRowStatus, snAgSysLogGblBufferSize=snAgSysLogGblBufferSize, snAgentUserAccntRowStatus=snAgentUserAccntRowStatus, snChasType=snChasType, snAgSysLogGbl=snAgSysLogGbl, snAgSystemLog=snAgSystemLog, snAgCfgEosTable=snAgCfgEosTable, snStackSecSwitchIndex=snStackSecSwitchIndex, snAgSysLogGblDroppedCount=snAgSysLogGblDroppedCount, snAgImgFname=snAgImgFname, snAgSysLogBufferTable=snAgSysLogBufferTable, snAgentSysParaConfigMin=snAgentSysParaConfigMin, snAgentBrdModuleStatus=snAgentBrdModuleStatus, snAgentRedunSwitchOver=snAgentRedunSwitchOver, snAgGblReadOnlyCommunity=snAgGblReadOnlyCommunity, snStackMaxSecSwitch=snStackMaxSecSwitch, snChasPwr=snChasPwr, snAgentBrdRxTrafficLeds=snAgentBrdRxTrafficLeds, snChasActualTemperature=snChasActualTemperature, snAgImgVer=snAgImgVer, snAgentSysParaConfigDescription=snAgentSysParaConfigDescription, snAgDefGwayIp=snAgDefGwayIp, snAgSysLogGblFlushedCount=snAgSysLogGblFlushedCount, snAgentBrdMainPortTotal=snAgentBrdMainPortTotal, snAgSysLogBufferIndex=snAgSysLogBufferIndex, snAgentBrdTrafficLeds=snAgentBrdTrafficLeds, snAgCfgLoad=snAgCfgLoad, snChasFanEntry=snChasFanEntry, snChasStatusLeds=snChasStatusLeds, snAgentSysParaConfigDefault=snAgentSysParaConfigDefault, snAgentBrdExpBrdId=snAgentBrdExpBrdId, snStackSecSwitchSyncCmd=snStackSecSwitchSyncCmd, snAgTrpRcvrComm=snAgTrpRcvrComm, snAgentSysParaConfigTable=snAgentSysParaConfigTable, snStackSecSwitchAck=snStackSecSwitchAck, snAgTrpRcvrStatus=snAgTrpRcvrStatus, snChasEnableTempWarnTrap=snChasEnableTempWarnTrap, snAgentSysParaConfig=snAgentSysParaConfig, snAgTftpServerIp=snAgTftpServerIp, snAgImgLoad=snAgImgLoad, snAgTrpRcvrEntry=snAgTrpRcvrEntry, snAgentSysParaConfigMax=snAgentSysParaConfigMax, snAgBuildVer=snAgBuildVer, DisplayString=DisplayString, snAgGblPassword=snAgGblPassword, snChasPwrSupplyIndex=snChasPwrSupplyIndex, snChasMediaLeds=snChasMediaLeds, snChasFanDescription=snChasFanDescription, snAgSysLogBufferMessage=snAgSysLogBufferMessage, snAgBootSeqIndex=snAgBootSeqIndex, snChasIdNumber=snChasIdNumber, snStackSecSwitchCfgCmd=snStackSecSwitchCfgCmd, snAgCfgEosChkSum=snAgCfgEosChkSum, snAgentConfigModuleRowStatus=snAgentConfigModuleRowStatus, snAgentConfigModule=snAgentConfigModule, snAgentRedunSyncConfig=snAgentRedunSyncConfig, snAgGblCurrentSecurityLevel=snAgGblCurrentSecurityLevel, snChasExpPortTotal=snChasExpPortTotal, snAgGblResourceLowWarning=snAgGblResourceLowWarning)
