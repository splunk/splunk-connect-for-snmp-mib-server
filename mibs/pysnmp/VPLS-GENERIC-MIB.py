#
# PySNMP MIB module VPLS-GENERIC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VPLS-GENERIC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:59:37 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ValueRangeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
pwIndex, = mibBuilder.importSymbols("PW-STD-MIB", "pwIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Unsigned32, Bits, Counter32, Counter64, iso, Gauge32, IpAddress, ObjectIdentity, transmission, TimeTicks, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Unsigned32", "Bits", "Counter32", "Counter64", "iso", "Gauge32", "IpAddress", "ObjectIdentity", "transmission", "TimeTicks", "ModuleIdentity", "Integer32")
StorageType, TextualConvention, RowStatus, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "StorageType", "TextualConvention", "RowStatus", "DisplayString", "TruthValue")
VPNIdOrZero, = mibBuilder.importSymbols("VPN-TC-STD-MIB", "VPNIdOrZero")
vplsGenericMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 274))
vplsGenericMIB.setRevisions(('2014-05-19 12:00',))
if mibBuilder.loadTexts: vplsGenericMIB.setLastUpdated('201405191200Z')
if mibBuilder.loadTexts: vplsGenericMIB.setOrganization('Layer 2 Virtual Private Networks (L2VPN) Working Group')
class VplsBgpRouteDistinguisher(TextualConvention, OctetString):
    reference = 'RFC 4364'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 256)

class VplsBgpRouteTarget(TextualConvention, OctetString):
    reference = 'RFC 4364'
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 256)

class VplsBgpRouteTargetType(TextualConvention, Integer32):
    reference = 'RFC 4364'
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("import", 1), ("export", 2), ("both", 3))

vplsNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 274, 0))
vplsObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 274, 1))
vplsConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 274, 2))
vplsConfigIndexNext = MibScalar((1, 3, 6, 1, 2, 1, 10, 274, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vplsConfigIndexNext.setStatus('current')
vplsConfigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 274, 1, 2), )
if mibBuilder.loadTexts: vplsConfigTable.setStatus('current')
vplsConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1), ).setIndexNames((0, "VPLS-GENERIC-MIB", "vplsConfigIndex"))
if mibBuilder.loadTexts: vplsConfigEntry.setStatus('current')
vplsConfigIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: vplsConfigIndex.setStatus('current')
vplsConfigName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 2), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigName.setStatus('current')
vplsConfigDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 3), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigDescr.setStatus('current')
vplsConfigAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("up", 1), ("down", 2), ("testing", 3))).clone('down')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigAdminStatus.setStatus('current')
vplsConfigMacLearning = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 6), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigMacLearning.setStatus('current')
vplsConfigDiscardUnknownDest = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigDiscardUnknownDest.setStatus('current')
vplsConfigMacAging = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 8), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigMacAging.setStatus('current')
vplsConfigFwdFullHighWatermark = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(95)).setUnits('percentage').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigFwdFullHighWatermark.setStatus('current')
vplsConfigFwdFullLowWatermark = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)).clone(90)).setUnits('percentage').setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigFwdFullLowWatermark.setStatus('current')
vplsConfigRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 12), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigRowStatus.setStatus('current')
vplsConfigMtu = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 9192)).clone(1518)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigMtu.setStatus('current')
vplsConfigVpnId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 14), VPNIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigVpnId.setStatus('current')
vplsConfigStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 15), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigStorageType.setStatus('current')
vplsConfigSignalingType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ldp", 1), ("bgp", 2), ("none", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsConfigSignalingType.setStatus('current')
vplsStatusTable = MibTable((1, 3, 6, 1, 2, 1, 10, 274, 1, 3), )
if mibBuilder.loadTexts: vplsStatusTable.setStatus('current')
vplsStatusEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 274, 1, 3, 1), )
vplsConfigEntry.registerAugmentions(("VPLS-GENERIC-MIB", "vplsStatusEntry"))
vplsStatusEntry.setIndexNames(*vplsConfigEntry.getIndexNames())
if mibBuilder.loadTexts: vplsStatusEntry.setStatus('current')
vplsStatusOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("other", 0), ("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vplsStatusOperStatus.setStatus('current')
vplsStatusPeerCount = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vplsStatusPeerCount.setStatus('current')
vplsPwBindTable = MibTable((1, 3, 6, 1, 2, 1, 10, 274, 1, 4), )
if mibBuilder.loadTexts: vplsPwBindTable.setStatus('current')
vplsPwBindEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 274, 1, 4, 1), ).setIndexNames((0, "VPLS-GENERIC-MIB", "vplsConfigIndex"), (0, "PW-STD-MIB", "pwIndex"))
if mibBuilder.loadTexts: vplsPwBindEntry.setStatus('current')
vplsPwBindConfigType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("manual", 1), ("autodiscovery", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsPwBindConfigType.setStatus('current')
vplsPwBindType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("mesh", 1), ("spoke", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsPwBindType.setStatus('current')
vplsPwBindRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsPwBindRowStatus.setStatus('current')
vplsPwBindStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 4, 1, 4), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsPwBindStorageType.setStatus('current')
vplsBgpADConfigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 274, 1, 5), )
if mibBuilder.loadTexts: vplsBgpADConfigTable.setStatus('current')
vplsBgpADConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 274, 1, 5, 1), ).setIndexNames((0, "VPLS-GENERIC-MIB", "vplsConfigIndex"))
if mibBuilder.loadTexts: vplsBgpADConfigEntry.setStatus('current')
vplsBgpADConfigRouteDistinguisher = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 5, 1, 1), VplsBgpRouteDistinguisher()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpADConfigRouteDistinguisher.setStatus('current')
vplsBgpADConfigPrefix = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 5, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpADConfigPrefix.setStatus('current')
vplsBgpADConfigVplsId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 5, 1, 3), VplsBgpRouteDistinguisher()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpADConfigVplsId.setStatus('current')
vplsBgpADConfigRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpADConfigRowStatus.setStatus('current')
vplsBgpADConfigStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 5, 1, 5), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpADConfigStorageType.setStatus('current')
vplsBgpRteTargetTable = MibTable((1, 3, 6, 1, 2, 1, 10, 274, 1, 6), )
if mibBuilder.loadTexts: vplsBgpRteTargetTable.setStatus('current')
vplsBgpRteTargetEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 274, 1, 6, 1), ).setIndexNames((0, "VPLS-GENERIC-MIB", "vplsConfigIndex"), (0, "VPLS-GENERIC-MIB", "vplsBgpRteTargetIndex"))
if mibBuilder.loadTexts: vplsBgpRteTargetEntry.setStatus('current')
vplsBgpRteTargetIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 6, 1, 1), Unsigned32())
if mibBuilder.loadTexts: vplsBgpRteTargetIndex.setStatus('current')
vplsBgpRteTargetRTType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 6, 1, 2), VplsBgpRouteTargetType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpRteTargetRTType.setStatus('current')
vplsBgpRteTargetRT = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 6, 1, 3), VplsBgpRouteTarget()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpRteTargetRT.setStatus('current')
vplsBgpRteTargetRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpRteTargetRowStatus.setStatus('current')
vplsBgpRteTargetStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 274, 1, 6, 1, 5), StorageType().clone('volatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vplsBgpRteTargetStorageType.setStatus('current')
vplsStatusNotifEnable = MibScalar((1, 3, 6, 1, 2, 1, 10, 274, 1, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vplsStatusNotifEnable.setStatus('current')
vplsNotificationMaxRate = MibScalar((1, 3, 6, 1, 2, 1, 10, 274, 1, 8), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vplsNotificationMaxRate.setStatus('current')
vplsStatusChanged = NotificationType((1, 3, 6, 1, 2, 1, 10, 274, 0, 1)).setObjects(("VPLS-GENERIC-MIB", "vplsConfigVpnId"), ("VPLS-GENERIC-MIB", "vplsConfigAdminStatus"), ("VPLS-GENERIC-MIB", "vplsStatusOperStatus"))
if mibBuilder.loadTexts: vplsStatusChanged.setStatus('current')
vplsFwdFullAlarmRaised = NotificationType((1, 3, 6, 1, 2, 1, 10, 274, 0, 2)).setObjects(("VPLS-GENERIC-MIB", "vplsConfigVpnId"), ("VPLS-GENERIC-MIB", "vplsConfigFwdFullHighWatermark"), ("VPLS-GENERIC-MIB", "vplsConfigFwdFullLowWatermark"))
if mibBuilder.loadTexts: vplsFwdFullAlarmRaised.setStatus('current')
vplsFwdFullAlarmCleared = NotificationType((1, 3, 6, 1, 2, 1, 10, 274, 0, 3)).setObjects(("VPLS-GENERIC-MIB", "vplsConfigVpnId"), ("VPLS-GENERIC-MIB", "vplsConfigFwdFullHighWatermark"), ("VPLS-GENERIC-MIB", "vplsConfigFwdFullLowWatermark"))
if mibBuilder.loadTexts: vplsFwdFullAlarmCleared.setStatus('current')
vplsCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 274, 2, 1))
vplsModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 274, 2, 1, 1)).setObjects(("VPLS-GENERIC-MIB", "vplsGroup"), ("VPLS-GENERIC-MIB", "vplsPwBindGroup"), ("VPLS-GENERIC-MIB", "vplsNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsModuleFullCompliance = vplsModuleFullCompliance.setStatus('current')
vplsModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 274, 2, 1, 2)).setObjects(("VPLS-GENERIC-MIB", "vplsGroup"), ("VPLS-GENERIC-MIB", "vplsPwBindGroup"), ("VPLS-GENERIC-MIB", "vplsNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsModuleReadOnlyCompliance = vplsModuleReadOnlyCompliance.setStatus('current')
vplsGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 274, 2, 2))
vplsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 274, 2, 2, 1)).setObjects(("VPLS-GENERIC-MIB", "vplsConfigName"), ("VPLS-GENERIC-MIB", "vplsBgpADConfigRouteDistinguisher"), ("VPLS-GENERIC-MIB", "vplsBgpRteTargetRTType"), ("VPLS-GENERIC-MIB", "vplsBgpRteTargetRT"), ("VPLS-GENERIC-MIB", "vplsBgpRteTargetRowStatus"), ("VPLS-GENERIC-MIB", "vplsBgpRteTargetStorageType"), ("VPLS-GENERIC-MIB", "vplsBgpADConfigPrefix"), ("VPLS-GENERIC-MIB", "vplsBgpADConfigVplsId"), ("VPLS-GENERIC-MIB", "vplsBgpADConfigRowStatus"), ("VPLS-GENERIC-MIB", "vplsBgpADConfigStorageType"), ("VPLS-GENERIC-MIB", "vplsConfigDescr"), ("VPLS-GENERIC-MIB", "vplsConfigAdminStatus"), ("VPLS-GENERIC-MIB", "vplsConfigMacLearning"), ("VPLS-GENERIC-MIB", "vplsConfigDiscardUnknownDest"), ("VPLS-GENERIC-MIB", "vplsConfigMacAging"), ("VPLS-GENERIC-MIB", "vplsConfigVpnId"), ("VPLS-GENERIC-MIB", "vplsConfigFwdFullHighWatermark"), ("VPLS-GENERIC-MIB", "vplsConfigFwdFullLowWatermark"), ("VPLS-GENERIC-MIB", "vplsConfigRowStatus"), ("VPLS-GENERIC-MIB", "vplsConfigIndexNext"), ("VPLS-GENERIC-MIB", "vplsConfigMtu"), ("VPLS-GENERIC-MIB", "vplsConfigStorageType"), ("VPLS-GENERIC-MIB", "vplsConfigSignalingType"), ("VPLS-GENERIC-MIB", "vplsStatusOperStatus"), ("VPLS-GENERIC-MIB", "vplsStatusPeerCount"), ("VPLS-GENERIC-MIB", "vplsStatusNotifEnable"), ("VPLS-GENERIC-MIB", "vplsNotificationMaxRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsGroup = vplsGroup.setStatus('current')
vplsPwBindGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 274, 2, 2, 2)).setObjects(("VPLS-GENERIC-MIB", "vplsPwBindConfigType"), ("VPLS-GENERIC-MIB", "vplsPwBindType"), ("VPLS-GENERIC-MIB", "vplsPwBindRowStatus"), ("VPLS-GENERIC-MIB", "vplsPwBindStorageType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsPwBindGroup = vplsPwBindGroup.setStatus('current')
vplsNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 274, 2, 2, 3)).setObjects(("VPLS-GENERIC-MIB", "vplsStatusChanged"), ("VPLS-GENERIC-MIB", "vplsFwdFullAlarmRaised"), ("VPLS-GENERIC-MIB", "vplsFwdFullAlarmCleared"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    vplsNotificationGroup = vplsNotificationGroup.setStatus('current')
mibBuilder.exportSymbols("VPLS-GENERIC-MIB", vplsPwBindConfigType=vplsPwBindConfigType, vplsConfigMtu=vplsConfigMtu, vplsPwBindType=vplsPwBindType, vplsBgpRteTargetEntry=vplsBgpRteTargetEntry, vplsNotificationMaxRate=vplsNotificationMaxRate, vplsBgpRteTargetRTType=vplsBgpRteTargetRTType, vplsConfigIndexNext=vplsConfigIndexNext, vplsPwBindStorageType=vplsPwBindStorageType, vplsFwdFullAlarmRaised=vplsFwdFullAlarmRaised, vplsConfigDescr=vplsConfigDescr, vplsConfigVpnId=vplsConfigVpnId, vplsBgpADConfigRowStatus=vplsBgpADConfigRowStatus, vplsConfigName=vplsConfigName, VplsBgpRouteDistinguisher=VplsBgpRouteDistinguisher, vplsConfigRowStatus=vplsConfigRowStatus, vplsBgpADConfigPrefix=vplsBgpADConfigPrefix, vplsConfigMacLearning=vplsConfigMacLearning, PYSNMP_MODULE_ID=vplsGenericMIB, vplsStatusOperStatus=vplsStatusOperStatus, vplsPwBindRowStatus=vplsPwBindRowStatus, vplsStatusNotifEnable=vplsStatusNotifEnable, vplsModuleReadOnlyCompliance=vplsModuleReadOnlyCompliance, VplsBgpRouteTarget=VplsBgpRouteTarget, vplsBgpRteTargetStorageType=vplsBgpRteTargetStorageType, vplsConfigIndex=vplsConfigIndex, vplsStatusEntry=vplsStatusEntry, vplsBgpRteTargetRowStatus=vplsBgpRteTargetRowStatus, vplsConfigFwdFullLowWatermark=vplsConfigFwdFullLowWatermark, vplsConfigMacAging=vplsConfigMacAging, vplsConfigFwdFullHighWatermark=vplsConfigFwdFullHighWatermark, vplsObjects=vplsObjects, vplsStatusChanged=vplsStatusChanged, vplsConfigDiscardUnknownDest=vplsConfigDiscardUnknownDest, vplsPwBindTable=vplsPwBindTable, vplsConformance=vplsConformance, vplsBgpADConfigRouteDistinguisher=vplsBgpADConfigRouteDistinguisher, vplsNotificationGroup=vplsNotificationGroup, vplsBgpADConfigEntry=vplsBgpADConfigEntry, vplsBgpADConfigStorageType=vplsBgpADConfigStorageType, vplsPwBindEntry=vplsPwBindEntry, vplsFwdFullAlarmCleared=vplsFwdFullAlarmCleared, vplsBgpRteTargetRT=vplsBgpRteTargetRT, vplsGroups=vplsGroups, vplsBgpRteTargetTable=vplsBgpRteTargetTable, vplsConfigTable=vplsConfigTable, vplsModuleFullCompliance=vplsModuleFullCompliance, vplsPwBindGroup=vplsPwBindGroup, vplsGenericMIB=vplsGenericMIB, vplsBgpADConfigTable=vplsBgpADConfigTable, vplsGroup=vplsGroup, vplsStatusTable=vplsStatusTable, vplsConfigEntry=vplsConfigEntry, VplsBgpRouteTargetType=VplsBgpRouteTargetType, vplsConfigSignalingType=vplsConfigSignalingType, vplsStatusPeerCount=vplsStatusPeerCount, vplsConfigStorageType=vplsConfigStorageType, vplsConfigAdminStatus=vplsConfigAdminStatus, vplsBgpRteTargetIndex=vplsBgpRteTargetIndex, vplsCompliances=vplsCompliances, vplsNotifications=vplsNotifications, vplsBgpADConfigVplsId=vplsBgpADConfigVplsId)
