#
# PySNMP MIB module WWP-L2-CF-TUNNEL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-L2-CF-TUNNEL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:30:53 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Bits, Counter64, ObjectIdentity, IpAddress, Unsigned32, TimeTicks, Integer32, MibIdentifier, Gauge32, iso, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Bits", "Counter64", "ObjectIdentity", "IpAddress", "Unsigned32", "TimeTicks", "Integer32", "MibIdentifier", "Gauge32", "iso", "NotificationType", "ModuleIdentity")
TruthValue, TextualConvention, RowStatus, DisplayString, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "TextualConvention", "RowStatus", "DisplayString", "MacAddress")
wwpModules, = mibBuilder.importSymbols("WWP-SMI", "wwpModules")
wwpL2CFTunnelMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 53))
wwpL2CFTunnelMIB.setRevisions(('2005-03-08 16:00',))
if mibBuilder.loadTexts: wwpL2CFTunnelMIB.setLastUpdated('200502251700Z')
if mibBuilder.loadTexts: wwpL2CFTunnelMIB.setOrganization('World Wide Packets, Inc')
class VlanId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4094)

wwpL2CFTunnelMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1))
wwpL2CFTunnel = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1))
wwpL2CFTunnelMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 53, 2))
wwpL2CFTunnelMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 53, 2, 0))
wwpL2CFTunnelMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 53, 3))
wwpL2CFTunnelMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 53, 3, 1))
wwpL2CFTunnelMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 53, 3, 2))
wwpL2CFTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 1), )
if mibBuilder.loadTexts: wwpL2CFTunnelTable.setStatus('current')
wwpL2CFTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 1, 1), ).setIndexNames((0, "WWP-L2-CF-TUNNEL-MIB", "wwpL2CFTunnelVlanId"))
if mibBuilder.loadTexts: wwpL2CFTunnelEntry.setStatus('current')
wwpL2CFTunnelVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 1, 1, 1), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTunnelVlanId.setStatus('current')
wwpL2CFTunnelOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("operActive", 0), ("operVlanNotExist", 1), ("operInvalidVlanPortTag", 2), ("operInvalidVlanNumPorts", 3), ("operInvalidCfg", 4), ("operDisabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTunnelOperStatus.setStatus('current')
wwpL2CFTunnelAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpL2CFTunnelAdminStatus.setStatus('current')
wwpL2CFTunnelPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("p0", 0), ("p1", 1), ("p2", 2), ("p3", 3), ("p4", 4), ("p5", 5), ("p6", 6), ("p7", 7))).clone('p6')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpL2CFTunnelPriority.setStatus('current')
wwpL2CFTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 1, 1, 5), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpL2CFTunnelRowStatus.setStatus('current')
wwpL2CFTProtocolTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 2), )
if mibBuilder.loadTexts: wwpL2CFTProtocolTable.setStatus('current')
wwpL2CFTProtocolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 2, 1), ).setIndexNames((0, "WWP-L2-CF-TUNNEL-MIB", "wwpL2CFTVlanId"), (0, "WWP-L2-CF-TUNNEL-MIB", "wwpL2CFTProtocolNum"))
if mibBuilder.loadTexts: wwpL2CFTProtocolEntry.setStatus('current')
wwpL2CFTVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 2, 1, 1), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTVlanId.setStatus('current')
wwpL2CFTProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))).clone(namedValues=NamedValues(("l28021x", 1), ("bridge-grp-addr", 2), ("cdp", 3), ("dtp", 4), ("gvrp", 5), ("lacp", 6), ("marker-protocol", 7), ("oam", 8), ("pagp", 9), ("pvst", 10), ("stp-uplink-fast", 11), ("udld", 12), ("vlanbridge", 13), ("vtp", 14), ("lldp", 15)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTProtocolNum.setStatus('current')
wwpL2CFTDispositionType = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("discard", 0), ("peer", 1), ("tunnel", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpL2CFTDispositionType.setStatus('current')
wwpL2CFTStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3), )
if mibBuilder.loadTexts: wwpL2CFTStatsTable.setStatus('current')
wwpL2CFTStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1), ).setIndexNames((0, "WWP-L2-CF-TUNNEL-MIB", "wwpL2CFTStatsVlanId"), (0, "WWP-L2-CF-TUNNEL-MIB", "wwpL2CFTStatsProtocolNum"))
if mibBuilder.loadTexts: wwpL2CFTStatsEntry.setStatus('current')
wwpL2CFTStatsVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1, 1), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTStatsVlanId.setStatus('current')
wwpL2CFTStatsProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("l28021x", 1), ("bridge-grp-addr", 2), ("cdp", 3), ("dtp", 4), ("gvrp", 5), ("lacp", 6), ("marker-protocol", 7), ("oam", 8), ("pagp", 9), ("pvst", 10), ("stp-uplink-fast", 11), ("udld", 12), ("vlanbridge", 13), ("vtp", 14)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTStatsProtocolNum.setStatus('current')
wwpL2CFTStatsPacketsRx = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTStatsPacketsRx.setStatus('current')
wwpL2CFTStatsTunneledFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTStatsTunneledFrames.setStatus('current')
wwpL2CFTStatsDecodedFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTStatsDecodedFrames.setStatus('current')
wwpL2CFTStatsDecodedFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTStatsDecodedFailed.setStatus('current')
wwpL2CFTStatsPeeredFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTStatsPeeredFrames.setStatus('current')
wwpL2CFTStatsDiscardFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTStatsDiscardFrames.setStatus('current')
wwpL2CFTStatsTunFrameSubPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTStatsTunFrameSubPort.setStatus('current')
wwpL2CFTGlobalStats = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 4))
wwpL2CFTGlobalStatsPacketsRx = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 4, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTGlobalStatsPacketsRx.setStatus('current')
wwpL2CFTGlobalStatsTunneledFrames = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 4, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTGlobalStatsTunneledFrames.setStatus('current')
wwpL2CFTGlobalStatsDecodedFrames = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTGlobalStatsDecodedFrames.setStatus('current')
wwpL2CFTGlobalStatsDecodedFailed = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTGlobalStatsDecodedFailed.setStatus('current')
wwpL2CFTGlobalStatsPeeredFrames = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTGlobalStatsPeeredFrames.setStatus('current')
wwpL2CFTGlobalStatsDiscardFrames = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTGlobalStatsDiscardFrames.setStatus('current')
wwpL2CFTGlobalStatsTunFrameSubPort = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpL2CFTGlobalStatsTunFrameSubPort.setStatus('current')
wwpL2CFTResetStatCounters = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 53, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("none", 0), ("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpL2CFTResetStatCounters.setStatus('current')
mibBuilder.exportSymbols("WWP-L2-CF-TUNNEL-MIB", wwpL2CFTGlobalStatsDecodedFailed=wwpL2CFTGlobalStatsDecodedFailed, wwpL2CFTResetStatCounters=wwpL2CFTResetStatCounters, wwpL2CFTStatsPacketsRx=wwpL2CFTStatsPacketsRx, wwpL2CFTGlobalStatsDecodedFrames=wwpL2CFTGlobalStatsDecodedFrames, wwpL2CFTunnelMIBNotifications=wwpL2CFTunnelMIBNotifications, wwpL2CFTunnel=wwpL2CFTunnel, wwpL2CFTunnelVlanId=wwpL2CFTunnelVlanId, wwpL2CFTunnelMIBObjects=wwpL2CFTunnelMIBObjects, wwpL2CFTStatsTable=wwpL2CFTStatsTable, wwpL2CFTunnelMIBGroups=wwpL2CFTunnelMIBGroups, wwpL2CFTunnelMIBConformance=wwpL2CFTunnelMIBConformance, wwpL2CFTunnelMIBCompliances=wwpL2CFTunnelMIBCompliances, wwpL2CFTProtocolTable=wwpL2CFTProtocolTable, wwpL2CFTDispositionType=wwpL2CFTDispositionType, wwpL2CFTGlobalStatsPacketsRx=wwpL2CFTGlobalStatsPacketsRx, VlanId=VlanId, wwpL2CFTStatsTunneledFrames=wwpL2CFTStatsTunneledFrames, wwpL2CFTunnelRowStatus=wwpL2CFTunnelRowStatus, wwpL2CFTGlobalStats=wwpL2CFTGlobalStats, wwpL2CFTunnelOperStatus=wwpL2CFTunnelOperStatus, wwpL2CFTunnelAdminStatus=wwpL2CFTunnelAdminStatus, wwpL2CFTStatsEntry=wwpL2CFTStatsEntry, PYSNMP_MODULE_ID=wwpL2CFTunnelMIB, wwpL2CFTunnelEntry=wwpL2CFTunnelEntry, wwpL2CFTProtocolNum=wwpL2CFTProtocolNum, wwpL2CFTunnelMIB=wwpL2CFTunnelMIB, wwpL2CFTStatsTunFrameSubPort=wwpL2CFTStatsTunFrameSubPort, wwpL2CFTGlobalStatsTunneledFrames=wwpL2CFTGlobalStatsTunneledFrames, wwpL2CFTGlobalStatsTunFrameSubPort=wwpL2CFTGlobalStatsTunFrameSubPort, wwpL2CFTStatsDecodedFrames=wwpL2CFTStatsDecodedFrames, wwpL2CFTStatsPeeredFrames=wwpL2CFTStatsPeeredFrames, wwpL2CFTStatsVlanId=wwpL2CFTStatsVlanId, wwpL2CFTGlobalStatsDiscardFrames=wwpL2CFTGlobalStatsDiscardFrames, wwpL2CFTVlanId=wwpL2CFTVlanId, wwpL2CFTStatsDiscardFrames=wwpL2CFTStatsDiscardFrames, wwpL2CFTStatsDecodedFailed=wwpL2CFTStatsDecodedFailed, wwpL2CFTStatsProtocolNum=wwpL2CFTStatsProtocolNum, wwpL2CFTunnelTable=wwpL2CFTunnelTable, wwpL2CFTunnelPriority=wwpL2CFTunnelPriority, wwpL2CFTProtocolEntry=wwpL2CFTProtocolEntry, wwpL2CFTunnelMIBNotificationPrefix=wwpL2CFTunnelMIBNotificationPrefix, wwpL2CFTGlobalStatsPeeredFrames=wwpL2CFTGlobalStatsPeeredFrames)
