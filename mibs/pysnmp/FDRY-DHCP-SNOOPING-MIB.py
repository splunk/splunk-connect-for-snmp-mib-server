#
# PySNMP MIB module FDRY-DHCP-SNOOPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FDRY-DHCP-SNOOPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:59:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint")
ArpState, ArpType = mibBuilder.importSymbols("FDRY-DAI-MIB", "ArpState", "ArpType")
DisplayString, = mibBuilder.importSymbols("FOUNDRY-SN-AGENT-MIB", "DisplayString")
snSwitch, = mibBuilder.importSymbols("FOUNDRY-SN-SWITCH-GROUP-MIB", "snSwitch")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
VlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "VlanIndex")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, IpAddress, TimeTicks, Gauge32, Integer32, ObjectIdentity, Unsigned32, Counter64, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, iso, MibIdentifier, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "TimeTicks", "Gauge32", "Integer32", "ObjectIdentity", "Unsigned32", "Counter64", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "iso", "MibIdentifier", "ModuleIdentity")
MacAddress, TextualConvention, TruthValue, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "TextualConvention", "TruthValue", "DisplayString")
fdryDhcpSnoopMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36))
fdryDhcpSnoopMIB.setRevisions(('2010-07-26 00:00', '2010-03-22 00:00',))
if mibBuilder.loadTexts: fdryDhcpSnoopMIB.setLastUpdated('201007260000Z')
if mibBuilder.loadTexts: fdryDhcpSnoopMIB.setOrganization('Brocade Communications Systems, Inc.')
class ClearAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("valid", 0), ("clear", 1))

fdryDhcpSnoopGlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 1))
fdryDhcpSnoopVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 2))
fdryDhcpSnoopInterface = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 3))
fdryDhcpSnoopBind = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4))
fdryDhcpSnoopGlobalClearOper = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 1, 1), ClearAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fdryDhcpSnoopGlobalClearOper.setStatus('current')
fdryDhcpSnoopVlanConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 2, 1), )
if mibBuilder.loadTexts: fdryDhcpSnoopVlanConfigTable.setStatus('current')
fdryDhcpSnoopVlanConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 2, 1, 1), ).setIndexNames((0, "FDRY-DHCP-SNOOPING-MIB", "fdryDhcpSnoopVlanVLanId"))
if mibBuilder.loadTexts: fdryDhcpSnoopVlanConfigEntry.setStatus('current')
fdryDhcpSnoopVlanVLanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 2, 1, 1, 1), VlanIndex())
if mibBuilder.loadTexts: fdryDhcpSnoopVlanVLanId.setStatus('current')
fdryDhcpSnoopVlanDhcpSnoopEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 2, 1, 1, 2), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fdryDhcpSnoopVlanDhcpSnoopEnable.setStatus('current')
fdryDhcpSnoopIfConfigTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 3, 1), )
if mibBuilder.loadTexts: fdryDhcpSnoopIfConfigTable.setStatus('current')
fdryDhcpSnoopIfConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 3, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: fdryDhcpSnoopIfConfigEntry.setStatus('current')
fdryDhcpSnoopIfTrustValue = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 3, 1, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fdryDhcpSnoopIfTrustValue.setStatus('current')
fdryDhcpSnoopBindTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4, 1), )
if mibBuilder.loadTexts: fdryDhcpSnoopBindTable.setStatus('current')
fdryDhcpSnoopBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4, 1, 1), ).setIndexNames((0, "FDRY-DHCP-SNOOPING-MIB", "fdryDhcpSnoopBindIpAddr"))
if mibBuilder.loadTexts: fdryDhcpSnoopBindEntry.setStatus('current')
fdryDhcpSnoopBindIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4, 1, 1, 1), IpAddress())
if mibBuilder.loadTexts: fdryDhcpSnoopBindIpAddr.setStatus('current')
fdryDhcpSnoopBindMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4, 1, 1, 2), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryDhcpSnoopBindMacAddr.setStatus('current')
fdryDhcpSnoopBindType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4, 1, 1, 3), ArpType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryDhcpSnoopBindType.setStatus('current')
fdryDhcpSnoopBindState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4, 1, 1, 4), ArpState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryDhcpSnoopBindState.setStatus('current')
fdryDhcpSnoopBindPort = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryDhcpSnoopBindPort.setStatus('current')
fdryDhcpSnoopBindVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4, 1, 1, 6), VlanIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fdryDhcpSnoopBindVlanId.setStatus('current')
fdryDhcpSnoopBindClearOper = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 1, 3, 36, 4, 1, 1, 7), ClearAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fdryDhcpSnoopBindClearOper.setStatus('current')
mibBuilder.exportSymbols("FDRY-DHCP-SNOOPING-MIB", PYSNMP_MODULE_ID=fdryDhcpSnoopMIB, fdryDhcpSnoopVlan=fdryDhcpSnoopVlan, fdryDhcpSnoopVlanVLanId=fdryDhcpSnoopVlanVLanId, fdryDhcpSnoopIfConfigTable=fdryDhcpSnoopIfConfigTable, fdryDhcpSnoopBindType=fdryDhcpSnoopBindType, fdryDhcpSnoopVlanConfigEntry=fdryDhcpSnoopVlanConfigEntry, fdryDhcpSnoopBindMacAddr=fdryDhcpSnoopBindMacAddr, fdryDhcpSnoopBindClearOper=fdryDhcpSnoopBindClearOper, fdryDhcpSnoopBindTable=fdryDhcpSnoopBindTable, fdryDhcpSnoopVlanConfigTable=fdryDhcpSnoopVlanConfigTable, fdryDhcpSnoopGlobalClearOper=fdryDhcpSnoopGlobalClearOper, fdryDhcpSnoopBind=fdryDhcpSnoopBind, fdryDhcpSnoopVlanDhcpSnoopEnable=fdryDhcpSnoopVlanDhcpSnoopEnable, fdryDhcpSnoopIfTrustValue=fdryDhcpSnoopIfTrustValue, fdryDhcpSnoopIfConfigEntry=fdryDhcpSnoopIfConfigEntry, fdryDhcpSnoopBindVlanId=fdryDhcpSnoopBindVlanId, fdryDhcpSnoopGlobalObjects=fdryDhcpSnoopGlobalObjects, fdryDhcpSnoopInterface=fdryDhcpSnoopInterface, fdryDhcpSnoopBindState=fdryDhcpSnoopBindState, fdryDhcpSnoopBindEntry=fdryDhcpSnoopBindEntry, fdryDhcpSnoopBindPort=fdryDhcpSnoopBindPort, ClearAction=ClearAction, fdryDhcpSnoopBindIpAddr=fdryDhcpSnoopBindIpAddr, fdryDhcpSnoopMIB=fdryDhcpSnoopMIB)
