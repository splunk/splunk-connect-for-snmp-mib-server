#
# PySNMP MIB module SUB10SYSTEMS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/SUB10SYSTEMS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:04:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
TimeTicks, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, iso, ObjectIdentity, Gauge32, Unsigned32, MibIdentifier, Integer32, Bits, ModuleIdentity, Counter32, IpAddress, enterprises = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "iso", "ObjectIdentity", "Gauge32", "Unsigned32", "MibIdentifier", "Integer32", "Bits", "ModuleIdentity", "Counter32", "IpAddress", "enterprises")
TextualConvention, RowStatus, DateAndTime, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DateAndTime", "DisplayString")
sub10Systems = ModuleIdentity((1, 3, 6, 1, 4, 1, 39003))
sub10Systems.setRevisions(('2015-06-03 00:00', '2015-04-07 00:00', '2015-03-30 00:00', '2015-03-26 00:00', '2015-03-06 00:00', '2015-03-05 00:00', '2015-02-27 00:00', '2014-12-18 00:00', '2014-11-19 00:00', '2014-04-07 00:00',))
if mibBuilder.loadTexts: sub10Systems.setLastUpdated('201506030000Z')
if mibBuilder.loadTexts: sub10Systems.setOrganization('Sub10 Systems Ltd')
class Sub10EthInterfaceIndex(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 2)

class Sub10EntryStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("entryInUse", 1), ("entryNotInUse", 2))

class Sub10State(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("stateDisabled", 0), ("stateEnabled", 1))

class Sub10UnitType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))
    namedValues = NamedValues(("baseband100A", 0), ("baseband100B", 1), ("baseband1000A", 2), ("baseband1000B", 3), ("v100ROWA", 4), ("v100ROWB", 5), ("v100FCCA", 6), ("v100FCCB", 7), ("v1000ROWA", 8), ("v1000ROWB", 9), ("v1000FCCA", 10), ("v1000FCCB2", 11), ("e1000ROWA", 12), ("e1000ROWB", 13), ("e1000FCCA", 14), ("e1000FCCB", 15))

class Sub10TerminalType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("terminalA", 0), ("terminalB", 1))

class Sub10Availability(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("availabilityHigh", 0), ("availabilityMedium", 1), ("availabilityLow", 2))

class Sub10AlignmentMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("modeNormal", 0), ("modeAlignment", 1))

class Sub10AlignmentModeLock(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("modeUnlocked", 0), ("modeLocked", 1))

class Sub10OperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("opStatusUp", 1), ("opStatusDown", 2), ("opStatusTesting", 3), ("opStatusUnknown", 4), ("opStatusDormant", 5), ("opStatusNotPresent", 6), ("opStatusLowerLayerDown", 7))

class Sub10Duplex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("halfDuplex", 1), ("fullDuplex", 2), ("unknownDuplex", 3))

class Sub10MDIType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("mdi", 1), ("mdix", 2), ("mdiUnknown", 3))

class Sub10RadioLinkState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("radioLinkStateDown", 0), ("radioLinkStateUp", 1), ("radioLinkStateUnknown", 2))

class Sub10AlarmName(TextualConvention, OctetString):
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(1, 32)

class Sub10MacAddress(TextualConvention, OctetString):
    status = 'current'
    displayHint = '17a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(11, 17)

class Sub10AlarmState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("cleared", 1), ("raised", 2), ("stateUnknown", 3))

class Sub10DateTime(TextualConvention, OctetString):
    status = 'current'
    displayHint = '19a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(19, 19)
    fixedLength = 19

class Sub10AlarmIndex(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 128)

class Sub10MeasuredObject(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 140, 141, 142, 143, 144, 145, 146, 147, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335))
    namedValues = NamedValues(("sub10UnitLclMWUTemperature", 1), ("sub10RadioLclRxPower", 2), ("sub10RadioLclVectErr", 3), ("sub10RadioLclLnkLoss", 4), ("sub10RadioLclTxPower", 5), ("sub10RadioMgmtTxRxFreq", 6), ("sub10RadioMgmtAPCMode", 7), ("sub10RadioMgmtModulationMode", 8), ("sub10RadioMgmtAlignmentMode", 9), ("sub10RadioLclLinkStatus", 10), ("sub10RadioLclRxModulationMode", 11), ("sub10RadioLclTxModulationMode", 12), ("sub10RadioStatsCurrTxPowerMin", 20), ("sub10RadioStatsCurrTxPowerMax", 21), ("sub10RadioStatsCurrTxPowerAvg", 22), ("sub10RadioStatsCurrRxPowerMin", 23), ("sub10RadioStatsCurrRxPowerMax", 24), ("sub10RadioStatsCurrRxPowerAvg", 25), ("sub10RadioStatsCurrVectErrMin", 26), ("sub10RadioStatsCurrVectErrMax", 27), ("sub10RadioStatsCurrVectErrAvg", 28), ("sub10RadioStatsCurrLnkLossMin", 29), ("sub10RadioStatsCurrLnkLossMax", 30), ("sub10RadioStatsCurrLnkLossAvg", 31), ("sub10RadioStatsCurrMWUTempMin", 32), ("sub10RadioStatsCurrMWUTempMax", 33), ("sub10RadioStatsCurrMWUTempAvg", 34), ("sub10RadioStatsCurrAFERMin", 35), ("sub10RadioStatsCurrAFERMax", 36), ("sub10RadioStatsCurrAFERAvg", 37), ("sub10RadioStats1mHistTxPowerMin", 50), ("sub10RadioStats1mHistTxPowerMax", 51), ("sub10RadioStats1mHistTxPowerAvg", 52), ("sub10RadioStats1mHistRxPowerMin", 53), ("sub10RadioStats1mHistRxPowerMax", 54), ("sub10RadioStats1mHistRxPowerAvg", 55), ("sub10RadioStats1mHistVectErrMin", 56), ("sub10RadioStats1mHistVectErrMax", 57), ("sub10RadioStats1mHistVectErrAvg", 58), ("sub10RadioStats1mHistLnkLossMin", 59), ("sub10RadioStats1mHistLnkLossMax", 60), ("sub10RadioStats1mHistLnkLossAvg", 61), ("sub10RadioStats1mHistMWUTempMin", 62), ("sub10RadioStats1mHistMWUTempMax", 63), ("sub10RadioStats1mHistMWUTempAvg", 64), ("sub10RadioStats1mHistAFERMin", 65), ("sub10RadioStats1mHistAFERMax", 66), ("sub10RadioStats1mHistAFERAvg", 67), ("sub10RadioStats1mHistRxPkts", 68), ("sub10RadioStats1mHistTxPkts", 69), ("sub10RadioStats1mHistRxMgmtPkts", 70), ("sub10RadioStats1mHistTxMgmtPkts", 71), ("sub10RadioStats1mHistRxBadFrms", 72), ("sub10RadioStats1mHistQPSKTo8PSK", 73), ("sub10RadioStats1mHist8PSKToQPSK", 74), ("sub10RadioStats1mHistRxQPSK", 75), ("sub10RadioStats1mHistRx8PSK", 76), ("sub10RadioStats1mHistTxQPSK", 77), ("sub10RadioStats1mHistTx8PSK", 78), ("sub10RadioStats15mHistTxPowerMin", 90), ("sub10RadioStats15mHistTxPowerMax", 91), ("sub10RadioStats15mHistTxPowerAvg", 92), ("sub10RadioStats15mHistRxPowerMin", 93), ("sub10RadioStats15mHistRxPowerMax", 94), ("sub10RadioStats15mHistRxPowerAvg", 95), ("sub10RadioStats15mHistVectErrMin", 96), ("sub10RadioStats15mHistVectErrMax", 97), ("sub10RadioStats15mHistVectErrAvg", 98), ("sub10RadioStats15mHistLnkLossMin", 99), ("sub10RadioStats15mHistLnkLossMax", 100), ("sub10RadioStats15mHistLnkLossAvg", 101), ("sub10RadioStats15mHistMWUTempMin", 102), ("sub10RadioStats15mHistMWUTempMax", 103), ("sub10RadioStats15mHistMWUTempAvg", 104), ("sub10RadioStats15mHistAFERMin", 105), ("sub10RadioStats15mHistAFERMax", 106), ("sub10RadioStats15mHistAFERAvg", 107), ("sub10RadioStats15mHistRxPkts", 108), ("sub10RadioStats15mHistTxPkts", 109), ("sub10RadioStats15mHistRxMgmtPkts", 110), ("sub10RadioStats15mHistTxMgmtPkts", 111), ("sub10RadioStats15mHistRxBadFrms", 112), ("sub10RadioStats15mHistQPSKTo8PSK", 113), ("sub10RadioStats15mHist8PSKToQPSK", 114), ("sub10RadioStats15mHistRxQPSK", 115), ("sub10RadioStats15mHistRx8PSK", 116), ("sub10RadioStats15mHistTxQPSK", 117), ("sub10RadioStats15mHistTx8PSK", 118), ("sub10EthStatsCurrRxMbps", 140), ("sub10EthStatsCurrTxMbps", 141), ("sub10EthStatsCurrRxMbpsMin", 142), ("sub10EthStatsCurrRxMbpsMax", 143), ("sub10EthStatsCurrRxMbpsAvg", 144), ("sub10EthStatsCurrTxMbpsMin", 145), ("sub10EthStatsCurrTxMbpsMax", 146), ("sub10EthStatsCurrTxMbpsAvg", 147), ("sub10EthStats1mHistRxOctets", 160), ("sub10EthStats1mHistRxGoodFrms", 161), ("sub10EthStats1mHistRxBcastFrms", 162), ("sub10EthStats1mHistRxMcastFrms", 163), ("sub10EthStats1mHistRxPauseFrms", 164), ("sub10EthStats1mHistRxCRCErrs", 165), ("sub10EthStats1mHistRxAlignErrs", 166), ("sub10EthStats1mHistRxOversized", 167), ("sub10EthStats1mHistRxJabberFrms", 168), ("sub10EthStats1mHistRxUndersized", 169), ("sub10EthStats1mHistRxFragments", 170), ("sub10EthStats1mHistRxSOFOvrns", 171), ("sub10EthStats1mHistTxOctets", 172), ("sub10EthStats1mHistTxGoodFrms", 173), ("sub10EthStats1mHistTxBcastFrms", 174), ("sub10EthStats1mHistTxMcastFrms", 175), ("sub10EthStats1mHistTxPauseFrms", 176), ("sub10EthStats1mHistTxDeferred", 177), ("sub10EthStats1mHistTxCollsn", 178), ("sub10EthStats1mHistTxSnglCollsn", 179), ("sub10EthStats1mHistTxMlplCollsn", 180), ("sub10EthStats1mHistTxExsvCollsn", 181), ("sub10EthStats1mHistTxLtCollsn", 182), ("sub10EthStats1mHistTxCSenseErrs", 183), ("sub10EthStats1mHistPkts64Octets", 184), ("sub10EthStats1mHistPkts65T127", 185), ("sub10EthStats1mHistPkts128T255", 186), ("sub10EthStats1mHistPkts256T511", 187), ("sub10EthStats1mHistPkts512T1023", 188), ("sub10EthStats1mHistPkts1024TMax", 189), ("sub10EthStats1mHistRxMbpsMin", 190), ("sub10EthStats1mHistRxMbpsMax", 191), ("sub10EthStats1mHistRxMbpsAvg", 192), ("sub10EthStats1mHistTxMbpsMin", 193), ("sub10EthStats1mHistTxMbpsMax", 194), ("sub10EthStats1mHistTxMbpsAvg", 195), ("sub10EthStats15mHistRxOctets", 210), ("sub10EthStats15mHistRxGoodFrms", 211), ("sub10EthStats15mHistRxBcastFrms", 212), ("sub10EthStats15mHistRxMcastFrms", 213), ("sub10EthStats15mHistRxPauseFrms", 214), ("sub10EthStats15mHistRxCRCErrs", 215), ("sub10EthStats15mHistRxAlignErrs", 216), ("sub10EthStats15mHistRxOversized", 217), ("sub10EthStats15mHistRxJabberFrms", 218), ("sub10EthStats15mHistRxUndersized", 219), ("sub10EthStats15mHistRxFragments", 220), ("sub10EthStats15mHistRxSOFOvrns", 221), ("sub10EthStats15mHistTxOctets", 222), ("sub10EthStats15mHistTxGoodFrms", 223), ("sub10EthStats15mHistTxBcastFrms", 224), ("sub10EthStats15mHistTxMcastFrms", 225), ("sub10EthStats15mHistTxPauseFrms", 226), ("sub10EthStats15mHistTxDeferred", 227), ("sub10EthStats15mHistTxCollsn", 228), ("sub10EthStats15mHistTxSnglCollsn", 229), ("sub10EthStats15mHistTxMlplCollsn", 230), ("sub10EthStats15mHistTxExsvCollsn", 231), ("sub10EthStats15mHistTxLtCollsn", 232), ("sub10EthStats15mHistTxCSenseErrs", 233), ("sub10EthStats15mHistPkts64Octets", 234), ("sub10EthStats15mHistPkts65T127", 235), ("sub10EthStats15mHistPkts128T255", 236), ("sub10EthStats15mHistPkts256T511", 237), ("sub10EthStats15mHistPkts512T1023", 238), ("sub10EthStats15mHistPkts1024TMax", 239), ("sub10EthStats15mHistRxMbpsMin", 240), ("sub10EthStats15mHistRxMbpsMax", 241), ("sub10EthStats15mHistRxMbpsAvg", 242), ("sub10EthStats15mHistTxMbpsMin", 243), ("sub10EthStats15mHistTxMbpsMax", 244), ("sub10EthStats15mHistTxMbpsAvg", 245), ("sub10RadioStats1dHistTxPowerMin", 260), ("sub10RadioStats1dHistTxPowerMax", 261), ("sub10RadioStats1dHistTxPowerAvg", 262), ("sub10RadioStats1dHistRxPowerMin", 263), ("sub10RadioStats1dHistRxPowerMax", 264), ("sub10RadioStats1dHistRxPowerAvg", 265), ("sub10RadioStats1dHistVectErrMin", 266), ("sub10RadioStats1dHistVectErrMax", 267), ("sub10RadioStats1dHistVectErrAvg", 268), ("sub10RadioStats1dHistLnkLossMin", 269), ("sub10RadioStats1dHistLnkLossMax", 270), ("sub10RadioStats1dHistLnkLossAvg", 271), ("sub10RadioStats1dHistMWUTempMin", 272), ("sub10RadioStats1dHistMWUTempMax", 273), ("sub10RadioStats1dHistMWUTempAvg", 274), ("sub10RadioStats1dHistAFERMin", 275), ("sub10RadioStats1dHistAFERMax", 276), ("sub10RadioStats1dHistAFERAvg", 277), ("sub10RadioStats1dHistRxPkts", 278), ("sub10RadioStats1dHistTxPkts", 279), ("sub10RadioStats1dHistRxMgmtPkts", 280), ("sub10RadioStats1dHistTxMgmtPkts", 281), ("sub10RadioStats1dHistRxBadFrms", 282), ("sub10RadioStats1dHistQPSKTo8PSK", 283), ("sub10RadioStats1dHist8PSKToQPSK", 284), ("sub10RadioStats1dHistRxQPSK", 285), ("sub10RadioStats1dHistRx8PSK", 286), ("sub10RadioStats1dHistTxQPSK", 287), ("sub10RadioStats1dHistTx8PSK", 288), ("sub10EthStats1dHistRxOctets", 300), ("sub10EthStats1dHistRxGoodFrms", 301), ("sub10EthStats1dHistRxBcastFrms", 302), ("sub10EthStats1dHistRxMcastFrms", 303), ("sub10EthStats1dHistRxPauseFrms", 304), ("sub10EthStats1dHistRxCRCErrs", 305), ("sub10EthStats1dHistRxAlignErrs", 306), ("sub10EthStats1dHistRxOversized", 307), ("sub10EthStats1dHistRxJabberFrms", 308), ("sub10EthStats1dHistRxUndersized", 309), ("sub10EthStats1dHistRxFragments", 310), ("sub10EthStats1dHistRxSOFOvrns", 311), ("sub10EthStats1dHistTxOctets", 312), ("sub10EthStats1dHistTxGoodFrms", 313), ("sub10EthStats1dHistTxBcastFrms", 314), ("sub10EthStats1dHistTxMcastFrms", 315), ("sub10EthStats1dHistTxPauseFrms", 316), ("sub10EthStats1dHistTxDeferred", 317), ("sub10EthStats1dHistTxCollsn", 318), ("sub10EthStats1dHistTxSnglCollsn", 319), ("sub10EthStats1dHistTxMlplCollsn", 320), ("sub10EthStats1dHistTxExsvCollsn", 321), ("sub10EthStats1dHistTxLtCollsn", 322), ("sub10EthStats1dHistTxCSenseErrs", 323), ("sub10EthStats1dHistPkts64Octets", 324), ("sub10EthStats1dHistPkts65T127", 325), ("sub10EthStats1dHistPkts128T255", 326), ("sub10EthStats1dHistPkts256T511", 327), ("sub10EthStats1dHistPkts512T1023", 328), ("sub10EthStats1dHistPkts1024TMax", 329), ("sub10EthStats1dHistRxMbpsMin", 330), ("sub10EthStats1dHistRxMbpsMax", 331), ("sub10EthStats1dHistRxMbpsAvg", 332), ("sub10EthStats1dHistTxMbpsMin", 333), ("sub10EthStats1dHistTxMbpsMax", 334), ("sub10EthStats1dHistTxMbpsAvg", 335))

class Sub10AlarmSeverity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("critical", 1), ("major", 2), ("minor", 3), ("warning", 4))

class Sub10AlarmOperation(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("lessThan", 1), ("greaterThan", 2), ("lessThanOrEqual", 3), ("greaterThanOrEqual", 4), ("equal", 5), ("notEqual", 6))

class Sub10AlarmType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("sub10UnitAlarm", 1), ("sub10EthernetAlarm", 2), ("sub10RadioAlarm", 3))

class Sub10NTPSyncStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("ntpOutOfSync", 0), ("ntpInSync", 1))

class Sub10VlanId(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4095)

class Sub10VlanTagAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("tagActionNone", 0), ("untag", 1), ("tag", 2), ("drop", 3))

class Sub10VlanPriority(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 7)

class Sub10QoSQueue(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 7)

class Sub10TxPowerLimit(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))
    namedValues = NamedValues(("txPowerLimitNone", 0), ("txPowerLimitMinus3", 1), ("txPowerLimitMinus6", 2), ("txPowerLimitMinus9", 3), ("txPowerLimitMinus12", 4), ("txPowerLimitMinus15", 5))

class Sub10RadioDataRate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("radioDataRate1000", 0), ("radioDataRate700", 1), ("radioDataRate500", 2), ("radioDataRate300", 3), ("radioDataRate100", 4))

class Sub10UserGroup(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("operation", 1), ("administration", 2), ("maintenance", 3), ("engineer", 4))

class Sub10Snmpv3SecurityLevel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noAuthNoPriv", 1), ("authNoPriv", 2), ("authPriv", 3))

class Sub10Snmpv3AuthProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noAuth", 1), ("md5", 2), ("sha1", 3))

class Sub10Snmpv3PrivProtocol(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("noPriv", 1), ("des", 2), ("aes", 3))

class Sub10MWUType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("mwuTypeNone", 0), ("mwuTypeVBand", 1), ("mwuTypeEBand", 2))

class Sub10FirmwareBank(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 3)

class Sub10StatsGroup(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))
    namedValues = NamedValues(("statsGroupNone", 1), ("statsGroupAll", 2), ("statsGroupRadioCurr", 3), ("statsGroupRadio1s", 4), ("statsGroupRadio1m", 5), ("statsGroupRadio15m", 6), ("statsGroupRadio1d", 7), ("statsGroupEthernetCurr", 8), ("statsGroupEthernet1s", 9), ("statsGroupEthernet1m", 10), ("statsGroupEthernet15m", 11), ("statsGroupEthernet1d", 12), ("statsGroupRadioCurr60s", 13))

class Sub10ThroughputMbps(TextualConvention, OctetString):
    status = 'current'
    displayHint = '32a'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class Sub10ModulationMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("modebpsk", 0), ("modeqpsk", 1), ("mode8psk", 2))

sub10Notifications = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 0))
sub10Unit = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3))
sub10UnitStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 1))
sub10UnitLocalStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1))
sub10UnitRemoteStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2))
sub10UnitMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2))
sub10UnitMgmtSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 1))
sub10UnitMgmtIp = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 2))
sub10UnitMgmtVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 3))
sub10UnitMgmtUsers = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4))
sub10UnitMgmtTime = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 5))
sub10UnitMgmtAlarms = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6))
sub10UnitMgmtSnmp = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7))
sub10UnitMgmtSmtp = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 8))
sub10UnitMgmtFirmware = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9))
sub10UnitMgmtDNS = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 10))
sub10UnitMgmtEncryption = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 11))
sub10UnitMgmtLicense = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 12))
sub10UnitMgmtSyncE = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 13))
sub10UnitMgmtActions = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 3, 2, 20))
sub10Ethernet = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4))
sub10EthernetStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 1))
sub10EthernetLocalStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 1, 1))
sub10EthernetRemoteStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 1, 2))
sub10EthernetMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 2))
sub10EthMgmtPhy = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 2, 1))
sub10EthMgmtVlan = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2))
sub10EthMgmtQoS = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3))
sub10EthMgmtStats = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 2, 4))
sub10EthernetStats = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 3))
sub10EthernetStatsCurrent = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2))
sub10EthernetStatsHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3))
sub10EthernetStats15mHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1))
sub10EthStats1dHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2))
sub10Radio = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5))
sub10RadioStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 1))
sub10RadioLocalStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1))
sub10RadioRemoteStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 1, 2))
sub10RadioMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 2))
sub10RadioMgmtStats = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 2, 9))
sub10RadioStats = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 3))
sub10RadioStatsCurrent = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2))
sub10RadioStatsHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3))
sub10RadioStats1mHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1))
sub10RadioStats15mHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2))
sub10RadioStats1dHistory = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3))
sub10MIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 20))
sub10MIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 20, 1))
sub10MIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 39003, 20, 2))
sub10UnitAlarm = NotificationType((1, 3, 6, 1, 4, 1, 39003, 0, 1)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmName"), ("SUB10SYSTEMS-MIB", "sub10UnitLclAlarmState"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmSeverity"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMeasObject"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMeasObjectVal"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRaiseOper"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRaiseThresh"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmClearOper"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmClearThresh"))
if mibBuilder.loadTexts: sub10UnitAlarm.setStatus('current')
sub10EthernetAlarm = NotificationType((1, 3, 6, 1, 4, 1, 39003, 0, 2)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmName"), ("SUB10SYSTEMS-MIB", "sub10UnitLclAlarmState"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmSeverity"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMeasObject"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMeasObjectVal"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRaiseOper"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRaiseThresh"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmClearOper"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmClearThresh"))
if mibBuilder.loadTexts: sub10EthernetAlarm.setStatus('current')
sub10RadioAlarm = NotificationType((1, 3, 6, 1, 4, 1, 39003, 0, 3)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmName"), ("SUB10SYSTEMS-MIB", "sub10UnitLclAlarmState"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmSeverity"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMeasObject"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMeasObjectVal"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRaiseOper"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRaiseThresh"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmClearOper"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmClearThresh"))
if mibBuilder.loadTexts: sub10RadioAlarm.setStatus('current')
sub10UnitLclTime = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 1), Sub10DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclTime.setStatus('current')
sub10UnitLclUnitType = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 2), Sub10UnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclUnitType.setStatus('current')
sub10UnitLclDescription = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclDescription.setStatus('current')
sub10UnitLclHWSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclHWSerialNumber.setStatus('current')
sub10UnitLclTerminalName = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclTerminalName.setStatus('current')
sub10UnitLclTerminalType = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 6), Sub10TerminalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclTerminalType.setStatus('current')
sub10UnitLclLinkName = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclLinkName.setStatus('current')
sub10UnitLclLinkId = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclLinkId.setStatus('current')
sub10UnitLclSiteName = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclSiteName.setStatus('current')
sub10UnitLclFirmwareLoadedBank = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 10), Sub10FirmwareBank()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclFirmwareLoadedBank.setStatus('current')
sub10UnitLclFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclFirmwareVersion.setStatus('current')
sub10UnitLclIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclIpAddress.setStatus('current')
sub10UnitLclMWUTemperature = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclMWUTemperature.setStatus('current')
sub10UnitLclNTPSyncStatus = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 14), Sub10NTPSyncStatus().clone('ntpOutOfSync')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclNTPSyncStatus.setStatus('current')
sub10UnitLclAlarmStateTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 15), )
if mibBuilder.loadTexts: sub10UnitLclAlarmStateTable.setStatus('current')
sub10UnitLclAlarmStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 15, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10UnitLclAlarmStateIndex"))
if mibBuilder.loadTexts: sub10UnitLclAlarmStateEntry.setStatus('current')
sub10UnitLclAlarmStateIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 15, 1, 1), Sub10AlarmIndex())
if mibBuilder.loadTexts: sub10UnitLclAlarmStateIndex.setStatus('current')
sub10UnitLclAlarmState = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 15, 1, 2), Sub10AlarmState().clone('stateUnknown')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclAlarmState.setStatus('current')
sub10UnitLclAlarmStateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 15, 1, 3), Sub10DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclAlarmStateTime.setStatus('current')
sub10UnitLclRadioDataRate = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 16), Sub10RadioDataRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclRadioDataRate.setStatus('current')
sub10UnitLclMWUType = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 17), Sub10MWUType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclMWUType.setStatus('current')
sub10UnitLclFPGAVersion = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 1, 18), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitLclFPGAVersion.setStatus('current')
sub10UnitRmtUnitType = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 1), Sub10UnitType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtUnitType.setStatus('current')
sub10UnitRmtTime = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 2), Sub10DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtTime.setStatus('current')
sub10UnitRmtTerminalName = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtTerminalName.setStatus('current')
sub10UnitRmtTerminalType = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 4), Sub10TerminalType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtTerminalType.setStatus('current')
sub10UnitRmtLinkName = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtLinkName.setStatus('current')
sub10UnitRmtLinkId = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtLinkId.setStatus('current')
sub10UnitRmtHWSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtHWSerialNumber.setStatus('current')
sub10UnitRmtFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtFirmwareVersion.setStatus('current')
sub10UnitRmtIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtIpAddress.setStatus('current')
sub10UnitRmtMWUTemperature = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 1, 2, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitRmtMWUTemperature.setStatus('current')
sub10UnitMgmtTerminalName = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtTerminalName.setStatus('current')
sub10UnitMgmtLinkName = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtLinkName.setStatus('current')
sub10UnitMgmtLinkId = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtLinkId.setStatus('current')
sub10UnitMgmtSiteName = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSiteName.setStatus('current')
sub10UnitMgmtContactName = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 1, 5), DisplayString().clone('support@sub10systems.com')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtContactName.setStatus('current')
sub10UnitMgmtIpMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 2, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2), ("dhcp", 3))).clone('ipv4')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtIpMode.setStatus('current')
sub10UnitMgmtIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 2, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 15)).clone('192.168.0.22')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtIpAddress.setStatus('current')
sub10UnitMgmtIpSubnetMask = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 15)).clone('255.255.255.0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtIpSubnetMask.setStatus('current')
sub10UnitMgmtIpDefGateway = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 15)).clone('192.168.0.1')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtIpDefGateway.setStatus('current')
sub10UnitMgmtIpDHCP = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 2, 5), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtIpDHCP.setStatus('current')
sub10UnitMgmtVlanState = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 3, 1), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtVlanState.setStatus('current')
sub10UnitMgmtVlanId = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 3, 2), Sub10VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtVlanId.setStatus('current')
sub10UnitMgmtVlanPriority = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 3, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtVlanPriority.setStatus('current')
sub10UnitMgmtVlanDSCP = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 3, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtVlanDSCP.setStatus('current')
sub10UnitMgmtVlanDEI = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 3, 5), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtVlanDEI.setStatus('current')
sub10UnitMgmtUsersNumber = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtUsersNumber.setStatus('current')
sub10UnitMgmtUserTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4, 2), )
if mibBuilder.loadTexts: sub10UnitMgmtUserTable.setStatus('current')
sub10UnitMgmtUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4, 2, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10UnitMgmtUserIndex"))
if mibBuilder.loadTexts: sub10UnitMgmtUserEntry.setStatus('current')
sub10UnitMgmtUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: sub10UnitMgmtUserIndex.setStatus('current')
sub10UnitMgmtUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4, 2, 1, 2), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sub10UnitMgmtUserRowStatus.setStatus('current')
sub10UnitMgmtUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4, 2, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtUserName.setStatus('current')
sub10UnitMgmtUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4, 2, 1, 4), Sub10UserGroup().clone('operation')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtUserGroup.setStatus('current')
sub10UnitMgmtUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtUserPassword.setStatus('current')
sub10UnitMgmtUserPasswordVerify = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 4, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtUserPasswordVerify.setStatus('current')
sub10UnitMgmtTimeLocal = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 5, 1), Sub10DateTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtTimeLocal.setStatus('current')
sub10UnitMgmtTimeNTPEnabled = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 5, 2), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtTimeNTPEnabled.setStatus('current')
sub10UnitMgmtTimeNTPServer1 = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 5, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtTimeNTPServer1.setStatus('current')
sub10UnitMgmtTimeNTPServer2 = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 5, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtTimeNTPServer2.setStatus('current')
sub10UnitMgmtTimeNTPPort = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 5, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(123)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtTimeNTPPort.setStatus('current')
sub10UnitMgmtTimeNTPSyncStatus = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 5, 6), Sub10NTPSyncStatus().clone('ntpOutOfSync')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtTimeNTPSyncStatus.setStatus('current')
sub10UnitMgmtDateTime = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 5, 7), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtDateTime.setStatus('current')
sub10UnitMgmtAlarmTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1), )
if mibBuilder.loadTexts: sub10UnitMgmtAlarmTable.setStatus('current')
sub10UnitMgmtAlarmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmIndex"))
if mibBuilder.loadTexts: sub10UnitMgmtAlarmEntry.setStatus('current')
sub10UnitMgmtAlarmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 1), Sub10AlarmIndex())
if mibBuilder.loadTexts: sub10UnitMgmtAlarmIndex.setStatus('current')
sub10UnitMgmtAlarmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 2), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmRowStatus.setStatus('current')
sub10UnitMgmtAlarmName = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 3), Sub10AlarmName()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmName.setStatus('current')
sub10UnitMgmtAlarmSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 4), Sub10AlarmSeverity()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmSeverity.setStatus('current')
sub10UnitMgmtAlarmMeasObject = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 5), Sub10MeasuredObject()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmMeasObject.setStatus('current')
sub10UnitMgmtAlarmMonitorIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmMonitorIntvl.setStatus('current')
sub10UnitMgmtAlarmRaiseOper = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 7), Sub10AlarmOperation().clone('greaterThanOrEqual')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmRaiseOper.setStatus('current')
sub10UnitMgmtAlarmRaiseThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmRaiseThresh.setStatus('current')
sub10UnitMgmtAlarmClearOper = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 9), Sub10AlarmOperation().clone('lessThan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmClearOper.setStatus('current')
sub10UnitMgmtAlarmClearThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmClearThresh.setStatus('current')
sub10UnitMgmtAlarmRaiseIntvls = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmRaiseIntvls.setStatus('current')
sub10UnitMgmtAlarmClearIntvls = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmClearIntvls.setStatus('current')
sub10UnitMgmtAlarmType = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 13), Sub10AlarmType().clone('sub10UnitAlarm')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmType.setStatus('current')
sub10UnitMgmtAlarmSmtpAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmSmtpAddress.setStatus('current')
sub10UnitMgmtAlarmToSyslog = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 15), Sub10State().clone('stateEnabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmToSyslog.setStatus('current')
sub10UnitMgmtAlarmEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 16), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmEnabled.setStatus('current')
sub10UnitMgmtAlarmMeasObjectVal = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 17), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmMeasObjectVal.setStatus('current')
sub10UnitMgmtAlarmToSNMP = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 18), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmToSNMP.setStatus('current')
sub10UnitMgmtAlarmMeasObjIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 1, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmMeasObjIndex.setStatus('current')
sub10UnitMgmtAlarmsUserDefStart = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 6, 2), Sub10AlarmIndex().clone(65)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtAlarmsUserDefStart.setStatus('current')
sub10UnitMgmtSnmpAgent = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 1), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpAgent.setStatus('current')
sub10UnitMgmtSnmpTraps = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 2), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTraps.setStatus('current')
sub10UnitMgmtSnmpv320Mib = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 3), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpv320Mib.setStatus('current')
sub10UnitMgmtSnmpv3 = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 4), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpv3.setStatus('current')
sub10UnitMgmtSnmpTrpDstTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 5), )
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTrpDstTable.setStatus('current')
sub10UnitMgmtSnmpTrpDstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 5, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTrpDstIndex"))
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTrpDstEntry.setStatus('current')
sub10UnitMgmtSnmpTrpDstIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTrpDstIndex.setStatus('current')
sub10UnitMgmtSnmpTrpDstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 5, 1, 2), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTrpDstRowStatus.setStatus('current')
sub10UnitMgmtSnmpTrpDstIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 5, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTrpDstIpAddr.setStatus('current')
sub10UnitMgmtSnmpTrpDstCommunity = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 5, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTrpDstCommunity.setStatus('current')
sub10UnitMgmtSnmpEngineIdFormat = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("v4IpAddress", 1), ("v6IpAddress", 2), ("macAddress", 3), ("textString", 4))).clone('textString')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpEngineIdFormat.setStatus('current')
sub10UnitMgmtSnmpEngineIdText = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 25)).clone('Sub10Systems')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpEngineIdText.setStatus('current')
sub10UnitMgmtSnmpEngineId = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(5, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpEngineId.setStatus('current')
sub10UnitMgmtSnmpOperAuthProto = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 9), Sub10Snmpv3AuthProtocol().clone('noAuth')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpOperAuthProto.setStatus('current')
sub10UnitMgmtSnmpOperPrivProto = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 10), Sub10Snmpv3PrivProtocol().clone('noPriv')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpOperPrivProto.setStatus('current')
sub10UnitMgmtSnmpAdminAuthProto = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 11), Sub10Snmpv3AuthProtocol().clone('md5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpAdminAuthProto.setStatus('current')
sub10UnitMgmtSnmpAdminPrivProto = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 12), Sub10Snmpv3PrivProtocol().clone('noPriv')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpAdminPrivProto.setStatus('current')
sub10UnitMgmtSnmpMaintAuthProto = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 13), Sub10Snmpv3AuthProtocol().clone('md5')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpMaintAuthProto.setStatus('current')
sub10UnitMgmtSnmpMaintPrivProto = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 14), Sub10Snmpv3PrivProtocol().clone('des')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpMaintPrivProto.setStatus('current')
sub10UnitMgmtSnmpUserTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15), )
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserTable.setStatus('current')
sub10UnitMgmtSnmpUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpUserIndex"))
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserEntry.setStatus('current')
sub10UnitMgmtSnmpUserIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserIndex.setStatus('current')
sub10UnitMgmtSnmpUserRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15, 1, 2), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserRowStatus.setStatus('current')
sub10UnitMgmtSnmpUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserName.setStatus('current')
sub10UnitMgmtSnmpUserGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15, 1, 4), Sub10UserGroup().clone('operation')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserGroup.setStatus('current')
sub10UnitMgmtSnmpUserAuthPwd = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserAuthPwd.setStatus('current')
sub10UnitMgmtSnmpUserAuthPwdChk = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserAuthPwdChk.setStatus('current')
sub10UnitMgmtSnmpUserPrivPwd = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserPrivPwd.setStatus('current')
sub10UnitMgmtSnmpUserPrivPwdChk = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 15, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpUserPrivPwdChk.setStatus('current')
sub10UnitMgmtSnmpAccessTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 16), )
if mibBuilder.loadTexts: sub10UnitMgmtSnmpAccessTable.setStatus('current')
sub10UnitMgmtSnmpAccessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 16, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpAccessIndex"))
if mibBuilder.loadTexts: sub10UnitMgmtSnmpAccessEntry.setStatus('current')
sub10UnitMgmtSnmpAccessIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 16, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: sub10UnitMgmtSnmpAccessIndex.setStatus('current')
sub10UnitMgmtSnmpAccessRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 16, 1, 2), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpAccessRowStatus.setStatus('current')
sub10UnitMgmtSnmpAccessName = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 16, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpAccessName.setStatus('current')
sub10UnitMgmtSnmpAccessIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 16, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpAccessIpAddr.setStatus('current')
sub10UnitMgmtSnmpTargetTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 17), )
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTargetTable.setStatus('current')
sub10UnitMgmtSnmpTargetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 17, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTargetIndex"))
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTargetEntry.setStatus('current')
sub10UnitMgmtSnmpTargetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 17, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3)))
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTargetIndex.setStatus('current')
sub10UnitMgmtSnmpTargetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 17, 1, 2), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTargetRowStatus.setStatus('current')
sub10UnitMgmtSnmpTargetName = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 17, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTargetName.setStatus('current')
sub10UnitMgmtSnmpTargetIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 17, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTargetIpAddr.setStatus('current')
sub10UnitMgmtSnmpTargetUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 7, 17, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSnmpTargetUserName.setStatus('current')
sub10UnitMgmtFirmwareSelectBank = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 1), Sub10FirmwareBank()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareSelectBank.setStatus('current')
sub10UnitMgmtFirmwareLoadedBank = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 2), Sub10FirmwareBank()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareLoadedBank.setStatus('current')
sub10UnitMgmtFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareVersion.setStatus('current')
sub10UnitMgmtFirmwareBootVersion = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareBootVersion.setStatus('current')
sub10UnitMgmtFirmwareAction = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("fmwNone", 1), ("fmwReboot", 2), ("fmwCopyInactiveBank", 3), ("fmwUploadInactiveBank", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareAction.setStatus('current')
sub10UnitMgmtFirmwareBankTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 6), )
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareBankTable.setStatus('current')
sub10UnitMgmtFirmwareBankEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 6, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareBankIndex"))
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareBankEntry.setStatus('current')
sub10UnitMgmtFirmwareBankIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 6, 1, 1), Sub10FirmwareBank())
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareBankIndex.setStatus('current')
sub10UnitMgmtFirmwareBankVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 6, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareBankVersion.setStatus('current')
sub10UnitMgmtFirmwareBankImage = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 6, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareBankImage.setStatus('current')
sub10UnitMgmtFirmwareUplImage = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareUplImage.setStatus('current')
sub10UnitMgmtFirmwareUplSvrIp = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareUplSvrIp.setStatus('current')
sub10UnitMgmtFirmwareFromBank = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 9), Sub10FirmwareBank()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareFromBank.setStatus('current')
sub10UnitMgmtFirmwareToBank = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 10), Sub10FirmwareBank()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareToBank.setStatus('current')
sub10UnitMgmtFirmwareActStatus = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("fmwUploadSuccess", 1), ("fmwUploadFailed", 2), ("fmwUploadTimeout", 3), ("fmwUploadFileNotFound", 4), ("fmwUploadInvalid", 5), ("fmwUploadingImage", 6), ("fmwUploadingImageComplete", 7), ("fmwUploadWritingBank", 8), ("fmwUploadWritingBankComplete", 9), ("fmwValidatingImage", 10), ("fmwImageValidateSuccess", 11), ("fmwImageValidateFailed", 12), ("fmwCopyingBank", 13), ("fmwCopyingBankComplete", 14), ("fmwCopyBankFailed", 15), ("fmwCopyBankSuccess", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareActStatus.setStatus('current')
sub10UnitMgmtFirmwareActProgress = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 9, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtFirmwareActProgress.setStatus('current')
sub10UnitMgmtDNSTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 3, 2, 10, 1), )
if mibBuilder.loadTexts: sub10UnitMgmtDNSTable.setStatus('current')
sub10UnitMgmtDNSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 3, 2, 10, 1, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10UnitMgmtDNSIndex"))
if mibBuilder.loadTexts: sub10UnitMgmtDNSEntry.setStatus('current')
sub10UnitMgmtDNSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 10, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)))
if mibBuilder.loadTexts: sub10UnitMgmtDNSIndex.setStatus('current')
sub10UnitMgmtDNServer = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 3, 2, 10, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(7, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtDNServer.setStatus('current')
sub10UnitMgmtEncryptMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 11, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("encryptNone", 0), ("encryptAES128", 1), ("encryptAES192", 2), ("encryptAES256", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtEncryptMode.setStatus('current')
sub10UnitMgmtEncryptKey = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 11, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtEncryptKey.setStatus('current')
sub10UnitMgmtLicenseKey = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 12, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtLicenseKey.setStatus('current')
sub10UnitMgmtLicenseAES = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 12, 2), Sub10State().clone('stateDisabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10UnitMgmtLicenseAES.setStatus('current')
sub10UnitMgmtSyncEMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 13, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("syncENone", 0), ("syncEProvider", 1), ("syncEConsumer", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtSyncEMode.setStatus('current')
sub10UnitMgmtTransaction = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 20, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("transactionNone", 1), ("transactionCommit", 2), ("transactionRollback", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtTransaction.setStatus('current')
sub10UnitMgmtTransactionStatus = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 20, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("transStatusNone", 1), ("transStatusActive", 2), ("transStatusCommitted", 3), ("transStatusRollback", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtTransactionStatus.setStatus('current')
sub10UnitMgmtRollbackTimeout = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 20, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(30, 300)).clone(180)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtRollbackTimeout.setStatus('current')
sub10UnitMgmtTransactionMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 20, 4), Sub10State().clone('stateEnabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtTransactionMode.setStatus('current')
sub10UnitMgmtResetAction = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 20, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("resetNone", 1), ("resetFactoryDefaults", 2), ("resetFactoryDefaultsNoSave", 3), ("resetStatistics", 4), ("resetAlarmConfig", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtResetAction.setStatus('current')
sub10UnitMgmtResetStatsGroup = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 20, 6), Sub10StatsGroup()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtResetStatsGroup.setStatus('current')
sub10UnitMgmtResetAlarmsType = MibScalar((1, 3, 6, 1, 4, 1, 39003, 3, 2, 20, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("resetAlarmTypeAll", 1), ("resetAlarmTypeFixed", 2), ("resetAlarmTypeUser", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10UnitMgmtResetAlarmsType.setStatus('current')
sub10EthLclStatusTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 1, 1, 1), )
if mibBuilder.loadTexts: sub10EthLclStatusTable.setStatus('current')
sub10EthLclStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 1, 1, 1, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthIfIndex"))
if mibBuilder.loadTexts: sub10EthLclStatusEntry.setStatus('current')
sub10EthLclLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 1, 1, 1, 1), Sub10OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthLclLinkStatus.setStatus('current')
sub10EthLclMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 1, 1, 1, 2), Sub10MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthLclMacAddress.setStatus('current')
sub10EthLclSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthLclSpeed.setStatus('current')
sub10EthLclDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 1, 1, 1, 4), Sub10Duplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthLclDuplex.setStatus('current')
sub10EthLclMDI = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 1, 1, 1, 5), Sub10MDIType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthLclMDI.setStatus('current')
sub10EthIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 1, 1, 1, 6), Sub10EthInterfaceIndex())
if mibBuilder.loadTexts: sub10EthIfIndex.setStatus('current')
sub10EthRmtStatusTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 1, 2, 1), )
if mibBuilder.loadTexts: sub10EthRmtStatusTable.setStatus('current')
sub10EthRmtStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 1, 2, 1, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthIfIndex"))
if mibBuilder.loadTexts: sub10EthRmtStatusEntry.setStatus('current')
sub10EthRmtLinkStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 2, 1, 1, 1), Sub10OperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthRmtLinkStatus.setStatus('current')
sub10EthRmtMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 2, 1, 1, 2), Sub10MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthRmtMacAddress.setStatus('current')
sub10EthRmtSpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 2, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthRmtSpeed.setStatus('current')
sub10EthRmtDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 2, 1, 1, 4), Sub10Duplex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthRmtDuplex.setStatus('current')
sub10EthRmtMDI = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 1, 2, 1, 1, 5), Sub10MDIType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthRmtMDI.setStatus('current')
sub10EthMgmtPhyTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 2, 1, 1), )
if mibBuilder.loadTexts: sub10EthMgmtPhyTable.setStatus('current')
sub10EthMgmtPhyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 2, 1, 1, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthIfIndex"))
if mibBuilder.loadTexts: sub10EthMgmtPhyEntry.setStatus('current')
sub10EthMgmtPhyAutoNeg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 1, 1, 1, 1), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtPhyAutoNeg.setStatus('current')
sub10EthMgmtPhySpeed = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtPhySpeed.setStatus('current')
sub10EthMgmtPhyDuplex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 1, 1, 1, 3), Sub10Duplex()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtPhyDuplex.setStatus('current')
sub10EthMgmtPhyMDI = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 1, 1, 1, 4), Sub10MDIType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtPhyMDI.setStatus('current')
sub10EthMgmtVlanFiltering = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 1), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtVlanFiltering.setStatus('current')
sub10EthMgmtVlanDefaultEnabled = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 2), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtVlanDefaultEnabled.setStatus('current')
sub10EthMgmtVlanDefaultId = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 3), Sub10VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtVlanDefaultId.setStatus('current')
sub10EthMgmtVlanDefaultPriority = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 4), Sub10VlanPriority()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtVlanDefaultPriority.setStatus('current')
sub10EthMgmtVlanDefaultDEI = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 5), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtVlanDefaultDEI.setStatus('current')
sub10EthMgmtVlanIngressAction = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 6), Sub10VlanTagAction().clone('tag')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthMgmtVlanIngressAction.setStatus('current')
sub10EthMgmtVlanEgressAction = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 7), Sub10VlanTagAction().clone('untag')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthMgmtVlanEgressAction.setStatus('current')
sub10EthMgmtVlanAllowedTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 8), )
if mibBuilder.loadTexts: sub10EthMgmtVlanAllowedTable.setStatus('current')
sub10EthMgmtVlanAllowedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 8, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthMgmtVlanAllowedIndex"))
if mibBuilder.loadTexts: sub10EthMgmtVlanAllowedEntry.setStatus('current')
sub10EthMgmtVlanAllowedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)))
if mibBuilder.loadTexts: sub10EthMgmtVlanAllowedIndex.setStatus('current')
sub10EthMgmtVlanAllowedRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 8, 1, 2), RowStatus().clone('notInService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: sub10EthMgmtVlanAllowedRowStatus.setStatus('current')
sub10EthMgmtVlanAllowedId = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 2, 8, 1, 3), Sub10VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtVlanAllowedId.setStatus('current')
sub10EthMgmtQoSActiveState = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 1), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSActiveState.setStatus('current')
sub10EthMgmtQoSMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("qosEthernet", 1), ("qosIPMPLS", 2))).clone('qosEthernet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSMode.setStatus('current')
sub10EthMgmtQoSUntaggedQueue = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 3), Sub10QoSQueue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSUntaggedQueue.setStatus('current')
sub10EthMgmtQoSQTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 4), )
if mibBuilder.loadTexts: sub10EthMgmtQoSQTable.setStatus('current')
sub10EthMgmtQoSQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 4, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthMgmtQoSQIndex"))
if mibBuilder.loadTexts: sub10EthMgmtQoSQEntry.setStatus('current')
sub10EthMgmtQoSQIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: sub10EthMgmtQoSQIndex.setStatus('current')
sub10EthMgmtQoSQSchedulingType = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("qosSPQ", 1), ("qosDWRR", 2))).clone('qosSPQ')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSQSchedulingType.setStatus('current')
sub10EthMgmtQoSQDWRRWeight = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSQDWRRWeight.setStatus('current')
sub10EthMgmtQoSQCongestionPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("qosTailDrop", 1))).clone('qosTailDrop')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSQCongestionPolicy.setStatus('current')
sub10EthMgmtQoSQSizeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)).clone(100)).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthMgmtQoSQSizeMax.setStatus('current')
sub10EthMgmtQoSQLen = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthMgmtQoSQLen.setStatus('current')
sub10EthMgmtQoSVlanMappingNumber = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthMgmtQoSVlanMappingNumber.setStatus('current')
sub10EthMgmtQoSVlanTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 6), )
if mibBuilder.loadTexts: sub10EthMgmtQoSVlanTable.setStatus('current')
sub10EthMgmtQoSVlanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 6, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthMgmtQoSVlanIndex"))
if mibBuilder.loadTexts: sub10EthMgmtQoSVlanEntry.setStatus('current')
sub10EthMgmtQoSVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 16)))
if mibBuilder.loadTexts: sub10EthMgmtQoSVlanIndex.setStatus('current')
sub10EthMgmtQoSVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 6, 1, 2), Sub10VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSVlanId.setStatus('current')
sub10EthMgmtQoSVlanQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 6, 1, 3), Sub10QoSQueue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSVlanQueue.setStatus('current')
sub10EthMgmtQoSPCPTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 8), )
if mibBuilder.loadTexts: sub10EthMgmtQoSPCPTable.setStatus('current')
sub10EthMgmtQoSPCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 8, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthMgmtQoSPCPIndex"))
if mibBuilder.loadTexts: sub10EthMgmtQoSPCPEntry.setStatus('current')
sub10EthMgmtQoSPCPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: sub10EthMgmtQoSPCPIndex.setStatus('current')
sub10EthMgmtQoSPCPQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 8, 1, 2), Sub10QoSQueue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSPCPQueue.setStatus('current')
sub10EthMgmtQoSDSCPMappingNumber = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthMgmtQoSDSCPMappingNumber.setStatus('current')
sub10EthMgmtQoSDSCPTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 10), )
if mibBuilder.loadTexts: sub10EthMgmtQoSDSCPTable.setStatus('current')
sub10EthMgmtQoSDSCPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 10, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthMgmtQoSDSCPIndex"))
if mibBuilder.loadTexts: sub10EthMgmtQoSDSCPEntry.setStatus('current')
sub10EthMgmtQoSDSCPIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 64)))
if mibBuilder.loadTexts: sub10EthMgmtQoSDSCPIndex.setStatus('current')
sub10EthMgmtQoSDSCPMarking = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSDSCPMarking.setStatus('current')
sub10EthMgmtQoSDSCPQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 10, 1, 3), Sub10QoSQueue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSDSCPQueue.setStatus('current')
sub10EthMgmtQoSMPLSMappingNumber = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthMgmtQoSMPLSMappingNumber.setStatus('current')
sub10EthMgmtQoSMPLSTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 12), )
if mibBuilder.loadTexts: sub10EthMgmtQoSMPLSTable.setStatus('current')
sub10EthMgmtQoSMPLSEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 12, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthMgmtQoSMPLSIndex"))
if mibBuilder.loadTexts: sub10EthMgmtQoSMPLSEntry.setStatus('current')
sub10EthMgmtQoSMPLSIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 12, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)))
if mibBuilder.loadTexts: sub10EthMgmtQoSMPLSIndex.setStatus('current')
sub10EthMgmtQoSMPLSTrafficClass = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 12, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSMPLSTrafficClass.setStatus('current')
sub10EthMgmtQoSMPLSQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 3, 12, 1, 3), Sub10QoSQueue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtQoSMPLSQueue.setStatus('current')
sub10EthMgmtStatsActiveTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 2, 4, 1), )
if mibBuilder.loadTexts: sub10EthMgmtStatsActiveTable.setStatus('current')
sub10EthMgmtStatsActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 2, 4, 1, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthMgmtStatsActiveIndex"))
if mibBuilder.loadTexts: sub10EthMgmtStatsActiveEntry.setStatus('current')
sub10EthMgmtStatsActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 4, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: sub10EthMgmtStatsActiveIndex.setStatus('current')
sub10EthMgmtStatsActiveName = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 4, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthMgmtStatsActiveName.setStatus('current')
sub10EthMgmtStatsActiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 2, 4, 1, 1, 3), Sub10State().clone('stateEnabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10EthMgmtStatsActiveState.setStatus('current')
sub10EthStatsTimeElapsed = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsTimeElapsed.setStatus('current')
sub10EthernetStatsCurrTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1), )
if mibBuilder.loadTexts: sub10EthernetStatsCurrTable.setStatus('current')
sub10EthernetStatsCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthIfIndex"))
if mibBuilder.loadTexts: sub10EthernetStatsCurrEntry.setStatus('current')
sub10EthStatsCurrRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxOctets.setStatus('current')
sub10EthStatsCurrRxGoodFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxGoodFrms.setStatus('current')
sub10EthStatsCurrRxBcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxBcastFrms.setStatus('current')
sub10EthStatsCurrRxMcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxMcastFrms.setStatus('current')
sub10EthStatsCurrRxPauseFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxPauseFrms.setStatus('current')
sub10EthStatsCurrRxCRCErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxCRCErrs.setStatus('current')
sub10EthStatsCurrRxAlignErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxAlignErrs.setStatus('current')
sub10EthStatsCurrRxOversized = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxOversized.setStatus('current')
sub10EthStatsCurrRxJabberFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxJabberFrms.setStatus('current')
sub10EthStatsCurrRxUndersized = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxUndersized.setStatus('current')
sub10EthStatsCurrRxFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxFragments.setStatus('current')
sub10EthStatsCurrRxSOFOvrns = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxSOFOvrns.setStatus('current')
sub10EthStatsCurrTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxOctets.setStatus('current')
sub10EthStatsCurrTxGoodFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxGoodFrms.setStatus('current')
sub10EthStatsCurrTxBcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxBcastFrms.setStatus('current')
sub10EthStatsCurrTxMcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxMcastFrms.setStatus('current')
sub10EthStatsCurrTxPauseFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxPauseFrms.setStatus('current')
sub10EthStatsCurrTxDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxDeferred.setStatus('current')
sub10EthStatsCurrTxCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxCollsn.setStatus('current')
sub10EthStatsCurrTxSnglCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxSnglCollsn.setStatus('current')
sub10EthStatsCurrTxMlplCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxMlplCollsn.setStatus('current')
sub10EthStatsCurrTxExsvCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxExsvCollsn.setStatus('current')
sub10EthStatsCurrTxLtCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxLtCollsn.setStatus('current')
sub10EthStatsCurrTxCSenseErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxCSenseErrs.setStatus('current')
sub10EthStatsCurrPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrPkts64Octets.setStatus('current')
sub10EthStatsCurrPkts65T127 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrPkts65T127.setStatus('current')
sub10EthStatsCurrPkts128T255 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrPkts128T255.setStatus('current')
sub10EthStatsCurrPkts256T511 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrPkts256T511.setStatus('current')
sub10EthStatsCurrPkts512T1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrPkts512T1023.setStatus('current')
sub10EthStatsCurrPkts1024TMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrPkts1024TMax.setStatus('current')
sub10EthStatsCurrRxMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 31), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxMbps.setStatus('current')
sub10EthStatsCurrTxMbps = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 32), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxMbps.setStatus('current')
sub10EthStatsCurrRxMbpsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 33), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxMbpsMin.setStatus('current')
sub10EthStatsCurrRxMbpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 34), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxMbpsMax.setStatus('current')
sub10EthStatsCurrRxMbpsAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 35), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRxMbpsAvg.setStatus('current')
sub10EthStatsCurrTxMbpsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 36), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxMbpsMin.setStatus('current')
sub10EthStatsCurrTxMbpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 37), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxMbpsMax.setStatus('current')
sub10EthStatsCurrTxMbpsAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 38), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrTxMbpsAvg.setStatus('current')
sub10EthStatsCurrRmtRxMbpsAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 39), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRmtRxMbpsAvg.setStatus('current')
sub10EthStatsCurrRmtTxMbpsAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 2, 1, 1, 40), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStatsCurrRmtTxMbpsAvg.setStatus('current')
sub10EthStats15mHistIntvls = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistIntvls.setStatus('current')
sub10EthStats15mHistTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2), )
if mibBuilder.loadTexts: sub10EthStats15mHistTable.setStatus('current')
sub10EthStats15mHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthIfIndex"), (0, "SUB10SYSTEMS-MIB", "sub10EthStats15mHistIntvl"))
if mibBuilder.loadTexts: sub10EthStats15mHistEntry.setStatus('current')
sub10EthStats15mHistIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: sub10EthStats15mHistIntvl.setStatus('current')
sub10EthStats15mHistTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 2), Sub10DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTime.setStatus('current')
sub10EthStats15mHistRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxOctets.setStatus('current')
sub10EthStats15mHistRxGoodFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxGoodFrms.setStatus('current')
sub10EthStats15mHistRxBcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxBcastFrms.setStatus('current')
sub10EthStats15mHistRxMcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxMcastFrms.setStatus('current')
sub10EthStats15mHistRxPauseFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxPauseFrms.setStatus('current')
sub10EthStats15mHistRxCRCErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxCRCErrs.setStatus('current')
sub10EthStats15mHistRxAlignErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxAlignErrs.setStatus('current')
sub10EthStats15mHistRxOversized = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxOversized.setStatus('current')
sub10EthStats15mHistRxJabberFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxJabberFrms.setStatus('current')
sub10EthStats15mHistRxUndersized = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxUndersized.setStatus('current')
sub10EthStats15mHistRxFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxFragments.setStatus('current')
sub10EthStats15mHistRxSOFOvrns = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxSOFOvrns.setStatus('current')
sub10EthStats15mHistTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxOctets.setStatus('current')
sub10EthStats15mHistTxGoodFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxGoodFrms.setStatus('current')
sub10EthStats15mHistTxBcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxBcastFrms.setStatus('current')
sub10EthStats15mHistTxMcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxMcastFrms.setStatus('current')
sub10EthStats15mHistTxPauseFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxPauseFrms.setStatus('current')
sub10EthStats15mHistTxDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxDeferred.setStatus('current')
sub10EthStats15mHistTxCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxCollsn.setStatus('current')
sub10EthStats15mHistTxSnglCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxSnglCollsn.setStatus('current')
sub10EthStats15mHistTxMlplCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxMlplCollsn.setStatus('current')
sub10EthStats15mHistTxExsvCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxExsvCollsn.setStatus('current')
sub10EthStats15mHistTxLtCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxLtCollsn.setStatus('current')
sub10EthStats15mHistTxCSenseErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxCSenseErrs.setStatus('current')
sub10EthStats15mHistPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistPkts64Octets.setStatus('current')
sub10EthStats15mHistPkts65T127 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistPkts65T127.setStatus('current')
sub10EthStats15mHistPkts128T255 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistPkts128T255.setStatus('current')
sub10EthStats15mHistPkts256T511 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistPkts256T511.setStatus('current')
sub10EthStats15mHistPkts512T1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistPkts512T1023.setStatus('current')
sub10EthStats15mHistPkts1024TMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistPkts1024TMax.setStatus('current')
sub10EthStats15mHistRxMbpsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 33), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxMbpsMin.setStatus('current')
sub10EthStats15mHistRxMbpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 34), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxMbpsMax.setStatus('current')
sub10EthStats15mHistRxMbpsAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 35), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistRxMbpsAvg.setStatus('current')
sub10EthStats15mHistTxMbpsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 36), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxMbpsMin.setStatus('current')
sub10EthStats15mHistTxMbpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 37), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxMbpsMax.setStatus('current')
sub10EthStats15mHistTxMbpsAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 1, 2, 1, 38), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats15mHistTxMbpsAvg.setStatus('current')
sub10EthStats1dHistIntvls = MibScalar((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistIntvls.setStatus('current')
sub10EthStats1dHistTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2), )
if mibBuilder.loadTexts: sub10EthStats1dHistTable.setStatus('current')
sub10EthStats1dHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10EthIfIndex"), (0, "SUB10SYSTEMS-MIB", "sub10EthStats1dHistIntvl"))
if mibBuilder.loadTexts: sub10EthStats1dHistEntry.setStatus('current')
sub10EthStats1dHistIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: sub10EthStats1dHistIntvl.setStatus('current')
sub10EthStats1dHistTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 2), Sub10DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTime.setStatus('current')
sub10EthStats1dHistRxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxOctets.setStatus('current')
sub10EthStats1dHistRxGoodFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxGoodFrms.setStatus('current')
sub10EthStats1dHistRxBcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxBcastFrms.setStatus('current')
sub10EthStats1dHistRxMcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxMcastFrms.setStatus('current')
sub10EthStats1dHistRxPauseFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxPauseFrms.setStatus('current')
sub10EthStats1dHistRxCRCErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxCRCErrs.setStatus('current')
sub10EthStats1dHistRxAlignErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxAlignErrs.setStatus('current')
sub10EthStats1dHistRxOversized = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxOversized.setStatus('current')
sub10EthStats1dHistRxJabberFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxJabberFrms.setStatus('current')
sub10EthStats1dHistRxUndersized = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxUndersized.setStatus('current')
sub10EthStats1dHistRxFragments = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxFragments.setStatus('current')
sub10EthStats1dHistRxSOFOvrns = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxSOFOvrns.setStatus('current')
sub10EthStats1dHistTxOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxOctets.setStatus('current')
sub10EthStats1dHistTxGoodFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxGoodFrms.setStatus('current')
sub10EthStats1dHistTxBcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxBcastFrms.setStatus('current')
sub10EthStats1dHistTxMcastFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxMcastFrms.setStatus('current')
sub10EthStats1dHistTxPauseFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxPauseFrms.setStatus('current')
sub10EthStats1dHistTxDeferred = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxDeferred.setStatus('current')
sub10EthStats1dHistTxCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxCollsn.setStatus('current')
sub10EthStats1dHistTxSnglCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxSnglCollsn.setStatus('current')
sub10EthStats1dHistTxMlplCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxMlplCollsn.setStatus('current')
sub10EthStats1dHistTxExsvCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxExsvCollsn.setStatus('current')
sub10EthStats1dHistTxLtCollsn = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxLtCollsn.setStatus('current')
sub10EthStats1dHistTxCSenseErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxCSenseErrs.setStatus('current')
sub10EthStats1dHistPkts64Octets = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistPkts64Octets.setStatus('current')
sub10EthStats1dHistPkts65T127 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistPkts65T127.setStatus('current')
sub10EthStats1dHistPkts128T255 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistPkts128T255.setStatus('current')
sub10EthStats1dHistPkts256T511 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistPkts256T511.setStatus('current')
sub10EthStats1dHistPkts512T1023 = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistPkts512T1023.setStatus('current')
sub10EthStats1dHistPkts1024TMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistPkts1024TMax.setStatus('current')
sub10EthStats1dHistRxMbpsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 33), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxMbpsMin.setStatus('current')
sub10EthStats1dHistRxMbpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 34), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxMbpsMax.setStatus('current')
sub10EthStats1dHistRxMbpsAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 35), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistRxMbpsAvg.setStatus('current')
sub10EthStats1dHistTxMbpsMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 36), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxMbpsMin.setStatus('current')
sub10EthStats1dHistTxMbpsMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 37), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxMbpsMax.setStatus('current')
sub10EthStats1dHistTxMbpsAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 4, 3, 3, 2, 2, 1, 38), Sub10ThroughputMbps()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10EthStats1dHistTxMbpsAvg.setStatus('current')
sub10RadioLclLinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 1), Sub10RadioLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclLinkStatus.setStatus('current')
sub10RadioLclTxPower = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-30, 30))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclTxPower.setStatus('current')
sub10RadioLclRxPower = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclRxPower.setStatus('current')
sub10RadioLclVectErr = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclVectErr.setStatus('current')
sub10RadioLclLnkLoss = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclLnkLoss.setStatus('current')
sub10RadioLclAlignmentMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 6), Sub10AlignmentMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclAlignmentMode.setStatus('current')
sub10RadioLclDataRate = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 7), Sub10RadioDataRate()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclDataRate.setStatus('current')
sub10RadioLclMWUType = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 8), Sub10MWUType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclMWUType.setStatus('current')
sub10RadioLclAFER = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclAFER.setStatus('current')
sub10RadioLclRxModulationMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 10), Sub10ModulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclRxModulationMode.setStatus('current')
sub10RadioLclTxModulationMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 1, 11), Sub10ModulationMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioLclTxModulationMode.setStatus('current')
sub10RadioRmtLinkStatus = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 2, 1), Sub10RadioLinkState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioRmtLinkStatus.setStatus('current')
sub10RadioRmtTxPower = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioRmtTxPower.setStatus('current')
sub10RadioRmtRxPower = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 2, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioRmtRxPower.setStatus('current')
sub10RadioRmtVectErr = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioRmtVectErr.setStatus('current')
sub10RadioRmtLnkLoss = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioRmtLnkLoss.setStatus('current')
sub10RadioRmtAlignmentMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 2, 7), Sub10AlignmentMode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioRmtAlignmentMode.setStatus('current')
sub10RadioRmtAFER = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 1, 2, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioRmtAFER.setStatus('current')
sub10RadioMgmtTxPowerLimit = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 2, 1), Sub10TxPowerLimit().clone('txPowerLimitNone')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtTxPowerLimit.setStatus('current')
sub10RadioMgmtTxRxFreq = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 2, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37))).clone(namedValues=NamedValues(("e250Tx71250Rx81250", 0), ("e250Tx71500Rx81500", 1), ("e250Tx71750Rx81750", 2), ("e250Tx72000Rx82000", 3), ("e250Tx72250Rx82250", 4), ("e250Tx72500Rx82500", 5), ("e250Tx72750Rx82750", 6), ("e250Tx73000Rx83000", 7), ("e250Tx73250Rx83250", 8), ("e250Tx73500Rx83500", 9), ("e250Tx73750Rx83750", 10), ("e250Tx74000Rx84000", 11), ("e250Tx74250Rx84250", 12), ("e250Tx74500Rx84500", 13), ("e250Tx74750Rx84750", 14), ("e250Tx75000Rx85000", 15), ("e250Tx75250Rx85250", 16), ("e250Tx75500Rx85500", 17), ("e250Tx75750Rx85750", 18), ("e500Tx72375Rx82375", 19), ("e500Tx72625Rx82625", 20), ("e500Tx72875Rx82875", 21), ("e500Tx73125Rx83125", 22), ("e500Tx73375Rx83375", 23), ("e500Tx73625Rx83625", 24), ("e500Tx73875Rx83875", 25), ("e500Tx74125Rx84125", 26), ("e500Tx74375Rx84375", 27), ("e500Tx74625Rx84625", 28), ("v500Tx58500Rx61500", 29), ("v500Tx58500Rx62000", 30), ("v500Tx58500Rx62500", 31), ("v500Tx59000Rx61500", 32), ("v500Tx59000Rx62000", 33), ("v500Tx59000Rx62500", 34), ("v500Tx59500Rx61500", 35), ("v500Tx59500Rx62000", 36), ("v500Tx59500Rx62500", 37))).clone('v500Tx59500Rx62000')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtTxRxFreq.setStatus('current')
sub10RadioMgmtAPCMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 2, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("apcModeDisabled", 0), ("apcModeVariable", 1), ("apcModeFixed", 2))).clone('apcModeDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtAPCMode.setStatus('current')
sub10RadioMgmtModulationMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 2, 4), Sub10ModulationMode().clone('mode8psk')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtModulationMode.setStatus('current')
sub10RadioMgmtAmod = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 2, 5), Sub10State().clone('stateDisabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtAmod.setStatus('current')
sub10RadioMgmtAlignmentMode = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 2, 6), Sub10AlignmentMode()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtAlignmentMode.setStatus('current')
sub10RadioMgmtMWUChannelWidth = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 2, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("channelWidth250", 0), ("channelWidth500", 1))).clone('channelWidth500')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtMWUChannelWidth.setStatus('current')
sub10RadioMgmtDataRate = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 2, 10), Sub10RadioDataRate()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtDataRate.setStatus('current')
sub10RadioMgmtStats1dPersist = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 2, 9, 1), Sub10State().clone('stateEnabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtStats1dPersist.setStatus('current')
sub10RadioMgmtStatsActiveTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 5, 2, 9, 4), )
if mibBuilder.loadTexts: sub10RadioMgmtStatsActiveTable.setStatus('current')
sub10RadioMgmtStatsActiveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 5, 2, 9, 4, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10RadioMgmtStatsActiveIndex"))
if mibBuilder.loadTexts: sub10RadioMgmtStatsActiveEntry.setStatus('current')
sub10RadioMgmtStatsActiveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 2, 9, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 29)))
if mibBuilder.loadTexts: sub10RadioMgmtStatsActiveIndex.setStatus('current')
sub10RadioMgmtStatsActiveName = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 2, 9, 4, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 22))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioMgmtStatsActiveName.setStatus('current')
sub10RadioMgmtStatsActiveState = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 2, 9, 4, 1, 3), Sub10State().clone('stateEnabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sub10RadioMgmtStatsActiveState.setStatus('current')
sub10RadioStatsTimeElapsed = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsTimeElapsed.setStatus('current')
sub10RadioStatsCurrTxPowerMin = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrTxPowerMin.setStatus('current')
sub10RadioStatsCurrTxPowerMax = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrTxPowerMax.setStatus('current')
sub10RadioStatsCurrTxPowerAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrTxPowerAvg.setStatus('current')
sub10RadioStatsCurrRxPowerMin = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRxPowerMin.setStatus('current')
sub10RadioStatsCurrRxPowerMax = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRxPowerMax.setStatus('current')
sub10RadioStatsCurrRxPowerAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRxPowerAvg.setStatus('current')
sub10RadioStatsCurrVectErrMin = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrVectErrMin.setStatus('current')
sub10RadioStatsCurrVectErrMax = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrVectErrMax.setStatus('current')
sub10RadioStatsCurrVectErrAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrVectErrAvg.setStatus('current')
sub10RadioStatsCurrLnkLossMin = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrLnkLossMin.setStatus('current')
sub10RadioStatsCurrLnkLossMax = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrLnkLossMax.setStatus('current')
sub10RadioStatsCurrLnkLossAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrLnkLossAvg.setStatus('current')
sub10RadioStatsCurrRxFrms = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRxFrms.setStatus('current')
sub10RadioStatsCurrTxFrms = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrTxFrms.setStatus('current')
sub10RadioStatsCurrRxPkts = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRxPkts.setStatus('current')
sub10RadioStatsCurrTxPkts = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrTxPkts.setStatus('current')
sub10RadioStatsCurrRxMgmtPkts = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRxMgmtPkts.setStatus('current')
sub10RadioStatsCurrTxMgmtPkts = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 18), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrTxMgmtPkts.setStatus('current')
sub10RadioStatsCurrRxBadFrms = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 19), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRxBadFrms.setStatus('current')
sub10RadioStatsCurrMWUTempMin = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrMWUTempMin.setStatus('current')
sub10RadioStatsCurrMWUTempMax = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrMWUTempMax.setStatus('current')
sub10RadioStatsCurrMWUTempAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrMWUTempAvg.setStatus('current')
sub10RadioStatsCurrQPSKTo8PSK = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrQPSKTo8PSK.setStatus('current')
sub10RadioStatsCurr8PSKToQPSK = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurr8PSKToQPSK.setStatus('current')
sub10RadioStatsCurrAFERMin = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 29), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrAFERMin.setStatus('current')
sub10RadioStatsCurrAFERMax = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 30), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrAFERMax.setStatus('current')
sub10RadioStatsCurrAFERAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrAFERAvg.setStatus('current')
sub10RadioStatsCurrRmtTxPowerAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 32), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRmtTxPowerAvg.setStatus('current')
sub10RadioStatsCurrRmtRxPowerAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRmtRxPowerAvg.setStatus('current')
sub10RadioStatsCurrRmtVectErrAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 34), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRmtVectErrAvg.setStatus('current')
sub10RadioStatsCurrRmtLnkLossAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 35), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRmtLnkLossAvg.setStatus('current')
sub10RadioStatsCurrRmtMWUTempAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRmtMWUTempAvg.setStatus('current')
sub10RadioStatsCurrRmtAFERAvg = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 37), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRmtAFERAvg.setStatus('current')
sub10RadioStatsCurrRxQPSK = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRxQPSK.setStatus('current')
sub10RadioStatsCurrRx8PSK = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 39), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrRx8PSK.setStatus('current')
sub10RadioStatsCurrTxQPSK = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 40), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrTxQPSK.setStatus('current')
sub10RadioStatsCurrTx8PSK = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 2, 41), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStatsCurrTx8PSK.setStatus('current')
sub10RadioStats1mHistIntvls = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 60))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistIntvls.setStatus('current')
sub10RadioStats1mHistTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2), )
if mibBuilder.loadTexts: sub10RadioStats1mHistTable.setStatus('current')
sub10RadioStats1mHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10RadioStats1mHistIntvl"))
if mibBuilder.loadTexts: sub10RadioStats1mHistEntry.setStatus('current')
sub10RadioStats1mHistIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60)))
if mibBuilder.loadTexts: sub10RadioStats1mHistIntvl.setStatus('current')
sub10RadioStats1mHistTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 2), Sub10DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistTime.setStatus('current')
sub10RadioStats1mHistTxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistTxPowerMin.setStatus('current')
sub10RadioStats1mHistTxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistTxPowerMax.setStatus('current')
sub10RadioStats1mHistTxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistTxPowerAvg.setStatus('current')
sub10RadioStats1mHistRxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistRxPowerMin.setStatus('current')
sub10RadioStats1mHistRxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistRxPowerMax.setStatus('current')
sub10RadioStats1mHistRxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistRxPowerAvg.setStatus('current')
sub10RadioStats1mHistVectErrMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistVectErrMin.setStatus('current')
sub10RadioStats1mHistVectErrMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistVectErrMax.setStatus('current')
sub10RadioStats1mHistVectErrAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistVectErrAvg.setStatus('current')
sub10RadioStats1mHistLnkLossMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistLnkLossMin.setStatus('current')
sub10RadioStats1mHistLnkLossMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistLnkLossMax.setStatus('current')
sub10RadioStats1mHistLnkLossAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistLnkLossAvg.setStatus('current')
sub10RadioStats1mHistMWUTempMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistMWUTempMin.setStatus('current')
sub10RadioStats1mHistMWUTempMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistMWUTempMax.setStatus('current')
sub10RadioStats1mHistMWUTempAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistMWUTempAvg.setStatus('current')
sub10RadioStats1mHistRxFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistRxFrms.setStatus('current')
sub10RadioStats1mHistTxFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistTxFrms.setStatus('current')
sub10RadioStats1mHistRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistRxPkts.setStatus('current')
sub10RadioStats1mHistTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistTxPkts.setStatus('current')
sub10RadioStats1mHistRxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistRxMgmtPkts.setStatus('current')
sub10RadioStats1mHistTxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistTxMgmtPkts.setStatus('current')
sub10RadioStats1mHistRxBadFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistRxBadFrms.setStatus('current')
sub10RadioStats1mHistQPSKTo8PSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistQPSKTo8PSK.setStatus('current')
sub10RadioStats1mHist8PSKToQPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHist8PSKToQPSK.setStatus('current')
sub10RadioStats1mHistAFERMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistAFERMin.setStatus('current')
sub10RadioStats1mHistAFERMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistAFERMax.setStatus('current')
sub10RadioStats1mHistAFERAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistAFERAvg.setStatus('current')
sub10RadioStats1mHistRxQPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistRxQPSK.setStatus('current')
sub10RadioStats1mHistRx8PSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistRx8PSK.setStatus('current')
sub10RadioStats1mHistTxQPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistTxQPSK.setStatus('current')
sub10RadioStats1mHistTx8PSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 1, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1mHistTx8PSK.setStatus('current')
sub10RadioStats15mHistIntvls = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 96))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistIntvls.setStatus('current')
sub10RadioStats15mHistTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2), )
if mibBuilder.loadTexts: sub10RadioStats15mHistTable.setStatus('current')
sub10RadioStats15mHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10RadioStats15mHistIntvl"))
if mibBuilder.loadTexts: sub10RadioStats15mHistEntry.setStatus('current')
sub10RadioStats15mHistIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 96)))
if mibBuilder.loadTexts: sub10RadioStats15mHistIntvl.setStatus('current')
sub10RadioStats15mHistTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 2), Sub10DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistTime.setStatus('current')
sub10RadioStats15mHistTxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistTxPowerMin.setStatus('current')
sub10RadioStats15mHistTxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistTxPowerMax.setStatus('current')
sub10RadioStats15mHistTxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistTxPowerAvg.setStatus('current')
sub10RadioStats15mHistRxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistRxPowerMin.setStatus('current')
sub10RadioStats15mHistRxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistRxPowerMax.setStatus('current')
sub10RadioStats15mHistRxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistRxPowerAvg.setStatus('current')
sub10RadioStats15mHistVectErrMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistVectErrMin.setStatus('current')
sub10RadioStats15mHistVectErrMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistVectErrMax.setStatus('current')
sub10RadioStats15mHistVectErrAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistVectErrAvg.setStatus('current')
sub10RadioStats15mHistLnkLossMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistLnkLossMin.setStatus('current')
sub10RadioStats15mHistLnkLossMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistLnkLossMax.setStatus('current')
sub10RadioStats15mHistLnkLossAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistLnkLossAvg.setStatus('current')
sub10RadioStats15mHistMWUTempMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistMWUTempMin.setStatus('current')
sub10RadioStats15mHistMWUTempMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistMWUTempMax.setStatus('current')
sub10RadioStats15mHistMWUTempAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistMWUTempAvg.setStatus('current')
sub10RadioStats15mHistRxFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistRxFrms.setStatus('current')
sub10RadioStats15mHistTxFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistTxFrms.setStatus('current')
sub10RadioStats15mHistRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistRxPkts.setStatus('current')
sub10RadioStats15mHistTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistTxPkts.setStatus('current')
sub10RadioStats15mHistRxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistRxMgmtPkts.setStatus('current')
sub10RadioStats15mHistTxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistTxMgmtPkts.setStatus('current')
sub10RadioStats15mHistRxBadFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistRxBadFrms.setStatus('current')
sub10RadioStats15mHistQPSKTo8PSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistQPSKTo8PSK.setStatus('current')
sub10RadioStats15mHist8PSKToQPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHist8PSKToQPSK.setStatus('current')
sub10RadioStats15mHistAFERMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistAFERMin.setStatus('current')
sub10RadioStats15mHistAFERMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistAFERMax.setStatus('current')
sub10RadioStats15mHistAFERAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistAFERAvg.setStatus('current')
sub10RadioStats15mHistRxQPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistRxQPSK.setStatus('current')
sub10RadioStats15mHistRx8PSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistRx8PSK.setStatus('current')
sub10RadioStats15mHistTxQPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistTxQPSK.setStatus('current')
sub10RadioStats15mHistTx8PSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 2, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats15mHistTx8PSK.setStatus('current')
sub10RadioStats1dHistIntvls = MibScalar((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 30))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistIntvls.setStatus('current')
sub10RadioStats1dHistTable = MibTable((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2), )
if mibBuilder.loadTexts: sub10RadioStats1dHistTable.setStatus('current')
sub10RadioStats1dHistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1), ).setIndexNames((0, "SUB10SYSTEMS-MIB", "sub10RadioStats1dHistIntvl"))
if mibBuilder.loadTexts: sub10RadioStats1dHistEntry.setStatus('current')
sub10RadioStats1dHistIntvl = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 30)))
if mibBuilder.loadTexts: sub10RadioStats1dHistIntvl.setStatus('current')
sub10RadioStats1dHistTime = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 2), Sub10DateTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistTime.setStatus('current')
sub10RadioStats1dHistTxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistTxPowerMin.setStatus('current')
sub10RadioStats1dHistTxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistTxPowerMax.setStatus('current')
sub10RadioStats1dHistTxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistTxPowerAvg.setStatus('current')
sub10RadioStats1dHistRxPowerMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistRxPowerMin.setStatus('current')
sub10RadioStats1dHistRxPowerMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistRxPowerMax.setStatus('current')
sub10RadioStats1dHistRxPowerAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 8), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistRxPowerAvg.setStatus('current')
sub10RadioStats1dHistVectErrMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistVectErrMin.setStatus('current')
sub10RadioStats1dHistVectErrMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistVectErrMax.setStatus('current')
sub10RadioStats1dHistVectErrAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32)).clone('0')).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistVectErrAvg.setStatus('current')
sub10RadioStats1dHistLnkLossMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistLnkLossMin.setStatus('current')
sub10RadioStats1dHistLnkLossMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 13), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistLnkLossMax.setStatus('current')
sub10RadioStats1dHistLnkLossAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 14), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setUnits('dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistLnkLossAvg.setStatus('current')
sub10RadioStats1dHistMWUTempMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistMWUTempMin.setStatus('current')
sub10RadioStats1dHistMWUTempMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistMWUTempMax.setStatus('current')
sub10RadioStats1dHistMWUTempAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-100, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistMWUTempAvg.setStatus('current')
sub10RadioStats1dHistRxFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 22), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistRxFrms.setStatus('current')
sub10RadioStats1dHistTxFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 23), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistTxFrms.setStatus('current')
sub10RadioStats1dHistRxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 24), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistRxPkts.setStatus('current')
sub10RadioStats1dHistTxPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistTxPkts.setStatus('current')
sub10RadioStats1dHistRxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistRxMgmtPkts.setStatus('current')
sub10RadioStats1dHistTxMgmtPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistTxMgmtPkts.setStatus('current')
sub10RadioStats1dHistRxBadFrms = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistRxBadFrms.setStatus('current')
sub10RadioStats1dHistQPSKTo8PSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistQPSKTo8PSK.setStatus('current')
sub10RadioStats1dHist8PSKToQPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHist8PSKToQPSK.setStatus('current')
sub10RadioStats1dHistAFERMin = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 31), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistAFERMin.setStatus('current')
sub10RadioStats1dHistAFERMax = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 32), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistAFERMax.setStatus('current')
sub10RadioStats1dHistAFERAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistAFERAvg.setStatus('current')
sub10RadioStats1dHistRxQPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistRxQPSK.setStatus('current')
sub10RadioStats1dHistRx8PSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 35), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistRx8PSK.setStatus('current')
sub10RadioStats1dHistTxQPSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 36), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistTxQPSK.setStatus('current')
sub10RadioStats1dHistTx8PSK = MibTableColumn((1, 3, 6, 1, 4, 1, 39003, 5, 3, 3, 3, 2, 1, 37), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sub10RadioStats1dHistTx8PSK.setStatus('current')
sub10Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 39003, 20, 1, 1)).setObjects(("SUB10SYSTEMS-MIB", "sub10NotificationsGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitLocalStatusGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitLclAlarmStateEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitRemoteStatusGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSystemGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtIpGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtVlanGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtUsersGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtUserEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtTimeGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmsGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTrpDstEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpUserEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpAccessEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTargetEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareBankEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtDNSEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtEncryptionGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtLicenseGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSyncEGrp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtActionsGrp"), ("SUB10SYSTEMS-MIB", "sub10EthLclStatusEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthRmtStatusEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtPhyEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanAllowedEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSQEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSVlanEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSPCPEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSDSCPEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSMPLSEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtStatsActiveEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthernetStatsGrp"), ("SUB10SYSTEMS-MIB", "sub10EthernetStatsCurrEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthernetStats15mHistoryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistoryGrp"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioLocalStatusGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioRemoteStatusGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtStatsGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtStatsActiveEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrentGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistoryGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistoryGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistEntryGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistoryGrp"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistEntryGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10Compliance = sub10Compliance.setStatus('current')
sub10NotificationsGrp = NotificationGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 1)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitAlarm"), ("SUB10SYSTEMS-MIB", "sub10EthernetAlarm"), ("SUB10SYSTEMS-MIB", "sub10RadioAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10NotificationsGrp = sub10NotificationsGrp.setStatus('current')
sub10UnitLocalStatusGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 2)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitLclTime"), ("SUB10SYSTEMS-MIB", "sub10UnitLclUnitType"), ("SUB10SYSTEMS-MIB", "sub10UnitLclDescription"), ("SUB10SYSTEMS-MIB", "sub10UnitLclHWSerialNumber"), ("SUB10SYSTEMS-MIB", "sub10UnitLclTerminalName"), ("SUB10SYSTEMS-MIB", "sub10UnitLclTerminalType"), ("SUB10SYSTEMS-MIB", "sub10UnitLclLinkName"), ("SUB10SYSTEMS-MIB", "sub10UnitLclLinkId"), ("SUB10SYSTEMS-MIB", "sub10UnitLclSiteName"), ("SUB10SYSTEMS-MIB", "sub10UnitLclFirmwareLoadedBank"), ("SUB10SYSTEMS-MIB", "sub10UnitLclFirmwareVersion"), ("SUB10SYSTEMS-MIB", "sub10UnitLclIpAddress"), ("SUB10SYSTEMS-MIB", "sub10UnitLclMWUTemperature"), ("SUB10SYSTEMS-MIB", "sub10UnitLclNTPSyncStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitLclRadioDataRate"), ("SUB10SYSTEMS-MIB", "sub10UnitLclMWUType"), ("SUB10SYSTEMS-MIB", "sub10UnitLclFPGAVersion"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitLocalStatusGrp = sub10UnitLocalStatusGrp.setStatus('current')
sub10UnitLclAlarmStateEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 3)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitLclAlarmState"), ("SUB10SYSTEMS-MIB", "sub10UnitLclAlarmStateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitLclAlarmStateEntryGrp = sub10UnitLclAlarmStateEntryGrp.setStatus('current')
sub10UnitRemoteStatusGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 4)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitRmtUnitType"), ("SUB10SYSTEMS-MIB", "sub10UnitRmtTime"), ("SUB10SYSTEMS-MIB", "sub10UnitRmtTerminalName"), ("SUB10SYSTEMS-MIB", "sub10UnitRmtTerminalType"), ("SUB10SYSTEMS-MIB", "sub10UnitRmtLinkName"), ("SUB10SYSTEMS-MIB", "sub10UnitRmtLinkId"), ("SUB10SYSTEMS-MIB", "sub10UnitRmtHWSerialNumber"), ("SUB10SYSTEMS-MIB", "sub10UnitRmtFirmwareVersion"), ("SUB10SYSTEMS-MIB", "sub10UnitRmtIpAddress"), ("SUB10SYSTEMS-MIB", "sub10UnitRmtMWUTemperature"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitRemoteStatusGrp = sub10UnitRemoteStatusGrp.setStatus('current')
sub10UnitMgmtSystemGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 5)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtTerminalName"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtLinkName"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtLinkId"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSiteName"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtContactName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtSystemGrp = sub10UnitMgmtSystemGrp.setStatus('current')
sub10UnitMgmtIpGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 6)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtIpMode"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtIpAddress"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtIpSubnetMask"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtIpDefGateway"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtIpDHCP"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtIpGrp = sub10UnitMgmtIpGrp.setStatus('current')
sub10UnitMgmtVlanGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 7)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtVlanState"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtVlanId"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtVlanPriority"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtVlanDSCP"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtVlanDEI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtVlanGrp = sub10UnitMgmtVlanGrp.setStatus('current')
sub10UnitMgmtUsersGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 8)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtUsersNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtUsersGrp = sub10UnitMgmtUsersGrp.setStatus('current')
sub10UnitMgmtUserEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 9)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtUserRowStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtUserName"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtUserGroup"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtUserPassword"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtUserPasswordVerify"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtUserEntryGrp = sub10UnitMgmtUserEntryGrp.setStatus('current')
sub10UnitMgmtTimeGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 10)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtTimeLocal"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtTimeNTPEnabled"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtTimeNTPServer1"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtTimeNTPServer2"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtTimeNTPPort"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtTimeNTPSyncStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtDateTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtTimeGrp = sub10UnitMgmtTimeGrp.setStatus('current')
sub10UnitMgmtAlarmEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 11)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRowStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmName"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmSeverity"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMeasObject"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMonitorIntvl"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRaiseOper"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRaiseThresh"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmClearOper"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmClearThresh"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmRaiseIntvls"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmClearIntvls"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmType"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmSmtpAddress"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmToSyslog"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmEnabled"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMeasObjectVal"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmToSNMP"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmMeasObjIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtAlarmEntryGrp = sub10UnitMgmtAlarmEntryGrp.setStatus('current')
sub10UnitMgmtAlarmsGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 12)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtAlarmsUserDefStart"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtAlarmsGrp = sub10UnitMgmtAlarmsGrp.setStatus('current')
sub10UnitMgmtSnmpGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 13)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpAgent"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTraps"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpv320Mib"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpv3"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpEngineIdFormat"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpEngineIdText"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpEngineId"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpOperAuthProto"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpOperPrivProto"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpAdminAuthProto"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpAdminPrivProto"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpMaintAuthProto"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpMaintPrivProto"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtSnmpGrp = sub10UnitMgmtSnmpGrp.setStatus('current')
sub10UnitMgmtSnmpTrpDstEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 14)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTrpDstRowStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTrpDstIpAddr"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTrpDstCommunity"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtSnmpTrpDstEntryGrp = sub10UnitMgmtSnmpTrpDstEntryGrp.setStatus('current')
sub10UnitMgmtSnmpUserEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 15)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpUserRowStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpUserName"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpUserGroup"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpUserAuthPwd"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpUserAuthPwdChk"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpUserPrivPwd"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpUserPrivPwdChk"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtSnmpUserEntryGrp = sub10UnitMgmtSnmpUserEntryGrp.setStatus('current')
sub10UnitMgmtSnmpAccessEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 16)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpAccessRowStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpAccessName"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpAccessIpAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtSnmpAccessEntryGrp = sub10UnitMgmtSnmpAccessEntryGrp.setStatus('current')
sub10UnitMgmtSnmpTargetEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 17)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTargetRowStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTargetName"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTargetIpAddr"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtSnmpTargetUserName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtSnmpTargetEntryGrp = sub10UnitMgmtSnmpTargetEntryGrp.setStatus('current')
sub10UnitMgmtFirmwareGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 18)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareSelectBank"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareLoadedBank"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareVersion"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareBootVersion"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareAction"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareUplImage"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareUplSvrIp"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareFromBank"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareToBank"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareActStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareActProgress"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtFirmwareGrp = sub10UnitMgmtFirmwareGrp.setStatus('current')
sub10UnitMgmtFirmwareBankEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 19)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareBankVersion"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtFirmwareBankImage"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtFirmwareBankEntryGrp = sub10UnitMgmtFirmwareBankEntryGrp.setStatus('current')
sub10UnitMgmtDNSEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 20)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtDNServer"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtDNSEntryGrp = sub10UnitMgmtDNSEntryGrp.setStatus('current')
sub10UnitMgmtEncryptionGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 21)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtEncryptMode"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtEncryptKey"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtEncryptionGrp = sub10UnitMgmtEncryptionGrp.setStatus('current')
sub10UnitMgmtLicenseGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 22)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtLicenseKey"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtLicenseAES"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtLicenseGrp = sub10UnitMgmtLicenseGrp.setStatus('current')
sub10UnitMgmtSyncEGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 23)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtSyncEMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtSyncEGrp = sub10UnitMgmtSyncEGrp.setStatus('current')
sub10UnitMgmtActionsGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 24)).setObjects(("SUB10SYSTEMS-MIB", "sub10UnitMgmtTransaction"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtTransactionStatus"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtRollbackTimeout"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtTransactionMode"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtResetAction"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtResetStatsGroup"), ("SUB10SYSTEMS-MIB", "sub10UnitMgmtResetAlarmsType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10UnitMgmtActionsGrp = sub10UnitMgmtActionsGrp.setStatus('current')
sub10EthLclStatusEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 25)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthLclLinkStatus"), ("SUB10SYSTEMS-MIB", "sub10EthLclMacAddress"), ("SUB10SYSTEMS-MIB", "sub10EthLclSpeed"), ("SUB10SYSTEMS-MIB", "sub10EthLclDuplex"), ("SUB10SYSTEMS-MIB", "sub10EthLclMDI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthLclStatusEntryGrp = sub10EthLclStatusEntryGrp.setStatus('current')
sub10EthRmtStatusEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 26)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthRmtLinkStatus"), ("SUB10SYSTEMS-MIB", "sub10EthRmtMacAddress"), ("SUB10SYSTEMS-MIB", "sub10EthRmtSpeed"), ("SUB10SYSTEMS-MIB", "sub10EthRmtDuplex"), ("SUB10SYSTEMS-MIB", "sub10EthRmtMDI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthRmtStatusEntryGrp = sub10EthRmtStatusEntryGrp.setStatus('current')
sub10EthMgmtPhyEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 27)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtPhyAutoNeg"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtPhySpeed"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtPhyDuplex"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtPhyMDI"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtPhyEntryGrp = sub10EthMgmtPhyEntryGrp.setStatus('current')
sub10EthMgmtVlanGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 28)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanFiltering"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanDefaultEnabled"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanDefaultId"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanDefaultPriority"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanDefaultDEI"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanIngressAction"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanEgressAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtVlanGrp = sub10EthMgmtVlanGrp.setStatus('current')
sub10EthMgmtVlanAllowedEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 29)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanAllowedRowStatus"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtVlanAllowedId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtVlanAllowedEntryGrp = sub10EthMgmtVlanAllowedEntryGrp.setStatus('current')
sub10EthMgmtQoSGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 30)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSActiveState"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSMode"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSUntaggedQueue"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSVlanMappingNumber"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSDSCPMappingNumber"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSMPLSMappingNumber"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtQoSGrp = sub10EthMgmtQoSGrp.setStatus('current')
sub10EthMgmtQoSQEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 31)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSQSchedulingType"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSQDWRRWeight"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSQCongestionPolicy"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSQSizeMax"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSQLen"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtQoSQEntryGrp = sub10EthMgmtQoSQEntryGrp.setStatus('current')
sub10EthMgmtQoSVlanEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 32)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSVlanId"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSVlanQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtQoSVlanEntryGrp = sub10EthMgmtQoSVlanEntryGrp.setStatus('current')
sub10EthMgmtQoSPCPEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 33)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSPCPQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtQoSPCPEntryGrp = sub10EthMgmtQoSPCPEntryGrp.setStatus('current')
sub10EthMgmtQoSDSCPEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 34)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSDSCPMarking"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSDSCPQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtQoSDSCPEntryGrp = sub10EthMgmtQoSDSCPEntryGrp.setStatus('current')
sub10EthMgmtQoSMPLSEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 35)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSMPLSTrafficClass"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtQoSMPLSQueue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtQoSMPLSEntryGrp = sub10EthMgmtQoSMPLSEntryGrp.setStatus('current')
sub10EthMgmtStatsActiveEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 36)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthMgmtStatsActiveName"), ("SUB10SYSTEMS-MIB", "sub10EthMgmtStatsActiveState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthMgmtStatsActiveEntryGrp = sub10EthMgmtStatsActiveEntryGrp.setStatus('current')
sub10EthernetStatsGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 37)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthStatsTimeElapsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthernetStatsGrp = sub10EthernetStatsGrp.setStatus('current')
sub10EthernetStatsCurrEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 38)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxOctets"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxGoodFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxBcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxMcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxPauseFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxCRCErrs"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxAlignErrs"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxOversized"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxJabberFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxUndersized"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxFragments"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxSOFOvrns"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxOctets"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxGoodFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxBcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxMcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxPauseFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxDeferred"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxSnglCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxMlplCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxExsvCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxLtCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxCSenseErrs"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrPkts64Octets"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrPkts65T127"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrPkts128T255"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrPkts256T511"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrPkts512T1023"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrPkts1024TMax"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxMbps"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxMbps"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxMbpsMin"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxMbpsMax"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRxMbpsAvg"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxMbpsMin"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxMbpsMax"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrTxMbpsAvg"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRmtRxMbpsAvg"), ("SUB10SYSTEMS-MIB", "sub10EthStatsCurrRmtTxMbpsAvg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthernetStatsCurrEntryGrp = sub10EthernetStatsCurrEntryGrp.setStatus('current')
sub10EthernetStats15mHistoryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 39)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthStats15mHistIntvls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthernetStats15mHistoryGrp = sub10EthernetStats15mHistoryGrp.setStatus('current')
sub10EthStats15mHistEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 40)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTime"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxOctets"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxGoodFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxBcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxMcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxPauseFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxCRCErrs"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxAlignErrs"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxOversized"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxJabberFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxUndersized"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxFragments"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxSOFOvrns"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxOctets"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxGoodFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxBcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxMcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxPauseFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxDeferred"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxSnglCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxMlplCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxExsvCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxLtCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxCSenseErrs"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistPkts64Octets"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistPkts65T127"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistPkts128T255"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistPkts256T511"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistPkts512T1023"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistPkts1024TMax"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxMbpsMin"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxMbpsMax"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistRxMbpsAvg"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxMbpsMin"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxMbpsMax"), ("SUB10SYSTEMS-MIB", "sub10EthStats15mHistTxMbpsAvg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthStats15mHistEntryGrp = sub10EthStats15mHistEntryGrp.setStatus('current')
sub10EthStats1dHistoryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 41)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthStats1dHistIntvls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthStats1dHistoryGrp = sub10EthStats1dHistoryGrp.setStatus('current')
sub10EthStats1dHistEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 42)).setObjects(("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTime"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxOctets"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxGoodFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxBcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxMcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxPauseFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxCRCErrs"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxAlignErrs"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxOversized"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxJabberFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxUndersized"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxFragments"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxSOFOvrns"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxOctets"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxGoodFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxBcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxMcastFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxPauseFrms"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxDeferred"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxSnglCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxMlplCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxExsvCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxLtCollsn"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxCSenseErrs"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistPkts64Octets"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistPkts65T127"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistPkts128T255"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistPkts256T511"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistPkts512T1023"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistPkts1024TMax"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxMbpsMin"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxMbpsMax"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistRxMbpsAvg"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxMbpsMin"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxMbpsMax"), ("SUB10SYSTEMS-MIB", "sub10EthStats1dHistTxMbpsAvg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10EthStats1dHistEntryGrp = sub10EthStats1dHistEntryGrp.setStatus('current')
sub10RadioLocalStatusGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 43)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioLclLinkStatus"), ("SUB10SYSTEMS-MIB", "sub10RadioLclTxPower"), ("SUB10SYSTEMS-MIB", "sub10RadioLclRxPower"), ("SUB10SYSTEMS-MIB", "sub10RadioLclVectErr"), ("SUB10SYSTEMS-MIB", "sub10RadioLclLnkLoss"), ("SUB10SYSTEMS-MIB", "sub10RadioLclAlignmentMode"), ("SUB10SYSTEMS-MIB", "sub10RadioLclDataRate"), ("SUB10SYSTEMS-MIB", "sub10RadioLclMWUType"), ("SUB10SYSTEMS-MIB", "sub10RadioLclAFER"), ("SUB10SYSTEMS-MIB", "sub10RadioLclRxModulationMode"), ("SUB10SYSTEMS-MIB", "sub10RadioLclTxModulationMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioLocalStatusGrp = sub10RadioLocalStatusGrp.setStatus('current')
sub10RadioRemoteStatusGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 44)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioRmtLinkStatus"), ("SUB10SYSTEMS-MIB", "sub10RadioRmtTxPower"), ("SUB10SYSTEMS-MIB", "sub10RadioRmtRxPower"), ("SUB10SYSTEMS-MIB", "sub10RadioRmtVectErr"), ("SUB10SYSTEMS-MIB", "sub10RadioRmtLnkLoss"), ("SUB10SYSTEMS-MIB", "sub10RadioRmtAlignmentMode"), ("SUB10SYSTEMS-MIB", "sub10RadioRmtAFER"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioRemoteStatusGrp = sub10RadioRemoteStatusGrp.setStatus('current')
sub10RadioMgmtGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 45)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioMgmtTxPowerLimit"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtTxRxFreq"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtAPCMode"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtModulationMode"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtAmod"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtAlignmentMode"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtMWUChannelWidth"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtDataRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioMgmtGrp = sub10RadioMgmtGrp.setStatus('current')
sub10RadioMgmtStatsGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 46)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioMgmtStats1dPersist"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioMgmtStatsGrp = sub10RadioMgmtStatsGrp.setStatus('current')
sub10RadioMgmtStatsActiveEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 47)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioMgmtStatsActiveName"), ("SUB10SYSTEMS-MIB", "sub10RadioMgmtStatsActiveState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioMgmtStatsActiveEntryGrp = sub10RadioMgmtStatsActiveEntryGrp.setStatus('current')
sub10RadioStatsGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 48)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioStatsTimeElapsed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioStatsGrp = sub10RadioStatsGrp.setStatus('current')
sub10RadioStatsCurrentGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 49)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrTxPowerMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrTxPowerMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrTxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRxPowerMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRxPowerMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrVectErrMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrVectErrMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrVectErrAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrLnkLossMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrLnkLossMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrLnkLossAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRxFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrTxFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRxPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrTxPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRxMgmtPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrTxMgmtPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRxBadFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrMWUTempMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrMWUTempMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrMWUTempAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrQPSKTo8PSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurr8PSKToQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrAFERMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrAFERMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrAFERAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRmtTxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRmtRxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRmtVectErrAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRmtLnkLossAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRmtMWUTempAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRmtAFERAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRxQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrRx8PSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrTxQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStatsCurrTx8PSK"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioStatsCurrentGrp = sub10RadioStatsCurrentGrp.setStatus('current')
sub10RadioStats1mHistoryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 50)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistIntvls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioStats1mHistoryGrp = sub10RadioStats1mHistoryGrp.setStatus('current')
sub10RadioStats1mHistEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 51)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistTime"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistTxPowerMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistTxPowerMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistTxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistRxPowerMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistRxPowerMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistRxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistVectErrMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistVectErrMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistVectErrAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistLnkLossMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistLnkLossMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistLnkLossAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistMWUTempMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistMWUTempMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistMWUTempAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistRxFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistTxFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistRxPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistTxPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistRxMgmtPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistTxMgmtPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistRxBadFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistQPSKTo8PSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHist8PSKToQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistAFERMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistAFERMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistAFERAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistRxQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistRx8PSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistTxQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1mHistTx8PSK"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioStats1mHistEntryGrp = sub10RadioStats1mHistEntryGrp.setStatus('current')
sub10RadioStats15mHistoryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 52)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistIntvls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioStats15mHistoryGrp = sub10RadioStats15mHistoryGrp.setStatus('current')
sub10RadioStats15mHistEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 53)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistTime"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistTxPowerMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistTxPowerMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistTxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistRxPowerMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistRxPowerMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistRxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistVectErrMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistVectErrMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistVectErrAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistLnkLossMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistLnkLossMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistLnkLossAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistMWUTempMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistMWUTempMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistMWUTempAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistRxFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistTxFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistRxPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistTxPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistRxMgmtPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistTxMgmtPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistRxBadFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistQPSKTo8PSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHist8PSKToQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistAFERMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistAFERMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistAFERAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistRxQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistRx8PSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistTxQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats15mHistTx8PSK"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioStats15mHistEntryGrp = sub10RadioStats15mHistEntryGrp.setStatus('current')
sub10RadioStats1dHistoryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 54)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistIntvls"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioStats1dHistoryGrp = sub10RadioStats1dHistoryGrp.setStatus('current')
sub10RadioStats1dHistEntryGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 39003, 20, 2, 55)).setObjects(("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistTime"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistTxPowerMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistTxPowerMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistTxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistRxPowerMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistRxPowerMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistRxPowerAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistVectErrMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistVectErrMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistVectErrAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistLnkLossMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistLnkLossMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistLnkLossAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistMWUTempMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistMWUTempMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistMWUTempAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistRxFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistTxFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistRxPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistTxPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistRxMgmtPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistTxMgmtPkts"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistRxBadFrms"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistQPSKTo8PSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHist8PSKToQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistAFERMin"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistAFERMax"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistAFERAvg"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistRxQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistRx8PSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistTxQPSK"), ("SUB10SYSTEMS-MIB", "sub10RadioStats1dHistTx8PSK"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    sub10RadioStats1dHistEntryGrp = sub10RadioStats1dHistEntryGrp.setStatus('current')
mibBuilder.exportSymbols("SUB10SYSTEMS-MIB", sub10RadioStats1mHistRxPowerMin=sub10RadioStats1mHistRxPowerMin, sub10RadioStatsCurrRxMgmtPkts=sub10RadioStatsCurrRxMgmtPkts, sub10RadioStats1mHistRx8PSK=sub10RadioStats1mHistRx8PSK, sub10RadioStats1dHistTxQPSK=sub10RadioStats1dHistTxQPSK, sub10UnitMgmtTransaction=sub10UnitMgmtTransaction, sub10RadioStats1dHistTx8PSK=sub10RadioStats1dHistTx8PSK, sub10RadioStats15mHistRxPkts=sub10RadioStats15mHistRxPkts, sub10UnitMgmtSnmpUserName=sub10UnitMgmtSnmpUserName, sub10RadioLclAFER=sub10RadioLclAFER, sub10RadioStats1dHistMWUTempMin=sub10RadioStats1dHistMWUTempMin, sub10EthStatsCurrRxMbps=sub10EthStatsCurrRxMbps, sub10RadioStatsCurrLnkLossAvg=sub10RadioStatsCurrLnkLossAvg, sub10EthStatsCurrRxOversized=sub10EthStatsCurrRxOversized, sub10UnitLclLinkName=sub10UnitLclLinkName, sub10RadioStatsCurrRmtLnkLossAvg=sub10RadioStatsCurrRmtLnkLossAvg, sub10UnitMgmtFirmwareBankIndex=sub10UnitMgmtFirmwareBankIndex, sub10EthStats1dHistRxBcastFrms=sub10EthStats1dHistRxBcastFrms, sub10RadioLclMWUType=sub10RadioLclMWUType, sub10RadioStats1dHistRxPowerAvg=sub10RadioStats1dHistRxPowerAvg, sub10RadioStats1dHistRxQPSK=sub10RadioStats1dHistRxQPSK, sub10UnitMgmtSnmpAgent=sub10UnitMgmtSnmpAgent, sub10EthMgmtQoSQSchedulingType=sub10EthMgmtQoSQSchedulingType, sub10UnitMgmtFirmwareGrp=sub10UnitMgmtFirmwareGrp, sub10EthStats15mHistTxGoodFrms=sub10EthStats15mHistTxGoodFrms, sub10UnitMgmtSnmpTargetEntryGrp=sub10UnitMgmtSnmpTargetEntryGrp, sub10RadioStatsCurrTxPkts=sub10RadioStatsCurrTxPkts, sub10EthStats1dHistTxDeferred=sub10EthStats1dHistTxDeferred, sub10UnitMgmtSnmpUserEntryGrp=sub10UnitMgmtSnmpUserEntryGrp, sub10UnitMgmtSnmpTargetIndex=sub10UnitMgmtSnmpTargetIndex, sub10RadioStats1dHistEntry=sub10RadioStats1dHistEntry, sub10EthStats15mHistTxCollsn=sub10EthStats15mHistTxCollsn, sub10RadioStatsCurrent=sub10RadioStatsCurrent, sub10UnitMgmtSnmpMaintAuthProto=sub10UnitMgmtSnmpMaintAuthProto, sub10RadioStats15mHistVectErrMin=sub10RadioStats15mHistVectErrMin, sub10RadioStats1dHistTxFrms=sub10RadioStats1dHistTxFrms, sub10UnitMgmtTimeLocal=sub10UnitMgmtTimeLocal, sub10UnitMgmtVlanPriority=sub10UnitMgmtVlanPriority, sub10EthStats1dHistRxMcastFrms=sub10EthStats1dHistRxMcastFrms, sub10RadioStats1dHistTxPowerMin=sub10RadioStats1dHistTxPowerMin, sub10EthStatsCurrTxOctets=sub10EthStatsCurrTxOctets, sub10UnitLclAlarmStateEntryGrp=sub10UnitLclAlarmStateEntryGrp, sub10EthMgmtQoSMPLSIndex=sub10EthMgmtQoSMPLSIndex, sub10UnitMgmtVlanId=sub10UnitMgmtVlanId, Sub10State=Sub10State, sub10EthMgmtVlanFiltering=sub10EthMgmtVlanFiltering, sub10EthMgmtVlanAllowedIndex=sub10EthMgmtVlanAllowedIndex, Sub10AlignmentMode=Sub10AlignmentMode, sub10EthStatsCurrRxOctets=sub10EthStatsCurrRxOctets, sub10RadioStats1dHistAFERAvg=sub10RadioStats1dHistAFERAvg, sub10RadioLclVectErr=sub10RadioLclVectErr, sub10EthMgmtVlanAllowedEntryGrp=sub10EthMgmtVlanAllowedEntryGrp, sub10RadioStats1mHistLnkLossAvg=sub10RadioStats1mHistLnkLossAvg, Sub10Snmpv3AuthProtocol=Sub10Snmpv3AuthProtocol, sub10UnitMgmtAlarmClearIntvls=sub10UnitMgmtAlarmClearIntvls, sub10EthStatsCurrRxBcastFrms=sub10EthStatsCurrRxBcastFrms, sub10RadioMgmtAPCMode=sub10RadioMgmtAPCMode, sub10UnitMgmtAlarmsUserDefStart=sub10UnitMgmtAlarmsUserDefStart, sub10RadioStats1dHist8PSKToQPSK=sub10RadioStats1dHist8PSKToQPSK, sub10UnitRmtTerminalType=sub10UnitRmtTerminalType, Sub10Duplex=Sub10Duplex, sub10RadioStats15mHistRxMgmtPkts=sub10RadioStats15mHistRxMgmtPkts, sub10EthLclLinkStatus=sub10EthLclLinkStatus, sub10EthStats1dHistRxGoodFrms=sub10EthStats1dHistRxGoodFrms, sub10EthStats1dHistRxMbpsMin=sub10EthStats1dHistRxMbpsMin, Sub10EntryStatus=Sub10EntryStatus, sub10UnitLclHWSerialNumber=sub10UnitLclHWSerialNumber, sub10EthStatsCurrRmtRxMbpsAvg=sub10EthStatsCurrRmtRxMbpsAvg, sub10RadioStats1mHistIntvl=sub10RadioStats1mHistIntvl, sub10UnitMgmtDNSEntryGrp=sub10UnitMgmtDNSEntryGrp, sub10EthMgmtQoSQEntryGrp=sub10EthMgmtQoSQEntryGrp, sub10RadioStatsCurrQPSKTo8PSK=sub10RadioStatsCurrQPSKTo8PSK, sub10RadioStatsCurrRxPkts=sub10RadioStatsCurrRxPkts, sub10EthStats1dHistRxMbpsMax=sub10EthStats1dHistRxMbpsMax, sub10RadioStats1dHistRxPowerMax=sub10RadioStats1dHistRxPowerMax, Sub10StatsGroup=Sub10StatsGroup, sub10EthRmtStatusEntryGrp=sub10EthRmtStatusEntryGrp, sub10RadioStats1dHistLnkLossAvg=sub10RadioStats1dHistLnkLossAvg, sub10UnitMgmtTimeNTPServer1=sub10UnitMgmtTimeNTPServer1, sub10EthStats15mHistRxAlignErrs=sub10EthStats15mHistRxAlignErrs, sub10RadioStats1dHistMWUTempAvg=sub10RadioStats1dHistMWUTempAvg, sub10UnitMgmtFirmwareToBank=sub10UnitMgmtFirmwareToBank, sub10EthernetStatsCurrTable=sub10EthernetStatsCurrTable, sub10EthStatsCurrTxLtCollsn=sub10EthStatsCurrTxLtCollsn, sub10RadioStats15mHistRxBadFrms=sub10RadioStats15mHistRxBadFrms, sub10UnitMgmtVlan=sub10UnitMgmtVlan, sub10EthStats15mHistPkts128T255=sub10EthStats15mHistPkts128T255, sub10UnitLclIpAddress=sub10UnitLclIpAddress, sub10EthMgmtQoSPCPIndex=sub10EthMgmtQoSPCPIndex, sub10EthStatsCurrRxPauseFrms=sub10EthStatsCurrRxPauseFrms, sub10UnitMgmtSnmpUserPrivPwdChk=sub10UnitMgmtSnmpUserPrivPwdChk, sub10RadioStatsCurrRmtTxPowerAvg=sub10RadioStatsCurrRmtTxPowerAvg, sub10RadioStats1mHistTxPowerMin=sub10RadioStats1mHistTxPowerMin, sub10RadioStats1mHistVectErrAvg=sub10RadioStats1mHistVectErrAvg, sub10EthMgmtPhyEntryGrp=sub10EthMgmtPhyEntryGrp, Sub10AlarmState=Sub10AlarmState, sub10UnitMgmtAlarmRowStatus=sub10UnitMgmtAlarmRowStatus, sub10EthMgmtQoSQDWRRWeight=sub10EthMgmtQoSQDWRRWeight, sub10RadioStats15mHistAFERMax=sub10RadioStats15mHistAFERMax, sub10RadioMgmtDataRate=sub10RadioMgmtDataRate, sub10RadioStatsCurrRxPowerMin=sub10RadioStatsCurrRxPowerMin, sub10RadioAlarm=sub10RadioAlarm, sub10UnitMgmtAlarmMeasObjectVal=sub10UnitMgmtAlarmMeasObjectVal, sub10RadioStats1dHistRxFrms=sub10RadioStats1dHistRxFrms, sub10RadioStatsCurrTx8PSK=sub10RadioStatsCurrTx8PSK, sub10EthStats1dHistoryGrp=sub10EthStats1dHistoryGrp, sub10EthMgmtPhySpeed=sub10EthMgmtPhySpeed, sub10EthMgmtQoSMPLSMappingNumber=sub10EthMgmtQoSMPLSMappingNumber, Sub10AlarmOperation=Sub10AlarmOperation, sub10UnitMgmtVlanDSCP=sub10UnitMgmtVlanDSCP, sub10EthStats15mHistRxSOFOvrns=sub10EthStats15mHistRxSOFOvrns, sub10EthStats15mHistRxOctets=sub10EthStats15mHistRxOctets, sub10EthStats1dHistory=sub10EthStats1dHistory, sub10EthStatsTimeElapsed=sub10EthStatsTimeElapsed, sub10UnitLclDescription=sub10UnitLclDescription, sub10EthLclStatusTable=sub10EthLclStatusTable, sub10EthMgmtQoSVlanTable=sub10EthMgmtQoSVlanTable, sub10Notifications=sub10Notifications, sub10UnitMgmtUserIndex=sub10UnitMgmtUserIndex, sub10UnitMgmtIp=sub10UnitMgmtIp, sub10RadioLclLinkStatus=sub10RadioLclLinkStatus, Sub10FirmwareBank=Sub10FirmwareBank, sub10RadioStatsCurrRxQPSK=sub10RadioStatsCurrRxQPSK, sub10UnitMgmtResetStatsGroup=sub10UnitMgmtResetStatsGroup, sub10RadioStats1mHistRxQPSK=sub10RadioStats1mHistRxQPSK, Sub10UserGroup=Sub10UserGroup, sub10Unit=sub10Unit, sub10UnitMgmtFirmwareVersion=sub10UnitMgmtFirmwareVersion, sub10EthStats1dHistTxCollsn=sub10EthStats1dHistTxCollsn, sub10RadioMgmtModulationMode=sub10RadioMgmtModulationMode, sub10RadioStats15mHistAFERMin=sub10RadioStats15mHistAFERMin, sub10RadioStats15mHistTxQPSK=sub10RadioStats15mHistTxQPSK, sub10UnitLclAlarmStateTime=sub10UnitLclAlarmStateTime, sub10EthMgmtStatsActiveEntry=sub10EthMgmtStatsActiveEntry, sub10RadioStats15mHistQPSKTo8PSK=sub10RadioStats15mHistQPSKTo8PSK, sub10RadioStats1dHistoryGrp=sub10RadioStats1dHistoryGrp, sub10EthernetStats=sub10EthernetStats, sub10EthLclSpeed=sub10EthLclSpeed, sub10UnitRmtMWUTemperature=sub10UnitRmtMWUTemperature, sub10UnitMgmtFirmwareBankTable=sub10UnitMgmtFirmwareBankTable, sub10RadioStats1mHistory=sub10RadioStats1mHistory, sub10EthMgmtQoSQIndex=sub10EthMgmtQoSQIndex, Sub10AlarmType=Sub10AlarmType, sub10EthStatsCurrRxUndersized=sub10EthStatsCurrRxUndersized, sub10UnitMgmtAlarmMeasObject=sub10UnitMgmtAlarmMeasObject, sub10UnitMgmtIpDHCP=sub10UnitMgmtIpDHCP, sub10RadioStats15mHistIntvl=sub10RadioStats15mHistIntvl, sub10UnitMgmtLinkName=sub10UnitMgmtLinkName, sub10RadioStats1mHistTxFrms=sub10RadioStats1mHistTxFrms, sub10RadioStats15mHistory=sub10RadioStats15mHistory, sub10EthRmtStatusEntry=sub10EthRmtStatusEntry, sub10RadioStats1dHistMWUTempMax=sub10RadioStats1dHistMWUTempMax, sub10UnitMgmtAlarmTable=sub10UnitMgmtAlarmTable, sub10UnitLclFPGAVersion=sub10UnitLclFPGAVersion, sub10EthStatsCurrRmtTxMbpsAvg=sub10EthStatsCurrRmtTxMbpsAvg, sub10UnitMgmtResetAlarmsType=sub10UnitMgmtResetAlarmsType, sub10UnitMgmtActionsGrp=sub10UnitMgmtActionsGrp, sub10RadioMgmtStatsActiveTable=sub10RadioMgmtStatsActiveTable, sub10RadioStats1dHistRxPkts=sub10RadioStats1dHistRxPkts, sub10RadioStats1dHistTxPowerMax=sub10RadioStats1dHistTxPowerMax, sub10RadioStatsCurrRxPowerMax=sub10RadioStatsCurrRxPowerMax, sub10UnitMgmtAlarmIndex=sub10UnitMgmtAlarmIndex, sub10RadioStats1dHistLnkLossMin=sub10RadioStats1dHistLnkLossMin, sub10EthStatsCurrPkts128T255=sub10EthStatsCurrPkts128T255, sub10UnitMgmtAlarmRaiseThresh=sub10UnitMgmtAlarmRaiseThresh, sub10EthRmtLinkStatus=sub10EthRmtLinkStatus, sub10RadioStats15mHistTime=sub10RadioStats15mHistTime, sub10RadioStatsCurrMWUTempMin=sub10RadioStatsCurrMWUTempMin, sub10UnitLocalStatus=sub10UnitLocalStatus, sub10EthStatsCurrRxSOFOvrns=sub10EthStatsCurrRxSOFOvrns, sub10EthStatsCurrPkts65T127=sub10EthStatsCurrPkts65T127, sub10UnitMgmtEncryption=sub10UnitMgmtEncryption, Sub10MeasuredObject=Sub10MeasuredObject, sub10RadioStats1mHistRxBadFrms=sub10RadioStats1mHistRxBadFrms, sub10RadioStatsHistory=sub10RadioStatsHistory, sub10EthMgmtVlanEgressAction=sub10EthMgmtVlanEgressAction, sub10EthStatsCurrTxDeferred=sub10EthStatsCurrTxDeferred, sub10UnitLclNTPSyncStatus=sub10UnitLclNTPSyncStatus, sub10UnitMgmtContactName=sub10UnitMgmtContactName, sub10EthStats15mHistRxMbpsMin=sub10EthStats15mHistRxMbpsMin, sub10RadioStats1dHistRxMgmtPkts=sub10RadioStats1dHistRxMgmtPkts, sub10UnitMgmtFirmwareBankEntry=sub10UnitMgmtFirmwareBankEntry, sub10UnitMgmtAlarmSeverity=sub10UnitMgmtAlarmSeverity, sub10RadioStats1mHistMWUTempAvg=sub10RadioStats1mHistMWUTempAvg, sub10RadioStats15mHistLnkLossAvg=sub10RadioStats15mHistLnkLossAvg, sub10UnitMgmtUserRowStatus=sub10UnitMgmtUserRowStatus, sub10EthernetMgmt=sub10EthernetMgmt, sub10UnitLclRadioDataRate=sub10UnitLclRadioDataRate, sub10EthStatsCurrTxExsvCollsn=sub10EthStatsCurrTxExsvCollsn, sub10RadioMgmtTxRxFreq=sub10RadioMgmtTxRxFreq, sub10EthMgmtQoSActiveState=sub10EthMgmtQoSActiveState, sub10UnitMgmtFirmwareBankImage=sub10UnitMgmtFirmwareBankImage, sub10EthStatsCurrRxMbpsAvg=sub10EthStatsCurrRxMbpsAvg, sub10EthStats15mHistRxUndersized=sub10EthStats15mHistRxUndersized, sub10UnitMgmtLicense=sub10UnitMgmtLicense, sub10EthMgmtQoSPCPEntry=sub10EthMgmtQoSPCPEntry, sub10RadioMgmtMWUChannelWidth=sub10RadioMgmtMWUChannelWidth, sub10RadioStatsCurrAFERMin=sub10RadioStatsCurrAFERMin, sub10EthStats15mHistEntry=sub10EthStats15mHistEntry, sub10EthStatsCurrPkts64Octets=sub10EthStatsCurrPkts64Octets, sub10EthStats1dHistTxMbpsMax=sub10EthStats1dHistTxMbpsMax, sub10EthStatsCurrTxCollsn=sub10EthStatsCurrTxCollsn, sub10EthStats15mHistPkts65T127=sub10EthStats15mHistPkts65T127, sub10RadioStats15mHistTxPowerMax=sub10RadioStats15mHistTxPowerMax, sub10RadioRemoteStatusGrp=sub10RadioRemoteStatusGrp, sub10UnitMgmtSnmpTrpDstTable=sub10UnitMgmtSnmpTrpDstTable, Sub10Snmpv3PrivProtocol=Sub10Snmpv3PrivProtocol, sub10RadioMgmtStatsActiveName=sub10RadioMgmtStatsActiveName, sub10EthMgmtVlanAllowedId=sub10EthMgmtVlanAllowedId, sub10RadioStats=sub10RadioStats, sub10EthernetStats15mHistoryGrp=sub10EthernetStats15mHistoryGrp, sub10EthStats15mHistTxOctets=sub10EthStats15mHistTxOctets, sub10RadioMgmt=sub10RadioMgmt, sub10EthMgmtVlanDefaultPriority=sub10EthMgmtVlanDefaultPriority, sub10EthStats1dHistEntry=sub10EthStats1dHistEntry, sub10EthMgmtQoSVlanQueue=sub10EthMgmtQoSVlanQueue, sub10RadioStatsCurrRxBadFrms=sub10RadioStatsCurrRxBadFrms, sub10RadioStats15mHistRx8PSK=sub10RadioStats15mHistRx8PSK, sub10UnitMgmtSnmpUserEntry=sub10UnitMgmtSnmpUserEntry, sub10UnitMgmtFirmwareSelectBank=sub10UnitMgmtFirmwareSelectBank, sub10UnitMgmtFirmwareAction=sub10UnitMgmtFirmwareAction, sub10RadioStats1mHistQPSKTo8PSK=sub10RadioStats1mHistQPSKTo8PSK, sub10RadioStats15mHistTxPowerMin=sub10RadioStats15mHistTxPowerMin, sub10UnitMgmtAlarmMeasObjIndex=sub10UnitMgmtAlarmMeasObjIndex, sub10UnitLclUnitType=sub10UnitLclUnitType, sub10RadioStatsCurrRmtRxPowerAvg=sub10RadioStatsCurrRmtRxPowerAvg, sub10UnitMgmtSnmpUserGroup=sub10UnitMgmtSnmpUserGroup, sub10EthMgmtQoSMPLSTrafficClass=sub10EthMgmtQoSMPLSTrafficClass, sub10EthernetStatsCurrent=sub10EthernetStatsCurrent, sub10EthStatsCurrRxMbpsMax=sub10EthStatsCurrRxMbpsMax, sub10RadioStats1dHistAFERMin=sub10RadioStats1dHistAFERMin, sub10UnitAlarm=sub10UnitAlarm, sub10EthMgmtQoSDSCPQueue=sub10EthMgmtQoSDSCPQueue, sub10EthMgmtPhyEntry=sub10EthMgmtPhyEntry, sub10EthStatsCurrTxCSenseErrs=sub10EthStatsCurrTxCSenseErrs, sub10EthLclDuplex=sub10EthLclDuplex, sub10EthStats15mHistRxJabberFrms=sub10EthStats15mHistRxJabberFrms, Sub10VlanId=Sub10VlanId, sub10RadioStats1mHistAFERMin=sub10RadioStats1mHistAFERMin, sub10UnitMgmtSnmpAccessIndex=sub10UnitMgmtSnmpAccessIndex, sub10EthStats1dHistTxExsvCollsn=sub10EthStats1dHistTxExsvCollsn, sub10UnitMgmtSnmpOperAuthProto=sub10UnitMgmtSnmpOperAuthProto, sub10EthStats15mHistIntvl=sub10EthStats15mHistIntvl, sub10UnitMgmtAlarms=sub10UnitMgmtAlarms, sub10EthernetRemoteStatus=sub10EthernetRemoteStatus, sub10EthStats1dHistTxCSenseErrs=sub10EthStats1dHistTxCSenseErrs, sub10RadioStats15mHistTxPowerAvg=sub10RadioStats15mHistTxPowerAvg, sub10NotificationsGrp=sub10NotificationsGrp, sub10UnitMgmtAlarmsGrp=sub10UnitMgmtAlarmsGrp, sub10EthMgmtStatsActiveIndex=sub10EthMgmtStatsActiveIndex, sub10RadioMgmtStatsActiveEntry=sub10RadioMgmtStatsActiveEntry, sub10EthStats15mHistTime=sub10EthStats15mHistTime, sub10UnitMgmtSnmpAccessEntry=sub10UnitMgmtSnmpAccessEntry, sub10EthMgmtQoSUntaggedQueue=sub10EthMgmtQoSUntaggedQueue, sub10RadioStats15mHistLnkLossMax=sub10RadioStats15mHistLnkLossMax)
mibBuilder.exportSymbols("SUB10SYSTEMS-MIB", sub10RadioStatsTimeElapsed=sub10RadioStatsTimeElapsed, sub10RadioStats1mHistTime=sub10RadioStats1mHistTime, sub10RadioStats15mHist8PSKToQPSK=sub10RadioStats15mHist8PSKToQPSK, sub10UnitMgmtDNSEntry=sub10UnitMgmtDNSEntry, sub10RadioStatsCurrMWUTempMax=sub10RadioStatsCurrMWUTempMax, sub10EthMgmtQoSDSCPEntryGrp=sub10EthMgmtQoSDSCPEntryGrp, sub10RadioStats1mHistRxPowerAvg=sub10RadioStats1mHistRxPowerAvg, sub10RadioMgmtAlignmentMode=sub10RadioMgmtAlignmentMode, sub10UnitLclLinkId=sub10UnitLclLinkId, sub10EthStats15mHistRxGoodFrms=sub10EthStats15mHistRxGoodFrms, sub10UnitMgmtAlarmRaiseOper=sub10UnitMgmtAlarmRaiseOper, sub10RadioStatsCurrRxPowerAvg=sub10RadioStatsCurrRxPowerAvg, sub10UnitMgmtUserEntryGrp=sub10UnitMgmtUserEntryGrp, sub10RadioStatsCurrRmtMWUTempAvg=sub10RadioStatsCurrRmtMWUTempAvg, sub10UnitMgmtTerminalName=sub10UnitMgmtTerminalName, sub10RadioStats15mHistTable=sub10RadioStats15mHistTable, sub10EthMgmtQoSQSizeMax=sub10EthMgmtQoSQSizeMax, sub10RadioStats1mHistVectErrMin=sub10RadioStats1mHistVectErrMin, sub10EthStatsCurrTxMbps=sub10EthStatsCurrTxMbps, sub10EthernetStats15mHistory=sub10EthernetStats15mHistory, sub10RadioStats1dHistVectErrAvg=sub10RadioStats1dHistVectErrAvg, sub10UnitMgmtLicenseGrp=sub10UnitMgmtLicenseGrp, sub10EthStatsCurrTxPauseFrms=sub10EthStatsCurrTxPauseFrms, sub10EthStats1dHistTxMbpsMin=sub10EthStats1dHistTxMbpsMin, sub10RadioStatsCurrVectErrMax=sub10RadioStatsCurrVectErrMax, sub10UnitMgmtRollbackTimeout=sub10UnitMgmtRollbackTimeout, sub10UnitMgmtEncryptionGrp=sub10UnitMgmtEncryptionGrp, sub10RadioStats1mHistMWUTempMax=sub10RadioStats1mHistMWUTempMax, sub10RadioStatsCurrTxPowerAvg=sub10RadioStatsCurrTxPowerAvg, sub10MIBConformance=sub10MIBConformance, sub10RadioMgmtTxPowerLimit=sub10RadioMgmtTxPowerLimit, sub10RadioStats15mHistVectErrAvg=sub10RadioStats15mHistVectErrAvg, sub10RadioStats1dHistRxPowerMin=sub10RadioStats1dHistRxPowerMin, sub10UnitMgmtIpAddress=sub10UnitMgmtIpAddress, sub10EthStats15mHistRxFragments=sub10EthStats15mHistRxFragments, sub10UnitMgmtSnmpUserPrivPwd=sub10UnitMgmtSnmpUserPrivPwd, sub10RadioStats1dHistRx8PSK=sub10RadioStats1dHistRx8PSK, sub10UnitLclAlarmStateEntry=sub10UnitLclAlarmStateEntry, sub10UnitMgmtUserTable=sub10UnitMgmtUserTable, sub10EthMgmtVlanDefaultEnabled=sub10EthMgmtVlanDefaultEnabled, sub10RadioLclRxModulationMode=sub10RadioLclRxModulationMode, sub10UnitMgmtAlarmEnabled=sub10UnitMgmtAlarmEnabled, Sub10ThroughputMbps=Sub10ThroughputMbps, sub10EthMgmtQoSPCPEntryGrp=sub10EthMgmtQoSPCPEntryGrp, sub10EthStats1dHistRxJabberFrms=sub10EthStats1dHistRxJabberFrms, sub10RadioMgmtStatsActiveIndex=sub10RadioMgmtStatsActiveIndex, sub10EthernetLocalStatus=sub10EthernetLocalStatus, sub10UnitMgmtSnmpTrpDstEntryGrp=sub10UnitMgmtSnmpTrpDstEntryGrp, Sub10AlignmentModeLock=Sub10AlignmentModeLock, sub10EthRmtMDI=sub10EthRmtMDI, sub10EthStats1dHistTime=sub10EthStats1dHistTime, sub10RadioStats1mHistTxPowerAvg=sub10RadioStats1mHistTxPowerAvg, sub10RadioMgmtStatsGrp=sub10RadioMgmtStatsGrp, sub10RadioStats1dHistAFERMax=sub10RadioStats1dHistAFERMax, sub10UnitMgmtTimeNTPEnabled=sub10UnitMgmtTimeNTPEnabled, sub10EthMgmtQoSVlanMappingNumber=sub10EthMgmtQoSVlanMappingNumber, sub10RadioStats15mHistMWUTempAvg=sub10RadioStats15mHistMWUTempAvg, sub10UnitLclTerminalType=sub10UnitLclTerminalType, sub10UnitMgmtDNSTable=sub10UnitMgmtDNSTable, sub10EthStats1dHistIntvl=sub10EthStats1dHistIntvl, sub10RadioStatsCurrVectErrAvg=sub10RadioStatsCurrVectErrAvg, sub10RadioStats1mHistAFERAvg=sub10RadioStats1mHistAFERAvg, sub10RadioStats15mHistRxPowerAvg=sub10RadioStats15mHistRxPowerAvg, sub10EthMgmtPhyMDI=sub10EthMgmtPhyMDI, sub10UnitMgmtSnmpAccessIpAddr=sub10UnitMgmtSnmpAccessIpAddr, sub10UnitMgmtActions=sub10UnitMgmtActions, Sub10RadioDataRate=Sub10RadioDataRate, sub10UnitRemoteStatus=sub10UnitRemoteStatus, Sub10Availability=Sub10Availability, sub10RadioStats1dHistVectErrMin=sub10RadioStats1dHistVectErrMin, sub10EthStats15mHistTable=sub10EthStats15mHistTable, sub10UnitLclMWUType=sub10UnitLclMWUType, sub10UnitMgmtSnmpUserRowStatus=sub10UnitMgmtSnmpUserRowStatus, sub10UnitStatus=sub10UnitStatus, sub10EthMgmtQoSMPLSEntryGrp=sub10EthMgmtQoSMPLSEntryGrp, sub10UnitMgmtUserName=sub10UnitMgmtUserName, sub10EthMgmtQoSVlanId=sub10EthMgmtQoSVlanId, sub10UnitMgmtDNSIndex=sub10UnitMgmtDNSIndex, Sub10EthInterfaceIndex=Sub10EthInterfaceIndex, sub10Ethernet=sub10Ethernet, sub10EthStats15mHistTxMcastFrms=sub10EthStats15mHistTxMcastFrms, sub10EthStats1dHistTxBcastFrms=sub10EthStats1dHistTxBcastFrms, sub10UnitMgmtSnmp=sub10UnitMgmtSnmp, sub10RadioRmtLnkLoss=sub10RadioRmtLnkLoss, sub10EthMgmtQoSGrp=sub10EthMgmtQoSGrp, sub10EthStatsCurrRxFragments=sub10EthStatsCurrRxFragments, sub10UnitMgmtSnmpUserAuthPwd=sub10UnitMgmtSnmpUserAuthPwd, sub10RadioStats1mHistoryGrp=sub10RadioStats1mHistoryGrp, sub10EthStats15mHistRxPauseFrms=sub10EthStats15mHistRxPauseFrms, sub10RadioStats15mHistTxFrms=sub10RadioStats15mHistTxFrms, sub10EthStats15mHistEntryGrp=sub10EthStats15mHistEntryGrp, sub10RadioStats1dHistVectErrMax=sub10RadioStats1dHistVectErrMax, sub10EthRmtDuplex=sub10EthRmtDuplex, sub10RadioRmtRxPower=sub10RadioRmtRxPower, sub10RadioStats1mHistTxPkts=sub10RadioStats1mHistTxPkts, sub10RadioMgmtStats1dPersist=sub10RadioMgmtStats1dPersist, sub10EthStatsCurrTxMcastFrms=sub10EthStatsCurrTxMcastFrms, sub10RadioStatsCurrRx8PSK=sub10RadioStatsCurrRx8PSK, sub10RadioStats15mHistoryGrp=sub10RadioStats15mHistoryGrp, sub10EthMgmtQoS=sub10EthMgmtQoS, sub10EthMgmtQoSDSCPMarking=sub10EthMgmtQoSDSCPMarking, sub10RadioStatsCurrTxQPSK=sub10RadioStatsCurrTxQPSK, sub10EthMgmtStats=sub10EthMgmtStats, sub10EthMgmtPhyDuplex=sub10EthMgmtPhyDuplex, sub10UnitLclFirmwareLoadedBank=sub10UnitLclFirmwareLoadedBank, sub10EthMgmtVlanIngressAction=sub10EthMgmtVlanIngressAction, sub10RadioStats15mHistMWUTempMin=sub10RadioStats15mHistMWUTempMin, sub10UnitMgmtAlarmEntryGrp=sub10UnitMgmtAlarmEntryGrp, sub10RadioStats1mHistRxPowerMax=sub10RadioStats1mHistRxPowerMax, sub10RadioStatsCurrentGrp=sub10RadioStatsCurrentGrp, sub10EthStats15mHistTxDeferred=sub10EthStats15mHistTxDeferred, sub10EthMgmtVlan=sub10EthMgmtVlan, sub10RadioStats1dHistIntvl=sub10RadioStats1dHistIntvl, sub10EthStats15mHistPkts64Octets=sub10EthStats15mHistPkts64Octets, sub10Radio=sub10Radio, sub10UnitMgmtLicenseAES=sub10UnitMgmtLicenseAES, sub10RadioStats1mHistEntry=sub10RadioStats1mHistEntry, sub10EthStats1dHistEntryGrp=sub10EthStats1dHistEntryGrp, sub10UnitLclAlarmStateTable=sub10UnitLclAlarmStateTable, sub10RadioStats1mHistRxMgmtPkts=sub10RadioStats1mHistRxMgmtPkts, sub10EthMgmtPhyTable=sub10EthMgmtPhyTable, sub10UnitMgmtTimeGrp=sub10UnitMgmtTimeGrp, Sub10MacAddress=Sub10MacAddress, sub10UnitMgmtFirmwareActStatus=sub10UnitMgmtFirmwareActStatus, sub10EthMgmtStatsActiveState=sub10EthMgmtStatsActiveState, sub10RadioStatsCurr8PSKToQPSK=sub10RadioStatsCurr8PSKToQPSK, sub10UnitMgmtAlarmToSNMP=sub10UnitMgmtAlarmToSNMP, sub10UnitMgmtSnmpTargetEntry=sub10UnitMgmtSnmpTargetEntry, sub10RadioStats1dHistTxPowerAvg=sub10RadioStats1dHistTxPowerAvg, Sub10NTPSyncStatus=Sub10NTPSyncStatus, sub10UnitMgmtSnmpEngineIdFormat=sub10UnitMgmtSnmpEngineIdFormat, sub10EthStats1dHistTxGoodFrms=sub10EthStats1dHistTxGoodFrms, sub10UnitMgmtLinkId=sub10UnitMgmtLinkId, sub10EthStats15mHistRxMcastFrms=sub10EthStats15mHistRxMcastFrms, sub10EthRmtMacAddress=sub10EthRmtMacAddress, sub10RadioRmtLinkStatus=sub10RadioRmtLinkStatus, sub10EthStats1dHistPkts128T255=sub10EthStats1dHistPkts128T255, sub10EthernetAlarm=sub10EthernetAlarm, sub10EthStats15mHistPkts1024TMax=sub10EthStats15mHistPkts1024TMax, sub10UnitMgmtUsers=sub10UnitMgmtUsers, sub10EthStats1dHistTxLtCollsn=sub10EthStats1dHistTxLtCollsn, sub10EthernetStatsHistory=sub10EthernetStatsHistory, sub10EthStats15mHistRxMbpsAvg=sub10EthStats15mHistRxMbpsAvg, sub10RadioLclTxPower=sub10RadioLclTxPower, sub10UnitMgmtSnmpTargetRowStatus=sub10UnitMgmtSnmpTargetRowStatus, sub10UnitMgmtSystem=sub10UnitMgmtSystem, sub10EthStats1dHistRxOctets=sub10EthStats1dHistRxOctets, Sub10DateTime=Sub10DateTime, sub10RadioRmtAFER=sub10RadioRmtAFER, sub10UnitMgmtTimeNTPServer2=sub10UnitMgmtTimeNTPServer2, sub10UnitRmtFirmwareVersion=sub10UnitRmtFirmwareVersion, sub10UnitMgmtSnmpUserTable=sub10UnitMgmtSnmpUserTable, sub10RadioStatsCurrTxMgmtPkts=sub10RadioStatsCurrTxMgmtPkts, Sub10OperStatus=Sub10OperStatus, sub10RadioStats15mHistTxPkts=sub10RadioStats15mHistTxPkts, sub10RadioStats1dHistEntryGrp=sub10RadioStats1dHistEntryGrp, sub10EthStatsCurrRxJabberFrms=sub10EthStatsCurrRxJabberFrms, sub10RadioStats1mHistTxQPSK=sub10RadioStats1mHistTxQPSK, sub10RadioLocalStatusGrp=sub10RadioLocalStatusGrp, sub10RadioRmtTxPower=sub10RadioRmtTxPower, sub10EthStatsCurrRxAlignErrs=sub10EthStatsCurrRxAlignErrs, sub10RadioStatsGrp=sub10RadioStatsGrp, sub10UnitLclAlarmStateIndex=sub10UnitLclAlarmStateIndex, sub10EthStats1dHistTxMbpsAvg=sub10EthStats1dHistTxMbpsAvg, sub10UnitMgmtTimeNTPPort=sub10UnitMgmtTimeNTPPort, sub10UnitMgmtSnmpTrpDstIndex=sub10UnitMgmtSnmpTrpDstIndex, sub10RadioStats1mHistIntvls=sub10RadioStats1mHistIntvls, sub10UnitMgmtSnmpAccessEntryGrp=sub10UnitMgmtSnmpAccessEntryGrp, sub10EthStats15mHistTxSnglCollsn=sub10EthStats15mHistTxSnglCollsn, sub10EthStatsCurrRxMbpsMin=sub10EthStatsCurrRxMbpsMin, Sub10MWUType=Sub10MWUType, sub10UnitMgmtIpDefGateway=sub10UnitMgmtIpDefGateway, sub10UnitMgmtSnmpAdminAuthProto=sub10UnitMgmtSnmpAdminAuthProto, sub10RadioStats1dHistory=sub10RadioStats1dHistory, sub10EthMgmtQoSQTable=sub10EthMgmtQoSQTable, sub10EthStats1dHistRxSOFOvrns=sub10EthStats1dHistRxSOFOvrns, sub10UnitMgmtSnmpTargetIpAddr=sub10UnitMgmtSnmpTargetIpAddr, Sub10VlanTagAction=Sub10VlanTagAction, sub10UnitMgmtSyncE=sub10UnitMgmtSyncE, sub10UnitMgmtSnmpEngineIdText=sub10UnitMgmtSnmpEngineIdText, sub10UnitMgmtSnmpTrpDstEntry=sub10UnitMgmtSnmpTrpDstEntry, sub10EthMgmtQoSVlanEntry=sub10EthMgmtQoSVlanEntry, sub10EthRmtSpeed=sub10EthRmtSpeed, sub10EthStats1dHistRxUndersized=sub10EthStats1dHistRxUndersized, Sub10AlarmSeverity=Sub10AlarmSeverity, Sub10TerminalType=Sub10TerminalType, sub10EthStats1dHistRxFragments=sub10EthStats1dHistRxFragments, sub10UnitMgmtFirmwareUplSvrIp=sub10UnitMgmtFirmwareUplSvrIp, sub10EthStatsCurrRxMcastFrms=sub10EthStatsCurrRxMcastFrms, sub10EthRmtStatusTable=sub10EthRmtStatusTable, sub10EthStatsCurrTxMlplCollsn=sub10EthStatsCurrTxMlplCollsn, sub10UnitRmtLinkId=sub10UnitRmtLinkId, sub10EthStats1dHistTxSnglCollsn=sub10EthStats1dHistTxSnglCollsn, sub10UnitMgmtFirmwareBootVersion=sub10UnitMgmtFirmwareBootVersion, sub10EthMgmtVlanGrp=sub10EthMgmtVlanGrp, sub10RadioStats1mHistRxPkts=sub10RadioStats1mHistRxPkts, sub10UnitMgmtDateTime=sub10UnitMgmtDateTime, sub10RadioRmtAlignmentMode=sub10RadioRmtAlignmentMode, sub10EthStats1dHistPkts1024TMax=sub10EthStats1dHistPkts1024TMax, sub10EthStatsCurrTxGoodFrms=sub10EthStatsCurrTxGoodFrms, sub10UnitMgmt=sub10UnitMgmt, sub10EthStats1dHistRxAlignErrs=sub10EthStats1dHistRxAlignErrs, sub10EthStatsCurrPkts1024TMax=sub10EthStatsCurrPkts1024TMax, sub10RadioStatsCurrMWUTempAvg=sub10RadioStatsCurrMWUTempAvg, sub10MIBGroups=sub10MIBGroups, sub10RadioStats1mHistRxFrms=sub10RadioStats1mHistRxFrms, sub10EthMgmtVlanAllowedTable=sub10EthMgmtVlanAllowedTable, sub10EthStatsCurrTxSnglCollsn=sub10EthStatsCurrTxSnglCollsn, sub10RadioLclAlignmentMode=sub10RadioLclAlignmentMode, sub10UnitMgmtAlarmClearThresh=sub10UnitMgmtAlarmClearThresh, sub10RadioRemoteStatus=sub10RadioRemoteStatus, sub10EthStats15mHistRxMbpsMax=sub10EthStats15mHistRxMbpsMax, sub10EthStats15mHistTxMlplCollsn=sub10EthStats15mHistTxMlplCollsn, sub10RadioStatsCurrTxFrms=sub10RadioStatsCurrTxFrms, PYSNMP_MODULE_ID=sub10Systems, sub10UnitMgmtAlarmName=sub10UnitMgmtAlarmName, sub10RadioStatsCurrLnkLossMin=sub10RadioStatsCurrLnkLossMin, sub10EthMgmtVlanDefaultDEI=sub10EthMgmtVlanDefaultDEI, sub10RadioStats15mHistEntry=sub10RadioStats15mHistEntry, sub10EthStats1dHistPkts65T127=sub10EthStats1dHistPkts65T127, sub10UnitMgmtTransactionStatus=sub10UnitMgmtTransactionStatus, sub10RadioStatsCurrRxFrms=sub10RadioStatsCurrRxFrms, sub10RadioRmtVectErr=sub10RadioRmtVectErr, sub10UnitMgmtFirmwareFromBank=sub10UnitMgmtFirmwareFromBank, sub10UnitMgmtEncryptMode=sub10UnitMgmtEncryptMode, sub10RadioStats1mHistMWUTempMin=sub10RadioStats1mHistMWUTempMin, sub10UnitMgmtFirmwareBankEntryGrp=sub10UnitMgmtFirmwareBankEntryGrp, sub10RadioLclLnkLoss=sub10RadioLclLnkLoss, sub10RadioStatsCurrVectErrMin=sub10RadioStatsCurrVectErrMin, sub10RadioStats15mHistRxQPSK=sub10RadioStats15mHistRxQPSK, sub10RadioStats15mHistTxMgmtPkts=sub10RadioStats15mHistTxMgmtPkts, sub10RadioStats1dHistTxPkts=sub10RadioStats1dHistTxPkts, sub10EthMgmtPhy=sub10EthMgmtPhy, sub10EthStats1dHistRxMbpsAvg=sub10EthStats1dHistRxMbpsAvg, sub10UnitMgmtUserPasswordVerify=sub10UnitMgmtUserPasswordVerify, sub10EthernetStatsGrp=sub10EthernetStatsGrp, Sub10Snmpv3SecurityLevel=Sub10Snmpv3SecurityLevel, sub10UnitMgmtSnmpTrpDstIpAddr=sub10UnitMgmtSnmpTrpDstIpAddr, sub10RadioStatsCurrRmtVectErrAvg=sub10RadioStatsCurrRmtVectErrAvg, Sub10AlarmIndex=Sub10AlarmIndex, sub10UnitMgmtSnmpTargetName=sub10UnitMgmtSnmpTargetName, sub10RadioStatsCurrLnkLossMax=sub10RadioStatsCurrLnkLossMax, sub10RadioStats15mHistLnkLossMin=sub10RadioStats15mHistLnkLossMin, sub10EthStats1dHistPkts512T1023=sub10EthStats1dHistPkts512T1023, sub10RadioStats1mHistAFERMax=sub10RadioStats1mHistAFERMax, sub10UnitMgmtSnmpv320Mib=sub10UnitMgmtSnmpv320Mib, sub10EthLclMDI=sub10EthLclMDI, sub10UnitMgmtIpSubnetMask=sub10UnitMgmtIpSubnetMask, sub10EthStatsCurrTxBcastFrms=sub10EthStatsCurrTxBcastFrms, sub10UnitMgmtSnmpTrpDstCommunity=sub10UnitMgmtSnmpTrpDstCommunity, sub10RadioStats15mHistVectErrMax=sub10RadioStats15mHistVectErrMax, sub10UnitRmtTime=sub10UnitRmtTime, sub10RadioMgmtStatsActiveState=sub10RadioMgmtStatsActiveState, sub10RadioStats1mHistTxPowerMax=sub10RadioStats1mHistTxPowerMax)
mibBuilder.exportSymbols("SUB10SYSTEMS-MIB", sub10RadioStats1mHistTx8PSK=sub10RadioStats1mHistTx8PSK, sub10UnitMgmtFirmwareActProgress=sub10UnitMgmtFirmwareActProgress, sub10EthLclStatusEntryGrp=sub10EthLclStatusEntryGrp, sub10UnitLclMWUTemperature=sub10UnitLclMWUTemperature, sub10EthMgmtQoSMPLSEntry=sub10EthMgmtQoSMPLSEntry, sub10RadioStats15mHistRxPowerMin=sub10RadioStats15mHistRxPowerMin, sub10UnitMgmtSnmpEngineId=sub10UnitMgmtSnmpEngineId, sub10UnitMgmtSnmpMaintPrivProto=sub10UnitMgmtSnmpMaintPrivProto, sub10UnitRmtLinkName=sub10UnitRmtLinkName, Sub10TxPowerLimit=Sub10TxPowerLimit, sub10EthStats1dHistIntvls=sub10EthStats1dHistIntvls, sub10EthStatsCurrRxGoodFrms=sub10EthStatsCurrRxGoodFrms, sub10RadioStats1mHistLnkLossMin=sub10RadioStats1mHistLnkLossMin, sub10EthStats15mHistTxLtCollsn=sub10EthStats15mHistTxLtCollsn, sub10EthMgmtVlanAllowedRowStatus=sub10EthMgmtVlanAllowedRowStatus, sub10UnitMgmtIpMode=sub10UnitMgmtIpMode, sub10UnitMgmtAlarmType=sub10UnitMgmtAlarmType, sub10UnitLclTerminalName=sub10UnitLclTerminalName, sub10EthStatsCurrPkts512T1023=sub10EthStatsCurrPkts512T1023, sub10UnitMgmtFirmwareUplImage=sub10UnitMgmtFirmwareUplImage, sub10UnitRmtUnitType=sub10UnitRmtUnitType, sub10EthMgmtStatsActiveName=sub10EthMgmtStatsActiveName, sub10RadioStats1dHistTxMgmtPkts=sub10RadioStats1dHistTxMgmtPkts, sub10EthStats15mHistIntvls=sub10EthStats15mHistIntvls, sub10UnitMgmtAlarmRaiseIntvls=sub10UnitMgmtAlarmRaiseIntvls, sub10EthStats1dHistTxOctets=sub10EthStats1dHistTxOctets, sub10RadioMgmtGrp=sub10RadioMgmtGrp, sub10UnitMgmtSmtp=sub10UnitMgmtSmtp, sub10RadioStats1dHistTime=sub10RadioStats1dHistTime, sub10EthStatsCurrRxCRCErrs=sub10EthStatsCurrRxCRCErrs, sub10EthMgmtStatsActiveTable=sub10EthMgmtStatsActiveTable, sub10RadioStatsCurrTxPowerMax=sub10RadioStatsCurrTxPowerMax, sub10UnitMgmtUserGroup=sub10UnitMgmtUserGroup, sub10UnitMgmtFirmwareBankVersion=sub10UnitMgmtFirmwareBankVersion, Sub10ModulationMode=Sub10ModulationMode, sub10UnitMgmtAlarmEntry=sub10UnitMgmtAlarmEntry, sub10EthStats1dHistTxPauseFrms=sub10EthStats1dHistTxPauseFrms, sub10RadioStats15mHistRxFrms=sub10RadioStats15mHistRxFrms, sub10RadioStats1dHistIntvls=sub10RadioStats1dHistIntvls, sub10UnitLclSiteName=sub10UnitLclSiteName, sub10UnitMgmtSnmpv3=sub10UnitMgmtSnmpv3, sub10EthernetStatsCurrEntry=sub10EthernetStatsCurrEntry, Sub10RadioLinkState=Sub10RadioLinkState, sub10RadioMgmtAmod=sub10RadioMgmtAmod, sub10RadioStatsCurrAFERMax=sub10RadioStatsCurrAFERMax, sub10MIBCompliances=sub10MIBCompliances, sub10EthMgmtQoSDSCPMappingNumber=sub10EthMgmtQoSDSCPMappingNumber, sub10EthStats15mHistRxOversized=sub10EthStats15mHistRxOversized, sub10UnitLclAlarmState=sub10UnitLclAlarmState, sub10RadioStats1dHistLnkLossMax=sub10RadioStats1dHistLnkLossMax, sub10RadioStats15mHistEntryGrp=sub10RadioStats15mHistEntryGrp, sub10EthStats15mHistTxBcastFrms=sub10EthStats15mHistTxBcastFrms, sub10Systems=sub10Systems, sub10UnitMgmtEncryptKey=sub10UnitMgmtEncryptKey, sub10UnitMgmtTime=sub10UnitMgmtTime, sub10EthStats1dHistTable=sub10EthStats1dHistTable, sub10UnitMgmtVlanGrp=sub10UnitMgmtVlanGrp, sub10EthMgmtQoSMPLSQueue=sub10EthMgmtQoSMPLSQueue, sub10UnitMgmtUserPassword=sub10UnitMgmtUserPassword, sub10EthLclMacAddress=sub10EthLclMacAddress, sub10UnitMgmtTimeNTPSyncStatus=sub10UnitMgmtTimeNTPSyncStatus, sub10EthStats15mHistTxPauseFrms=sub10EthStats15mHistTxPauseFrms, sub10UnitMgmtSnmpAccessRowStatus=sub10UnitMgmtSnmpAccessRowStatus, sub10EthMgmtQoSMode=sub10EthMgmtQoSMode, Sub10QoSQueue=Sub10QoSQueue, sub10EthStats15mHistTxExsvCollsn=sub10EthStats15mHistTxExsvCollsn, Sub10AlarmName=Sub10AlarmName, sub10UnitMgmtSnmpOperPrivProto=sub10UnitMgmtSnmpOperPrivProto, sub10UnitMgmtSnmpTargetUserName=sub10UnitMgmtSnmpTargetUserName, sub10EthStats1dHistRxOversized=sub10EthStats1dHistRxOversized, sub10UnitRmtTerminalName=sub10UnitRmtTerminalName, sub10UnitMgmtAlarmSmtpAddress=sub10UnitMgmtAlarmSmtpAddress, sub10EthMgmtStatsActiveEntryGrp=sub10EthMgmtStatsActiveEntryGrp, sub10UnitMgmtTransactionMode=sub10UnitMgmtTransactionMode, sub10EthMgmtQoSQEntry=sub10EthMgmtQoSQEntry, sub10EthIfIndex=sub10EthIfIndex, sub10EthStatsCurrTxMbpsAvg=sub10EthStatsCurrTxMbpsAvg, sub10EthMgmtQoSDSCPTable=sub10EthMgmtQoSDSCPTable, sub10EthStats15mHistPkts256T511=sub10EthStats15mHistPkts256T511, sub10RadioStatsCurrRmtAFERAvg=sub10RadioStatsCurrRmtAFERAvg, sub10EthStatsCurrPkts256T511=sub10EthStatsCurrPkts256T511, sub10UnitMgmtFirmwareLoadedBank=sub10UnitMgmtFirmwareLoadedBank, sub10UnitRmtIpAddress=sub10UnitRmtIpAddress, sub10UnitMgmtResetAction=sub10UnitMgmtResetAction, sub10UnitLocalStatusGrp=sub10UnitLocalStatusGrp, sub10UnitMgmtVlanDEI=sub10UnitMgmtVlanDEI, sub10EthMgmtQoSMPLSTable=sub10EthMgmtQoSMPLSTable, sub10RadioLocalStatus=sub10RadioLocalStatus, sub10EthStats15mHistTxMbpsMin=sub10EthStats15mHistTxMbpsMin, sub10RadioStats15mHistRxPowerMax=sub10RadioStats15mHistRxPowerMax, sub10RadioStats15mHistIntvls=sub10RadioStats15mHistIntvls, sub10UnitMgmtSnmpAdminPrivProto=sub10UnitMgmtSnmpAdminPrivProto, sub10EthMgmtVlanAllowedEntry=sub10EthMgmtVlanAllowedEntry, sub10UnitLclTime=sub10UnitLclTime, sub10EthMgmtQoSDSCPEntry=sub10EthMgmtQoSDSCPEntry, sub10EthStats15mHistPkts512T1023=sub10EthStats15mHistPkts512T1023, sub10EthMgmtQoSPCPQueue=sub10EthMgmtQoSPCPQueue, sub10UnitMgmtSnmpTrpDstRowStatus=sub10UnitMgmtSnmpTrpDstRowStatus, sub10RadioStatus=sub10RadioStatus, sub10UnitMgmtAlarmToSyslog=sub10UnitMgmtAlarmToSyslog, Sub10UnitType=Sub10UnitType, sub10UnitMgmtDNServer=sub10UnitMgmtDNServer, sub10UnitMgmtSyncEGrp=sub10UnitMgmtSyncEGrp, sub10UnitMgmtSnmpUserIndex=sub10UnitMgmtSnmpUserIndex, sub10UnitMgmtSiteName=sub10UnitMgmtSiteName, sub10EthStats15mHistTxMbpsMax=sub10EthStats15mHistTxMbpsMax, sub10UnitMgmtUsersNumber=sub10UnitMgmtUsersNumber, sub10EthStatsCurrTxMbpsMax=sub10EthStatsCurrTxMbpsMax, sub10RadioStatsCurrAFERAvg=sub10RadioStatsCurrAFERAvg, sub10EthMgmtQoSQCongestionPolicy=sub10EthMgmtQoSQCongestionPolicy, sub10EthStats15mHistRxCRCErrs=sub10EthStats15mHistRxCRCErrs, sub10RadioStats15mHistTx8PSK=sub10RadioStats15mHistTx8PSK, sub10UnitMgmtAlarmClearOper=sub10UnitMgmtAlarmClearOper, sub10UnitMgmtAlarmMonitorIntvl=sub10UnitMgmtAlarmMonitorIntvl, sub10EthStats1dHistRxCRCErrs=sub10EthStats1dHistRxCRCErrs, sub10UnitMgmtSnmpGrp=sub10UnitMgmtSnmpGrp, sub10UnitMgmtDNS=sub10UnitMgmtDNS, sub10UnitMgmtUsersGrp=sub10UnitMgmtUsersGrp, sub10UnitMgmtIpGrp=sub10UnitMgmtIpGrp, sub10UnitRmtHWSerialNumber=sub10UnitRmtHWSerialNumber, sub10UnitMgmtSnmpTraps=sub10UnitMgmtSnmpTraps, sub10EthStats15mHistRxBcastFrms=sub10EthStats15mHistRxBcastFrms, sub10RadioStats1dHistQPSKTo8PSK=sub10RadioStats1dHistQPSKTo8PSK, Sub10VlanPriority=Sub10VlanPriority, sub10UnitMgmtSnmpUserAuthPwdChk=sub10UnitMgmtSnmpUserAuthPwdChk, sub10EthStats1dHistTxMlplCollsn=sub10EthStats1dHistTxMlplCollsn, sub10EthMgmtVlanDefaultId=sub10EthMgmtVlanDefaultId, sub10RadioStats1dHistRxBadFrms=sub10RadioStats1dHistRxBadFrms, sub10EthMgmtQoSVlanIndex=sub10EthMgmtQoSVlanIndex, sub10UnitMgmtSystemGrp=sub10UnitMgmtSystemGrp, sub10Compliance=sub10Compliance, sub10RadioStats1mHist8PSKToQPSK=sub10RadioStats1mHist8PSKToQPSK, sub10RadioStats15mHistAFERAvg=sub10RadioStats15mHistAFERAvg, sub10UnitMgmtSyncEMode=sub10UnitMgmtSyncEMode, sub10UnitMgmtUserEntry=sub10UnitMgmtUserEntry, sub10RadioStats1mHistLnkLossMax=sub10RadioStats1mHistLnkLossMax, sub10EthMgmtQoSDSCPIndex=sub10EthMgmtQoSDSCPIndex, Sub10MDIType=Sub10MDIType, sub10EthMgmtQoSPCPTable=sub10EthMgmtQoSPCPTable, sub10EthStats15mHistTxCSenseErrs=sub10EthStats15mHistTxCSenseErrs, sub10RadioLclTxModulationMode=sub10RadioLclTxModulationMode, sub10EthStatsCurrTxMbpsMin=sub10EthStatsCurrTxMbpsMin, sub10EthMgmtPhyAutoNeg=sub10EthMgmtPhyAutoNeg, sub10EthernetStatus=sub10EthernetStatus, sub10EthStats15mHistTxMbpsAvg=sub10EthStats15mHistTxMbpsAvg, sub10EthStats1dHistTxMcastFrms=sub10EthStats1dHistTxMcastFrms, sub10RadioStats1dHistTable=sub10RadioStats1dHistTable, sub10RadioStatsCurrTxPowerMin=sub10RadioStatsCurrTxPowerMin, sub10UnitMgmtLicenseKey=sub10UnitMgmtLicenseKey, sub10RadioMgmtStats=sub10RadioMgmtStats, sub10RadioStats1mHistEntryGrp=sub10RadioStats1mHistEntryGrp, sub10UnitMgmtFirmware=sub10UnitMgmtFirmware, sub10RadioMgmtStatsActiveEntryGrp=sub10RadioMgmtStatsActiveEntryGrp, sub10UnitMgmtSnmpAccessTable=sub10UnitMgmtSnmpAccessTable, sub10UnitMgmtSnmpAccessName=sub10UnitMgmtSnmpAccessName, sub10EthLclStatusEntry=sub10EthLclStatusEntry, sub10EthMgmtQoSQLen=sub10EthMgmtQoSQLen, sub10UnitMgmtVlanState=sub10UnitMgmtVlanState, sub10EthStats1dHistRxPauseFrms=sub10EthStats1dHistRxPauseFrms, sub10EthStats1dHistPkts256T511=sub10EthStats1dHistPkts256T511, sub10RadioLclDataRate=sub10RadioLclDataRate, sub10RadioStats1mHistVectErrMax=sub10RadioStats1mHistVectErrMax, sub10EthernetStatsCurrEntryGrp=sub10EthernetStatsCurrEntryGrp, sub10UnitLclFirmwareVersion=sub10UnitLclFirmwareVersion, sub10RadioStats15mHistMWUTempMax=sub10RadioStats15mHistMWUTempMax, sub10EthMgmtQoSVlanEntryGrp=sub10EthMgmtQoSVlanEntryGrp, sub10EthStats1dHistPkts64Octets=sub10EthStats1dHistPkts64Octets, sub10RadioLclRxPower=sub10RadioLclRxPower, sub10UnitRemoteStatusGrp=sub10UnitRemoteStatusGrp, sub10RadioStats1mHistTxMgmtPkts=sub10RadioStats1mHistTxMgmtPkts, sub10RadioStats1mHistTable=sub10RadioStats1mHistTable, sub10UnitMgmtSnmpTargetTable=sub10UnitMgmtSnmpTargetTable)
