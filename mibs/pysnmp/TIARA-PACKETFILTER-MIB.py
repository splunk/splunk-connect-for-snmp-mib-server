#
# PySNMP MIB module TIARA-PACKETFILTER-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TIARA-PACKETFILTER-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:09:12 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, ValueSizeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Gauge32, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, MibIdentifier, IpAddress, Unsigned32, TimeTicks, ObjectIdentity, ModuleIdentity, iso, Counter64, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "MibIdentifier", "IpAddress", "Unsigned32", "TimeTicks", "ObjectIdentity", "ModuleIdentity", "iso", "Counter64", "Counter32")
DisplayString, RowStatus, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TruthValue", "TextualConvention")
tiaraIpIfIndex, = mibBuilder.importSymbols("TIARA-IP-MIB", "tiaraIpIfIndex")
tiaraMgmt, = mibBuilder.importSymbols("TIARA-NETWORKS-SMI", "tiaraMgmt")
tiaraPacketFilterMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3174, 2, 51))
if mibBuilder.loadTexts: tiaraPacketFilterMib.setLastUpdated('9407272253Z')
if mibBuilder.loadTexts: tiaraPacketFilterMib.setOrganization('Tiara Networks Inc.')
filterRuleClearCounters = MibScalar((1, 3, 6, 1, 4, 1, 3174, 2, 51, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: filterRuleClearCounters.setStatus('current')
filterNameIndexTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 51, 2), )
if mibBuilder.loadTexts: filterNameIndexTable.setStatus('current')
filterNameIndexEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 51, 2, 1), ).setIndexNames((0, "TIARA-PACKETFILTER-MIB", "filterNameIndex"))
if mibBuilder.loadTexts: filterNameIndexEntry.setStatus('current')
filterEntryName = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 2, 1, 1), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterEntryName.setStatus('current')
filterNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 2, 1, 2), Integer32())
if mibBuilder.loadTexts: filterNameIndex.setStatus('current')
filterEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterEntryRowStatus.setStatus('current')
filterRuleAssignTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 51, 3), )
if mibBuilder.loadTexts: filterRuleAssignTable.setStatus('current')
filterRuleAssignTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 51, 3, 1), ).setIndexNames((0, "TIARA-IP-MIB", "tiaraIpIfIndex"))
if mibBuilder.loadTexts: filterRuleAssignTableEntry.setStatus('current')
filterRuleSetNameIn = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 3, 1, 1), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetNameIn.setStatus('current')
filterRuleSetNameOut = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 3, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetNameOut.setStatus('current')
filterRuleAssignTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleAssignTableRowStatus.setStatus('current')
filterRuleSetTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4), )
if mibBuilder.loadTexts: filterRuleSetTable.setStatus('current')
filterRuleSetTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1), ).setIndexNames((0, "TIARA-PACKETFILTER-MIB", "filterNameIndex"), (0, "TIARA-PACKETFILTER-MIB", "filterRuleSetLineNo"))
if mibBuilder.loadTexts: filterRuleSetTableEntry.setStatus('current')
filterRuleSetLineNo = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: filterRuleSetLineNo.setStatus('current')
filterRuleName = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleName.setStatus('current')
filterRuleSetAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("permit", 1), ("deny", 2), ("reject", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetAction.setStatus('current')
filterRuleSetProtocolType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 6, 17, 0))).clone(namedValues=NamedValues(("icmp", 1), ("tcp", 6), ("udp", 17), ("ip", 0)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetProtocolType.setStatus('current')
filterRuleSetSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 5), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetSrcIpAddr.setStatus('current')
filterRuleSetSrcMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 6), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetSrcMask.setStatus('current')
filterRuleSetDestIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 7), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetDestIpAddr.setStatus('current')
filterRuleSetDestMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 8), IpAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetDestMask.setStatus('current')
filterRuleSetPrecedence = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetPrecedence.setStatus('current')
filterRuleSetTos = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetTos.setStatus('current')
filterRuleSetIcmpType = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetIcmpType.setStatus('current')
filterRuleSetIcmpCode = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetIcmpCode.setStatus('current')
filterRuleSetSrcPortOne = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetSrcPortOne.setStatus('current')
filterRuleSetSrcPortTwo = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetSrcPortTwo.setStatus('current')
filterRuleSetDestPortOne = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetDestPortOne.setStatus('current')
filterRuleSetDestPortTwo = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetDestPortTwo.setStatus('current')
filterRuleSetSrcRelationBetnPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("equalto", 1), ("notequalto", 2), ("lessthan", 3), ("greaterthan", 4), ("lessthanorequalto", 5), ("greaterthanorequalto", 6), ("range", 7), ("none", 8))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetSrcRelationBetnPorts.setStatus('current')
filterRuleSetDestRelationBetnPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("equalto", 1), ("notequalto", 2), ("lessthan", 3), ("greaterthan", 4), ("lessthanorequalto", 5), ("greaterthanorequalto", 6), ("range", 7), ("none", 8))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetDestRelationBetnPorts.setStatus('current')
filterRuleSetTcpFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 19), Bits().clone(namedValues=NamedValues(("fin", 0), ("syn", 1), ("rst", 2), ("psh", 3), ("ack", 4), ("urg", 5), ("estaslished", 6)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetTcpFlags.setStatus('current')
filterRuleSetLogAction = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 20), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetLogAction.setStatus('current')
filterRuleSetConfigure = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("add", 1), ("insert", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetConfigure.setStatus('current')
filterRuleSetTableRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 4, 1, 22), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: filterRuleSetTableRowStatus.setStatus('current')
filterRuleStatsTable = MibTable((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5), )
if mibBuilder.loadTexts: filterRuleStatsTable.setStatus('current')
filterRuleStatsTableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1), ).setIndexNames((0, "TIARA-IP-MIB", "tiaraIpIfIndex"))
if mibBuilder.loadTexts: filterRuleStatsTableEntry.setStatus('current')
filterRuleStatsInBoundPermittedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsInBoundPermittedPkts.setStatus('current')
filterRuleStatsInBoundDeniedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsInBoundDeniedPkts.setStatus('current')
filterRuleStatsInBoundUnMatchedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsInBoundUnMatchedPkts.setStatus('current')
filterRuleStatsOutBoundPermittedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsOutBoundPermittedPkts.setStatus('current')
filterRuleStatsOutBoundDeniedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsOutBoundDeniedPkts.setStatus('current')
filterRuleStatsOutBoundUnMatchedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsOutBoundUnMatchedPkts.setStatus('current')
filterRuleStatsNonIpInBoundPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsNonIpInBoundPkts.setStatus('current')
filterRuleStatsNonIpOutBoundPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsNonIpOutBoundPkts.setStatus('current')
filterRuleStatsBadIpInBoundPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsBadIpInBoundPkts.setStatus('current')
filterRuleStatsBadIpOutBoundPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 3174, 2, 51, 5, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: filterRuleStatsBadIpOutBoundPkts.setStatus('current')
mibBuilder.exportSymbols("TIARA-PACKETFILTER-MIB", filterRuleStatsTable=filterRuleStatsTable, tiaraPacketFilterMib=tiaraPacketFilterMib, filterNameIndex=filterNameIndex, filterRuleSetNameIn=filterRuleSetNameIn, filterRuleSetDestIpAddr=filterRuleSetDestIpAddr, filterRuleStatsInBoundPermittedPkts=filterRuleStatsInBoundPermittedPkts, filterRuleSetNameOut=filterRuleSetNameOut, filterRuleStatsInBoundDeniedPkts=filterRuleStatsInBoundDeniedPkts, filterRuleSetPrecedence=filterRuleSetPrecedence, filterRuleStatsNonIpInBoundPkts=filterRuleStatsNonIpInBoundPkts, filterRuleSetConfigure=filterRuleSetConfigure, filterRuleStatsNonIpOutBoundPkts=filterRuleStatsNonIpOutBoundPkts, filterRuleStatsOutBoundUnMatchedPkts=filterRuleStatsOutBoundUnMatchedPkts, filterRuleStatsBadIpInBoundPkts=filterRuleStatsBadIpInBoundPkts, filterRuleSetTableRowStatus=filterRuleSetTableRowStatus, PYSNMP_MODULE_ID=tiaraPacketFilterMib, filterNameIndexEntry=filterNameIndexEntry, filterRuleStatsOutBoundPermittedPkts=filterRuleStatsOutBoundPermittedPkts, filterRuleClearCounters=filterRuleClearCounters, filterRuleSetTos=filterRuleSetTos, filterRuleSetSrcPortTwo=filterRuleSetSrcPortTwo, filterRuleStatsOutBoundDeniedPkts=filterRuleStatsOutBoundDeniedPkts, filterEntryName=filterEntryName, filterRuleSetSrcIpAddr=filterRuleSetSrcIpAddr, filterRuleStatsTableEntry=filterRuleStatsTableEntry, filterRuleSetLineNo=filterRuleSetLineNo, filterRuleAssignTable=filterRuleAssignTable, filterRuleSetTcpFlags=filterRuleSetTcpFlags, filterRuleSetDestMask=filterRuleSetDestMask, filterRuleSetSrcPortOne=filterRuleSetSrcPortOne, filterRuleStatsInBoundUnMatchedPkts=filterRuleStatsInBoundUnMatchedPkts, filterRuleSetSrcRelationBetnPorts=filterRuleSetSrcRelationBetnPorts, filterRuleSetIcmpType=filterRuleSetIcmpType, filterRuleSetDestRelationBetnPorts=filterRuleSetDestRelationBetnPorts, filterRuleSetDestPortTwo=filterRuleSetDestPortTwo, filterRuleSetAction=filterRuleSetAction, filterEntryRowStatus=filterEntryRowStatus, filterRuleSetProtocolType=filterRuleSetProtocolType, filterRuleSetLogAction=filterRuleSetLogAction, filterRuleStatsBadIpOutBoundPkts=filterRuleStatsBadIpOutBoundPkts, filterRuleSetTableEntry=filterRuleSetTableEntry, filterRuleAssignTableRowStatus=filterRuleAssignTableRowStatus, filterRuleName=filterRuleName, filterRuleSetTable=filterRuleSetTable, filterRuleSetSrcMask=filterRuleSetSrcMask, filterRuleSetDestPortOne=filterRuleSetDestPortOne, filterRuleAssignTableEntry=filterRuleAssignTableEntry, filterNameIndexTable=filterNameIndexTable, filterRuleSetIcmpCode=filterRuleSetIcmpCode)
