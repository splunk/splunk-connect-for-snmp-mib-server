#
# PySNMP MIB module Foundry-MPLS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/FOUNDRY-MPLS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:01:22 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ClassOfService, = mibBuilder.importSymbols("FDRY-MPLS-L2VPN-MIB", "ClassOfService")
AreaID, = mibBuilder.importSymbols("FOUNDRY-SN-OSPF-GROUP-MIB", "AreaID")
snTraps, snMpls = mibBuilder.importSymbols("FOUNDRY-SN-ROOT-MIB", "snTraps", "snMpls")
MplsTunnelAffinity, = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsTunnelAffinity")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Bits, ObjectIdentity, IpAddress, MibIdentifier, Counter32, Gauge32, ModuleIdentity, Counter64, Unsigned32, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Bits", "ObjectIdentity", "IpAddress", "MibIdentifier", "Counter32", "Gauge32", "ModuleIdentity", "Counter64", "Unsigned32", "Integer32")
DisplayString, TruthValue, TimeStamp, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TruthValue", "TimeStamp", "TextualConvention", "RowStatus")
mpls = ModuleIdentity((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1))
mpls.setRevisions(('2010-06-02 00:00', '2008-02-06 00:00',))
if mibBuilder.loadTexts: mpls.setLastUpdated('201006020000Z')
if mibBuilder.loadTexts: mpls.setOrganization('Brocade Communications Systems, Inc.')
mplsLspNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 0))
mplsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1))
mplsLspInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2))
mplsVllInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 3))
mplsVplsInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 4))
mplsVersion = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsVersion.setStatus('current')
brcdMplsAdminGroupTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 2), )
if mibBuilder.loadTexts: brcdMplsAdminGroupTable.setStatus('current')
brcdMplsAdminGroupEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 2, 1), ).setIndexNames((0, "Foundry-MPLS-MIB", "brcdMplsAdminGroupId"))
if mibBuilder.loadTexts: brcdMplsAdminGroupEntry.setStatus('current')
brcdMplsAdminGroupId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 32)))
if mibBuilder.loadTexts: brcdMplsAdminGroupId.setStatus('current')
brcdMplsAdminGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMplsAdminGroupName.setStatus('current')
brcdMplsAdminGroupRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMplsAdminGroupRowStatus.setStatus('current')
brcdMplsInterfaceTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 3), )
if mibBuilder.loadTexts: brcdMplsInterfaceTable.setStatus('current')
brcdMplsInterfaceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 3, 1), ).setIndexNames((0, "Foundry-MPLS-MIB", "brcdMplsInterfaceIndex"))
if mibBuilder.loadTexts: brcdMplsInterfaceEntry.setStatus('current')
brcdMplsInterfaceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: brcdMplsInterfaceIndex.setStatus('current')
brcdMplsInterfaceAdminGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 3, 1, 2), MplsTunnelAffinity()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMplsInterfaceAdminGroup.setStatus('current')
brcdMplsInterfaceRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 1, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: brcdMplsInterfaceRowStatus.setStatus('current')
mplsConfiguredLsps = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 1), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsConfiguredLsps.setStatus('deprecated')
mplsActiveLsps = MibScalar((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsActiveLsps.setStatus('deprecated')
mplsLspTable = MibTable((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3), )
if mibBuilder.loadTexts: mplsLspTable.setStatus('current')
mplsLspEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1), ).setIndexNames((0, "Foundry-MPLS-MIB", "mplsLspSignalingProto"), (0, "Foundry-MPLS-MIB", "mplsLspIndex"))
if mibBuilder.loadTexts: mplsLspEntry.setStatus('current')
mplsLspSignalingProto = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ldp", 1), ("rsvp", 2))))
if mibBuilder.loadTexts: mplsLspSignalingProto.setStatus('current')
mplsLspIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: mplsLspIndex.setStatus('current')
mplsLspName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspName.setStatus('current')
mplsLspState = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("up", 2), ("down", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspState.setStatus('current')
mplsLspPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspPackets.setStatus('current')
mplsLspAge = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspAge.setStatus('current')
mplsLspTimeUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspTimeUp.setStatus('current')
mplsLspPrimaryTimeUp = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspPrimaryTimeUp.setStatus('current')
mplsLspTransitions = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspTransitions.setStatus('current')
mplsLspLastTransition = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspLastTransition.setStatus('current')
mplsLspFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 11), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspFrom.setStatus('current')
mplsLspTo = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 12), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspTo.setStatus('current')
mplsLspPathName = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspPathName.setStatus('current')
mplsLspPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("primary", 2), ("standby", 3), ("secondary", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspPathType.setStatus('current')
mplsLspAdaptive = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspAdaptive.setStatus('current')
mplsLspBfdSessionId = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 16), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspBfdSessionId.setStatus('current')
mplsLspReoptimizeTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 17), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(300, 65535), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspReoptimizeTimer.setStatus('current')
mplsLspCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 18), ClassOfService()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspCoS.setStatus('current')
mplsLspHopLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspHopLimit.setStatus('current')
mplsLspCspf = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspCspf.setStatus('current')
mplsLspCspfTieBreaker = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("random", 1), ("leastFill", 2), ("mostFill", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspCspfTieBreaker.setStatus('current')
mplsLspFrrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("detour", 2), ("facility", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspFrrMode.setStatus('current')
mplsLspFrrSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspFrrSetupPriority.setStatus('current')
mplsLspFrrHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspFrrHoldingPriority.setStatus('current')
mplsLspFrrHopLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspFrrHopLimit.setStatus('current')
mplsLspFrrBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspFrrBandwidth.setStatus('current')
mplsLspFrrAdmGrpIncludeAny = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 27), MplsTunnelAffinity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspFrrAdmGrpIncludeAny.setStatus('current')
mplsLspFrrAdmGrpIncludeAll = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 28), MplsTunnelAffinity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspFrrAdmGrpIncludeAll.setStatus('current')
mplsLspFrrAdmGrpExcludeAny = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 29), MplsTunnelAffinity()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspFrrAdmGrpExcludeAny.setStatus('current')
mplsLspPathSelectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("auto", 1), ("manual", 2), ("unconditional", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspPathSelectMode.setStatus('current')
mplsLspPathSelectPathname = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 31), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspPathSelectPathname.setStatus('current')
mplsLspPathSelectRevertTimer = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspPathSelectRevertTimer.setStatus('current')
mplsLspShortcutOspfAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 33), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspShortcutOspfAllowed.setStatus('current')
mplsLspShortcutIsisAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 34), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspShortcutIsisAllowed.setStatus('current')
mplsLspShortcutIsisLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("level1", 1), ("level2", 2), ("level1and2", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspShortcutIsisLevel.setStatus('current')
mplsLspShortcutIsisAnnounce = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 36), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspShortcutIsisAnnounce.setStatus('current')
mplsLspShortcutIsisAnnounceMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspShortcutIsisAnnounceMetric.setStatus('current')
mplsLspShortcutIsisRelativeMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 1991, 1, 2, 15, 1, 2, 3, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-16777215, 16777215))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mplsLspShortcutIsisRelativeMetric.setStatus('current')
snMplsLspUp = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1010)).setObjects(("Foundry-MPLS-MIB", "mplsLspName"), ("Foundry-MPLS-MIB", "mplsLspPathName"))
if mibBuilder.loadTexts: snMplsLspUp.setStatus('current')
snMplsLspDown = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1011)).setObjects(("Foundry-MPLS-MIB", "mplsLspName"), ("Foundry-MPLS-MIB", "mplsLspPathName"))
if mibBuilder.loadTexts: snMplsLspDown.setStatus('current')
snMplsLspChange = NotificationType((1, 3, 6, 1, 4, 1, 1991, 0, 1012)).setObjects(("Foundry-MPLS-MIB", "mplsLspName"), ("Foundry-MPLS-MIB", "mplsLspPathName"))
if mibBuilder.loadTexts: snMplsLspChange.setStatus('current')
mibBuilder.exportSymbols("Foundry-MPLS-MIB", mplsLspReoptimizeTimer=mplsLspReoptimizeTimer, mplsLspFrrMode=mplsLspFrrMode, brcdMplsInterfaceTable=brcdMplsInterfaceTable, mplsLspShortcutIsisRelativeMetric=mplsLspShortcutIsisRelativeMetric, mplsLspPathType=mplsLspPathType, mplsLspPrimaryTimeUp=mplsLspPrimaryTimeUp, brcdMplsInterfaceAdminGroup=brcdMplsInterfaceAdminGroup, mplsLspFrrHopLimit=mplsLspFrrHopLimit, mplsLspFrom=mplsLspFrom, mplsLspAdaptive=mplsLspAdaptive, mplsLspFrrHoldingPriority=mplsLspFrrHoldingPriority, brcdMplsAdminGroupTable=brcdMplsAdminGroupTable, brcdMplsInterfaceEntry=brcdMplsInterfaceEntry, mplsLspIndex=mplsLspIndex, brcdMplsAdminGroupEntry=brcdMplsAdminGroupEntry, mplsLspShortcutIsisLevel=mplsLspShortcutIsisLevel, snMplsLspDown=snMplsLspDown, mplsLspShortcutIsisAllowed=mplsLspShortcutIsisAllowed, mplsLspInfo=mplsLspInfo, mplsVplsInfo=mplsVplsInfo, mplsLspTimeUp=mplsLspTimeUp, mplsLspPathSelectMode=mplsLspPathSelectMode, mplsLspShortcutIsisAnnounce=mplsLspShortcutIsisAnnounce, snMplsLspUp=snMplsLspUp, mplsLspShortcutIsisAnnounceMetric=mplsLspShortcutIsisAnnounceMetric, mplsLspNotifications=mplsLspNotifications, brcdMplsAdminGroupRowStatus=brcdMplsAdminGroupRowStatus, mplsLspTable=mplsLspTable, mplsLspBfdSessionId=mplsLspBfdSessionId, mplsLspPathSelectPathname=mplsLspPathSelectPathname, mplsLspPathSelectRevertTimer=mplsLspPathSelectRevertTimer, mplsLspPathName=mplsLspPathName, mplsLspCspf=mplsLspCspf, PYSNMP_MODULE_ID=mpls, snMplsLspChange=snMplsLspChange, mplsInfo=mplsInfo, mplsLspFrrAdmGrpIncludeAll=mplsLspFrrAdmGrpIncludeAll, mplsLspState=mplsLspState, mplsLspAge=mplsLspAge, mplsLspTransitions=mplsLspTransitions, mplsLspHopLimit=mplsLspHopLimit, mplsLspEntry=mplsLspEntry, mplsLspPackets=mplsLspPackets, mplsLspCspfTieBreaker=mplsLspCspfTieBreaker, brcdMplsAdminGroupName=brcdMplsAdminGroupName, mplsLspFrrAdmGrpIncludeAny=mplsLspFrrAdmGrpIncludeAny, brcdMplsAdminGroupId=brcdMplsAdminGroupId, mpls=mpls, mplsLspShortcutOspfAllowed=mplsLspShortcutOspfAllowed, brcdMplsInterfaceIndex=brcdMplsInterfaceIndex, mplsLspName=mplsLspName, mplsActiveLsps=mplsActiveLsps, mplsVllInfo=mplsVllInfo, mplsLspLastTransition=mplsLspLastTransition, mplsVersion=mplsVersion, mplsLspSignalingProto=mplsLspSignalingProto, mplsConfiguredLsps=mplsConfiguredLsps, mplsLspTo=mplsLspTo, mplsLspCoS=mplsLspCoS, mplsLspFrrSetupPriority=mplsLspFrrSetupPriority, mplsLspFrrBandwidth=mplsLspFrrBandwidth, brcdMplsInterfaceRowStatus=brcdMplsInterfaceRowStatus, mplsLspFrrAdmGrpExcludeAny=mplsLspFrrAdmGrpExcludeAny)
