#
# PySNMP MIB module JUNIPER-DCU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/JUNIPER-DCU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:48:03 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
jnxMibs, = mibBuilder.importSymbols("JUNIPER-SMI", "jnxMibs")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, Unsigned32, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64, Bits, iso, MibIdentifier, Counter32, IpAddress, ObjectIdentity, NotificationType, Gauge32, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "Unsigned32", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64", "Bits", "iso", "MibIdentifier", "Counter32", "IpAddress", "ObjectIdentity", "NotificationType", "Gauge32", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
jnxDCUs = ModuleIdentity((1, 3, 6, 1, 4, 1, 2636, 3, 6))
jnxDCUs.setRevisions(('2002-12-17 00:00', '2002-02-28 00:00',))
if mibBuilder.loadTexts: jnxDCUs.setLastUpdated('200307182153Z')
if mibBuilder.loadTexts: jnxDCUs.setOrganization('Juniper Networks, Inc.')
jnxDCUsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 6, 1), )
if mibBuilder.loadTexts: jnxDCUsTable.setStatus('deprecated')
jnxDCUsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 6, 1, 1), ).setIndexNames((0, "JUNIPER-DCU-MIB", "jnxDCUSrcIfIndex"), (0, "JUNIPER-DCU-MIB", "jnxDCUDstClassName"))
if mibBuilder.loadTexts: jnxDCUsEntry.setStatus('deprecated')
jnxDCUSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 1, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDCUSrcIfIndex.setStatus('deprecated')
jnxDCUDstClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 24))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDCUDstClassName.setStatus('deprecated')
jnxDCUPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 1, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDCUPackets.setStatus('deprecated')
jnxDCUBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 1, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDCUBytes.setStatus('deprecated')
jnxDcuStatsTable = MibTable((1, 3, 6, 1, 4, 1, 2636, 3, 6, 2), )
if mibBuilder.loadTexts: jnxDcuStatsTable.setStatus('current')
jnxDcuStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2636, 3, 6, 2, 1), ).setIndexNames((0, "JUNIPER-DCU-MIB", "jnxDcuStatsSrcIfIndex"), (0, "JUNIPER-DCU-MIB", "jnxDcuStatsAddrFamily"), (0, "JUNIPER-DCU-MIB", "jnxDcuStatsClassName"))
if mibBuilder.loadTexts: jnxDcuStatsEntry.setStatus('current')
jnxDcuStatsSrcIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 2, 1, 1), InterfaceIndex())
if mibBuilder.loadTexts: jnxDcuStatsSrcIfIndex.setStatus('current')
jnxDcuStatsAddrFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2))))
if mibBuilder.loadTexts: jnxDcuStatsAddrFamily.setStatus('current')
jnxDcuStatsClassName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 2, 1, 3), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 112)))
if mibBuilder.loadTexts: jnxDcuStatsClassName.setStatus('current')
jnxDcuStatsPackets = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 2, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDcuStatsPackets.setStatus('current')
jnxDcuStatsBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 2, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDcuStatsBytes.setStatus('current')
jnxDcuStatsClName = MibTableColumn((1, 3, 6, 1, 4, 1, 2636, 3, 6, 2, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 112))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jnxDcuStatsClName.setStatus('current')
mibBuilder.exportSymbols("JUNIPER-DCU-MIB", jnxDcuStatsTable=jnxDcuStatsTable, jnxDCUsEntry=jnxDCUsEntry, jnxDcuStatsClassName=jnxDcuStatsClassName, jnxDcuStatsAddrFamily=jnxDcuStatsAddrFamily, PYSNMP_MODULE_ID=jnxDCUs, jnxDCUBytes=jnxDCUBytes, jnxDcuStatsPackets=jnxDcuStatsPackets, jnxDCUSrcIfIndex=jnxDCUSrcIfIndex, jnxDcuStatsEntry=jnxDcuStatsEntry, jnxDCUPackets=jnxDCUPackets, jnxDCUDstClassName=jnxDCUDstClassName, jnxDcuStatsClName=jnxDcuStatsClName, jnxDcuStatsBytes=jnxDcuStatsBytes, jnxDCUs=jnxDCUs, jnxDCUsTable=jnxDCUsTable, jnxDcuStatsSrcIfIndex=jnxDcuStatsSrcIfIndex)
