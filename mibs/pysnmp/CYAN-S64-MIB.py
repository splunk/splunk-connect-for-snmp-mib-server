#
# PySNMP MIB module CYAN-S64-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CYAN-S64-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:18:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint")
cyanEntityModules, = mibBuilder.importSymbols("CYAN-MIB", "cyanEntityModules")
CyanSdhSnSignalLabelTc, CyanAdminStateTc, CyanOpStateTc, CyanSecServiceStateTc, CyanNimTc, CyanOpStateQualTc = mibBuilder.importSymbols("CYAN-TC-MIB", "CyanSdhSnSignalLabelTc", "CyanAdminStateTc", "CyanOpStateTc", "CyanSecServiceStateTc", "CyanNimTc", "CyanOpStateQualTc")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, Unsigned32, Integer32, TimeTicks, Counter32, Gauge32, ObjectIdentity, iso, NotificationType, Counter64, MibIdentifier, Bits, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "Unsigned32", "Integer32", "TimeTicks", "Counter32", "Gauge32", "ObjectIdentity", "iso", "NotificationType", "Counter64", "MibIdentifier", "Bits", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
cyanS64Module = ModuleIdentity((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250))
cyanS64Module.setRevisions(('2014-12-07 05:45',))
if mibBuilder.loadTexts: cyanS64Module.setLastUpdated('201412070545Z')
if mibBuilder.loadTexts: cyanS64Module.setOrganization('Cyan, Inc.')
cyanS64MibObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1))
cyanS64Table = MibTable((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1), )
if mibBuilder.loadTexts: cyanS64Table.setStatus('current')
cyanS64Entry = MibTableRow((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1), ).setIndexNames((0, "CYAN-S64-MIB", "cyanS64ShelfId"), (0, "CYAN-S64-MIB", "cyanS64ModuleId"), (0, "CYAN-S64-MIB", "cyanS64S64Id"))
if mibBuilder.loadTexts: cyanS64Entry.setStatus('current')
cyanS64ShelfId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)))
if mibBuilder.loadTexts: cyanS64ShelfId.setStatus('current')
cyanS64ModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 2), Unsigned32())
if mibBuilder.loadTexts: cyanS64ModuleId.setStatus('current')
cyanS64S64Id = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 3), Unsigned32())
if mibBuilder.loadTexts: cyanS64S64Id.setStatus('current')
cyanS64Accepted = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 4), CyanSdhSnSignalLabelTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64Accepted.setStatus('current')
cyanS64AdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 5), CyanAdminStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64AdminState.setStatus('current')
cyanS64AutoinserviceSoakTimeSec = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64AutoinserviceSoakTimeSec.setStatus('current')
cyanS64Description = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64Description.setStatus('current')
cyanS64Expected = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 8), CyanSdhSnSignalLabelTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64Expected.setStatus('current')
cyanS64Inserted = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 9), CyanSdhSnSignalLabelTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64Inserted.setStatus('current')
cyanS64Monitorterminate = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 10), CyanNimTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64Monitorterminate.setStatus('current')
cyanS64OperState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 11), CyanOpStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64OperState.setStatus('current')
cyanS64OperStateQual = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 12), CyanOpStateQualTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64OperStateQual.setStatus('current')
cyanS64SecServState = MibTableColumn((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 1, 1, 1, 13), CyanSecServiceStateTc()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cyanS64SecServState.setStatus('current')
cyanS64ObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 20)).setObjects(("CYAN-S64-MIB", "cyanS64Accepted"), ("CYAN-S64-MIB", "cyanS64AdminState"), ("CYAN-S64-MIB", "cyanS64AutoinserviceSoakTimeSec"), ("CYAN-S64-MIB", "cyanS64Description"), ("CYAN-S64-MIB", "cyanS64Expected"), ("CYAN-S64-MIB", "cyanS64Inserted"), ("CYAN-S64-MIB", "cyanS64Monitorterminate"), ("CYAN-S64-MIB", "cyanS64OperState"), ("CYAN-S64-MIB", "cyanS64OperStateQual"), ("CYAN-S64-MIB", "cyanS64SecServState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanS64ObjectGroup = cyanS64ObjectGroup.setStatus('current')
cyanS64Compliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 28533, 5, 30, 250, 30)).setObjects(("CYAN-S64-MIB", "cyanS64ObjectGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    cyanS64Compliance = cyanS64Compliance.setStatus('current')
mibBuilder.exportSymbols("CYAN-S64-MIB", cyanS64OperState=cyanS64OperState, cyanS64ModuleId=cyanS64ModuleId, cyanS64Expected=cyanS64Expected, PYSNMP_MODULE_ID=cyanS64Module, cyanS64Description=cyanS64Description, cyanS64MibObjects=cyanS64MibObjects, cyanS64OperStateQual=cyanS64OperStateQual, cyanS64AutoinserviceSoakTimeSec=cyanS64AutoinserviceSoakTimeSec, cyanS64Accepted=cyanS64Accepted, cyanS64Monitorterminate=cyanS64Monitorterminate, cyanS64Inserted=cyanS64Inserted, cyanS64Compliance=cyanS64Compliance, cyanS64AdminState=cyanS64AdminState, cyanS64ObjectGroup=cyanS64ObjectGroup, cyanS64Module=cyanS64Module, cyanS64SecServState=cyanS64SecServState, cyanS64Table=cyanS64Table, cyanS64Entry=cyanS64Entry, cyanS64S64Id=cyanS64S64Id, cyanS64ShelfId=cyanS64ShelfId)
