#
# PySNMP MIB module H3C-SNA-DLSW-EXT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/H3C-SNA-DLSW-EXT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:10:39 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion")
dlswTConnOperEntry, dlswTConnConfigEntry, LFSize, MacAddressNC, dlswTConnTcpConfigEntry, TAddress = mibBuilder.importSymbols("DLSW-MIB", "dlswTConnOperEntry", "dlswTConnConfigEntry", "LFSize", "MacAddressNC", "dlswTConnTcpConfigEntry", "TAddress")
h3cCommon, = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "h3cCommon")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Unsigned32, Counter32, IpAddress, TimeTicks, ModuleIdentity, iso, NotificationType, ObjectIdentity, Bits, Integer32, Gauge32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "Counter32", "IpAddress", "TimeTicks", "ModuleIdentity", "iso", "NotificationType", "ObjectIdentity", "Bits", "Integer32", "Gauge32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter64")
TextualConvention, RowStatus, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString")
h3cDlswExt = ModuleIdentity((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62))
h3cDlswExt.setRevisions(('2005-07-20 19:00',))
if mibBuilder.loadTexts: h3cDlswExt.setLastUpdated('200507201900Z')
if mibBuilder.loadTexts: h3cDlswExt.setOrganization('Huawei-3com Technologies co.,Ltd.')
h3cDlswExtMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1))
h3cdeNode = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1))
h3cdeTConn = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2))
h3cdeBridge = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 3))
h3cdeQllc = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 4))
h3cdeSdlc = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5))
h3cdeLlc2 = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6))
h3cdeReachableCache = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7))
h3cdeEthernetBackup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8))
h3cdeNodeVendorID = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeVendorID.setStatus('current')
h3cdeNodeIpAddrType = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 2), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeIpAddrType.setStatus('current')
h3cdeNodeLocalAddr = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 3), InetAddress().clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeLocalAddr.setStatus('current')
h3cdeNodePriority = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 5), ValueRangeConstraint(65535, 65535), )).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodePriority.setStatus('current')
h3cdeNodeInitPacingWindow = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 2000), ValueRangeConstraint(65535, 65535), )).clone(40)).setUnits('packets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeInitPacingWindow.setStatus('current')
h3cdeNodeMaxPacingWindow = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1, 2000), ValueRangeConstraint(65535, 65535), )).clone(50)).setUnits('packets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeMaxPacingWindow.setStatus('current')
h3cdeNodeKeepAliveInterval = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 2000), ValueRangeConstraint(65535, 65535), )).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeKeepAliveInterval.setStatus('current')
h3cdeNodePermitDynamic = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 65535))).clone(namedValues=NamedValues(("permitDynamic", 1), ("forbidDynamic", 2), ("unknown", 65535))).clone('forbidDynamic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodePermitDynamic.setStatus('current')
h3cdeNodeConnTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(300)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeConnTimeout.setStatus('current')
h3cdeNodeLocalPendTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeLocalPendTimeout.setStatus('current')
h3cdeNodeRemotePendTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeRemotePendTimeout.setStatus('current')
h3cdeNodeSnaCacheTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(120)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeSnaCacheTimeout.setStatus('current')
h3cdeNodeExplorerTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeExplorerTimeout.setStatus('current')
h3cdeNodeExplorerWaitTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(30)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeExplorerWaitTimeout.setStatus('current')
h3cdeNodeConfigSapList = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 15), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16).clone(hexValue="FF000000000000000000000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeConfigSapList.setStatus('current')
h3cdeNodeMaxTransmission = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeMaxTransmission.setStatus('current')
h3cdeNodeMulticastStatus = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeMulticastStatus.setStatus('current')
h3cdeNodeMulticastAddress = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 18), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeMulticastAddress.setStatus('current')
h3cdeNodeResetTcpAll = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("reset", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeResetTcpAll.setStatus('current')
h3cdeNodeStCapTcpNum = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeStCapTcpNum.setStatus('current')
h3cdeNodeTcpQueueMax = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 1, 21), Integer32().clone(200)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: h3cdeNodeTcpQueueMax.setStatus('current')
h3cdeTConnConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 1), )
if mibBuilder.loadTexts: h3cdeTConnConfigTable.setStatus('current')
h3cdeTConnConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 1, 1), )
dlswTConnConfigEntry.registerAugmentions(("H3C-SNA-DLSW-EXT-MIB", "h3cdeTConnConfigEntry"))
h3cdeTConnConfigEntry.setIndexNames(*dlswTConnConfigEntry.getIndexNames())
if mibBuilder.loadTexts: h3cdeTConnConfigEntry.setStatus('current')
h3cdeTConnConfigVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeTConnConfigVersion.setStatus('current')
h3cdeTConnConfigPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeTConnConfigPriority.setStatus('current')
h3cdeTConnConfigLfSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 1, 1, 3), LFSize()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeTConnConfigLfSize.setStatus('current')
h3cdeTConnConfigKeepaliveIntval = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1200)).clone(30)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeTConnConfigKeepaliveIntval.setStatus('current')
h3cdeTConnConfigBackup = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2))).clone('no')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeTConnConfigBackup.setStatus('current')
h3cdeTConnConfigBackupTAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 1, 1, 6), TAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeTConnConfigBackupTAddr.setStatus('current')
h3cdeTConnConfigBackupLinger = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440)).clone(5)).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeTConnConfigBackupLinger.setStatus('current')
h3cdeTConnOperTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2), )
if mibBuilder.loadTexts: h3cdeTConnOperTable.setStatus('current')
h3cdeTConnOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1), )
dlswTConnOperEntry.registerAugmentions(("H3C-SNA-DLSW-EXT-MIB", "h3cdeTConnOperEntry"))
h3cdeTConnOperEntry.setIndexNames(*dlswTConnOperEntry.getIndexNames())
if mibBuilder.loadTexts: h3cdeTConnOperEntry.setStatus('current')
h3cdeTConnOperPeerType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("configured", 1), ("learningDynamic", 2), ("other", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeTConnOperPeerType.setStatus('current')
h3cdeTConnOperVendorID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeTConnOperVendorID.setStatus('current')
h3cdeTConnOperVersionString = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1, 3), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeTConnOperVersionString.setStatus('current')
h3cdeTConnOperUpTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1, 4), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeTConnOperUpTime.setStatus('current')
h3cdeTConnOperMulticastAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1, 5), TAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeTConnOperMulticastAddress.setStatus('current')
h3cdeTConnOperStCapTcpNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeTConnOperStCapTcpNumber.setStatus('current')
h3cdeTConnOperRecvPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeTConnOperRecvPkts.setStatus('current')
h3cdeTConnOperSendPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeTConnOperSendPkts.setStatus('current')
h3cdeTConnOperDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeTConnOperDropPkts.setStatus('current')
h3cdeTConnTcpConfigTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 3), )
if mibBuilder.loadTexts: h3cdeTConnTcpConfigTable.setStatus('current')
h3cdeTConnTcpConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 3, 1), )
dlswTConnTcpConfigEntry.registerAugmentions(("H3C-SNA-DLSW-EXT-MIB", "h3cdeTConnTcpConfigEntry"))
h3cdeTConnTcpConfigEntry.setIndexNames(*dlswTConnTcpConfigEntry.getIndexNames())
if mibBuilder.loadTexts: h3cdeTConnTcpConfigEntry.setStatus('current')
h3cdeTConnTcpConfigQueueMax = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(50, 2000)).clone(200)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeTConnTcpConfigQueueMax.setStatus('current')
h3cdeBridgeTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 3, 1), )
if mibBuilder.loadTexts: h3cdeBridgeTable.setStatus('current')
h3cdeBridgeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 3, 1, 1), ).setIndexNames((0, "H3C-SNA-DLSW-EXT-MIB", "h3cdeBridgeNumIndex"))
if mibBuilder.loadTexts: h3cdeBridgeEntry.setStatus('current')
h3cdeBridgeNumIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: h3cdeBridgeNumIndex.setStatus('current')
h3cdeBridgeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 3, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeBridgeRowStatus.setStatus('current')
h3cdeBridgeIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 3, 2), )
if mibBuilder.loadTexts: h3cdeBridgeIfTable.setStatus('current')
h3cdeBridgeIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cdeBridgeIfEntry.setStatus('current')
h3cdeBridgeIfBrgGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 3, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeBridgeIfBrgGrp.setStatus('current')
h3cdeBridgeIfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 3, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeBridgeIfRowStatus.setStatus('current')
h3cdeQllcTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 4, 1), )
if mibBuilder.loadTexts: h3cdeQllcTable.setStatus('current')
h3cdeQllcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 4, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cdeQllcEntry.setStatus('current')
h3cQllcX121Address = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 4, 1, 1, 1), Integer32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQllcX121Address.setStatus('current')
h3cQllcLocalMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 4, 1, 1, 2), MacAddressNC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQllcLocalMac.setStatus('current')
h3cQllcLocalSap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 4, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQllcLocalSap.setStatus('current')
h3cQllcRemoteMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 4, 1, 1, 4), MacAddressNC().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQllcRemoteMac.setStatus('current')
h3cQllcRemoteSap = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 4, 1, 1, 5), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 1), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQllcRemoteSap.setStatus('current')
h3cQllcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 4, 1, 1, 6), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cQllcRowStatus.setStatus('current')
h3cdeSdlcPortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1), )
if mibBuilder.loadTexts: h3cdeSdlcPortTable.setStatus('current')
h3cdeSdlcPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cdeSdlcPortEntry.setStatus('current')
h3cdeSdlcPortRole = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("primary", 1), ("seconday", 2), ("norole", 3))).clone('norole')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortRole.setStatus('current')
h3cdeSdlcPortSendWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortSendWindow.setStatus('current')
h3cdeSdlcPortModulo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(8, 128))).clone(namedValues=NamedValues(("m8", 8), ("m128", 128))).clone('m8')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortModulo.setStatus('current')
h3cdeSdlcPortMaxPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 17600)).clone(265)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortMaxPdu.setStatus('current')
h3cdeSdlcPortMaxSendQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 255)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortMaxSendQueue.setStatus('current')
h3cdeSdlcPortMaxTransmission = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortMaxTransmission.setStatus('current')
h3cdeSdlcPortSimultaneousEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortSimultaneousEnable.setStatus('current')
h3cdeSdlcPortTimerACK = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(3000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortTimerACK.setStatus('current')
h3cdeSdlcPortTimerLifeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortTimerLifeTime.setStatus('current')
h3cdeSdlcPortTimerPollPause = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10000)).clone(1000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortTimerPollPause.setStatus('current')
h3cdeSdlcPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 5, 1, 1, 11), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeSdlcPortRowStatus.setStatus('current')
h3cdeLlc2PortTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1), )
if mibBuilder.loadTexts: h3cdeLlc2PortTable.setStatus('current')
h3cdeLlc2PortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cdeLlc2PortEntry.setStatus('current')
h3cdeLlc2PortMaxAck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortMaxAck.setStatus('current')
h3cdeLlc2PortMaxPdu = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1700)).clone(1493)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortMaxPdu.setStatus('current')
h3cdeLlc2PortMaxSendQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(20, 200)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortMaxSendQueue.setStatus('current')
h3cdeLlc2PortMaxTransmission = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)).clone(20)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortMaxTransmission.setStatus('current')
h3cdeLlc2PortModulo = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(8, 128))).clone(namedValues=NamedValues(("m8", 8), ("m128", 128))).clone('m128')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortModulo.setStatus('current')
h3cdeLlc2PortReceiveWindow = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortReceiveWindow.setStatus('current')
h3cdeLlc2PortTimerAck = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(200)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortTimerAck.setStatus('current')
h3cdeLlc2PortTimerAckDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortTimerAckDelay.setStatus('current')
h3cdeLlc2PortTimerDetect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(100)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortTimerDetect.setStatus('current')
h3cdeLlc2PortTimerBusy = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(300)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortTimerBusy.setStatus('current')
h3cdeLlc2PortTimerPoll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(5000)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortTimerPoll.setStatus('current')
h3cdeLlc2PortTimerReject = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(500)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortTimerReject.setStatus('current')
h3cdeLlc2PortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 6, 1, 1, 13), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeLlc2PortRowStatus.setStatus('current')
h3cdeRchCacheStat = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 1))
h3cdeRchCacheMaxIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeRchCacheMaxIndex.setStatus('current')
h3cdeRchCacheNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeRchCacheNextIndex.setStatus('current')
h3cdeRchCacheTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 3), )
if mibBuilder.loadTexts: h3cdeRchCacheTable.setStatus('current')
h3cdeRchCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 3, 1), ).setIndexNames((0, "H3C-SNA-DLSW-EXT-MIB", "h3cdeRchCacheIndex"))
if mibBuilder.loadTexts: h3cdeRchCacheEntry.setStatus('current')
h3cdeRchCacheIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 3, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cdeRchCacheIndex.setStatus('current')
h3cdeRchCacheStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("found", 1), ("verify", 2), ("noCacheInfo", 3), ("exploring", 4), ("waiting", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeRchCacheStatus.setStatus('current')
h3cdeRchCacheRemainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeRchCacheRemainTime.setStatus('current')
h3cdeRchCacheMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 3, 1, 4), MacAddressNC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeRchCacheMac.setStatus('current')
h3cdeRchCacheRemoteIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 3, 1, 5), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeRchCacheRemoteIpAddrType.setStatus('current')
h3cdeRchCacheRemoteIp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 3, 1, 6), InetAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeRchCacheRemoteIp.setStatus('current')
h3cdeRchCacheRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 7, 3, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeRchCacheRowStatus.setStatus('current')
h3cdeEBMacMapStat = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 1))
h3cdeEBMacMapMaxIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeEBMacMapMaxIndex.setStatus('current')
h3cdeEBMacMapNextIndex = MibScalar((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: h3cdeEBMacMapNextIndex.setStatus('current')
h3cdeEBIfTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 3), )
if mibBuilder.loadTexts: h3cdeEBIfTable.setStatus('current')
h3cdeEBIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 3, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: h3cdeEBIfEntry.setStatus('current')
h3cdeEBMulticastMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 3, 1, 1), MacAddressNC().clone(hexValue="000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeEBMulticastMac.setStatus('current')
h3cdeEBPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 254)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeEBPriority.setStatus('current')
h3cdeEBtimer = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(100, 5000)).clone(500)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeEBtimer.setStatus('current')
h3cdeEBRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeEBRowStatus.setStatus('current')
h3cdeEBMacMapTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 4), )
if mibBuilder.loadTexts: h3cdeEBMacMapTable.setStatus('current')
h3cdeEBMacMapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "H3C-SNA-DLSW-EXT-MIB", "h3cdeEBMacMapIndex"))
if mibBuilder.loadTexts: h3cdeEBMacMapEntry.setStatus('current')
h3cdeEBMacMapIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: h3cdeEBMacMapIndex.setStatus('current')
h3cdeEBMacMapLocalMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 4, 1, 2), MacAddressNC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeEBMacMapLocalMac.setStatus('current')
h3cdeEBMacMapRemoteMac = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 4, 1, 3), MacAddressNC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeEBMacMapRemoteMac.setStatus('current')
h3cdeEBMacMapNeighbour = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 4, 1, 4), MacAddressNC()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeEBMacMapNeighbour.setStatus('current')
h3cdeEBMacMapRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 10, 2, 62, 1, 8, 4, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: h3cdeEBMacMapRowStatus.setStatus('current')
mibBuilder.exportSymbols("H3C-SNA-DLSW-EXT-MIB", h3cdeNodeMaxPacingWindow=h3cdeNodeMaxPacingWindow, h3cdeLlc2PortTimerDetect=h3cdeLlc2PortTimerDetect, h3cdeBridgeIfRowStatus=h3cdeBridgeIfRowStatus, h3cdeLlc2PortTimerPoll=h3cdeLlc2PortTimerPoll, h3cdeReachableCache=h3cdeReachableCache, h3cdeNodeMaxTransmission=h3cdeNodeMaxTransmission, h3cDlswExtMIBObjects=h3cDlswExtMIBObjects, h3cdeRchCacheIndex=h3cdeRchCacheIndex, h3cdeBridgeIfEntry=h3cdeBridgeIfEntry, h3cdeTConnOperSendPkts=h3cdeTConnOperSendPkts, h3cdeNodeInitPacingWindow=h3cdeNodeInitPacingWindow, h3cdeTConnOperTable=h3cdeTConnOperTable, h3cdeEBMacMapIndex=h3cdeEBMacMapIndex, h3cQllcX121Address=h3cQllcX121Address, h3cdeSdlcPortMaxPdu=h3cdeSdlcPortMaxPdu, h3cdeEthernetBackup=h3cdeEthernetBackup, h3cdeNodeTcpQueueMax=h3cdeNodeTcpQueueMax, h3cdeSdlc=h3cdeSdlc, h3cdeTConnConfigTable=h3cdeTConnConfigTable, h3cdeEBRowStatus=h3cdeEBRowStatus, h3cdeQllc=h3cdeQllc, h3cdeBridgeIfBrgGrp=h3cdeBridgeIfBrgGrp, h3cdeLlc2PortMaxAck=h3cdeLlc2PortMaxAck, h3cdeTConnTcpConfigQueueMax=h3cdeTConnTcpConfigQueueMax, h3cdeTConnOperVendorID=h3cdeTConnOperVendorID, h3cdeNodeMulticastStatus=h3cdeNodeMulticastStatus, h3cdeSdlcPortTimerLifeTime=h3cdeSdlcPortTimerLifeTime, h3cdeSdlcPortRowStatus=h3cdeSdlcPortRowStatus, h3cdeLlc2PortReceiveWindow=h3cdeLlc2PortReceiveWindow, h3cdeTConnConfigVersion=h3cdeTConnConfigVersion, h3cdeTConnConfigBackupLinger=h3cdeTConnConfigBackupLinger, h3cdeTConnOperUpTime=h3cdeTConnOperUpTime, h3cdeNodeKeepAliveInterval=h3cdeNodeKeepAliveInterval, h3cdeBridgeEntry=h3cdeBridgeEntry, h3cQllcRemoteSap=h3cQllcRemoteSap, h3cdeEBMacMapLocalMac=h3cdeEBMacMapLocalMac, h3cdeTConnOperDropPkts=h3cdeTConnOperDropPkts, h3cQllcLocalSap=h3cQllcLocalSap, h3cdeBridgeNumIndex=h3cdeBridgeNumIndex, h3cdeRchCacheRemainTime=h3cdeRchCacheRemainTime, h3cdeNodeConnTimeout=h3cdeNodeConnTimeout, h3cdeNodeLocalPendTimeout=h3cdeNodeLocalPendTimeout, h3cdeTConnConfigKeepaliveIntval=h3cdeTConnConfigKeepaliveIntval, h3cdeNode=h3cdeNode, h3cdeRchCacheStat=h3cdeRchCacheStat, h3cdeRchCacheRowStatus=h3cdeRchCacheRowStatus, h3cdeEBMacMapNextIndex=h3cdeEBMacMapNextIndex, h3cdeLlc2PortMaxTransmission=h3cdeLlc2PortMaxTransmission, h3cdeNodeLocalAddr=h3cdeNodeLocalAddr, h3cdeEBIfTable=h3cdeEBIfTable, h3cdeTConnConfigBackup=h3cdeTConnConfigBackup, h3cdeSdlcPortMaxSendQueue=h3cdeSdlcPortMaxSendQueue, h3cdeTConnConfigBackupTAddr=h3cdeTConnConfigBackupTAddr, h3cdeLlc2PortEntry=h3cdeLlc2PortEntry, h3cdeNodeExplorerTimeout=h3cdeNodeExplorerTimeout, h3cdeTConnOperMulticastAddress=h3cdeTConnOperMulticastAddress, h3cdeNodeMulticastAddress=h3cdeNodeMulticastAddress, h3cdeSdlcPortSimultaneousEnable=h3cdeSdlcPortSimultaneousEnable, h3cdeTConnTcpConfigEntry=h3cdeTConnTcpConfigEntry, h3cdeEBMacMapRowStatus=h3cdeEBMacMapRowStatus, h3cdeNodeResetTcpAll=h3cdeNodeResetTcpAll, h3cdeRchCacheMaxIndex=h3cdeRchCacheMaxIndex, h3cdeRchCacheTable=h3cdeRchCacheTable, h3cdeLlc2PortMaxPdu=h3cdeLlc2PortMaxPdu, h3cdeSdlcPortTable=h3cdeSdlcPortTable, h3cdeNodeStCapTcpNum=h3cdeNodeStCapTcpNum, h3cdeTConnOperStCapTcpNumber=h3cdeTConnOperStCapTcpNumber, h3cdeLlc2PortModulo=h3cdeLlc2PortModulo, h3cQllcLocalMac=h3cQllcLocalMac, h3cdeBridge=h3cdeBridge, h3cdeNodeIpAddrType=h3cdeNodeIpAddrType, h3cdeNodePriority=h3cdeNodePriority, h3cdeEBtimer=h3cdeEBtimer, h3cdeEBIfEntry=h3cdeEBIfEntry, h3cdeEBMacMapNeighbour=h3cdeEBMacMapNeighbour, h3cdeQllcEntry=h3cdeQllcEntry, h3cdeSdlcPortMaxTransmission=h3cdeSdlcPortMaxTransmission, h3cdeRchCacheNextIndex=h3cdeRchCacheNextIndex, h3cdeLlc2PortTimerBusy=h3cdeLlc2PortTimerBusy, h3cdeRchCacheRemoteIp=h3cdeRchCacheRemoteIp, h3cQllcRemoteMac=h3cQllcRemoteMac, h3cDlswExt=h3cDlswExt, h3cdeRchCacheStatus=h3cdeRchCacheStatus, h3cdeEBMacMapTable=h3cdeEBMacMapTable, h3cdeBridgeTable=h3cdeBridgeTable, h3cdeEBMacMapEntry=h3cdeEBMacMapEntry, h3cdeLlc2=h3cdeLlc2, h3cdeEBMacMapRemoteMac=h3cdeEBMacMapRemoteMac, h3cQllcRowStatus=h3cQllcRowStatus, h3cdeEBPriority=h3cdeEBPriority, h3cdeEBMacMapMaxIndex=h3cdeEBMacMapMaxIndex, h3cdeTConnConfigPriority=h3cdeTConnConfigPriority, h3cdeBridgeIfTable=h3cdeBridgeIfTable, h3cdeEBMacMapStat=h3cdeEBMacMapStat, h3cdeSdlcPortTimerACK=h3cdeSdlcPortTimerACK, PYSNMP_MODULE_ID=h3cDlswExt, h3cdeRchCacheMac=h3cdeRchCacheMac, h3cdeTConnOperEntry=h3cdeTConnOperEntry, h3cdeRchCacheEntry=h3cdeRchCacheEntry, h3cdeLlc2PortTimerAckDelay=h3cdeLlc2PortTimerAckDelay, h3cdeRchCacheRemoteIpAddrType=h3cdeRchCacheRemoteIpAddrType, h3cdeLlc2PortMaxSendQueue=h3cdeLlc2PortMaxSendQueue, h3cdeSdlcPortModulo=h3cdeSdlcPortModulo, h3cdeNodeRemotePendTimeout=h3cdeNodeRemotePendTimeout, h3cdeBridgeRowStatus=h3cdeBridgeRowStatus, h3cdeSdlcPortRole=h3cdeSdlcPortRole, h3cdeTConnTcpConfigTable=h3cdeTConnTcpConfigTable, h3cdeSdlcPortEntry=h3cdeSdlcPortEntry, h3cdeTConnOperVersionString=h3cdeTConnOperVersionString, h3cdeNodeVendorID=h3cdeNodeVendorID, h3cdeLlc2PortTable=h3cdeLlc2PortTable, h3cdeTConnConfigEntry=h3cdeTConnConfigEntry, h3cdeTConnConfigLfSize=h3cdeTConnConfigLfSize, h3cdeNodePermitDynamic=h3cdeNodePermitDynamic, h3cdeNodeConfigSapList=h3cdeNodeConfigSapList, h3cdeTConn=h3cdeTConn, h3cdeNodeSnaCacheTimeout=h3cdeNodeSnaCacheTimeout, h3cdeTConnOperPeerType=h3cdeTConnOperPeerType, h3cdeLlc2PortTimerAck=h3cdeLlc2PortTimerAck, h3cdeLlc2PortRowStatus=h3cdeLlc2PortRowStatus, h3cdeEBMulticastMac=h3cdeEBMulticastMac, h3cdeSdlcPortTimerPollPause=h3cdeSdlcPortTimerPollPause, h3cdeSdlcPortSendWindow=h3cdeSdlcPortSendWindow, h3cdeQllcTable=h3cdeQllcTable, h3cdeLlc2PortTimerReject=h3cdeLlc2PortTimerReject, h3cdeNodeExplorerWaitTimeout=h3cdeNodeExplorerWaitTimeout, h3cdeTConnOperRecvPkts=h3cdeTConnOperRecvPkts)
