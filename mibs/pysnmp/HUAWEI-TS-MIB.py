#
# PySNMP MIB module HUAWEI-TS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HUAWEI-TS-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:37:27 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
mlsr, huawei = mibBuilder.importSymbols("HUAWEI-3COM-OID-MIB", "mlsr", "huawei")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Bits, iso, TimeTicks, Counter32, Counter64, NotificationType, MibIdentifier, IpAddress, Integer32, ObjectIdentity, ModuleIdentity, Unsigned32, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Bits", "iso", "TimeTicks", "Counter32", "Counter64", "NotificationType", "MibIdentifier", "IpAddress", "Integer32", "ObjectIdentity", "ModuleIdentity", "Unsigned32", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
terminalServer = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1))
class EntryStatus(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))
    namedValues = NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4))

tsAppTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1), )
if mibBuilder.loadTexts: tsAppTable.setStatus('mandatory')
tsAppEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1), ).setIndexNames((0, "HUAWEI-TS-MIB", "tsAppID"))
if mibBuilder.loadTexts: tsAppEntry.setStatus('mandatory')
tsAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 515))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppID.setStatus('mandatory')
tsAppIPAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsAppIPAddress.setStatus('mandatory')
tsAppPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1025, 65535), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsAppPort.setStatus('mandatory')
tsAppType = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("special", 2))).clone('normal')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsAppType.setStatus('mandatory')
tsAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 18))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsAppName.setStatus('mandatory')
tsAppSourceIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 6), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsAppSourceIP.setStatus('mandatory')
tsAppLocalPort = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(1025, 65535), ValueRangeConstraint(0, 0), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppLocalPort.setStatus('mandatory')
tsAppTtyServerState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("noset", 1), ("kept", 2), ("linking", 3), ("linked", 4), ("removed", 5), ("overcast", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppTtyServerState.setStatus('mandatory')
tsAppSocketRecvBufSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppSocketRecvBufSize.setStatus('mandatory')
tsAppSocketSendBufSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppSocketSendBufSize.setStatus('mandatory')
tsAppSockRecvByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppSockRecvByte.setStatus('mandatory')
tsAppSockSendByte = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppSockSendByte.setStatus('mandatory')
tsAppLastRecvTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppLastRecvTime.setStatus('mandatory')
tsAppLastSendTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 14), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppLastSendTime.setStatus('mandatory')
tsAppClearStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: tsAppClearStatistic.setStatus('mandatory')
tsAppUnixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAppUnixIndex.setStatus('mandatory')
tsAppStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 1, 1, 17), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsAppStatus.setStatus('mandatory')
tsAsyModeTtyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2), )
if mibBuilder.loadTexts: tsAsyModeTtyTable.setStatus('mandatory')
tsAsyModeTtyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2, 1), ).setIndexNames((0, "HUAWEI-TS-MIB", "tsAsyModeTtyID"), (0, "HUAWEI-TS-MIB", "tsAsyModeTtyVtyID"))
if mibBuilder.loadTexts: tsAsyModeTtyEntry.setStatus('mandatory')
tsAsyModeTtyID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAsyModeTtyID.setStatus('mandatory')
tsAsyModeTtyVtyID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAsyModeTtyVtyID.setStatus('mandatory')
tsAsyModeTtyIFIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsAsyModeTtyIFIndex.setStatus('mandatory')
tsAsyModeTtyAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 515))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsAsyModeTtyAppID.setStatus('mandatory')
tsAsyModeTtyDisconnect = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("disconnect", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: tsAsyModeTtyDisconnect.setStatus('mandatory')
tsAsyModeTtyVtyState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("down", 1), ("up", 2), ("waitaaa", 3), ("ok", 4), ("menu", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAsyModeTtyVtyState.setStatus('mandatory')
tsAsyModeTtyFlowCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("stop", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsAsyModeTtyFlowCtrlState.setStatus('mandatory')
tsAsyModeTtyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 2, 1, 8), EntryStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsAsyModeTtyStatus.setStatus('mandatory')
tsTtyTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3), )
if mibBuilder.loadTexts: tsTtyTable.setStatus('mandatory')
tsTtyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1), ).setIndexNames((0, "HUAWEI-TS-MIB", "tsTtyID"))
if mibBuilder.loadTexts: tsTtyEntry.setStatus('mandatory')
tsTtyID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyID.setStatus('mandatory')
tsTtyBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4096, 204800)).clone(4096)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyBufferSize.setStatus('mandatory')
tsTtyAutoLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 3600), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyAutoLink.setStatus('mandatory')
tsTtyCloseLink = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 3600), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyCloseLink.setStatus('mandatory')
tsTtyConnPrint = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("english", 1), ("chinese", 2), ("none", 3))).clone('chinese')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyConnPrint.setStatus('mandatory')
tsTtyDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1200))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyDelay.setStatus('mandatory')
tsTtyLogoPrint = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyLogoPrint.setStatus('mandatory')
tsTtyMenuKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyMenuKey1.setStatus('mandatory')
tsTtyMenuKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyMenuKey2.setStatus('mandatory')
tsTtyMenuKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyMenuKey3.setStatus('mandatory')
tsTtyReadBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("set", 1), ("noSet", 2))).clone('noSet')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyReadBlock.setStatus('mandatory')
tsTtyRedrawkey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyRedrawkey1.setStatus('mandatory')
tsTtyRedrawkey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyRedrawkey2.setStatus('mandatory')
tsTtyRedrawkey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyRedrawkey3.setStatus('mandatory')
tsTtyResetKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyResetKey1.setStatus('mandatory')
tsTtyResetKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyResetKey2.setStatus('mandatory')
tsTtyResetKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyResetKey3.setStatus('mandatory')
tsTtyTcpNoDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('enable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyTcpNoDelay.setStatus('mandatory')
tsTtyTcpRecvBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384)).clone(2048)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyTcpRecvBufferSize.setStatus('mandatory')
tsTtyTcpSendBufferSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(512, 16384)).clone(1024)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyTcpSendBufferSize.setStatus('mandatory')
tsTtyTestKey1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyTestKey1.setStatus('mandatory')
tsTtyTestKey2 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyTestKey2.setStatus('mandatory')
tsTtyTestKey3 = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsTtyTestKey3.setStatus('mandatory')
tsTtyBufferRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyBufferRate.setStatus('mandatory')
tsTtyRecvBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyRecvBytes.setStatus('mandatory')
tsTtySendBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtySendBytes.setStatus('mandatory')
tsTtyLastRecvTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 27), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyLastRecvTime.setStatus('mandatory')
tsTtyLastSendTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 28), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyLastSendTime.setStatus('mandatory')
tsTtyCurrentVtyID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyCurrentVtyID.setStatus('mandatory')
tsTtyCurrentVtyRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyCurrentVtyRecv.setStatus('mandatory')
tsTtyCurrentVtySend = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyCurrentVtySend.setStatus('mandatory')
tsTtyCurrentAppID = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 32), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyCurrentAppID.setStatus('mandatory')
tsTtyCurrentAppRecv = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyCurrentAppRecv.setStatus('mandatory')
tsTtyCurrentAppSend = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 34), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyCurrentAppSend.setStatus('mandatory')
tsTtyClearStatistic = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: tsTtyClearStatistic.setStatus('mandatory')
tsDebugTtyAll = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsDebugTtyAll.setStatus('mandatory')
tsDebugTtyBrief = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsDebugTtyBrief.setStatus('mandatory')
tsDebugTtySock = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("recv", 2), ("send", 3), ("none", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsDebugTtySock.setStatus('mandatory')
tsDebugTtyTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsDebugTtyTimeStamp.setStatus('mandatory')
tsDebugTtyTty = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 3, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("all", 1), ("recv", 2), ("send", 3), ("none", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsDebugTtyTty.setStatus('mandatory')
tsTtyManageTable = MibTable((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 4), )
if mibBuilder.loadTexts: tsTtyManageTable.setStatus('mandatory')
tsTtyManageEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 4, 1), ).setIndexNames((0, "HUAWEI-TS-MIB", "tsTtyManageUnixIndex"))
if mibBuilder.loadTexts: tsTtyManageEntry.setStatus('mandatory')
tsTtyManageUnixIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyManageUnixIndex.setStatus('mandatory')
tsTtyManageUnixSockid = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 4, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyManageUnixSockid.setStatus('mandatory')
tsTtyManageLocalIP = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 4, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyManageLocalIP.setStatus('mandatory')
tsTtyManageItemNum = MibTableColumn((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 4, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tsTtyManageItemNum.setStatus('mandatory')
tsEnable = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsEnable.setStatus('mandatory')
tsEnableTrap = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsEnableTrap.setStatus('mandatory')
tsClearTtyAll = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("clear", 1)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: tsClearTtyAll.setStatus('mandatory')
tsLoginTty = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsLoginTty.setStatus('obsolete')
tsDebugTtyGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 9))
tsDebugTtyError = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 9, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsDebugTtyError.setStatus('mandatory')
tsDebugTtyManage = MibScalar((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 9, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tsDebugTtyManage.setStatus('mandatory')
tsTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 10))
tsAppStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 10, 1)).setObjects(("HUAWEI-TS-MIB", "tsAppID"), ("HUAWEI-TS-MIB", "tsAppTtyServerState"))
if mibBuilder.loadTexts: tsAppStatusTrap.setStatus('current')
tsTtyStatusTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 10, 2)).setObjects(("HUAWEI-TS-MIB", "tsAsyModeTtyID"), ("HUAWEI-TS-MIB", "tsAsyModeTtyVtyID"), ("HUAWEI-TS-MIB", "tsAsyModeTtyVtyState"))
if mibBuilder.loadTexts: tsTtyStatusTrap.setStatus('current')
tsExceptionTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 10, 3))
if mibBuilder.loadTexts: tsExceptionTrap.setStatus('current')
tsClearSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 10, 4))
if mibBuilder.loadTexts: tsClearSuccessTrap.setStatus('current')
tsDisconnectSuccessTrap = NotificationType((1, 3, 6, 1, 4, 1, 2011, 2, 33, 1, 10, 5))
if mibBuilder.loadTexts: tsDisconnectSuccessTrap.setStatus('current')
mibBuilder.exportSymbols("HUAWEI-TS-MIB", tsTtyTcpRecvBufferSize=tsTtyTcpRecvBufferSize, tsDebugTtySock=tsDebugTtySock, tsTtyManageEntry=tsTtyManageEntry, tsTtyMenuKey1=tsTtyMenuKey1, tsTtyDelay=tsTtyDelay, tsAppLocalPort=tsAppLocalPort, tsTtyMenuKey2=tsTtyMenuKey2, tsTrap=tsTrap, tsTtyCurrentAppSend=tsTtyCurrentAppSend, tsAsyModeTtyTable=tsAsyModeTtyTable, tsTtyTable=tsTtyTable, tsAsyModeTtyDisconnect=tsAsyModeTtyDisconnect, tsTtyCurrentVtySend=tsTtyCurrentVtySend, tsClearSuccessTrap=tsClearSuccessTrap, tsTtyMenuKey3=tsTtyMenuKey3, tsAppSocketSendBufSize=tsAppSocketSendBufSize, tsAsyModeTtyFlowCtrlState=tsAsyModeTtyFlowCtrlState, tsExceptionTrap=tsExceptionTrap, tsTtyCurrentVtyID=tsTtyCurrentVtyID, tsTtyTcpSendBufferSize=tsTtyTcpSendBufferSize, tsTtyCloseLink=tsTtyCloseLink, tsAsyModeTtyEntry=tsAsyModeTtyEntry, tsAppType=tsAppType, tsAppID=tsAppID, tsTtyLogoPrint=tsTtyLogoPrint, tsTtyRecvBytes=tsTtyRecvBytes, tsAppStatusTrap=tsAppStatusTrap, tsAsyModeTtyAppID=tsAsyModeTtyAppID, tsTtyResetKey2=tsTtyResetKey2, tsTtyResetKey1=tsTtyResetKey1, tsAppSockRecvByte=tsAppSockRecvByte, tsDebugTtyBrief=tsDebugTtyBrief, tsAppUnixIndex=tsAppUnixIndex, tsTtyAutoLink=tsTtyAutoLink, tsTtyTestKey3=tsTtyTestKey3, tsTtyConnPrint=tsTtyConnPrint, tsTtyID=tsTtyID, tsTtyTcpNoDelay=tsTtyTcpNoDelay, tsAsyModeTtyVtyID=tsAsyModeTtyVtyID, tsLoginTty=tsLoginTty, tsAppEntry=tsAppEntry, tsTtyBufferRate=tsTtyBufferRate, tsDebugTtyGroup=tsDebugTtyGroup, tsTtyManageLocalIP=tsTtyManageLocalIP, tsTtyStatusTrap=tsTtyStatusTrap, tsEnable=tsEnable, tsAppName=tsAppName, tsTtyCurrentAppID=tsTtyCurrentAppID, tsDisconnectSuccessTrap=tsDisconnectSuccessTrap, tsDebugTtyAll=tsDebugTtyAll, tsTtyManageTable=tsTtyManageTable, tsAppSockSendByte=tsAppSockSendByte, tsAppClearStatistic=tsAppClearStatistic, terminalServer=terminalServer, tsAppLastSendTime=tsAppLastSendTime, tsAsyModeTtyID=tsAsyModeTtyID, tsDebugTtyManage=tsDebugTtyManage, tsAppSourceIP=tsAppSourceIP, tsTtyCurrentVtyRecv=tsTtyCurrentVtyRecv, tsEnableTrap=tsEnableTrap, tsTtyLastRecvTime=tsTtyLastRecvTime, tsAsyModeTtyIFIndex=tsAsyModeTtyIFIndex, tsTtyResetKey3=tsTtyResetKey3, tsTtyEntry=tsTtyEntry, EntryStatus=EntryStatus, tsTtyBufferSize=tsTtyBufferSize, tsAppIPAddress=tsAppIPAddress, tsClearTtyAll=tsClearTtyAll, tsDebugTtyTimeStamp=tsDebugTtyTimeStamp, tsDebugTtyTty=tsDebugTtyTty, tsTtyReadBlock=tsTtyReadBlock, tsAppTtyServerState=tsAppTtyServerState, tsAppTable=tsAppTable, tsTtyRedrawkey3=tsTtyRedrawkey3, tsTtyManageUnixSockid=tsTtyManageUnixSockid, tsTtyTestKey2=tsTtyTestKey2, tsTtyRedrawkey1=tsTtyRedrawkey1, tsAsyModeTtyStatus=tsAsyModeTtyStatus, tsTtySendBytes=tsTtySendBytes, tsTtyManageItemNum=tsTtyManageItemNum, tsAsyModeTtyVtyState=tsAsyModeTtyVtyState, tsDebugTtyError=tsDebugTtyError, tsTtyRedrawkey2=tsTtyRedrawkey2, tsTtyLastSendTime=tsTtyLastSendTime, tsTtyClearStatistic=tsTtyClearStatistic, tsAppLastRecvTime=tsAppLastRecvTime, tsAppStatus=tsAppStatus, tsTtyTestKey1=tsTtyTestKey1, tsTtyManageUnixIndex=tsTtyManageUnixIndex, tsTtyCurrentAppRecv=tsTtyCurrentAppRecv, tsAppPort=tsAppPort, tsAppSocketRecvBufSize=tsAppSocketRecvBufSize)
