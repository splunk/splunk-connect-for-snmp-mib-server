#
# PySNMP MIB module XYLAN-AVL-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/XYLAN-AVL-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:38:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
MacAddress, = mibBuilder.importSymbols("BRIDGE-MIB", "MacAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, IpAddress, Gauge32, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Counter64, Unsigned32, Counter32, ObjectIdentity, Integer32, ModuleIdentity, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "IpAddress", "Gauge32", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Counter64", "Unsigned32", "Counter32", "ObjectIdentity", "Integer32", "ModuleIdentity", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
xylanAVLArch, = mibBuilder.importSymbols("XYLAN-BASE-MIB", "xylanAVLArch")
xylanAVLConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 800, 2, 15, 1))
xylanAVLloginbanner = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLloginbanner.setStatus('mandatory')
xylanAVLoptionprompt = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLoptionprompt.setStatus('mandatory')
xylanAVLgroupprompt = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLgroupprompt.setStatus('mandatory')
xylanAVLuserprompt = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLuserprompt.setStatus('mandatory')
xylanAVLpassprompt = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLpassprompt.setStatus('mandatory')
xylanAVLchalprompt = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLchalprompt.setStatus('mandatory')
xylanAVLsucceedmsg = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLsucceedmsg.setStatus('mandatory')
xylanAVLfailmsg = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLfailmsg.setStatus('mandatory')
xylanAVLauthmode = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("single-authority", 1), ("multiple-authority", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLauthmode.setStatus('mandatory')
xylanAVLtimeout = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLtimeout.setStatus('mandatory')
xylanAVLlastuser = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 16), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanAVLlastuser.setStatus('mandatory')
xylanAVLlastauthevent = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("success", 1), ("failure", 2), ("logout", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanAVLlastauthevent.setStatus('mandatory')
xylanAVLlastauthmac = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 18), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanAVLlastauthmac.setStatus('mandatory')
xylanAVLlastport = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanAVLlastport.setStatus('mandatory')
xylanAVLlastslot = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 20), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanAVLlastslot.setStatus('mandatory')
xylanAVLversion = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 21), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: xylanAVLversion.setStatus('mandatory')
xylanAVLdropmac = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 22), MacAddress()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: xylanAVLdropmac.setStatus('mandatory')
xylanAVLradretries = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLradretries.setStatus('mandatory')
xylanAVLradtimeout = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLradtimeout.setStatus('mandatory')
xylanAVLBootpIfAddr = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 25), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLBootpIfAddr.setStatus('mandatory')
xylanAVLDNSName = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLDNSName.setStatus('mandatory')
xylanAVLPathRestriction = MibScalar((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 27), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLPathRestriction.setStatus('mandatory')
xylanAVLTproxyports = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 2), )
if mibBuilder.loadTexts: xylanAVLTproxyports.setStatus('mandatory')
xylanAVLTproxyentry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 2, 1), ).setIndexNames((0, "XYLAN-AVL-MIB", "xylanAVLTproxyIntfAddr"))
if mibBuilder.loadTexts: xylanAVLTproxyentry.setStatus('mandatory')
xylanAVLTproxyIntfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 2, 1, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLTproxyIntfAddr.setStatus('mandatory')
xylanAVLTproxyProxyAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLTproxyProxyAddr.setStatus('mandatory')
xylanAVLRadiusServers = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 13), )
if mibBuilder.loadTexts: xylanAVLRadiusServers.setStatus('mandatory')
xylanAVLradiusentry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 13, 1), ).setIndexNames((0, "XYLAN-AVL-MIB", "xylanAVLRadiusAddress"), (0, "XYLAN-AVL-MIB", "xylanAVLRadiusGroup"))
if mibBuilder.loadTexts: xylanAVLradiusentry.setStatus('mandatory')
xylanAVLRadiusGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 13, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusGroup.setStatus('mandatory')
xylanAVLRadiusAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 13, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusAddress.setStatus('mandatory')
xylanAVLRadiusPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 13, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusPriority.setStatus('mandatory')
xylanAVLRadiusPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 13, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusPort.setStatus('mandatory')
xylanAVLRadiusSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 13, 1, 5), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: xylanAVLRadiusSecret.setStatus('mandatory')
xylanAVLRadiusAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 13, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusAdminState.setStatus('mandatory')
xylanAVLRadiusAcctServers = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 14), )
if mibBuilder.loadTexts: xylanAVLRadiusAcctServers.setStatus('mandatory')
xylanAVLradiusacctentry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 14, 1), ).setIndexNames((0, "XYLAN-AVL-MIB", "xylanAVLRadiusAcctAddress"), (0, "XYLAN-AVL-MIB", "xylanAVLRadiusAcctGroup"))
if mibBuilder.loadTexts: xylanAVLradiusacctentry.setStatus('mandatory')
xylanAVLRadiusAcctGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 14, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusAcctGroup.setStatus('mandatory')
xylanAVLRadiusAcctAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 14, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusAcctAddress.setStatus('mandatory')
xylanAVLRadiusAcctPri = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 14, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusAcctPri.setStatus('mandatory')
xylanAVLRadiusAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 14, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusAcctPort.setStatus('mandatory')
xylanAVLRadiusAcctSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 14, 1, 5), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: xylanAVLRadiusAcctSecret.setStatus('mandatory')
xylanAVLRadiusAcctAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 14, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLRadiusAcctAdminState.setStatus('mandatory')
class XylanAVLtelportStatCodes(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("disable", 1), ("enable", 2))

xylanAVLtelports = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 3), )
if mibBuilder.loadTexts: xylanAVLtelports.setStatus('mandatory')
xylanAVLtelportentry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 3, 1), ).setIndexNames((0, "XYLAN-AVL-MIB", "xylanAVLtelportslot"), (0, "XYLAN-AVL-MIB", "xylanAVLtelportport"))
if mibBuilder.loadTexts: xylanAVLtelportentry.setStatus('mandatory')
xylanAVLtelportslot = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 3, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLtelportslot.setStatus('mandatory')
xylanAVLtelportport = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 3, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLtelportport.setStatus('mandatory')
xylanAVLtelportstat = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 3, 1, 3), XylanAVLtelportStatCodes()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLtelportstat.setStatus('mandatory')
xylanAVLLdapServers = MibTable((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28), )
if mibBuilder.loadTexts: xylanAVLLdapServers.setStatus('mandatory')
xylanAVLLdapentry = MibTableRow((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1), ).setIndexNames((0, "XYLAN-AVL-MIB", "xylanAVLLdapGroup"))
if mibBuilder.loadTexts: xylanAVLLdapentry.setStatus('mandatory')
xylanAVLLdapGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapGroup.setStatus('mandatory')
xylanAVLLdapUserId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapUserId.setStatus('mandatory')
xylanAVLLdapUserPassword = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 3), DisplayString()).setMaxAccess("writeonly")
if mibBuilder.loadTexts: xylanAVLLdapUserPassword.setStatus('mandatory')
xylanAVLLdapSearchBase = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapSearchBase.setStatus('mandatory')
xylanAVLLdapChain = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapChain.setStatus('mandatory')
xylanAVLLdapType = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("generic-schema", 1), ("netscape-directory-server", 2), ("novell-NDS", 3), ("sun-directory-services", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapType.setStatus('mandatory')
xylanAVLLdapRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapRetry.setStatus('mandatory')
xylanAVLLdapResponseTime = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 90))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapResponseTime.setStatus('mandatory')
xylanAVLLdapAcctStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapAcctStatus.setStatus('mandatory')
xylanAVLLdapLoginFailId = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapLoginFailId.setStatus('mandatory')
xylanAVLLdapMultiGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yes", 1), ("no", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapMultiGroup.setStatus('mandatory')
xylanAVLLdapAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 800, 2, 15, 1, 28, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: xylanAVLLdapAdminState.setStatus('mandatory')
mibBuilder.exportSymbols("XYLAN-AVL-MIB", xylanAVLLdapChain=xylanAVLLdapChain, xylanAVLoptionprompt=xylanAVLoptionprompt, xylanAVLlastport=xylanAVLlastport, xylanAVLRadiusAdminState=xylanAVLRadiusAdminState, xylanAVLradretries=xylanAVLradretries, xylanAVLRadiusAcctAddress=xylanAVLRadiusAcctAddress, xylanAVLfailmsg=xylanAVLfailmsg, xylanAVLRadiusAcctSecret=xylanAVLRadiusAcctSecret, xylanAVLLdapSearchBase=xylanAVLLdapSearchBase, xylanAVLLdapResponseTime=xylanAVLLdapResponseTime, xylanAVLversion=xylanAVLversion, xylanAVLpassprompt=xylanAVLpassprompt, xylanAVLLdapLoginFailId=xylanAVLLdapLoginFailId, xylanAVLTproxyports=xylanAVLTproxyports, xylanAVLLdapGroup=xylanAVLLdapGroup, xylanAVLRadiusGroup=xylanAVLRadiusGroup, xylanAVLtelportport=xylanAVLtelportport, xylanAVLRadiusAddress=xylanAVLRadiusAddress, xylanAVLtelports=xylanAVLtelports, xylanAVLLdapRetry=xylanAVLLdapRetry, xylanAVLRadiusAcctServers=xylanAVLRadiusAcctServers, xylanAVLradiusacctentry=xylanAVLradiusacctentry, xylanAVLdropmac=xylanAVLdropmac, xylanAVLtelportslot=xylanAVLtelportslot, xylanAVLLdapUserPassword=xylanAVLLdapUserPassword, xylanAVLsucceedmsg=xylanAVLsucceedmsg, xylanAVLConfig=xylanAVLConfig, xylanAVLtelportstat=xylanAVLtelportstat, xylanAVLTproxyProxyAddr=xylanAVLTproxyProxyAddr, xylanAVLLdapType=xylanAVLLdapType, XylanAVLtelportStatCodes=XylanAVLtelportStatCodes, xylanAVLLdapServers=xylanAVLLdapServers, xylanAVLRadiusPriority=xylanAVLRadiusPriority, xylanAVLLdapMultiGroup=xylanAVLLdapMultiGroup, xylanAVLRadiusAcctPort=xylanAVLRadiusAcctPort, xylanAVLradtimeout=xylanAVLradtimeout, xylanAVLDNSName=xylanAVLDNSName, xylanAVLRadiusSecret=xylanAVLRadiusSecret, xylanAVLuserprompt=xylanAVLuserprompt, xylanAVLloginbanner=xylanAVLloginbanner, xylanAVLTproxyIntfAddr=xylanAVLTproxyIntfAddr, xylanAVLlastslot=xylanAVLlastslot, xylanAVLLdapAcctStatus=xylanAVLLdapAcctStatus, xylanAVLTproxyentry=xylanAVLTproxyentry, xylanAVLRadiusAcctAdminState=xylanAVLRadiusAcctAdminState, xylanAVLRadiusAcctGroup=xylanAVLRadiusAcctGroup, xylanAVLLdapAdminState=xylanAVLLdapAdminState, xylanAVLtimeout=xylanAVLtimeout, xylanAVLPathRestriction=xylanAVLPathRestriction, xylanAVLRadiusServers=xylanAVLRadiusServers, xylanAVLlastuser=xylanAVLlastuser, xylanAVLlastauthmac=xylanAVLlastauthmac, xylanAVLRadiusAcctPri=xylanAVLRadiusAcctPri, xylanAVLLdapentry=xylanAVLLdapentry, xylanAVLtelportentry=xylanAVLtelportentry, xylanAVLgroupprompt=xylanAVLgroupprompt, xylanAVLauthmode=xylanAVLauthmode, xylanAVLBootpIfAddr=xylanAVLBootpIfAddr, xylanAVLRadiusPort=xylanAVLRadiusPort, xylanAVLLdapUserId=xylanAVLLdapUserId, xylanAVLchalprompt=xylanAVLchalprompt, xylanAVLradiusentry=xylanAVLradiusentry, xylanAVLlastauthevent=xylanAVLlastauthevent)
