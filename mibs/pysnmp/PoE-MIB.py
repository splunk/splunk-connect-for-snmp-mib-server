#
# PySNMP MIB module PoE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/PoE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:34:26 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ModuleIdentity, ObjectIdentity, NotificationType, Gauge32, Bits, Unsigned32, Integer32, IpAddress, MibIdentifier, iso, Counter64, Counter32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ModuleIdentity", "ObjectIdentity", "NotificationType", "Gauge32", "Bits", "Unsigned32", "Integer32", "IpAddress", "MibIdentifier", "iso", "Counter64", "Counter32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
swPoEMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 24))
if mibBuilder.loadTexts: swPoEMIB.setLastUpdated('201007020000Z')
if mibBuilder.loadTexts: swPoEMIB.setOrganization('D-Link Corp.')
swPoESystemCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 24, 1))
swPoESystemInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 24, 2))
swPoEPortCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 24, 3))
swPoEPortInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 24, 4))
swPoESystemPowerLimit = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(37, 370))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemPowerLimit.setStatus('current')
swPoESystemPowerDisconnectMethod = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("denyNextPort", 1), ("denyLowPriorityPort", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemPowerDisconnectMethod.setStatus('current')
swPoESystemManagementMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("power-limit", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemManagementMode.setStatus('current')
swPoESystemLedMode = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("poe", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemLedMode.setStatus('current')
swPoESystemStackingCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 11), )
if mibBuilder.loadTexts: swPoESystemStackingCtrlTable.setStatus('current')
swPoESystemStackingCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 11, 1), ).setIndexNames((0, "PoE-MIB", "swPoESystemStackingCtrlUnitId"))
if mibBuilder.loadTexts: swPoESystemStackingCtrlEntry.setStatus('current')
swPoESystemStackingCtrlUnitId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoESystemStackingCtrlUnitId.setStatus('current')
swPoESystemStackingCtrlPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 11, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(37, 370))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemStackingCtrlPowerLimit.setStatus('current')
swPoESystemStackingCtrlPowerDisconnectMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 11, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("denyNextPort", 1), ("denyLowPriorityPort", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemStackingCtrlPowerDisconnectMethod.setStatus('current')
swPoESystemStackingCtrlManagementMode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("power-limit", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemStackingCtrlManagementMode.setStatus('current')
swPoESystemStackingCtrlLedMode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 11, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("poe", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemStackingCtrlLedMode.setStatus('current')
swPoESystemStackingCtrlLegacyPD = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemStackingCtrlLegacyPD.setStatus('current')
swPoESystemCtrlLegacyPD = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 24, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoESystemCtrlLegacyPD.setStatus('current')
swPoESystemInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 24, 2, 1), )
if mibBuilder.loadTexts: swPoESystemInfoTable.setStatus('current')
swPoESystemInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 24, 2, 1, 1), ).setIndexNames((0, "PoE-MIB", "swPoESystemInfoUnitId"))
if mibBuilder.loadTexts: swPoESystemInfoEntry.setStatus('current')
swPoESystemInfoUnitId = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoESystemInfoUnitId.setStatus('current')
swPoESystemInfoPowerConsumption = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 370))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoESystemInfoPowerConsumption.setStatus('current')
swPoESystemInfoPowerRemained = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 370))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoESystemInfoPowerRemained.setStatus('current')
swPoESystemInfoPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(37, 370))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoESystemInfoPowerLimit.setStatus('current')
swPoESystemInfoPowerDisconnectMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("denyNextPort", 1), ("denyLowPriorityPort", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoESystemInfoPowerDisconnectMethod.setStatus('current')
swPoESystemInfoManagementMode = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 2, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("power-limit", 1), ("auto", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoESystemInfoManagementMode.setStatus('current')
swPoESystemInfoLegacyPD = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoESystemInfoLegacyPD.setStatus('current')
swPoEPortCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 24, 3, 1), )
if mibBuilder.loadTexts: swPoEPortCtrlTable.setStatus('current')
swPoEPortCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 24, 3, 1, 1), ).setIndexNames((0, "PoE-MIB", "swPoEPortCtrlPortIndex"))
if mibBuilder.loadTexts: swPoEPortCtrlEntry.setStatus('current')
swPoEPortCtrlPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoEPortCtrlPortIndex.setStatus('current')
swPoEPortCtrlState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("enable", 2), ("disable", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoEPortCtrlState.setStatus('current')
swPoEPortCtrlPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("critical", 1), ("high", 2), ("low", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoEPortCtrlPriority.setStatus('current')
swPoEPortCtrlPowerLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("class0", 1), ("class1", 2), ("class2", 3), ("class3", 4), ("user-defined", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoEPortCtrlPowerLimit.setStatus('current')
swPoEPortCtrlUserDefined = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1000, 35000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoEPortCtrlUserDefined.setStatus('current')
swPoEPortCtrlTimeRangeName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 3, 1, 1, 6), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swPoEPortCtrlTimeRangeName.setStatus('current')
swPoEPortInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 24, 4, 1), )
if mibBuilder.loadTexts: swPoEPortInfoTable.setStatus('current')
swPoEPortInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 24, 4, 1, 1), ).setIndexNames((0, "PoE-MIB", "swPoEPortInfoPortIndex"))
if mibBuilder.loadTexts: swPoEPortInfoEntry.setStatus('current')
swPoEPortInfoPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoEPortInfoPortIndex.setStatus('current')
swPoEPortInfoClass = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 4, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoEPortInfoClass.setStatus('current')
swPoEPortInfoPower = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 4, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoEPortInfoPower.setStatus('current')
swPoEPortInfoVoltage = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 4, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoEPortInfoVoltage.setStatus('current')
swPoEPortInfoCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 4, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoEPortInfoCurrent.setStatus('current')
swPoEPortInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 4, 1, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 76))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swPoEPortInfoStatus.setStatus('current')
swpoEPortInfoLedStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 24, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("on", 1), ("off", 2), ("error", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swpoEPortInfoLedStatus.setStatus('current')
mibBuilder.exportSymbols("PoE-MIB", swPoESystemStackingCtrlLegacyPD=swPoESystemStackingCtrlLegacyPD, swPoEPortCtrl=swPoEPortCtrl, PYSNMP_MODULE_ID=swPoEMIB, swPoESystemInfoTable=swPoESystemInfoTable, swPoESystemInfoPowerDisconnectMethod=swPoESystemInfoPowerDisconnectMethod, swPoEPortInfoPortIndex=swPoEPortInfoPortIndex, swpoEPortInfoLedStatus=swpoEPortInfoLedStatus, swPoESystemCtrl=swPoESystemCtrl, swPoESystemInfoPowerRemained=swPoESystemInfoPowerRemained, swPoEPortCtrlPowerLimit=swPoEPortCtrlPowerLimit, swPoEPortInfo=swPoEPortInfo, swPoEPortCtrlUserDefined=swPoEPortCtrlUserDefined, swPoESystemInfoPowerLimit=swPoESystemInfoPowerLimit, swPoEPortCtrlEntry=swPoEPortCtrlEntry, swPoEPortCtrlTable=swPoEPortCtrlTable, swPoESystemStackingCtrlPowerDisconnectMethod=swPoESystemStackingCtrlPowerDisconnectMethod, swPoESystemPowerLimit=swPoESystemPowerLimit, swPoEMIB=swPoEMIB, swPoESystemInfo=swPoESystemInfo, swPoEPortInfoEntry=swPoEPortInfoEntry, swPoESystemInfoManagementMode=swPoESystemInfoManagementMode, swPoESystemStackingCtrlEntry=swPoESystemStackingCtrlEntry, swPoESystemLedMode=swPoESystemLedMode, swPoEPortCtrlTimeRangeName=swPoEPortCtrlTimeRangeName, swPoESystemInfoPowerConsumption=swPoESystemInfoPowerConsumption, swPoEPortInfoStatus=swPoEPortInfoStatus, swPoESystemManagementMode=swPoESystemManagementMode, swPoESystemPowerDisconnectMethod=swPoESystemPowerDisconnectMethod, swPoEPortCtrlState=swPoEPortCtrlState, swPoESystemStackingCtrlUnitId=swPoESystemStackingCtrlUnitId, swPoESystemCtrlLegacyPD=swPoESystemCtrlLegacyPD, swPoESystemStackingCtrlPowerLimit=swPoESystemStackingCtrlPowerLimit, swPoEPortCtrlPortIndex=swPoEPortCtrlPortIndex, swPoESystemInfoLegacyPD=swPoESystemInfoLegacyPD, swPoEPortCtrlPriority=swPoEPortCtrlPriority, swPoEPortInfoVoltage=swPoEPortInfoVoltage, swPoEPortInfoCurrent=swPoEPortInfoCurrent, swPoEPortInfoTable=swPoEPortInfoTable, swPoESystemInfoEntry=swPoESystemInfoEntry, swPoEPortInfoClass=swPoEPortInfoClass, swPoESystemInfoUnitId=swPoESystemInfoUnitId, swPoESystemStackingCtrlManagementMode=swPoESystemStackingCtrlManagementMode, swPoEPortInfoPower=swPoEPortInfoPower, swPoESystemStackingCtrlLedMode=swPoESystemStackingCtrlLedMode, swPoESystemStackingCtrlTable=swPoESystemStackingCtrlTable)
