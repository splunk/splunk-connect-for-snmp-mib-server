#
# PySNMP MIB module VRTS-SNMP-MIBv1 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VRTS-SNMP-MIBv1
# Produced by pysmi-0.3.4 at Mon Apr 29 21:28:41 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
NotificationType, Counter64, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, enterprises, Bits, Counter32, ModuleIdentity, Gauge32, TimeTicks, ObjectIdentity, IpAddress, MibIdentifier, Unsigned32, Integer32, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "NotificationType", "Counter64", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "enterprises", "Bits", "Counter32", "ModuleIdentity", "Gauge32", "TimeTicks", "ObjectIdentity", "IpAddress", "MibIdentifier", "Unsigned32", "Integer32", "NotificationType")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
veritas = MibIdentifier((1, 3, 6, 1, 4, 1, 1035))
netbackup = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1))
vxvm = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 2))
vxfs = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 3))
vcs = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 7))
commonObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 301))
job = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 1))
config = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 2))
media = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 4))
dr = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 6))
pysmi_class = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 2, 2)).setLabel("class")
client = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 2, 4))
sched = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 2, 6))
stu = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 2, 8))
mediaTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1), )
if mibBuilder.loadTexts: mediaTable.setStatus('mandatory')
mediaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "mediaIndex"))
if mibBuilder.loadTexts: mediaEntry.setStatus('mandatory')
mediaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaIndex.setStatus('mandatory')
mediaPool = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaPool.setStatus('mandatory')
mediaId = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaId.setStatus('mandatory')
mediaType = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaType.setStatus('mandatory')
mediaRobotType = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaRobotType.setStatus('mandatory')
mediaRobotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaRobotNum.setStatus('mandatory')
mediaRobotSlot = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaRobotSlot.setStatus('mandatory')
mediaSideFace = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaSideFace.setStatus('mandatory')
mediaRetLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaRetLevel.setStatus('mandatory')
mediaSize = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaSize.setStatus('mandatory')
mediaStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mediaStatus.setStatus('mandatory')
volpool = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 4, 2))
robot = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 4, 4))
drive = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 4, 6))
tape = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 4, 8))
vault = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 6, 2))
classTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 2, 2, 1), )
if mibBuilder.loadTexts: classTable.setStatus('mandatory')
classEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 2, 2, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "classIndex"))
if mibBuilder.loadTexts: classEntry.setStatus('mandatory')
classIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 2, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: classIndex.setStatus('mandatory')
className = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: className.setStatus('mandatory')
clientTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 2, 4, 1), )
if mibBuilder.loadTexts: clientTable.setStatus('mandatory')
clientEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 2, 4, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "clientIndex"))
if mibBuilder.loadTexts: clientEntry.setStatus('mandatory')
clientIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 2, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientIndex.setStatus('mandatory')
clientName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 2, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clientName.setStatus('mandatory')
schedTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 2, 6, 1), )
if mibBuilder.loadTexts: schedTable.setStatus('mandatory')
schedEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 2, 6, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "schedIndex"))
if mibBuilder.loadTexts: schedEntry.setStatus('mandatory')
schedIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 2, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: schedIndex.setStatus('mandatory')
schedName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 2, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: schedName.setStatus('mandatory')
stuTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 2, 8, 1), )
if mibBuilder.loadTexts: stuTable.setStatus('mandatory')
stuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 2, 8, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "stuIndex"))
if mibBuilder.loadTexts: stuEntry.setStatus('mandatory')
stuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 2, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuIndex.setStatus('mandatory')
stuName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 2, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: stuName.setStatus('mandatory')
volpoolTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 4, 2, 1), )
if mibBuilder.loadTexts: volpoolTable.setStatus('mandatory')
volpoolEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 4, 2, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "volpoolIndex"))
if mibBuilder.loadTexts: volpoolEntry.setStatus('mandatory')
volpoolIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: volpoolIndex.setStatus('mandatory')
volpoolName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: volpoolName.setStatus('mandatory')
robotTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 4, 4, 1), )
if mibBuilder.loadTexts: robotTable.setStatus('mandatory')
robotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 4, 4, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "robotIndex"))
if mibBuilder.loadTexts: robotEntry.setStatus('mandatory')
robotIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: robotIndex.setStatus('mandatory')
robotName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: robotName.setStatus('mandatory')
driveTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 4, 6, 1), )
if mibBuilder.loadTexts: driveTable.setStatus('mandatory')
driveEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 4, 6, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "driveIndex"))
if mibBuilder.loadTexts: driveEntry.setStatus('mandatory')
driveIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveIndex.setStatus('mandatory')
driveName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: driveName.setStatus('mandatory')
tapeTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 4, 8, 1), )
if mibBuilder.loadTexts: tapeTable.setStatus('mandatory')
tapeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 4, 8, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "tapeIndex"))
if mibBuilder.loadTexts: tapeEntry.setStatus('mandatory')
tapeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 8, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeIndex.setStatus('mandatory')
tapeName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 4, 8, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tapeName.setStatus('mandatory')
vaultTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 6, 2, 1), )
if mibBuilder.loadTexts: vaultTable.setStatus('mandatory')
vaultEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 6, 2, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "vaultIndex"))
if mibBuilder.loadTexts: vaultEntry.setStatus('mandatory')
vaultIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 6, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vaultIndex.setStatus('mandatory')
vaultName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 6, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vaultName.setStatus('mandatory')
jobTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1), )
if mibBuilder.loadTexts: jobTable.setStatus('mandatory')
jobEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "jobIndex"))
if mibBuilder.loadTexts: jobEntry.setStatus('mandatory')
jobIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobIndex.setStatus('mandatory')
jobType = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobType.setStatus('mandatory')
jobState = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobState.setStatus('mandatory')
jobClass = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobClass.setStatus('mandatory')
jobClient = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobClient.setStatus('mandatory')
jobSched = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobSched.setStatus('mandatory')
jobSchedType = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobSchedType.setStatus('mandatory')
jobStu = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobStu.setStatus('mandatory')
jobVolpool = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobVolpool.setStatus('mandatory')
jobKbytes = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobKbytes.setStatus('mandatory')
jobMaster = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobMaster.setStatus('mandatory')
jobErrExpl = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 12), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobErrExpl.setStatus('mandatory')
jobErrReco = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 13), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobErrReco.setStatus('mandatory')
jobId = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobId.setStatus('mandatory')
jobErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 100), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobErrCode.setStatus('mandatory')
jobErrMsg = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: jobErrMsg.setStatus('mandatory')
jobErrFix = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 102), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jobErrFix.setStatus('mandatory')
jobErrFixCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 1, 1, 1, 103), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jobErrFixCmd.setStatus('mandatory')
nbuExtTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 1, 100), )
if mibBuilder.loadTexts: nbuExtTable.setStatus('mandatory')
nbuEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "nbuIndex"))
if mibBuilder.loadTexts: nbuEntry.setStatus('mandatory')
class OpEnum(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29))
    namedValues = NamedValues(("other", 1), ("startNbu", 2), ("stopNbu", 3), ("startMm", 4), ("stopMm", 5), ("userDef0", 20), ("userDef1", 21), ("userDef2", 22), ("userDef3", 23), ("userDef4", 24), ("userDef5", 25), ("userDef6", 26), ("userDef7", 27), ("userDef8", 28), ("userDef9", 29))

nbuIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 1), OpEnum()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuIndex.setStatus('mandatory')
nbuNames = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbuNames.setStatus('mandatory')
nbuCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbuCommand.setStatus('mandatory')
nbuCtlFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbuCtlFlag.setStatus('mandatory')
nbuResFile = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuResFile.setStatus('mandatory')
nbuLockFile = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuLockFile.setStatus('mandatory')
nbuTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuTimeout.setStatus('mandatory')
nbuFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuFreq.setStatus('mandatory')
nbuResult = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuResult.setStatus('mandatory')
nbuOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuOutput.setStatus('mandatory')
nbuErrFix = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: nbuErrFix.setStatus('mandatory')
nbuErrFixCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 1, 100, 1, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuErrFixCmd.setStatus('mandatory')
vcsEventAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 7, 250))
vcsTag = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsTag.setStatus('mandatory')
vcsHost = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsHost.setStatus('mandatory')
vcsRes = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsRes.setStatus('mandatory')
vcsResStat = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsResStat.setStatus('mandatory')
vcsAgent = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsAgent.setStatus('mandatory')
vcsNode = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsNode.setStatus('mandatory')
vcsDate = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsDate.setStatus('mandatory')
vcsTime = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsTime.setStatus('mandatory')
vcsErrExpl = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 98), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsErrExpl.setStatus('mandatory')
vcsErrReco = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 99), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsErrReco.setStatus('mandatory')
vcsErrCode = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsErrCode.setStatus('mandatory')
vcsErrMsg = MibScalar((1, 3, 6, 1, 4, 1, 1035, 7, 250, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsErrMsg.setStatus('mandatory')
vrtsVcsEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 7, 251))
errorVcsEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 7, 251) + (0,1)).setObjects(("VRTS-SNMP-MIBv1", "vcsTag"), ("VRTS-SNMP-MIBv1", "vcsDate"), ("VRTS-SNMP-MIBv1", "vcsTime"), ("VRTS-SNMP-MIBv1", "vcsErrMsg"), ("VRTS-SNMP-MIBv1", "vcsErrCode"), ("VRTS-SNMP-MIBv1", "vcsHost"), ("VRTS-SNMP-MIBv1", "vcsRes"), ("VRTS-SNMP-MIBv1", "vcsAgent"), ("VRTS-SNMP-MIBv1", "vcsNode"))
normalVcsEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 7, 251) + (0,2)).setObjects(("VRTS-SNMP-MIBv1", "vcsTag"), ("VRTS-SNMP-MIBv1", "vcsDate"), ("VRTS-SNMP-MIBv1", "vcsTime"), ("VRTS-SNMP-MIBv1", "vcsErrMsg"), ("VRTS-SNMP-MIBv1", "vcsErrCode"), ("VRTS-SNMP-MIBv1", "vcsHost"), ("VRTS-SNMP-MIBv1", "vcsRes"), ("VRTS-SNMP-MIBv1", "vcsAgent"), ("VRTS-SNMP-MIBv1", "vcsNode"))
vcsExtTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 7, 100), )
if mibBuilder.loadTexts: vcsExtTable.setStatus('mandatory')
vcsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 7, 100, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "vcsIndex"))
if mibBuilder.loadTexts: vcsEntry.setStatus('mandatory')
vcsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 7, 100, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsIndex.setStatus('mandatory')
vcsNames = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 7, 100, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsNames.setStatus('mandatory')
vcsCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 7, 100, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsCommand.setStatus('mandatory')
vcsCtlFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 7, 100, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vcsCtlFlag.setStatus('mandatory')
vcsResult = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 7, 100, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsResult.setStatus('mandatory')
vcsOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 7, 100, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsOutput.setStatus('mandatory')
vcsErrFix = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 7, 100, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vcsErrFix.setStatus('mandatory')
vcsErrFixCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 7, 100, 1, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vcsErrFixCmd.setStatus('mandatory')
vrtsNbuJobEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 1, 251))
abnormalJobEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 1, 251) + (0,1)).setObjects(("VRTS-SNMP-MIBv1", "jobId"), ("VRTS-SNMP-MIBv1", "jobClass"), ("VRTS-SNMP-MIBv1", "jobClient"), ("VRTS-SNMP-MIBv1", "jobSched"), ("VRTS-SNMP-MIBv1", "jobSchedType"), ("VRTS-SNMP-MIBv1", "jobStu"), ("VRTS-SNMP-MIBv1", "jobVolpool"), ("VRTS-SNMP-MIBv1", "jobErrCode"), ("VRTS-SNMP-MIBv1", "jobErrMsg"), ("VRTS-SNMP-MIBv1", "jobMaster"), ("VRTS-SNMP-MIBv1", "jobErrExpl"), ("VRTS-SNMP-MIBv1", "jobErrReco"))
normalJobEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 1, 251) + (0,2)).setObjects(("VRTS-SNMP-MIBv1", "jobId"), ("VRTS-SNMP-MIBv1", "jobClass"), ("VRTS-SNMP-MIBv1", "jobClient"), ("VRTS-SNMP-MIBv1", "jobSched"), ("VRTS-SNMP-MIBv1", "jobSchedType"), ("VRTS-SNMP-MIBv1", "jobStu"), ("VRTS-SNMP-MIBv1", "jobVolpool"), ("VRTS-SNMP-MIBv1", "jobErrCode"), ("VRTS-SNMP-MIBv1", "jobErrMsg"), ("VRTS-SNMP-MIBv1", "jobMaster"), ("VRTS-SNMP-MIBv1", "jobErrExpl"), ("VRTS-SNMP-MIBv1", "jobErrReco"))
vrtsNbuExtEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 101))
nbuExtEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 101) + (0,1)).setObjects(("VRTS-SNMP-MIBv1", "nbuIndex"), ("VRTS-SNMP-MIBv1", "nbuNames"), ("VRTS-SNMP-MIBv1", "nbuCommand"), ("VRTS-SNMP-MIBv1", "nbuResult"), ("VRTS-SNMP-MIBv1", "nbuOutput"))
vrtsNbuEvents = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 251))
nbuTrapVars = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 1, 250))
nbuHost = MibScalar((1, 3, 6, 1, 4, 1, 1035, 1, 250, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuHost.setStatus('mandatory')
nbuErrcode = MibScalar((1, 3, 6, 1, 4, 1, 1035, 1, 250, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuErrcode.setStatus('mandatory')
nbuErrmsg = MibScalar((1, 3, 6, 1, 4, 1, 1035, 1, 250, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: nbuErrmsg.setStatus('mandatory')
dbBackupFailed = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,300)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
dbBackupIsDisabled = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,301)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
freezingMedia = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,302)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
suspendingMedia = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,303)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
mediaRequiredForRestore = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,304)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
downedDrive = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,305)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
exceededCleaningFrequency = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,306)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
exceededMaxMounts = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,307)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
mountRequest = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,308)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
noCleaningTape = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,309)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
zeroCleaningsLeft = NotificationType((1, 3, 6, 1, 4, 1, 1035, 1, 251) + (0,310)).setObjects(("VRTS-SNMP-MIBv1", "nbuHost"), ("VRTS-SNMP-MIBv1", "nbuErrcode"), ("VRTS-SNMP-MIBv1", "nbuErrmsg"))
log = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 301, 1))
logTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1), )
if mibBuilder.loadTexts: logTable.setStatus('mandatory')
logEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "logIndex"))
if mibBuilder.loadTexts: logEntry.setStatus('mandatory')
logIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: logIndex.setStatus('mandatory')
logHost = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logHost.setStatus('mandatory')
logPrdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logPrdCode.setStatus('mandatory')
logPrdName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logPrdName.setStatus('mandatory')
logObjName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logObjName.setStatus('mandatory')
logAttrName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 6), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logAttrName.setStatus('mandatory')
logFile = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 7), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logFile.setStatus('mandatory')
logErrStrs = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logErrStrs.setStatus('mandatory')
logDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logDesc.setStatus('mandatory')
logResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logResolution.setStatus('mandatory')
logErrFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logErrFlag.setStatus('mandatory')
logErrcode = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logErrcode.setStatus('mandatory')
logErrmsg = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: logErrmsg.setStatus('mandatory')
logErrFix = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 102), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logErrFix.setStatus('mandatory')
logErrFixCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 1, 1, 1, 103), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: logErrFixCmd.setStatus('mandatory')
vrtsLogMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 301, 1, 251))
logEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 301, 1, 251) + (0,1)).setObjects(("VRTS-SNMP-MIBv1", "logHost"), ("VRTS-SNMP-MIBv1", "logObjName"), ("VRTS-SNMP-MIBv1", "logFile"), ("VRTS-SNMP-MIBv1", "logErrStrs"), ("VRTS-SNMP-MIBv1", "logDesc"), ("VRTS-SNMP-MIBv1", "logResolution"), ("VRTS-SNMP-MIBv1", "logErrcode"), ("VRTS-SNMP-MIBv1", "logErrmsg"))
process = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 301, 2))
psTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1), )
if mibBuilder.loadTexts: psTable.setStatus('mandatory')
psEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "psIndex"))
if mibBuilder.loadTexts: psEntry.setStatus('mandatory')
psIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psIndex.setStatus('mandatory')
psId = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: psId.setStatus('mandatory')
psName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psName.setStatus('mandatory')
psAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psAttr.setStatus('mandatory')
psMin = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMin.setStatus('mandatory')
psMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psMax.setStatus('mandatory')
psCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCount.setStatus('mandatory')
psCpuPct = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psCpuPct.setStatus('mandatory')
psBytesIO = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psBytesIO.setStatus('mandatory')
psSlpMax = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psSlpMax.setStatus('mandatory')
psHost = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psHost.setStatus('mandatory')
psErrFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psErrFlag.setStatus('mandatory')
psErrcode = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psErrcode.setStatus('mandatory')
psErrmsg = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psErrmsg.setStatus('mandatory')
psErrFix = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: psErrFix.setStatus('mandatory')
psErrFixCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 2, 1, 1, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: psErrFixCmd.setStatus('mandatory')
vrtsProcessMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 301, 2, 251))
processEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 301, 2, 251) + (0,1)).setObjects(("VRTS-SNMP-MIBv1", "psHost"), ("VRTS-SNMP-MIBv1", "psId"), ("VRTS-SNMP-MIBv1", "psName"), ("VRTS-SNMP-MIBv1", "psAttr"), ("VRTS-SNMP-MIBv1", "psErrcode"), ("VRTS-SNMP-MIBv1", "psErrmsg"))
collector = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 301, 4))
clTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1), )
if mibBuilder.loadTexts: clTable.setStatus('mandatory')
clEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "clIndex"))
if mibBuilder.loadTexts: clEntry.setStatus('mandatory')
clIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: clIndex.setStatus('mandatory')
clName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clName.setStatus('mandatory')
clHost = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clHost.setStatus('mandatory')
clScript = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clScript.setStatus('mandatory')
clSampFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clSampFreq.setStatus('mandatory')
clFreq = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clFreq.setStatus('mandatory')
clTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clTimeout.setStatus('mandatory')
clPrdCode = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clPrdCode.setStatus('mandatory')
clPrdName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 9), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clPrdName.setStatus('mandatory')
clObjName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 10), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clObjName.setStatus('mandatory')
clAttrName = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clAttrName.setStatus('mandatory')
clLow = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clLow.setStatus('mandatory')
clHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clHigh.setStatus('mandatory')
clCount = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clCount.setStatus('mandatory')
clObjNames = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clObjNames.setStatus('mandatory')
clResolution = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clResolution.setStatus('mandatory')
clErrFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clErrFlag.setStatus('mandatory')
clErrcode = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clErrcode.setStatus('mandatory')
clErrmsg = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clErrmsg.setStatus('mandatory')
clErrFix = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: clErrFix.setStatus('mandatory')
clErrFixCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 301, 4, 1, 1, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: clErrFixCmd.setStatus('mandatory')
vrtsCollectorMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 301, 4, 251))
collectorEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 301, 4, 251) + (0,1)).setObjects(("VRTS-SNMP-MIBv1", "clName"), ("VRTS-SNMP-MIBv1", "clHost"), ("VRTS-SNMP-MIBv1", "clPrdName"), ("VRTS-SNMP-MIBv1", "clObjName"), ("VRTS-SNMP-MIBv1", "clAttrName"), ("VRTS-SNMP-MIBv1", "clErrcode"), ("VRTS-SNMP-MIBv1", "clErrmsg"), ("VRTS-SNMP-MIBv1", "clResolution"))
frequency = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 301, 8))
messagefreq = MibScalar((1, 3, 6, 1, 4, 1, 1035, 301, 8, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: messagefreq.setStatus('mandatory')
processfreq = MibScalar((1, 3, 6, 1, 4, 1, 1035, 301, 8, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: processfreq.setStatus('mandatory')
vxvmSamplefreq = MibScalar((1, 3, 6, 1, 4, 1, 1035, 301, 8, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vxvmSamplefreq.setStatus('mandatory')
vxvmCheckfreq = MibScalar((1, 3, 6, 1, 4, 1, 1035, 301, 8, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vxvmCheckfreq.setStatus('mandatory')
vxvmTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1035, 301, 8, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vxvmTimeout.setStatus('mandatory')
vxfsSamplefreq = MibScalar((1, 3, 6, 1, 4, 1, 1035, 301, 8, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vxfsSamplefreq.setStatus('mandatory')
vxfsCheckfreq = MibScalar((1, 3, 6, 1, 4, 1, 1035, 301, 8, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vxfsCheckfreq.setStatus('mandatory')
vxfsTimeout = MibScalar((1, 3, 6, 1, 4, 1, 1035, 301, 8, 23), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vxfsTimeout.setStatus('mandatory')
vrtsEneMonitor = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 301, 251))
coldStart = NotificationType((1, 3, 6, 1, 4, 1, 1035, 301, 251) + (0,1))
heartBeat = NotificationType((1, 3, 6, 1, 4, 1, 1035, 301, 251) + (0,3))
shutDown = NotificationType((1, 3, 6, 1, 4, 1, 1035, 301, 251) + (0,5))
vmExtTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 2, 100), )
if mibBuilder.loadTexts: vmExtTable.setStatus('mandatory')
vmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 2, 100, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "vmIndex"))
if mibBuilder.loadTexts: vmEntry.setStatus('mandatory')
vmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 2, 100, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmIndex.setStatus('mandatory')
vmNames = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 2, 100, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmNames.setStatus('mandatory')
vmCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 2, 100, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmCommand.setStatus('mandatory')
vmCtlFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 2, 100, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmCtlFlag.setStatus('mandatory')
vmResult = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 2, 100, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmResult.setStatus('mandatory')
vmOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 2, 100, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmOutput.setStatus('mandatory')
vmErrFix = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 2, 100, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vmErrFix.setStatus('mandatory')
vmErrFixCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 2, 100, 1, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vmErrFixCmd.setStatus('mandatory')
fsExtTable = MibTable((1, 3, 6, 1, 4, 1, 1035, 3, 100), )
if mibBuilder.loadTexts: fsExtTable.setStatus('mandatory')
fsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 1035, 3, 100, 1), ).setIndexNames((0, "VRTS-SNMP-MIBv1", "fsIndex"))
if mibBuilder.loadTexts: fsEntry.setStatus('mandatory')
fsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 3, 100, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsIndex.setStatus('mandatory')
fsNames = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 3, 100, 1, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsNames.setStatus('mandatory')
fsCommand = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 3, 100, 1, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsCommand.setStatus('mandatory')
fsCtlFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 3, 100, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsCtlFlag.setStatus('mandatory')
fsResult = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 3, 100, 1, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsResult.setStatus('mandatory')
fsOutput = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 3, 100, 1, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsOutput.setStatus('mandatory')
fsErrFix = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 3, 100, 1, 102), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fsErrFix.setStatus('mandatory')
fsErrFixCmd = MibTableColumn((1, 3, 6, 1, 4, 1, 1035, 3, 100, 1, 103), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: fsErrFixCmd.setStatus('mandatory')
vxvmEventAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 2, 250))
vxvmHost = MibScalar((1, 3, 6, 1, 4, 1, 1035, 2, 250, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxvmHost.setStatus('mandatory')
vxvmType = MibScalar((1, 3, 6, 1, 4, 1, 1035, 2, 250, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxvmType.setStatus('mandatory')
vxvmSeverity = MibScalar((1, 3, 6, 1, 4, 1, 1035, 2, 250, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxvmSeverity.setStatus('mandatory')
vxvmErrExpl = MibScalar((1, 3, 6, 1, 4, 1, 1035, 2, 250, 98), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxvmErrExpl.setStatus('mandatory')
vxvmErrReco = MibScalar((1, 3, 6, 1, 4, 1, 1035, 2, 250, 99), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxvmErrReco.setStatus('mandatory')
vxvmErrCode = MibScalar((1, 3, 6, 1, 4, 1, 1035, 2, 250, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxvmErrCode.setStatus('mandatory')
vxvmErrMsg = MibScalar((1, 3, 6, 1, 4, 1, 1035, 2, 250, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxvmErrMsg.setStatus('mandatory')
vrtsVxvmEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 2, 251))
errorVxvmEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 2, 251) + (0,1)).setObjects(("VRTS-SNMP-MIBv1", "vxvmHost"), ("VRTS-SNMP-MIBv1", "vxvmType"), ("VRTS-SNMP-MIBv1", "vxvmSeverity"), ("VRTS-SNMP-MIBv1", "vxvmErrMsg"))
normalVxvmEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 2, 251) + (0,2)).setObjects(("VRTS-SNMP-MIBv1", "vxvmHost"), ("VRTS-SNMP-MIBv1", "vxvmType"), ("VRTS-SNMP-MIBv1", "vxvmSeverity"), ("VRTS-SNMP-MIBv1", "vxvmErrMsg"))
vxfsEventAttrs = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 3, 250))
vxfsHost = MibScalar((1, 3, 6, 1, 4, 1, 1035, 3, 250, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxfsHost.setStatus('mandatory')
vxfsMsgcnt = MibScalar((1, 3, 6, 1, 4, 1, 1035, 3, 250, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxfsMsgcnt.setStatus('mandatory')
vxfsSeverity = MibScalar((1, 3, 6, 1, 4, 1, 1035, 3, 250, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxfsSeverity.setStatus('mandatory')
vxfsErrExpl = MibScalar((1, 3, 6, 1, 4, 1, 1035, 3, 250, 98), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxfsErrExpl.setStatus('mandatory')
vxfsErrReco = MibScalar((1, 3, 6, 1, 4, 1, 1035, 3, 250, 99), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxfsErrReco.setStatus('mandatory')
vxfsErrCode = MibScalar((1, 3, 6, 1, 4, 1, 1035, 3, 250, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxfsErrCode.setStatus('mandatory')
vxfsErrMsg = MibScalar((1, 3, 6, 1, 4, 1, 1035, 3, 250, 101), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vxfsErrMsg.setStatus('mandatory')
vrtsVxfsEvent = MibIdentifier((1, 3, 6, 1, 4, 1, 1035, 3, 251))
errorVxfsEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 3, 251) + (0,1)).setObjects(("VRTS-SNMP-MIBv1", "vxfsHost"), ("VRTS-SNMP-MIBv1", "vxfsMsgcnt"), ("VRTS-SNMP-MIBv1", "vxfsSeverity"), ("VRTS-SNMP-MIBv1", "vxfsErrCode"), ("VRTS-SNMP-MIBv1", "vxfsErrMsg"))
normalVxfsEvent = NotificationType((1, 3, 6, 1, 4, 1, 1035, 3, 251) + (0,2)).setObjects(("VRTS-SNMP-MIBv1", "vxfsHost"), ("VRTS-SNMP-MIBv1", "vxfsMsgcnt"), ("VRTS-SNMP-MIBv1", "vxfsSeverity"), ("VRTS-SNMP-MIBv1", "vxfsErrCode"), ("VRTS-SNMP-MIBv1", "vxfsErrMsg"))
mibBuilder.exportSymbols("VRTS-SNMP-MIBv1", jobIndex=jobIndex, vrtsNbuExtEvent=vrtsNbuExtEvent, jobKbytes=jobKbytes, abnormalJobEvent=abnormalJobEvent, nbuFreq=nbuFreq, nbuEntry=nbuEntry, robotName=robotName, collector=collector, vmIndex=vmIndex, normalVxvmEvent=normalVxvmEvent, mediaType=mediaType, vcsErrFixCmd=vcsErrFixCmd, vrtsNbuEvents=vrtsNbuEvents, classTable=classTable, vmExtTable=vmExtTable, vmResult=vmResult, downedDrive=downedDrive, clErrcode=clErrcode, clErrFlag=clErrFlag, vmOutput=vmOutput, vxvmSamplefreq=vxvmSamplefreq, clLow=clLow, mediaRequiredForRestore=mediaRequiredForRestore, psErrFix=psErrFix, logFile=logFile, psAttr=psAttr, schedTable=schedTable, vcsIndex=vcsIndex, vcsErrMsg=vcsErrMsg, clientIndex=clientIndex, schedEntry=schedEntry, clientEntry=clientEntry, nbuResFile=nbuResFile, driveIndex=driveIndex, jobErrFixCmd=jobErrFixCmd, dbBackupIsDisabled=dbBackupIsDisabled, clErrFix=clErrFix, logAttrName=logAttrName, clEntry=clEntry, vcsTag=vcsTag, fsIndex=fsIndex, jobId=jobId, vrtsVxvmEvent=vrtsVxvmEvent, schedIndex=schedIndex, clPrdName=clPrdName, mediaStatus=mediaStatus, volpoolEntry=volpoolEntry, psErrcode=psErrcode, drive=drive, veritas=veritas, noCleaningTape=noCleaningTape, clObjNames=clObjNames, clFreq=clFreq, volpoolTable=volpoolTable, tapeIndex=tapeIndex, vmEntry=vmEntry, volpoolIndex=volpoolIndex, vcsEventAttrs=vcsEventAttrs, coldStart=coldStart, vrtsNbuJobEvent=vrtsNbuJobEvent, logTable=logTable, vmCommand=vmCommand, processEvent=processEvent, vcsNames=vcsNames, collectorEvent=collectorEvent, vxvmHost=vxvmHost, psIndex=psIndex, schedName=schedName, psErrFlag=psErrFlag, fsCtlFlag=fsCtlFlag, jobTable=jobTable, vrtsVxfsEvent=vrtsVxfsEvent, vxfsErrMsg=vxfsErrMsg, vcsTime=vcsTime, fsNames=fsNames, processfreq=processfreq, vrtsEneMonitor=vrtsEneMonitor, psName=psName, vrtsVcsEvent=vrtsVcsEvent, nbuErrcode=nbuErrcode, vcsRes=vcsRes, mediaTable=mediaTable, fsOutput=fsOutput, logHost=logHost, classEntry=classEntry, psCpuPct=psCpuPct, driveTable=driveTable, vrtsCollectorMonitor=vrtsCollectorMonitor, vxvmTimeout=vxvmTimeout, vmErrFix=vmErrFix, psSlpMax=psSlpMax, sched=sched, nbuErrFix=nbuErrFix, errorVxvmEvent=errorVxvmEvent, exceededCleaningFrequency=exceededCleaningFrequency, robotTable=robotTable, nbuErrmsg=nbuErrmsg, fsCommand=fsCommand, vxfsCheckfreq=vxfsCheckfreq, vxfsSeverity=vxfsSeverity, mediaSideFace=mediaSideFace, nbuHost=nbuHost, vcsErrFix=vcsErrFix, psBytesIO=psBytesIO, psEntry=psEntry, fsResult=fsResult, vxfsTimeout=vxfsTimeout, logResolution=logResolution, vaultName=vaultName, clTimeout=clTimeout, clAttrName=clAttrName, tapeName=tapeName, volpool=volpool, stuTable=stuTable, nbuTrapVars=nbuTrapVars, psMax=psMax, vxfsErrExpl=vxfsErrExpl, commonObjects=commonObjects, psMin=psMin, config=config, psErrFixCmd=psErrFixCmd, stuEntry=stuEntry, stu=stu, mediaId=mediaId, psId=psId, vcsErrReco=vcsErrReco, psHost=psHost, vcsErrCode=vcsErrCode, classIndex=classIndex, vcsOutput=vcsOutput, clObjName=clObjName, vxvmErrCode=vxvmErrCode, logDesc=logDesc, jobClass=jobClass, OpEnum=OpEnum, logEvent=logEvent, dr=dr, vxfsSamplefreq=vxfsSamplefreq, fsErrFixCmd=fsErrFixCmd, dbBackupFailed=dbBackupFailed, nbuOutput=nbuOutput, vaultTable=vaultTable, jobMaster=jobMaster, robotIndex=robotIndex, vcsCommand=vcsCommand, vcsErrExpl=vcsErrExpl, vcsCtlFlag=vcsCtlFlag, log=log, vcsNode=vcsNode, logPrdName=logPrdName, logErrFixCmd=logErrFixCmd, jobStu=jobStu, jobType=jobType, vcsHost=vcsHost, fsErrFix=fsErrFix, clHost=clHost, messagefreq=messagefreq, fsExtTable=fsExtTable, jobErrReco=jobErrReco, exceededMaxMounts=exceededMaxMounts, mediaRobotSlot=mediaRobotSlot, errorVxfsEvent=errorVxfsEvent, freezingMedia=freezingMedia, suspendingMedia=suspendingMedia, clCount=clCount, frequency=frequency, heartBeat=heartBeat, pysmi_class=pysmi_class, stuIndex=stuIndex, vrtsLogMonitor=vrtsLogMonitor, vmCtlFlag=vmCtlFlag, volpoolName=volpoolName, vcsDate=vcsDate, logErrStrs=logErrStrs, vxvmEventAttrs=vxvmEventAttrs, vxvmErrExpl=vxvmErrExpl, mediaPool=mediaPool, logObjName=logObjName, vxfsHost=vxfsHost, normalVcsEvent=normalVcsEvent, logPrdCode=logPrdCode, vxfs=vxfs, vrtsProcessMonitor=vrtsProcessMonitor, media=media, clTable=clTable, vxfsErrCode=vxfsErrCode, stuName=stuName, normalJobEvent=normalJobEvent, psTable=psTable, jobVolpool=jobVolpool, vxvm=vxvm, clientName=clientName, clErrmsg=clErrmsg, logErrFix=logErrFix, nbuResult=nbuResult, vxvmErrMsg=vxvmErrMsg, psCount=psCount, vxfsMsgcnt=vxfsMsgcnt, vcsResStat=vcsResStat, nbuErrFixCmd=nbuErrFixCmd, clErrFixCmd=clErrFixCmd, jobSchedType=jobSchedType, vaultEntry=vaultEntry, mountRequest=mountRequest, clIndex=clIndex, vxvmCheckfreq=vxvmCheckfreq, logErrmsg=logErrmsg, tapeEntry=tapeEntry, vmNames=vmNames, jobEntry=jobEntry, errorVcsEvent=errorVcsEvent, vxvmSeverity=vxvmSeverity, tape=tape, nbuIndex=nbuIndex, client=client, vcsAgent=vcsAgent, jobErrMsg=jobErrMsg, process=process, vault=vault, nbuExtTable=nbuExtTable, normalVxfsEvent=normalVxfsEvent, clResolution=clResolution, zeroCleaningsLeft=zeroCleaningsLeft, mediaRetLevel=mediaRetLevel, mediaRobotType=mediaRobotType, clientTable=clientTable, robotEntry=robotEntry, vcsResult=vcsResult, psErrmsg=psErrmsg, clScript=clScript, mediaEntry=mediaEntry, jobState=jobState, driveEntry=driveEntry, logErrcode=logErrcode, logIndex=logIndex, fsEntry=fsEntry, clHigh=clHigh, vcs=vcs, nbuCtlFlag=nbuCtlFlag, jobErrFix=jobErrFix, vcsEntry=vcsEntry, nbuExtEvent=nbuExtEvent, vxvmErrReco=vxvmErrReco, job=job, shutDown=shutDown, vxfsErrReco=vxfsErrReco, netbackup=netbackup, jobSched=jobSched, vcsExtTable=vcsExtTable, mediaSize=mediaSize, clPrdCode=clPrdCode, nbuTimeout=nbuTimeout, logErrFlag=logErrFlag, className=className)
mibBuilder.exportSymbols("VRTS-SNMP-MIBv1", mediaRobotNum=mediaRobotNum, jobErrCode=jobErrCode, clSampFreq=clSampFreq, vaultIndex=vaultIndex, vmErrFixCmd=vmErrFixCmd, logEntry=logEntry, vxvmType=vxvmType, jobErrExpl=jobErrExpl, mediaIndex=mediaIndex, nbuCommand=nbuCommand, driveName=driveName, nbuLockFile=nbuLockFile, jobClient=jobClient, clName=clName, nbuNames=nbuNames, tapeTable=tapeTable, robot=robot, vxfsEventAttrs=vxfsEventAttrs)
