#
# PySNMP MIB module HPN-ICF-FC-TRACE-ROUTE-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/HPN-ICF-FC-TRACE-ROUTE-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:26:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsUnion, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsUnion", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection")
HpnicfFcVsanIndex, HpnicfFcAddress, HpnicfFcStartOper, HpnicfFcAddressType, HpnicfFcNameId = mibBuilder.importSymbols("HPN-ICF-FC-TC-MIB", "HpnicfFcVsanIndex", "HpnicfFcAddress", "HpnicfFcStartOper", "HpnicfFcAddressType", "HpnicfFcNameId")
hpnicfSan, = mibBuilder.importSymbols("HPN-ICF-VSAN-MIB", "hpnicfSan")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibScalar, MibTable, MibTableRow, MibTableColumn, Unsigned32, NotificationType, IpAddress, iso, Counter32, Counter64, ObjectIdentity, ModuleIdentity, TimeTicks, Bits, Integer32, MibIdentifier, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Unsigned32", "NotificationType", "IpAddress", "iso", "Counter32", "Counter64", "ObjectIdentity", "ModuleIdentity", "TimeTicks", "Bits", "Integer32", "MibIdentifier", "Gauge32")
RowStatus, TruthValue, DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TruthValue", "DisplayString", "TextualConvention")
hpnicfFcTraceRoute = ModuleIdentity((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4))
hpnicfFcTraceRoute.setRevisions(('2013-02-27 00:00',))
if mibBuilder.loadTexts: hpnicfFcTraceRoute.setLastUpdated('201302270000Z')
if mibBuilder.loadTexts: hpnicfFcTraceRoute.setOrganization('')
hpnicfFcTraceRouteObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1))
hpnicfFcTraceRouteConfigurations = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1))
hpnicfFcTraceRouteResults = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2))
hpnicfFcTraceRouteNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 3))
hpnicfFcTraceRouteNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 3, 0))
hpnicfFcTraceRouteTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1), )
if mibBuilder.loadTexts: hpnicfFcTraceRouteTable.setStatus('current')
hpnicfFcTraceRouteEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1), ).setIndexNames((0, "HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteIndex"))
if mibBuilder.loadTexts: hpnicfFcTraceRouteEntry.setStatus('current')
hpnicfFcTraceRouteIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: hpnicfFcTraceRouteIndex.setStatus('current')
hpnicfFcTraceRouteVsan = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 2), HpnicfFcVsanIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteVsan.setStatus('current')
hpnicfFcTraceRouteAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 3), HpnicfFcAddressType().clone('fcid')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteAddressType.setStatus('current')
hpnicfFcTraceRouteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 4), HpnicfFcAddress()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteAddress.setStatus('current')
hpnicfFcTraceRouteTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteTimeout.setStatus('current')
hpnicfFcTraceRouteAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 6), HpnicfFcStartOper().clone('disable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteAdminStatus.setStatus('current')
hpnicfFcTraceRouteOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("inProgress", 1), ("success", 2), ("partialSuccess", 3), ("failure", 4), ("disabled", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcTraceRouteOperStatus.setStatus('current')
hpnicfFcTraceRouteAgeInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(500, 900)).clone(500)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteAgeInterval.setStatus('current')
hpnicfFcTraceRouteTrapOnCompletion = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteTrapOnCompletion.setStatus('current')
hpnicfFcTraceRouteRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 1, 1, 1, 10), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: hpnicfFcTraceRouteRowStatus.setStatus('current')
hpnicfFcTraceRouteHopsTable = MibTable((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2, 1), )
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsTable.setStatus('current')
hpnicfFcTraceRouteHopsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2, 1, 1), ).setIndexNames((0, "HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteIndex"), (0, "HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteHopsIndex"))
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsEntry.setStatus('current')
hpnicfFcTraceRouteHopsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2, 1, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsIndex.setStatus('current')
hpnicfFcTraceRouteHopsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 2, 1, 1, 2), HpnicfFcNameId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: hpnicfFcTraceRouteHopsAddr.setStatus('current')
hpnicfFcTraceRouteCompletionNotify = NotificationType((1, 3, 6, 1, 4, 1, 11, 2, 14, 11, 15, 2, 127, 4, 1, 3, 0, 1)).setObjects(("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteIndex"), ("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteVsan"), ("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteAddressType"), ("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteAddress"), ("HPN-ICF-FC-TRACE-ROUTE-MIB", "hpnicfFcTraceRouteOperStatus"))
if mibBuilder.loadTexts: hpnicfFcTraceRouteCompletionNotify.setStatus('current')
mibBuilder.exportSymbols("HPN-ICF-FC-TRACE-ROUTE-MIB", hpnicfFcTraceRouteAgeInterval=hpnicfFcTraceRouteAgeInterval, hpnicfFcTraceRouteAddress=hpnicfFcTraceRouteAddress, hpnicfFcTraceRouteHopsIndex=hpnicfFcTraceRouteHopsIndex, hpnicfFcTraceRouteVsan=hpnicfFcTraceRouteVsan, hpnicfFcTraceRouteConfigurations=hpnicfFcTraceRouteConfigurations, hpnicfFcTraceRouteHopsAddr=hpnicfFcTraceRouteHopsAddr, hpnicfFcTraceRouteHopsTable=hpnicfFcTraceRouteHopsTable, hpnicfFcTraceRouteObjects=hpnicfFcTraceRouteObjects, hpnicfFcTraceRouteEntry=hpnicfFcTraceRouteEntry, hpnicfFcTraceRouteIndex=hpnicfFcTraceRouteIndex, hpnicfFcTraceRouteRowStatus=hpnicfFcTraceRouteRowStatus, hpnicfFcTraceRouteTimeout=hpnicfFcTraceRouteTimeout, hpnicfFcTraceRouteCompletionNotify=hpnicfFcTraceRouteCompletionNotify, hpnicfFcTraceRouteTrapOnCompletion=hpnicfFcTraceRouteTrapOnCompletion, hpnicfFcTraceRouteAddressType=hpnicfFcTraceRouteAddressType, hpnicfFcTraceRouteHopsEntry=hpnicfFcTraceRouteHopsEntry, hpnicfFcTraceRouteTable=hpnicfFcTraceRouteTable, hpnicfFcTraceRouteNotifications=hpnicfFcTraceRouteNotifications, hpnicfFcTraceRouteAdminStatus=hpnicfFcTraceRouteAdminStatus, hpnicfFcTraceRouteResults=hpnicfFcTraceRouteResults, hpnicfFcTraceRouteNotifyPrefix=hpnicfFcTraceRouteNotifyPrefix, PYSNMP_MODULE_ID=hpnicfFcTraceRoute, hpnicfFcTraceRoute=hpnicfFcTraceRoute, hpnicfFcTraceRouteOperStatus=hpnicfFcTraceRouteOperStatus)
