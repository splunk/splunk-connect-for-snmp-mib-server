#
# PySNMP MIB module INTEL-IPX-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INTEL-IPX-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 19:43:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion")
mib2ext, = mibBuilder.importSymbols("INTEL-GEN-MIB", "mib2ext")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, ModuleIdentity, Counter32, Unsigned32, TimeTicks, Gauge32, Bits, Integer32, MibIdentifier, ObjectIdentity, IpAddress, NotificationType, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ModuleIdentity", "Counter32", "Unsigned32", "TimeTicks", "Gauge32", "Bits", "Integer32", "MibIdentifier", "ObjectIdentity", "IpAddress", "NotificationType", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
ipx = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 22))
ipxControl = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 22, 1))
ipxConf = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 22, 2))
ipxStatus = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 22, 3))
ipxCount = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 22, 4))
ipxRip = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 22, 5))
ipxSap = MibIdentifier((1, 3, 6, 1, 4, 1, 343, 6, 22, 6))
class FltDirection(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("rx", 1), ("tx", 2))

class IpxAddr(OctetString):
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(12, 12)
    fixedLength = 12

class FltAction(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("pass", 1), ("discard", 2), ("disabled", 3))

ipxControlCommand = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("flushRipSap", 1), ("updateRipSap", 2)))).setMaxAccess("writeonly")
if mibBuilder.loadTexts: ipxControlCommand.setStatus('mandatory')
ipxLinkConfTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1), )
if mibBuilder.loadTexts: ipxLinkConfTable.setStatus('mandatory')
ipxLinkConfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1), ).setIndexNames((0, "INTEL-IPX-MIB", "ipxLinkConfIpxLinkIndex"))
if mibBuilder.loadTexts: ipxLinkConfEntry.setStatus('mandatory')
ipxLinkConfIpxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkConfIpxLinkIndex.setStatus('mandatory')
ipxLinkConfRoutingProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ripAndSap", 1), ("staticOrNone", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfRoutingProtocol.setStatus('mandatory')
ipxLinkConfNumbered = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfNumbered.setStatus('mandatory')
ipxLinkConfNet = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfNet.setStatus('mandatory')
ipxLinkConfFrameType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 4, 5, 16))).clone(namedValues=NamedValues(("type", 1), ("ieee8022", 2), ("snap", 4), ("ieee8023", 5), ("wan", 16)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfFrameType.setStatus('mandatory')
ipxLinkConfFrameParam = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkConfFrameParam.setStatus('mandatory')
ipxLinkConfIpxWanNegotiation = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfIpxWanNegotiation.setStatus('mandatory')
ipxLinkConfRipUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfRipUpdateInterval.setStatus('mandatory')
ipxLinkConfRipTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfRipTrigger.setStatus('mandatory')
ipxLinkConfSapUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 10), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfSapUpdateInterval.setStatus('mandatory')
ipxLinkConfSapTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfSapTrigger.setStatus('mandatory')
ipxLinkConfAutomaticDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfAutomaticDelay.setStatus('mandatory')
ipxLinkConfDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfDelay.setStatus('mandatory')
ipxLinkConfSpxSpoofing = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfSpxSpoofing.setStatus('mandatory')
ipxLinkConfSpxSessionTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 15), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfSpxSessionTimeout.setStatus('mandatory')
ipxLinkConfType20Broadcast = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfType20Broadcast.setStatus('mandatory')
ipxLinkConfWatchdogSpoofing = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfWatchdogSpoofing.setStatus('mandatory')
ipxLinkConfRipFltRxDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 18), FltAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfRipFltRxDefaultAction.setStatus('mandatory')
ipxLinkConfRipFltTxDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 19), FltAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfRipFltTxDefaultAction.setStatus('mandatory')
ipxLinkConfSapFltRxDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 20), FltAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfSapFltRxDefaultAction.setStatus('mandatory')
ipxLinkConfSapFltTxDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 21), FltAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfSapFltTxDefaultAction.setStatus('mandatory')
ipxLinkConfDataFltRxDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 22), FltAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfDataFltRxDefaultAction.setStatus('mandatory')
ipxLinkConfDataFltTxDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 23), FltAction()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfDataFltTxDefaultAction.setStatus('mandatory')
ipxLinkConfDataFilters = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfDataFilters.setStatus('mandatory')
ipxLinkConfCreateObj = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 25), OctetString().subtype(subtypeSpec=ValueSizeConstraint(34, 34)).setFixedLength(34)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfCreateObj.setStatus('mandatory')
ipxLinkConfDeleteObj = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("delete", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxLinkConfDeleteObj.setStatus('mandatory')
ipxRipFltTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 2), )
if mibBuilder.loadTexts: ipxRipFltTable.setStatus('mandatory')
ipxRipFltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 2, 1), ).setIndexNames((0, "INTEL-IPX-MIB", "ipxRipFltIpxLinkIndex"), (0, "INTEL-IPX-MIB", "ipxRipFltDirection"), (0, "INTEL-IPX-MIB", "ipxRipFltNumber"))
if mibBuilder.loadTexts: ipxRipFltEntry.setStatus('mandatory')
ipxRipFltIpxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipFltIpxLinkIndex.setStatus('mandatory')
ipxRipFltDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 2, 1, 2), FltDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipFltDirection.setStatus('mandatory')
ipxRipFltNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 2, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipFltNumber.setStatus('mandatory')
ipxRipFltAction = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 2, 1, 4), FltAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipFltAction.setStatus('mandatory')
ipxRipFltNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 2, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipFltNetworkAddress.setStatus('mandatory')
ipxRipFltNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 2, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipFltNetworkMask.setStatus('mandatory')
ipxSapFltTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3), )
if mibBuilder.loadTexts: ipxSapFltTable.setStatus('mandatory')
ipxSapFltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1), ).setIndexNames((0, "INTEL-IPX-MIB", "ipxSapFltIpxLinkIndex"), (0, "INTEL-IPX-MIB", "ipxSapFltDirection"), (0, "INTEL-IPX-MIB", "ipxSapFltNumber"))
if mibBuilder.loadTexts: ipxSapFltEntry.setStatus('mandatory')
ipxSapFltIpxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapFltIpxLinkIndex.setStatus('mandatory')
ipxSapFltDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1, 2), FltDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapFltDirection.setStatus('mandatory')
ipxSapFltNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapFltNumber.setStatus('mandatory')
ipxSapFltAction = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1, 4), FltAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapFltAction.setStatus('mandatory')
ipxSapFltNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapFltNetworkAddress.setStatus('mandatory')
ipxSapFltNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapFltNetworkMask.setStatus('mandatory')
ipxSapFltNodeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapFltNodeAddress.setStatus('mandatory')
ipxSapFltServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapFltServiceType.setStatus('mandatory')
ipxSapFltServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 3, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(48, 48)).setFixedLength(48)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapFltServerName.setStatus('mandatory')
ipxDataFltTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4), )
if mibBuilder.loadTexts: ipxDataFltTable.setStatus('mandatory')
ipxDataFltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1), ).setIndexNames((0, "INTEL-IPX-MIB", "ipxDataFltIpxLinkIndex"), (0, "INTEL-IPX-MIB", "ipxDataFltDirection"), (0, "INTEL-IPX-MIB", "ipxDataFltNumber"))
if mibBuilder.loadTexts: ipxDataFltEntry.setStatus('mandatory')
ipxDataFltIpxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltIpxLinkIndex.setStatus('mandatory')
ipxDataFltDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 2), FltDirection()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltDirection.setStatus('mandatory')
ipxDataFltNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltNumber.setStatus('mandatory')
ipxDataFltAction = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 4), FltAction()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltAction.setStatus('mandatory')
ipxDataFltDstNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltDstNetworkAddress.setStatus('mandatory')
ipxDataFltDstNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltDstNetworkMask.setStatus('mandatory')
ipxDataFltDstNodeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltDstNodeAddress.setStatus('mandatory')
ipxDataFltDstSocketFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltDstSocketFilter.setStatus('mandatory')
ipxDataFltDstSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltDstSocket.setStatus('mandatory')
ipxDataFltSrcNetworkAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltSrcNetworkAddress.setStatus('mandatory')
ipxDataFltSrcNetworkMask = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 11), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltSrcNetworkMask.setStatus('mandatory')
ipxDataFltSrcNodeAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltSrcNodeAddress.setStatus('mandatory')
ipxDataFltSrcSocketFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltSrcSocketFilter.setStatus('mandatory')
ipxDataFltSrcSocket = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltSrcSocket.setStatus('mandatory')
ipxDataFltPacketTypeFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltPacketTypeFilter.setStatus('mandatory')
ipxDataFltPacketType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 16), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltPacketType.setStatus('mandatory')
ipxDataFltHits = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 4, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxDataFltHits.setStatus('mandatory')
ipxConfAutoIntNetNumber = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("enabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxConfAutoIntNetNumber.setStatus('mandatory')
ipxConfIntNetNumber = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 2, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ipxConfIntNetNumber.setStatus('mandatory')
ipxLinkMonTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 1), )
if mibBuilder.loadTexts: ipxLinkMonTable.setStatus('mandatory')
ipxLinkMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 1, 1), ).setIndexNames((0, "INTEL-IPX-MIB", "ipxLinkMonIpxLinkIndex"))
if mibBuilder.loadTexts: ipxLinkMonEntry.setStatus('mandatory')
ipxLinkMonIpxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkMonIpxLinkIndex.setStatus('mandatory')
ipxLinkMonIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkMonIfIndex.setStatus('mandatory')
ipxLinkMonState = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("down", 1), ("up", 2), ("negotiating", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkMonState.setStatus('mandatory')
ipxLinkMonDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkMonDelay.setStatus('mandatory')
ipxLinkMonMtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkMonMtuSize.setStatus('mandatory')
ipxStatusConfigTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxStatusConfigTimeStamp.setStatus('mandatory')
ipxStatusReachableNets = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxStatusReachableNets.setStatus('mandatory')
ipxStatusDeadNets = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxStatusDeadNets.setStatus('mandatory')
ipxStatusReachableServices = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxStatusReachableServices.setStatus('mandatory')
ipxStatusDeadServices = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxStatusDeadServices.setStatus('mandatory')
ipxStatusLinkTimeStamp = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 3, 7), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxStatusLinkTimeStamp.setStatus('mandatory')
ipxLinkCntTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1), )
if mibBuilder.loadTexts: ipxLinkCntTable.setStatus('mandatory')
ipxLinkCntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1), ).setIndexNames((0, "INTEL-IPX-MIB", "ipxLinkCntIpxLinkIndex"))
if mibBuilder.loadTexts: ipxLinkCntEntry.setStatus('mandatory')
ipxLinkCntIpxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntIpxLinkIndex.setStatus('mandatory')
ipxLinkCntRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxTotal.setStatus('mandatory')
ipxLinkCntTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxTotal.setStatus('mandatory')
ipxLinkCntTxFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxFailed.setStatus('mandatory')
ipxLinkCntRxFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxFiltered.setStatus('mandatory')
ipxLinkCntTxFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxFiltered.setStatus('mandatory')
ipxLinkCntRxTooManyHops = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxTooManyHops.setStatus('mandatory')
ipxLinkCntRxHeaderErr = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxHeaderErr.setStatus('mandatory')
ipxLinkCntRxSapReq = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxSapReq.setStatus('mandatory')
ipxLinkCntTxSapReq = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxSapReq.setStatus('mandatory')
ipxLinkCntRxSapResp = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxSapResp.setStatus('mandatory')
ipxLinkCntTxSapReply = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxSapReply.setStatus('mandatory')
ipxLinkCntRxSapInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxSapInvalid.setStatus('mandatory')
ipxLinkCntRxRipReq = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxRipReq.setStatus('mandatory')
ipxLinkCntTxRipReq = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxRipReq.setStatus('mandatory')
ipxLinkCntRxRipResp = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxRipResp.setStatus('mandatory')
ipxLinkCntTxRipReply = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxRipReply.setStatus('mandatory')
ipxLinkCntRxRipInvalid = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxRipInvalid.setStatus('mandatory')
ipxLinkCntRxType20 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxType20.setStatus('mandatory')
ipxLinkCntTxType20 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxType20.setStatus('mandatory')
ipxLinkCntType20Disc = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntType20Disc.setStatus('mandatory')
ipxLinkCntNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntNoRoute.setStatus('mandatory')
ipxLinkCntRxDiscarded = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxDiscarded.setStatus('mandatory')
ipxLinkCntSpxSpoofed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntSpxSpoofed.setStatus('mandatory')
ipxLinkCntWatchdogSpoofed = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntWatchdogSpoofed.setStatus('mandatory')
ipxLinkCntForwarded = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntForwarded.setStatus('mandatory')
ipxLinkCntCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntCacheHits.setStatus('mandatory')
ipxLinkCntSPXCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntSPXCacheHits.setStatus('mandatory')
ipxLinkCntRxDefDataFltHits = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntRxDefDataFltHits.setStatus('mandatory')
ipxLinkCntTxDefDataFltHits = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 1, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkCntTxDefDataFltHits.setStatus('mandatory')
ipxLinkByteCntTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2), )
if mibBuilder.loadTexts: ipxLinkByteCntTable.setStatus('mandatory')
ipxLinkByteCntEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1), ).setIndexNames((0, "INTEL-IPX-MIB", "ipxLinkByteCntIpxLinkIndex"))
if mibBuilder.loadTexts: ipxLinkByteCntEntry.setStatus('mandatory')
ipxLinkByteCntIpxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntIpxLinkIndex.setStatus('mandatory')
ipxLinkByteCntRxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntRxTotal.setStatus('mandatory')
ipxLinkByteCntTxTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntTxTotal.setStatus('mandatory')
ipxLinkByteCntRxOther = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntRxOther.setStatus('mandatory')
ipxLinkByteCntTxOther = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntTxOther.setStatus('mandatory')
ipxLinkByteCntRxNcp = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntRxNcp.setStatus('mandatory')
ipxLinkByteCntTxNcp = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntTxNcp.setStatus('mandatory')
ipxLinkByteCntRxSpx = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntRxSpx.setStatus('mandatory')
ipxLinkByteCntTxSpx = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntTxSpx.setStatus('mandatory')
ipxLinkByteCntRxRip = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntRxRip.setStatus('mandatory')
ipxLinkByteCntTxRip = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntTxRip.setStatus('mandatory')
ipxLinkByteCntRxSap = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntRxSap.setStatus('mandatory')
ipxLinkByteCntTxSap = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntTxSap.setStatus('mandatory')
ipxLinkByteCntRxType20 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntRxType20.setStatus('mandatory')
ipxLinkByteCntTxType20 = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxLinkByteCntTxType20.setStatus('mandatory')
ipxCountRxTotal = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxTotal.setStatus('mandatory')
ipxCountTxTotal = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountTxTotal.setStatus('mandatory')
ipxCountTxFailed = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountTxFailed.setStatus('mandatory')
ipxCountRxFiltered = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxFiltered.setStatus('mandatory')
ipxCountTxFiltered = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountTxFiltered.setStatus('mandatory')
ipxCountRxTooManyHops = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxTooManyHops.setStatus('mandatory')
ipxCountRxHeaderErr = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxHeaderErr.setStatus('mandatory')
ipxCountRxSapReq = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxSapReq.setStatus('mandatory')
ipxCountTxSapReq = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountTxSapReq.setStatus('mandatory')
ipxCountRxSapResp = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxSapResp.setStatus('mandatory')
ipxCountTxSapReply = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountTxSapReply.setStatus('mandatory')
ipxCountRxSapInvalid = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxSapInvalid.setStatus('mandatory')
ipxCountRxRipReq = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxRipReq.setStatus('mandatory')
ipxCountTxRipReq = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountTxRipReq.setStatus('mandatory')
ipxCountRxRipResp = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxRipResp.setStatus('mandatory')
ipxCountTxRipReply = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountTxRipReply.setStatus('mandatory')
ipxCountRxRipInvalid = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxRipInvalid.setStatus('mandatory')
ipxCountRxType20 = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxType20.setStatus('mandatory')
ipxCountTxType20 = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountTxType20.setStatus('mandatory')
ipxCountType20Disc = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountType20Disc.setStatus('mandatory')
ipxCountNoRoute = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountNoRoute.setStatus('mandatory')
ipxCountRxDiscarded = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 24), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountRxDiscarded.setStatus('mandatory')
ipxCountSpxSpoofed = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountSpxSpoofed.setStatus('mandatory')
ipxCountWatchdogSpoofed = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountWatchdogSpoofed.setStatus('mandatory')
ipxCountForwarded = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountForwarded.setStatus('mandatory')
ipxCountCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 28), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountCacheHits.setStatus('mandatory')
ipxCountSPXCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 343, 6, 22, 4, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxCountSPXCacheHits.setStatus('mandatory')
ipxRipTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1), )
if mibBuilder.loadTexts: ipxRipTable.setStatus('mandatory')
ipxRipEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1), ).setIndexNames((0, "INTEL-IPX-MIB", "ipxRipNetwork"))
if mibBuilder.loadTexts: ipxRipEntry.setStatus('mandatory')
ipxRipNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipNetwork.setStatus('mandatory')
ipxRipIpxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipIpxLinkIndex.setStatus('mandatory')
ipxRipIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipIfIndex.setStatus('mandatory')
ipxRipProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("rip", 3), ("nlsp", 4), ("static", 5), ("staticBackup", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipProtocol.setStatus('mandatory')
ipxRipDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipDelay.setStatus('mandatory')
ipxRipHops = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipHops.setStatus('mandatory')
ipxRipAge = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipAge.setStatus('mandatory')
ipxRipIpxAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1, 8), IpxAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipIpxAddr.setStatus('mandatory')
ipxRipStaticCount = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 5, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxRipStaticCount.setStatus('mandatory')
ipxSapTable = MibTable((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1), )
if mibBuilder.loadTexts: ipxSapTable.setStatus('mandatory')
ipxSapEntry = MibTableRow((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1), ).setIndexNames((0, "INTEL-IPX-MIB", "ipxSapServerAddr"), (0, "INTEL-IPX-MIB", "ipxSapServerType"))
if mibBuilder.loadTexts: ipxSapEntry.setStatus('mandatory')
ipxSapServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1, 1), IpxAddr()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapServerAddr.setStatus('mandatory')
ipxSapServerType = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapServerType.setStatus('mandatory')
ipxSapServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(48, 48)).setFixedLength(48)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapServerName.setStatus('mandatory')
ipxSapIpxLinkIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapIpxLinkIndex.setStatus('mandatory')
ipxSapIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapIfIndex.setStatus('mandatory')
ipxSapAge = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapAge.setStatus('mandatory')
ipxSapProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(5, 6))).clone(namedValues=NamedValues(("static", 5), ("sap", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapProtocol.setStatus('mandatory')
ipxSapHops = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapHops.setStatus('mandatory')
ipxSapStaticCount = MibTableColumn((1, 3, 6, 1, 4, 1, 343, 6, 22, 6, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ipxSapStaticCount.setStatus('mandatory')
mibBuilder.exportSymbols("INTEL-IPX-MIB", ipxSapFltDirection=ipxSapFltDirection, ipxLinkConfIpxWanNegotiation=ipxLinkConfIpxWanNegotiation, ipxSapFltAction=ipxSapFltAction, ipxLinkConfAutomaticDelay=ipxLinkConfAutomaticDelay, ipx=ipx, ipxLinkCntRxHeaderErr=ipxLinkCntRxHeaderErr, ipxLinkConfRipFltRxDefaultAction=ipxLinkConfRipFltRxDefaultAction, ipxLinkCntRxDiscarded=ipxLinkCntRxDiscarded, ipxLinkCntCacheHits=ipxLinkCntCacheHits, ipxLinkByteCntRxNcp=ipxLinkByteCntRxNcp, IpxAddr=IpxAddr, ipxRipIfIndex=ipxRipIfIndex, ipxRipDelay=ipxRipDelay, ipxLinkByteCntTxSap=ipxLinkByteCntTxSap, ipxLinkByteCntTxType20=ipxLinkByteCntTxType20, ipxSapTable=ipxSapTable, ipxLinkConfRipTrigger=ipxLinkConfRipTrigger, ipxDataFltDirection=ipxDataFltDirection, ipxConf=ipxConf, ipxCountRxRipReq=ipxCountRxRipReq, ipxLinkCntWatchdogSpoofed=ipxLinkCntWatchdogSpoofed, ipxCountRxHeaderErr=ipxCountRxHeaderErr, ipxLinkCntTable=ipxLinkCntTable, ipxLinkCntTxRipReply=ipxLinkCntTxRipReply, ipxSapServerName=ipxSapServerName, ipxRipEntry=ipxRipEntry, ipxRipHops=ipxRipHops, ipxDataFltDstNetworkMask=ipxDataFltDstNetworkMask, ipxRipFltNetworkMask=ipxRipFltNetworkMask, ipxLinkCntTxFiltered=ipxLinkCntTxFiltered, ipxDataFltIpxLinkIndex=ipxDataFltIpxLinkIndex, ipxDataFltDstNetworkAddress=ipxDataFltDstNetworkAddress, ipxCountRxSapResp=ipxCountRxSapResp, ipxLinkByteCntRxOther=ipxLinkByteCntRxOther, ipxRipFltNetworkAddress=ipxRipFltNetworkAddress, ipxLinkConfNet=ipxLinkConfNet, ipxLinkConfSapUpdateInterval=ipxLinkConfSapUpdateInterval, ipxLinkConfSpxSessionTimeout=ipxLinkConfSpxSessionTimeout, ipxStatus=ipxStatus, ipxCountForwarded=ipxCountForwarded, ipxCountTxSapReq=ipxCountTxSapReq, ipxControlCommand=ipxControlCommand, ipxSapEntry=ipxSapEntry, ipxDataFltSrcNodeAddress=ipxDataFltSrcNodeAddress, ipxSapFltNumber=ipxSapFltNumber, ipxCountSPXCacheHits=ipxCountSPXCacheHits, ipxLinkConfType20Broadcast=ipxLinkConfType20Broadcast, ipxLinkCntTxTotal=ipxLinkCntTxTotal, ipxLinkConfTable=ipxLinkConfTable, ipxLinkMonIfIndex=ipxLinkMonIfIndex, ipxRipFltEntry=ipxRipFltEntry, ipxLinkConfSapFltTxDefaultAction=ipxLinkConfSapFltTxDefaultAction, ipxLinkMonState=ipxLinkMonState, ipxLinkConfWatchdogSpoofing=ipxLinkConfWatchdogSpoofing, ipxCountRxRipResp=ipxCountRxRipResp, ipxSapFltServiceType=ipxSapFltServiceType, ipxLinkConfIpxLinkIndex=ipxLinkConfIpxLinkIndex, ipxLinkByteCntRxRip=ipxLinkByteCntRxRip, ipxLinkConfDeleteObj=ipxLinkConfDeleteObj, ipxSapAge=ipxSapAge, ipxDataFltSrcSocketFilter=ipxDataFltSrcSocketFilter, ipxCountTxTotal=ipxCountTxTotal, ipxLinkCntRxFiltered=ipxLinkCntRxFiltered, ipxSapFltIpxLinkIndex=ipxSapFltIpxLinkIndex, FltAction=FltAction, ipxRipFltTable=ipxRipFltTable, ipxCount=ipxCount, ipxDataFltSrcNetworkMask=ipxDataFltSrcNetworkMask, ipxStatusReachableServices=ipxStatusReachableServices, ipxLinkByteCntRxSpx=ipxLinkByteCntRxSpx, ipxLinkCntTxDefDataFltHits=ipxLinkCntTxDefDataFltHits, ipxRipFltDirection=ipxRipFltDirection, FltDirection=FltDirection, ipxCountRxRipInvalid=ipxCountRxRipInvalid, ipxLinkCntTxFailed=ipxLinkCntTxFailed, ipxLinkCntIpxLinkIndex=ipxLinkCntIpxLinkIndex, ipxLinkCntRxRipInvalid=ipxLinkCntRxRipInvalid, ipxLinkByteCntTxOther=ipxLinkByteCntTxOther, ipxLinkConfDataFilters=ipxLinkConfDataFilters, ipxCountType20Disc=ipxCountType20Disc, ipxSapFltNetworkAddress=ipxSapFltNetworkAddress, ipxCountRxSapReq=ipxCountRxSapReq, ipxSapIfIndex=ipxSapIfIndex, ipxCountTxFailed=ipxCountTxFailed, ipxControl=ipxControl, ipxSap=ipxSap, ipxLinkConfRoutingProtocol=ipxLinkConfRoutingProtocol, ipxLinkByteCntEntry=ipxLinkByteCntEntry, ipxCountTxType20=ipxCountTxType20, ipxCountSpxSpoofed=ipxCountSpxSpoofed, ipxRipStaticCount=ipxRipStaticCount, ipxDataFltPacketType=ipxDataFltPacketType, ipxLinkCntRxTotal=ipxLinkCntRxTotal, ipxSapFltNodeAddress=ipxSapFltNodeAddress, ipxLinkByteCntTable=ipxLinkByteCntTable, ipxLinkByteCntIpxLinkIndex=ipxLinkByteCntIpxLinkIndex, ipxLinkConfDataFltRxDefaultAction=ipxLinkConfDataFltRxDefaultAction, ipxCountTxFiltered=ipxCountTxFiltered, ipxRipTable=ipxRipTable, ipxConfIntNetNumber=ipxConfIntNetNumber, ipxRip=ipxRip, ipxLinkCntEntry=ipxLinkCntEntry, ipxRipFltAction=ipxRipFltAction, ipxLinkMonTable=ipxLinkMonTable, ipxLinkCntRxSapReq=ipxLinkCntRxSapReq, ipxDataFltSrcNetworkAddress=ipxDataFltSrcNetworkAddress, ipxLinkConfNumbered=ipxLinkConfNumbered, ipxLinkCntTxType20=ipxLinkCntTxType20, ipxLinkCntRxDefDataFltHits=ipxLinkCntRxDefDataFltHits, ipxDataFltEntry=ipxDataFltEntry, ipxRipFltIpxLinkIndex=ipxRipFltIpxLinkIndex, ipxLinkByteCntTxTotal=ipxLinkByteCntTxTotal, ipxDataFltSrcSocket=ipxDataFltSrcSocket, ipxLinkByteCntTxRip=ipxLinkByteCntTxRip, ipxSapServerAddr=ipxSapServerAddr, ipxDataFltDstNodeAddress=ipxDataFltDstNodeAddress, ipxLinkConfDelay=ipxLinkConfDelay, ipxStatusConfigTimeStamp=ipxStatusConfigTimeStamp, ipxSapFltNetworkMask=ipxSapFltNetworkMask, ipxStatusReachableNets=ipxStatusReachableNets, ipxSapFltTable=ipxSapFltTable, ipxSapFltEntry=ipxSapFltEntry, ipxSapServerType=ipxSapServerType, ipxLinkCntRxTooManyHops=ipxLinkCntRxTooManyHops, ipxCountRxSapInvalid=ipxCountRxSapInvalid, ipxRipProtocol=ipxRipProtocol, ipxLinkByteCntRxSap=ipxLinkByteCntRxSap, ipxLinkCntTxSapReply=ipxLinkCntTxSapReply, ipxLinkConfSpxSpoofing=ipxLinkConfSpxSpoofing, ipxRipFltNumber=ipxRipFltNumber, ipxDataFltTable=ipxDataFltTable, ipxRipIpxAddr=ipxRipIpxAddr, ipxStatusDeadServices=ipxStatusDeadServices, ipxCountNoRoute=ipxCountNoRoute, ipxDataFltNumber=ipxDataFltNumber, ipxLinkCntRxSapResp=ipxLinkCntRxSapResp, ipxDataFltDstSocket=ipxDataFltDstSocket, ipxLinkCntForwarded=ipxLinkCntForwarded, ipxLinkCntRxSapInvalid=ipxLinkCntRxSapInvalid, ipxLinkCntTxRipReq=ipxLinkCntTxRipReq, ipxCountRxTotal=ipxCountRxTotal, ipxLinkCntSPXCacheHits=ipxLinkCntSPXCacheHits, ipxLinkConfSapTrigger=ipxLinkConfSapTrigger, ipxCountRxType20=ipxCountRxType20, ipxSapProtocol=ipxSapProtocol, ipxStatusLinkTimeStamp=ipxStatusLinkTimeStamp, ipxSapIpxLinkIndex=ipxSapIpxLinkIndex, ipxCountRxTooManyHops=ipxCountRxTooManyHops, ipxRipNetwork=ipxRipNetwork, ipxDataFltHits=ipxDataFltHits, ipxStatusDeadNets=ipxStatusDeadNets, ipxLinkByteCntRxTotal=ipxLinkByteCntRxTotal, ipxRipIpxLinkIndex=ipxRipIpxLinkIndex, ipxLinkConfDataFltTxDefaultAction=ipxLinkConfDataFltTxDefaultAction, ipxCountTxRipReq=ipxCountTxRipReq, ipxLinkByteCntTxSpx=ipxLinkByteCntTxSpx, ipxCountWatchdogSpoofed=ipxCountWatchdogSpoofed, ipxLinkByteCntTxNcp=ipxLinkByteCntTxNcp, ipxLinkConfCreateObj=ipxLinkConfCreateObj, ipxConfAutoIntNetNumber=ipxConfAutoIntNetNumber, ipxLinkMonMtuSize=ipxLinkMonMtuSize, ipxCountRxFiltered=ipxCountRxFiltered, ipxCountRxDiscarded=ipxCountRxDiscarded, ipxSapStaticCount=ipxSapStaticCount, ipxRipAge=ipxRipAge, ipxLinkConfSapFltRxDefaultAction=ipxLinkConfSapFltRxDefaultAction, ipxLinkMonDelay=ipxLinkMonDelay, ipxCountTxSapReply=ipxCountTxSapReply, ipxLinkConfEntry=ipxLinkConfEntry, ipxLinkCntNoRoute=ipxLinkCntNoRoute, ipxSapHops=ipxSapHops, ipxLinkCntType20Disc=ipxLinkCntType20Disc, ipxSapFltServerName=ipxSapFltServerName, ipxLinkCntTxSapReq=ipxLinkCntTxSapReq, ipxCountCacheHits=ipxCountCacheHits, ipxLinkConfFrameParam=ipxLinkConfFrameParam, ipxLinkConfRipFltTxDefaultAction=ipxLinkConfRipFltTxDefaultAction, ipxLinkCntRxRipResp=ipxLinkCntRxRipResp, ipxLinkMonEntry=ipxLinkMonEntry, ipxLinkCntSpxSpoofed=ipxLinkCntSpxSpoofed, ipxDataFltPacketTypeFilter=ipxDataFltPacketTypeFilter, ipxDataFltAction=ipxDataFltAction, ipxLinkConfFrameType=ipxLinkConfFrameType, ipxLinkCntRxType20=ipxLinkCntRxType20, ipxLinkCntRxRipReq=ipxLinkCntRxRipReq, ipxLinkConfRipUpdateInterval=ipxLinkConfRipUpdateInterval, ipxCountTxRipReply=ipxCountTxRipReply, ipxLinkMonIpxLinkIndex=ipxLinkMonIpxLinkIndex, ipxDataFltDstSocketFilter=ipxDataFltDstSocketFilter, ipxLinkByteCntRxType20=ipxLinkByteCntRxType20)
