#
# PySNMP MIB module F10-FIPSNOOPING-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/F10-FIPSNOOPING-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:57:19 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ValueSizeConstraint")
f10Mgmt, = mibBuilder.importSymbols("FORCE10-SMI", "f10Mgmt")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
dot1qVlanIndex, = mibBuilder.importSymbols("Q-BRIDGE-MIB", "dot1qVlanIndex")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
MibIdentifier, NotificationType, Bits, Counter64, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, ObjectIdentity, Counter32, IpAddress, TimeTicks, Unsigned32, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "NotificationType", "Bits", "Counter64", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "ObjectIdentity", "Counter32", "IpAddress", "TimeTicks", "Unsigned32", "ModuleIdentity", "Integer32")
TextualConvention, MacAddress, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "MacAddress", "DisplayString", "DateAndTime")
dF10FipSnooping = ModuleIdentity((1, 3, 6, 1, 4, 1, 6027, 3, 22))
dF10FipSnooping.setRevisions(('2011-12-08 00:00',))
if mibBuilder.loadTexts: dF10FipSnooping.setLastUpdated('201112080000Z')
if mibBuilder.loadTexts: dF10FipSnooping.setOrganization('Dell Inc.')
dF10FIPSCfgGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1))
dF10FIPSAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dF10FIPSAdminMode.setStatus('current')
dF10FIPSFCMAP = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3).clone('0x0EFC00')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dF10FIPSFCMAP.setStatus('current')
dF10FIPSStatsClear = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("ignore", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dF10FIPSStatsClear.setStatus('current')
dF10FIPSVlanCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 3), )
if mibBuilder.loadTexts: dF10FIPSVlanCfgTable.setStatus('current')
dF10FIPSVlanCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 3, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: dF10FIPSVlanCfgEntry.setStatus('current')
dF10FIPSVlanAdminMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disable", 0), ("enable", 1))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dF10FIPSVlanAdminMode.setStatus('current')
dF10FIPSVlanFCMAP = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 3, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3).clone('0x0EFC00')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dF10FIPSVlanFCMAP.setStatus('current')
dF10FIPSVlanStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("ignore", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dF10FIPSVlanStatsClear.setStatus('current')
dF10FIPSIntfTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 4), )
if mibBuilder.loadTexts: dF10FIPSIntfTable.setStatus('current')
dF10FIPSIntfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 4, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dF10FIPSIntfEntry.setStatus('current')
dF10FIPSIntfPortModeFcf = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("disable", 0), ("fcf", 1), ("fcoetrusted", 2))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dF10FIPSIntfPortModeFcf.setStatus('current')
dF10FIPSIntfStatsClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 1, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("clear", 0), ("ignore", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dF10FIPSIntfStatsClear.setStatus('current')
dF10FIPSStatusGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2))
dF10FIPSSessionTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1), )
if mibBuilder.loadTexts: dF10FIPSSessionTable.setStatus('current')
dF10FIPSSessionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1), ).setIndexNames((0, "F10-FIPSNOOPING-MIB", "dF10FIPSSessionVlanIndex"), (0, "F10-FIPSNOOPING-MIB", "dF10FIPSSessionFCFMacAddr"), (0, "F10-FIPSNOOPING-MIB", "dF10FIPSSessionENodeMacAddr"), (0, "F10-FIPSNOOPING-MIB", "dF10FIPSSessionLoginType"), (0, "F10-FIPSNOOPING-MIB", "dF10FIPSFCoEMacAddr"), (0, "F10-FIPSNOOPING-MIB", "dF10FIPSSessionTentativeIndex"), (0, "F10-FIPSNOOPING-MIB", "dF10FIPSSessionFCID"))
if mibBuilder.loadTexts: dF10FIPSSessionEntry.setStatus('current')
dF10FIPSSessionVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dF10FIPSSessionVlanIndex.setStatus('current')
dF10FIPSSessionFCFMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 2), MacAddress())
if mibBuilder.loadTexts: dF10FIPSSessionFCFMacAddr.setStatus('current')
dF10FIPSSessionENodeMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 3), MacAddress())
if mibBuilder.loadTexts: dF10FIPSSessionENodeMacAddr.setStatus('current')
dF10FIPSSessionLoginType = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("flogi", 0), ("fdisc", 1))))
if mibBuilder.loadTexts: dF10FIPSSessionLoginType.setStatus('current')
dF10FIPSFCoEMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 5), MacAddress())
if mibBuilder.loadTexts: dF10FIPSFCoEMacAddr.setStatus('current')
dF10FIPSSessionTentativeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 6), Unsigned32())
if mibBuilder.loadTexts: dF10FIPSSessionTentativeIndex.setStatus('current')
dF10FIPSSessionFCID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3))
if mibBuilder.loadTexts: dF10FIPSSessionFCID.setStatus('current')
dF10FIPSSessionENodeIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSSessionENodeIntf.setStatus('current')
dF10FIPSSessionFCFIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSSessionFCFIntf.setStatus('current')
dF10FIPSSessionTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSSessionTime.setStatus('current')
dF10FIPSSessionExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 450))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSSessionExpiryTime.setStatus('current')
dF10FIPSSessionState = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 1, 1, 12), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSSessionState.setStatus('current')
dF10FIPSENodeTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2), )
if mibBuilder.loadTexts: dF10FIPSENodeTable.setStatus('current')
dF10FIPSENodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1), ).setIndexNames((0, "F10-FIPSNOOPING-MIB", "dF10FIPSENodeVlanIndex"), (0, "F10-FIPSNOOPING-MIB", "dF10FIPSENodeMacAddr"))
if mibBuilder.loadTexts: dF10FIPSENodeEntry.setStatus('current')
dF10FIPSENodeVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dF10FIPSENodeVlanIndex.setStatus('current')
dF10FIPSENodeMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 2), MacAddress())
if mibBuilder.loadTexts: dF10FIPSENodeMacAddr.setStatus('current')
dF10FIPSENodeIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSENodeIntf.setStatus('current')
dF10FIPSENodeNameID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSENodeNameID.setStatus('current')
dF10FIPSENodeMaxFCoESize = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSENodeMaxFCoESize.setStatus('current')
dF10FIPSENodeConnectedFCFsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSENodeConnectedFCFsCount.setStatus('current')
dF10FIPSENodeActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 7), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSENodeActiveSessions.setStatus('current')
dF10FIPSENodeWaitingSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 8), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSENodeWaitingSessions.setStatus('current')
dF10FIPSENodeRejectedSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 9), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSENodeRejectedSessions.setStatus('current')
dF10FIPSENodeTimeSinceDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 2, 1, 10), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSENodeTimeSinceDiscovered.setStatus('current')
dF10FIPSFCFTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3), )
if mibBuilder.loadTexts: dF10FIPSFCFTable.setStatus('current')
dF10FIPSFCFEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1), ).setIndexNames((0, "F10-FIPSNOOPING-MIB", "dF10FIPSFCFVlanIndex"), (0, "F10-FIPSNOOPING-MIB", "dF10FIPSFCFMacAddr"))
if mibBuilder.loadTexts: dF10FIPSFCFEntry.setStatus('current')
dF10FIPSFCFVlanIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: dF10FIPSFCFVlanIndex.setStatus('current')
dF10FIPSFCFMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 2), MacAddress())
if mibBuilder.loadTexts: dF10FIPSFCFMacAddr.setStatus('current')
dF10FIPSFCFIntf = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFIntf.setStatus('current')
dF10FIPSFCFNameID = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFNameID.setStatus('current')
dF10FIPSFCFFabricName = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 5), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFFabricName.setStatus('current')
dF10FIPSFCFAddressingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("fpma", 1), ("spma", 2), ("both", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFAddressingMode.setStatus('current')
dF10FIPSFCFPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFPriority.setStatus('current')
dF10FIPSFCFDbit = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFDbit.setStatus('current')
dF10FIPSFCFIsAvailableForLogin = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFIsAvailableForLogin.setStatus('current')
dF10FIPSFCFConfiguredFKA = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 450))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFConfiguredFKA.setStatus('current')
dF10FIPSFCFTimeSinceDiscovered = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFTimeSinceDiscovered.setStatus('current')
dF10FIPSFCFConnectedENodesCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFConnectedENodesCount.setStatus('current')
dF10FIPSFCFSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 13), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFSessions.setStatus('current')
dF10FIPSFCFExpiryTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 2, 3, 1, 14), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSFCFExpiryTime.setStatus('current')
dF10FIPSStatisticsGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3))
dF10FIPSVlanStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1), )
if mibBuilder.loadTexts: dF10FIPSVlanStatsTable.setStatus('current')
dF10FIPSVlanStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1), ).setIndexNames((0, "Q-BRIDGE-MIB", "dot1qVlanIndex"))
if mibBuilder.loadTexts: dF10FIPSVlanStatsEntry.setStatus('current')
dF10FIPSVlanVlanRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanVlanRequests.setStatus('current')
dF10FIPSVlanVlanNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanVlanNotifications.setStatus('current')
dF10FIPSVlanMCDiscSolicits = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanMCDiscSolicits.setStatus('current')
dF10FIPSVlanUnicastDiscSolicits = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanUnicastDiscSolicits.setStatus('current')
dF10FIPSVlanFLogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFLogis.setStatus('current')
dF10FIPSVlanFDiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFDiscs.setStatus('current')
dF10FIPSVlanFLogouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFLogouts.setStatus('current')
dF10FIPSVlanVnPortKeepAlives = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanVnPortKeepAlives.setStatus('current')
dF10FIPSVlanMCDiscAdverts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanMCDiscAdverts.setStatus('current')
dF10FIPSVlanUnicastDiscAdverts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanUnicastDiscAdverts.setStatus('current')
dF10FIPSVlanFLogiAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFLogiAccepts.setStatus('current')
dF10FIPSVlanFLogiRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFLogiRejects.setStatus('current')
dF10FIPSVlanFDiscAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFDiscAccepts.setStatus('current')
dF10FIPSVlanFDiscRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFDiscRejects.setStatus('current')
dF10FIPSVlanFLogoutAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFLogoutAccepts.setStatus('current')
dF10FIPSVlanFLogoutRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFLogoutRejects.setStatus('current')
dF10FIPSVlanClearVirtLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanClearVirtLinks.setStatus('current')
dF10FIPSVlanVnPortSeshTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanVnPortSeshTimeouts.setStatus('current')
dF10FIPSVlanFcfDiscAdvTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanFcfDiscAdvTimeouts.setStatus('current')
dF10FIPSVlanSeshFailsDueToHwCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanSeshFailsDueToHwCfg.setStatus('current')
dF10FIPSVlanSeshDenyFcfLmtRch = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanSeshDenyFcfLmtRch.setStatus('current')
dF10FIPSVlanSeshDenyENodeLmtRch = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanSeshDenyENodeLmtRch.setStatus('current')
dF10FIPSVlanSeshDenySysLmtRch = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 1, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSVlanSeshDenySysLmtRch.setStatus('current')
dF10FIPSIntfStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2), )
if mibBuilder.loadTexts: dF10FIPSIntfStatsTable.setStatus('current')
dF10FIPSIntfStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: dF10FIPSIntfStatsEntry.setStatus('current')
dF10FIPSIntfVlanRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfVlanRequests.setStatus('current')
dF10FIPSIntfVlanNotifications = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfVlanNotifications.setStatus('current')
dF10FIPSIntfMCDiscSolicits = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfMCDiscSolicits.setStatus('current')
dF10FIPSIntfUnicastDiscSolicits = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfUnicastDiscSolicits.setStatus('current')
dF10FIPSIntfFLogis = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFLogis.setStatus('current')
dF10FIPSIntfFDiscs = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFDiscs.setStatus('current')
dF10FIPSIntfFLogouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFLogouts.setStatus('current')
dF10FIPSIntfVnPortKeepAlives = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfVnPortKeepAlives.setStatus('current')
dF10FIPSIntfMCDiscAdverts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfMCDiscAdverts.setStatus('current')
dF10FIPSIntfUnicastDiscAdverts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfUnicastDiscAdverts.setStatus('current')
dF10FIPSIntfFLogiAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFLogiAccepts.setStatus('current')
dF10FIPSIntfFLogiRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFLogiRejects.setStatus('current')
dF10FIPSIntfFDiscAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFDiscAccepts.setStatus('current')
dF10FIPSIntfFDiscRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFDiscRejects.setStatus('current')
dF10FIPSIntfFLogoutAccepts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFLogoutAccepts.setStatus('current')
dF10FIPSIntfFLogoutRejects = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFLogoutRejects.setStatus('current')
dF10FIPSIntfClearVirtLinks = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfClearVirtLinks.setStatus('current')
dF10FIPSIntfVnPortSeshTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfVnPortSeshTimeouts.setStatus('current')
dF10FIPSIntfFcfDiscAdvTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfFcfDiscAdvTimeouts.setStatus('current')
dF10FIPSIntfSeshFailsDueToHwCfg = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfSeshFailsDueToHwCfg.setStatus('current')
dF10FIPSIntfSeshDenyFcfLmtRch = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfSeshDenyFcfLmtRch.setStatus('current')
dF10FIPSIntfSeshDenyENodeLmtRch = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 22), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfSeshDenyENodeLmtRch.setStatus('current')
dF10FIPSIntfSeshDenySysLmtRch = MibTableColumn((1, 3, 6, 1, 4, 1, 6027, 3, 22, 3, 2, 1, 23), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dF10FIPSIntfSeshDenySysLmtRch.setStatus('current')
dF10FIPSNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4))
dF10FIPSTraps = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 0))
dF10FIPSTrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 1))
dF10FIPSTrapVlanIndex = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 1, 1), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dF10FIPSTrapVlanIndex.setStatus('current')
dF10FIPSTrapMacAddr = MibScalar((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 1, 2), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: dF10FIPSTrapMacAddr.setStatus('current')
dF10MaxFcfsInVlanLmtRchTrap = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 0, 1)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSTrapVlanIndex"))
if mibBuilder.loadTexts: dF10MaxFcfsInVlanLmtRchTrap.setStatus('current')
dF10MaxENodesLmtRchTrap = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 0, 2))
if mibBuilder.loadTexts: dF10MaxENodesLmtRchTrap.setStatus('current')
dF10MaxSessionLmtRchTrap = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 0, 3))
if mibBuilder.loadTexts: dF10MaxSessionLmtRchTrap.setStatus('current')
dF10FcfDroppedTrap = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 0, 4)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSTrapVlanIndex"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFIntf"), ("F10-FIPSNOOPING-MIB", "dF10FIPSTrapMacAddr"))
if mibBuilder.loadTexts: dF10FcfDroppedTrap.setStatus('current')
dF10ENodeDroppedTrap = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 0, 5)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSTrapVlanIndex"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeIntf"), ("F10-FIPSNOOPING-MIB", "dF10FIPSTrapMacAddr"))
if mibBuilder.loadTexts: dF10ENodeDroppedTrap.setStatus('current')
dF10SessionRequestDroppedTrap = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 0, 6)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSTrapVlanIndex"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeIntf"), ("F10-FIPSNOOPING-MIB", "dF10FIPSTrapMacAddr"))
if mibBuilder.loadTexts: dF10SessionRequestDroppedTrap.setStatus('current')
dF10AclInstallationFailureTrap = NotificationType((1, 3, 6, 1, 4, 1, 6027, 3, 22, 4, 0, 7))
if mibBuilder.loadTexts: dF10AclInstallationFailureTrap.setStatus('current')
dF10FIPSMibConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5))
dF10FIPSMibCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 1))
dF10FIPSMibGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2))
dF10FIPSMibCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 1, 1)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSCfgObjectGroup"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanCfgObjectGroup"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfObjectGroup"), ("F10-FIPSNOOPING-MIB", "dF10FIPSSessionObjectGroup"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeObjectGroup"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFObjectGroup"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanStatsObjectGroup"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfStatsObjectGroup"), ("F10-FIPSNOOPING-MIB", "dF10FIPSTrapsObjectGroup"), ("F10-FIPSNOOPING-MIB", "dF10FIPSTrapObjectsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSMibCompliance = dF10FIPSMibCompliance.setStatus('current')
dF10FIPSCfgObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 1)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSAdminMode"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCMAP"), ("F10-FIPSNOOPING-MIB", "dF10FIPSStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSCfgObjectGroup = dF10FIPSCfgObjectGroup.setStatus('current')
dF10FIPSVlanCfgObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 2)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSVlanAdminMode"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFCMAP"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSVlanCfgObjectGroup = dF10FIPSVlanCfgObjectGroup.setStatus('current')
dF10FIPSIntfObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 3)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSIntfPortModeFcf"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSIntfObjectGroup = dF10FIPSIntfObjectGroup.setStatus('current')
dF10FIPSSessionObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 4)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSSessionENodeIntf"), ("F10-FIPSNOOPING-MIB", "dF10FIPSSessionFCFIntf"), ("F10-FIPSNOOPING-MIB", "dF10FIPSSessionTime"), ("F10-FIPSNOOPING-MIB", "dF10FIPSSessionExpiryTime"), ("F10-FIPSNOOPING-MIB", "dF10FIPSSessionState"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfStatsClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSSessionObjectGroup = dF10FIPSSessionObjectGroup.setStatus('current')
dF10FIPSENodeObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 5)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSENodeIntf"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeNameID"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeMaxFCoESize"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeConnectedFCFsCount"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeActiveSessions"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeWaitingSessions"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeRejectedSessions"), ("F10-FIPSNOOPING-MIB", "dF10FIPSENodeTimeSinceDiscovered"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSENodeObjectGroup = dF10FIPSENodeObjectGroup.setStatus('current')
dF10FIPSFCFObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 6)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSFCFIntf"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFNameID"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFFabricName"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFAddressingMode"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFPriority"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFDbit"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFIsAvailableForLogin"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFConfiguredFKA"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFTimeSinceDiscovered"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFConnectedENodesCount"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFSessions"), ("F10-FIPSNOOPING-MIB", "dF10FIPSFCFExpiryTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSFCFObjectGroup = dF10FIPSFCFObjectGroup.setStatus('current')
dF10FIPSVlanStatsObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 7)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSVlanVlanRequests"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanVlanNotifications"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanMCDiscSolicits"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanUnicastDiscSolicits"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFLogis"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFDiscs"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFLogouts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanVnPortKeepAlives"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanMCDiscAdverts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanUnicastDiscAdverts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFLogiAccepts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFLogiRejects"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFDiscAccepts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFDiscRejects"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFLogoutAccepts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFLogoutRejects"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanClearVirtLinks"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanVnPortSeshTimeouts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanFcfDiscAdvTimeouts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanSeshFailsDueToHwCfg"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanSeshDenyFcfLmtRch"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanSeshDenyENodeLmtRch"), ("F10-FIPSNOOPING-MIB", "dF10FIPSVlanSeshDenySysLmtRch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSVlanStatsObjectGroup = dF10FIPSVlanStatsObjectGroup.setStatus('current')
dF10FIPSIntfStatsObjectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 8)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSIntfVlanRequests"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfVlanNotifications"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfMCDiscSolicits"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfUnicastDiscSolicits"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFLogis"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFDiscs"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFLogouts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfVnPortKeepAlives"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfMCDiscAdverts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfUnicastDiscAdverts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFLogiAccepts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFLogiRejects"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFDiscAccepts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFDiscRejects"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFLogoutAccepts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFLogoutRejects"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfClearVirtLinks"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfVnPortSeshTimeouts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfFcfDiscAdvTimeouts"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfSeshFailsDueToHwCfg"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfSeshDenyFcfLmtRch"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfSeshDenyENodeLmtRch"), ("F10-FIPSNOOPING-MIB", "dF10FIPSIntfSeshDenySysLmtRch"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSIntfStatsObjectGroup = dF10FIPSIntfStatsObjectGroup.setStatus('current')
dF10FIPSTrapsObjectGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 9)).setObjects(("F10-FIPSNOOPING-MIB", "dF10MaxFcfsInVlanLmtRchTrap"), ("F10-FIPSNOOPING-MIB", "dF10MaxENodesLmtRchTrap"), ("F10-FIPSNOOPING-MIB", "dF10MaxSessionLmtRchTrap"), ("F10-FIPSNOOPING-MIB", "dF10FcfDroppedTrap"), ("F10-FIPSNOOPING-MIB", "dF10ENodeDroppedTrap"), ("F10-FIPSNOOPING-MIB", "dF10SessionRequestDroppedTrap"), ("F10-FIPSNOOPING-MIB", "dF10AclInstallationFailureTrap"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSTrapsObjectGroup = dF10FIPSTrapsObjectGroup.setStatus('current')
dF10FIPSTrapObjectsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6027, 3, 22, 5, 2, 10)).setObjects(("F10-FIPSNOOPING-MIB", "dF10FIPSTrapVlanIndex"), ("F10-FIPSNOOPING-MIB", "dF10FIPSTrapMacAddr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    dF10FIPSTrapObjectsGroup = dF10FIPSTrapObjectsGroup.setStatus('current')
mibBuilder.exportSymbols("F10-FIPSNOOPING-MIB", dF10FIPSENodeEntry=dF10FIPSENodeEntry, dF10FIPSIntfMCDiscAdverts=dF10FIPSIntfMCDiscAdverts, dF10FIPSIntfVnPortKeepAlives=dF10FIPSIntfVnPortKeepAlives, dF10FIPSFCFConnectedENodesCount=dF10FIPSFCFConnectedENodesCount, dF10FIPSVlanMCDiscSolicits=dF10FIPSVlanMCDiscSolicits, dF10FIPSIntfFLogouts=dF10FIPSIntfFLogouts, dF10FIPSFCFNameID=dF10FIPSFCFNameID, dF10FIPSENodeRejectedSessions=dF10FIPSENodeRejectedSessions, dF10FIPSTrapMacAddr=dF10FIPSTrapMacAddr, dF10FIPSVlanStatsClear=dF10FIPSVlanStatsClear, dF10FIPSFCoEMacAddr=dF10FIPSFCoEMacAddr, dF10FIPSVlanFDiscAccepts=dF10FIPSVlanFDiscAccepts, dF10FIPSVlanCfgEntry=dF10FIPSVlanCfgEntry, dF10FIPSTrapsObjectGroup=dF10FIPSTrapsObjectGroup, dF10MaxSessionLmtRchTrap=dF10MaxSessionLmtRchTrap, dF10FIPSMibGroups=dF10FIPSMibGroups, dF10ENodeDroppedTrap=dF10ENodeDroppedTrap, dF10FIPSENodeMacAddr=dF10FIPSENodeMacAddr, dF10FIPSENodeWaitingSessions=dF10FIPSENodeWaitingSessions, dF10FIPSSessionLoginType=dF10FIPSSessionLoginType, dF10FIPSFCFFabricName=dF10FIPSFCFFabricName, dF10FIPSVlanSeshFailsDueToHwCfg=dF10FIPSVlanSeshFailsDueToHwCfg, dF10FIPSFCFTimeSinceDiscovered=dF10FIPSFCFTimeSinceDiscovered, dF10FIPSIntfUnicastDiscSolicits=dF10FIPSIntfUnicastDiscSolicits, dF10FIPSFCFMacAddr=dF10FIPSFCFMacAddr, dF10FIPSVlanStatsTable=dF10FIPSVlanStatsTable, dF10FIPSSessionVlanIndex=dF10FIPSSessionVlanIndex, dF10FIPSMibCompliance=dF10FIPSMibCompliance, dF10FIPSVlanFLogoutRejects=dF10FIPSVlanFLogoutRejects, dF10FIPSIntfSeshDenySysLmtRch=dF10FIPSIntfSeshDenySysLmtRch, dF10FIPSTrapVlanIndex=dF10FIPSTrapVlanIndex, dF10FIPSVlanVnPortKeepAlives=dF10FIPSVlanVnPortKeepAlives, dF10FcfDroppedTrap=dF10FcfDroppedTrap, dF10FIPSStatsClear=dF10FIPSStatsClear, dF10FIPSFCFIsAvailableForLogin=dF10FIPSFCFIsAvailableForLogin, dF10FIPSENodeActiveSessions=dF10FIPSENodeActiveSessions, dF10FIPSFCMAP=dF10FIPSFCMAP, dF10FIPSIntfVlanNotifications=dF10FIPSIntfVlanNotifications, dF10FIPSENodeIntf=dF10FIPSENodeIntf, PYSNMP_MODULE_ID=dF10FipSnooping, dF10FIPSFCFDbit=dF10FIPSFCFDbit, dF10FIPSIntfFLogis=dF10FIPSIntfFLogis, dF10FIPSENodeMaxFCoESize=dF10FIPSENodeMaxFCoESize, dF10FIPSFCFAddressingMode=dF10FIPSFCFAddressingMode, dF10FIPSSessionENodeMacAddr=dF10FIPSSessionENodeMacAddr, dF10FIPSFCFPriority=dF10FIPSFCFPriority, dF10FIPSVlanCfgObjectGroup=dF10FIPSVlanCfgObjectGroup, dF10FIPSIntfObjectGroup=dF10FIPSIntfObjectGroup, dF10FIPSFCFObjectGroup=dF10FIPSFCFObjectGroup, dF10FIPSVlanVnPortSeshTimeouts=dF10FIPSVlanVnPortSeshTimeouts, dF10FIPSVlanVlanNotifications=dF10FIPSVlanVlanNotifications, dF10FIPSIntfFLogoutRejects=dF10FIPSIntfFLogoutRejects, dF10FIPSVlanUnicastDiscAdverts=dF10FIPSVlanUnicastDiscAdverts, dF10FIPSCfgObjectGroup=dF10FIPSCfgObjectGroup, dF10AclInstallationFailureTrap=dF10AclInstallationFailureTrap, dF10FIPSVlanSeshDenySysLmtRch=dF10FIPSVlanSeshDenySysLmtRch, dF10FIPSIntfTable=dF10FIPSIntfTable, dF10FIPSIntfSeshDenyFcfLmtRch=dF10FIPSIntfSeshDenyFcfLmtRch, dF10FIPSVlanVlanRequests=dF10FIPSVlanVlanRequests, dF10FIPSIntfStatsClear=dF10FIPSIntfStatsClear, dF10SessionRequestDroppedTrap=dF10SessionRequestDroppedTrap, dF10FIPSVlanFDiscs=dF10FIPSVlanFDiscs, dF10MaxENodesLmtRchTrap=dF10MaxENodesLmtRchTrap, dF10FIPSVlanFLogiAccepts=dF10FIPSVlanFLogiAccepts, dF10FIPSIntfStatsTable=dF10FIPSIntfStatsTable, dF10FIPSVlanFLogouts=dF10FIPSVlanFLogouts, dF10FIPSIntfStatsEntry=dF10FIPSIntfStatsEntry, dF10FIPSIntfFLogiAccepts=dF10FIPSIntfFLogiAccepts, dF10FIPSSessionTime=dF10FIPSSessionTime, dF10FIPSVlanStatsEntry=dF10FIPSVlanStatsEntry, dF10FIPSFCFEntry=dF10FIPSFCFEntry, dF10FIPSIntfUnicastDiscAdverts=dF10FIPSIntfUnicastDiscAdverts, dF10FIPSFCFTable=dF10FIPSFCFTable, dF10FIPSTraps=dF10FIPSTraps, dF10FIPSStatusGroup=dF10FIPSStatusGroup, dF10FIPSSessionObjectGroup=dF10FIPSSessionObjectGroup, dF10FIPSENodeObjectGroup=dF10FIPSENodeObjectGroup, dF10FIPSFCFVlanIndex=dF10FIPSFCFVlanIndex, dF10FIPSVlanSeshDenyENodeLmtRch=dF10FIPSVlanSeshDenyENodeLmtRch, dF10FIPSIntfStatsObjectGroup=dF10FIPSIntfStatsObjectGroup, dF10FIPSTrapObjects=dF10FIPSTrapObjects, dF10FIPSSessionEntry=dF10FIPSSessionEntry, dF10FIPSIntfSeshDenyENodeLmtRch=dF10FIPSIntfSeshDenyENodeLmtRch, dF10FIPSSessionExpiryTime=dF10FIPSSessionExpiryTime, dF10FIPSSessionTentativeIndex=dF10FIPSSessionTentativeIndex, dF10FIPSMibConformance=dF10FIPSMibConformance, dF10FIPSVlanFCMAP=dF10FIPSVlanFCMAP, dF10FIPSIntfPortModeFcf=dF10FIPSIntfPortModeFcf, dF10FIPSFCFExpiryTime=dF10FIPSFCFExpiryTime, dF10FIPSVlanFLogoutAccepts=dF10FIPSVlanFLogoutAccepts, dF10FIPSNotifications=dF10FIPSNotifications, dF10FIPSVlanSeshDenyFcfLmtRch=dF10FIPSVlanSeshDenyFcfLmtRch, dF10FIPSVlanFDiscRejects=dF10FIPSVlanFDiscRejects, dF10FIPSVlanStatsObjectGroup=dF10FIPSVlanStatsObjectGroup, dF10FIPSIntfFLogoutAccepts=dF10FIPSIntfFLogoutAccepts, dF10FIPSMibCompliances=dF10FIPSMibCompliances, dF10FIPSSessionTable=dF10FIPSSessionTable, dF10FIPSVlanFcfDiscAdvTimeouts=dF10FIPSVlanFcfDiscAdvTimeouts, dF10FIPSTrapObjectsGroup=dF10FIPSTrapObjectsGroup, dF10FIPSVlanCfgTable=dF10FIPSVlanCfgTable, dF10FIPSFCFIntf=dF10FIPSFCFIntf, dF10FIPSIntfFDiscAccepts=dF10FIPSIntfFDiscAccepts, dF10FIPSStatisticsGroup=dF10FIPSStatisticsGroup, dF10FIPSENodeNameID=dF10FIPSENodeNameID, dF10FIPSVlanAdminMode=dF10FIPSVlanAdminMode, dF10FipSnooping=dF10FipSnooping, dF10FIPSVlanUnicastDiscSolicits=dF10FIPSVlanUnicastDiscSolicits, dF10FIPSIntfClearVirtLinks=dF10FIPSIntfClearVirtLinks, dF10FIPSFCFSessions=dF10FIPSFCFSessions, dF10FIPSSessionENodeIntf=dF10FIPSSessionENodeIntf, dF10FIPSENodeConnectedFCFsCount=dF10FIPSENodeConnectedFCFsCount, dF10FIPSIntfVnPortSeshTimeouts=dF10FIPSIntfVnPortSeshTimeouts, dF10FIPSVlanFLogis=dF10FIPSVlanFLogis, dF10FIPSIntfEntry=dF10FIPSIntfEntry, dF10FIPSIntfMCDiscSolicits=dF10FIPSIntfMCDiscSolicits, dF10FIPSSessionFCFIntf=dF10FIPSSessionFCFIntf, dF10FIPSIntfFLogiRejects=dF10FIPSIntfFLogiRejects, dF10MaxFcfsInVlanLmtRchTrap=dF10MaxFcfsInVlanLmtRchTrap, dF10FIPSENodeVlanIndex=dF10FIPSENodeVlanIndex, dF10FIPSENodeTimeSinceDiscovered=dF10FIPSENodeTimeSinceDiscovered, dF10FIPSIntfFDiscs=dF10FIPSIntfFDiscs, dF10FIPSSessionState=dF10FIPSSessionState, dF10FIPSIntfFDiscRejects=dF10FIPSIntfFDiscRejects, dF10FIPSIntfFcfDiscAdvTimeouts=dF10FIPSIntfFcfDiscAdvTimeouts, dF10FIPSIntfVlanRequests=dF10FIPSIntfVlanRequests, dF10FIPSVlanFLogiRejects=dF10FIPSVlanFLogiRejects, dF10FIPSSessionFCID=dF10FIPSSessionFCID, dF10FIPSSessionFCFMacAddr=dF10FIPSSessionFCFMacAddr, dF10FIPSAdminMode=dF10FIPSAdminMode, dF10FIPSFCFConfiguredFKA=dF10FIPSFCFConfiguredFKA, dF10FIPSCfgGroup=dF10FIPSCfgGroup, dF10FIPSIntfSeshFailsDueToHwCfg=dF10FIPSIntfSeshFailsDueToHwCfg, dF10FIPSVlanMCDiscAdverts=dF10FIPSVlanMCDiscAdverts, dF10FIPSENodeTable=dF10FIPSENodeTable, dF10FIPSVlanClearVirtLinks=dF10FIPSVlanClearVirtLinks)
