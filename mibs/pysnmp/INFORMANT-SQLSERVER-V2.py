#
# PySNMP MIB module INFORMANT-SQLSERVER-V2 (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INFORMANT-SQLSERVER-V2
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:21 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
MibIdentifier, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, ObjectIdentity, Gauge32, iso, ModuleIdentity, NotificationType, Bits, Unsigned32, Integer32, IpAddress, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "ObjectIdentity", "Gauge32", "iso", "ModuleIdentity", "NotificationType", "Bits", "Unsigned32", "Integer32", "IpAddress", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
InstanceName, informant = mibBuilder.importSymbols("WTCS", "InstanceName", "informant")
sqlServerV2 = ModuleIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 13))
sqlServerV2.setRevisions(('2008-04-27 06:06',))
if mibBuilder.loadTexts: sqlServerV2.setLastUpdated('200804270606Z')
if mibBuilder.loadTexts: sqlServerV2.setOrganization('Informant Systems, Inc.')
analysisServicesV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1))
as2NameTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 1), )
if mibBuilder.loadTexts: as2NameTable.setStatus('current')
as2NameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 1, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2NameEntry.setStatus('current')
as2NameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2NameIndex.setStatus('current')
as2NameInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 1, 1, 2), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2NameInstance.setStatus('current')
as2CacheTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2), )
if mibBuilder.loadTexts: as2CacheTable.setStatus('current')
as2CacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2CacheEntry.setStatus('current')
as2CacheCurrentKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheCurrentKB.setStatus('current')
as2CacheCurrentEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheCurrentEntries.setStatus('current')
as2CacheDirectHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheDirectHitRatio.setStatus('current')
as2CacheDirectHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheDirectHitsPerSec.setStatus('current')
as2CacheEvictionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheEvictionsPerSec.setStatus('current')
as2CacheInsertsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheInsertsPerSec.setStatus('current')
as2CacheKBAddedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheKBAddedPerSec.setStatus('current')
as2CacheLookupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheLookupsPerSec.setStatus('current')
as2CacheMissesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheMissesPerSec.setStatus('current')
as2CacheTotalDirectHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheTotalDirectHits.setStatus('current')
as2CacheTotalEvictions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheTotalEvictions.setStatus('current')
as2CacheTotalFiltIteratorCachHit = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheTotalFiltIteratorCachHit.setStatus('current')
as2CacheTotalFiltIteratorCachMis = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheTotalFiltIteratorCachMis.setStatus('current')
as2CacheTotalInserts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheTotalInserts.setStatus('current')
as2CacheTotalLookups = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheTotalLookups.setStatus('current')
as2CacheTotalMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2CacheTotalMisses.setStatus('current')
as2ConnectionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3), )
if mibBuilder.loadTexts: as2ConnectionTable.setStatus('current')
as2ConnectionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2ConnectionEntry.setStatus('current')
as2ConnectionCurrentConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ConnectionCurrentConnections.setStatus('current')
as2ConnectionCurrentUserSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ConnectionCurrentUserSessions.setStatus('current')
as2ConnectionFailuresPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ConnectionFailuresPerSec.setStatus('current')
as2ConnectionRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ConnectionRequestsPerSec.setStatus('current')
as2ConnectionSuccessesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ConnectionSuccessesPerSec.setStatus('current')
as2ConnectionTotalFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ConnectionTotalFailures.setStatus('current')
as2ConnectionTotalRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ConnectionTotalRequests.setStatus('current')
as2ConnectionTotalSuccesses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 3, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ConnectionTotalSuccesses.setStatus('current')
as2DataMiningModelProcessTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 4), )
if mibBuilder.loadTexts: as2DataMiningModelProcessTable.setStatus('current')
as2DataMiningModelProcessEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 4, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2DataMiningModelProcessEntry.setStatus('current')
as2dmmpCasesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 4, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2dmmpCasesPerSec.setStatus('current')
as2dmmpCurrentModelsProcessing = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2dmmpCurrentModelsProcessing.setStatus('current')
as2DataMiningPredictionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 5), )
if mibBuilder.loadTexts: as2DataMiningPredictionTable.setStatus('current')
as2DataMiningPredictionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 5, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2DataMiningPredictionEntry.setStatus('current')
as2dmpConcurrentDMQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 5, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2dmpConcurrentDMQueries.setStatus('current')
as2dmpPredictionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2dmpPredictionsPerSec.setStatus('current')
as2dmpQueriesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 5, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2dmpQueriesPerSec.setStatus('current')
as2dmpRowsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 5, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2dmpRowsPerSec.setStatus('current')
as2dmpTotalPredictions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 5, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2dmpTotalPredictions.setStatus('current')
as2dmpTotalQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 5, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2dmpTotalQueries.setStatus('current')
as2dmpTotalRows = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2dmpTotalRows.setStatus('current')
as2LocksTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6), )
if mibBuilder.loadTexts: as2LocksTable.setStatus('current')
as2LocksEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2LocksEntry.setStatus('current')
as2LocksCurrentLatchWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksCurrentLatchWaits.setStatus('current')
as2LocksCurrentLockWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksCurrentLockWaits.setStatus('current')
as2LocksCurrentLocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksCurrentLocks.setStatus('current')
as2LocksLatchWaitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksLatchWaitsPerSec.setStatus('current')
as2LocksLockDenialsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksLockDenialsPerSec.setStatus('current')
as2LocksLockGrantsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksLockGrantsPerSec.setStatus('current')
as2LocksLockRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksLockRequestsPerSec.setStatus('current')
as2LocksLockWaitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksLockWaitsPerSec.setStatus('current')
as2LocksTotalDeadlocksDetected = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksTotalDeadlocksDetected.setStatus('current')
as2LocksUnlockRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 6, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2LocksUnlockRequestsPerSec.setStatus('current')
as2MDXTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7), )
if mibBuilder.loadTexts: as2MDXTable.setStatus('current')
as2MDXEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2MDXEntry.setStatus('current')
as2MDXCurrentNumOfCachedEvalNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXCurrentNumOfCachedEvalNode.setStatus('current')
as2MDXCurrentNumOfEvalNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXCurrentNumOfEvalNode.setStatus('current')
as2MDXNumOfStorageEngineEvalNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumOfStorageEngineEvalNode.setStatus('current')
as2MDXNumOfBulkModeEvalNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumOfBulkModeEvalNode.setStatus('current')
as2MDXNumOfCachedotherEvalNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumOfCachedotherEvalNode.setStatus('current')
as2MDXNumCacheStorEngineEvalNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumCacheStorEngineEvalNode.setStatus('current')
as2MDXNumOfCacheBulkModeEvalNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumOfCacheBulkModeEvalNode.setStatus('current')
as2MDXNumberOfCalculationCovers = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumberOfCalculationCovers.setStatus('current')
as2MDXNumOfCellByCellEvalNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumOfCellByCellEvalNode.setStatus('current')
as2MDXNumCellCellHitCacheEvalNod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumCellCellHitCacheEvalNod.setStatus('current')
as2MDXNumCellCellMissCachEvalNod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumCellCellMissCachEvalNod.setStatus('current')
as2MDXNumEvalNodThatCovASglCell = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumEvalNodThatCovASglCell.setStatus('current')
as2MDXNumEvalNodeCalcSameGranula = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumEvalNodeCalcSameGranula.setStatus('current')
as2MDXNumEvictionsEvalNode = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumEvictionsEvalNode.setStatus('current')
as2MDXNumHashdexHitsCacheEvalNod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumHashdexHitsCacheEvalNod.setStatus('current')
as2MDXNumSubcubeHitsCacheEvalNod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumSubcubeHitsCacheEvalNod.setStatus('current')
as2MDXNumSubcubeMissCacheEvalNod = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXNumSubcubeMissCacheEvalNod.setStatus('current')
as2MDXTotalAutoexist = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXTotalAutoexist.setStatus('current')
as2MDXTotalEXISTING = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXTotalEXISTING.setStatus('current')
as2MDXTotalNONEMPTY = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXTotalNONEMPTY.setStatus('current')
as2MDXTotalNONEMPTYCalculatMemb = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXTotalNONEMPTYCalculatMemb.setStatus('current')
as2MDXTotalNONEMPTYUnoptimized = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXTotalNONEMPTYUnoptimized.setStatus('current')
as2MDXTotalSonarSubcubes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXTotalSonarSubcubes.setStatus('current')
as2MDXTotalCellsCalculated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXTotalCellsCalculated.setStatus('current')
as2MDXTotalFlatCacheInserts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXTotalFlatCacheInserts.setStatus('current')
as2MDXTotalRecomputes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 7, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2MDXTotalRecomputes.setStatus('current')
as2MemoryTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8), )
if mibBuilder.loadTexts: as2MemoryTable.setStatus('current')
as2MemoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2MemoryEntry.setStatus('current')
as2memAggCacheKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memAggCacheKB.setStatus('current')
as2memAggregationMapFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memAggregationMapFiles.setStatus('current')
as2memCleanerBalancePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memCleanerBalancePerSec.setStatus('current')
as2memCleanerCurrentPrice = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memCleanerCurrentPrice.setStatus('current')
as2memCleanerMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memCleanerMemoryKB.setStatus('current')
as2memCleanerMemNonshrinkableKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memCleanerMemNonshrinkableKB.setStatus('current')
as2memCleanerMemoryShrinkableKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memCleanerMemoryShrinkableKB.setStatus('current')
as2memCleanerMemShrunkKBSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memCleanerMemShrunkKBSec.setStatus('current')
as2memDimensionIndexHashFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memDimensionIndexHashFiles.setStatus('current')
as2memDimensionPropertyFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memDimensionPropertyFiles.setStatus('current')
as2memDimensionStringFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memDimensionStringFiles.setStatus('current')
as2memFactAggregationFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFactAggregationFiles.setStatus('current')
as2memFactDataFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFactDataFiles.setStatus('current')
as2memFactStringFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFactStringFiles.setStatus('current')
as2memFilestoreClockPgExamineSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreClockPgExamineSec.setStatus('current')
as2memFilestoreClockPgHaveRefSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreClockPgHaveRefSec.setStatus('current')
as2memFilestoreClockPgValidSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreClockPgValidSec.setStatus('current')
as2memFilestoreIOErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreIOErrors.setStatus('current')
as2memFilestoreIOErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreIOErrorsPerSec.setStatus('current')
as2memFilestoreKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreKB.setStatus('current')
as2memFilestoreKBReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreKBReadsPerSec.setStatus('current')
as2memFilestoreKBWritePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreKBWritePerSec.setStatus('current')
as2memFilestoreMemoryPinnedKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreMemoryPinnedKB.setStatus('current')
as2memFilestorePageFaultsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestorePageFaultsPerSec.setStatus('current')
as2memFilestoreReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreReadsPerSec.setStatus('current')
as2memFilestoreWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memFilestoreWritesPerSec.setStatus('current')
as2memInMemAggregationMapFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemAggregationMapFileKB.setStatus('current')
as2memInMemAggregateMapFileKBSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemAggregateMapFileKBSec.setStatus('current')
as2memInMemDimenIndexHashFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemDimenIndexHashFileKB.setStatus('current')
as2memInMemDimenIndHashFileKBSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemDimenIndHashFileKBSec.setStatus('current')
as2memInMemDimenProtyFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemDimenProtyFileKB.setStatus('current')
as2memInMemDimenProtyFileKBSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemDimenProtyFileKBSec.setStatus('current')
as2memInMemDimenStringFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemDimenStringFileKB.setStatus('current')
as2memInMemDimenStringFileKBSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemDimenStringFileKBSec.setStatus('current')
as2memInMemFactAggregationFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemFactAggregationFileKB.setStatus('current')
as2memInMemFactAggregatFileKBSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemFactAggregatFileKBSec.setStatus('current')
as2memInMemoryFactDataFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemoryFactDataFileKB.setStatus('current')
as2memInMemFactDataFileKBSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemFactDataFileKBSec.setStatus('current')
as2memInMemoryFactStringFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemoryFactStringFileKB.setStatus('current')
as2memInMemFactStringFileKBSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemFactStringFileKBSec.setStatus('current')
as2memInMemoryMapFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemoryMapFileKB.setStatus('current')
as2memInMemoryMapFileKBPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemoryMapFileKBPerSec.setStatus('current')
as2memInMemoryOtherFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 43), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemoryOtherFileKB.setStatus('current')
as2memInMemoryOtherFileKBPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 44), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memInMemoryOtherFileKBPerSec.setStatus('current')
as2memMapFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 45), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memMapFiles.setStatus('current')
as2memMemoryLimitHighKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 46), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memMemoryLimitHighKB.setStatus('current')
as2memMemoryLimitLowKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 47), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memMemoryLimitLowKB.setStatus('current')
as2memMemoryUsageKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 48), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memMemoryUsageKB.setStatus('current')
as2memOtherFiles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 49), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memOtherFiles.setStatus('current')
as2memPagePool1AllocKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 50), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPagePool1AllocKB.setStatus('current')
as2memPagePool1LookasideKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 51), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPagePool1LookasideKB.setStatus('current')
as2memPagePool64AllocKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 52), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPagePool64AllocKB.setStatus('current')
as2memPagePool64LookasideKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 53), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPagePool64LookasideKB.setStatus('current')
as2memPagePool8AllocKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 54), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPagePool8AllocKB.setStatus('current')
as2memPagePool8LookasideKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 55), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPagePool8LookasideKB.setStatus('current')
as2memPotenMemAggregatMapFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 56), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPotenMemAggregatMapFileKB.setStatus('current')
as2memPotenMemDimenIndHashFilKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 57), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPotenMemDimenIndHashFilKB.setStatus('current')
as2memPotenMemDimenProFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 58), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPotenMemDimenProFileKB.setStatus('current')
as2memPotenMemDimenStringFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 59), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPotenMemDimenStringFileKB.setStatus('current')
as2memPotenMemFactAggregFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 60), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPotenMemFactAggregFileKB.setStatus('current')
as2memPotenMemFactDataFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 61), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPotenMemFactDataFileKB.setStatus('current')
as2memPotenMemFactStringFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 62), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPotenMemFactStringFileKB.setStatus('current')
as2memPotentialInMemoryMapFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 63), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPotentialInMemoryMapFileKB.setStatus('current')
as2memPotenMemOtherFileKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 64), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memPotenMemOtherFileKB.setStatus('current')
as2memQuotaBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 65), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memQuotaBlocked.setStatus('current')
as2memQuotaKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 8, 1, 66), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2memQuotaKB.setStatus('current')
as2ProactiveCachingTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 9), )
if mibBuilder.loadTexts: as2ProactiveCachingTable.setStatus('current')
as2ProactiveCachingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 9, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2ProactiveCachingEntry.setStatus('current')
as2pcNotificationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 9, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2pcNotificationsPerSec.setStatus('current')
as2pcProactiveCachingBeginPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2pcProactiveCachingBeginPerSec.setStatus('current')
as2pcProactiveCachCompSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2pcProactiveCachCompSec.setStatus('current')
as2pcProcessCancellationsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2pcProcessCancellationsSec.setStatus('current')
as2ProcAggregationsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10), )
if mibBuilder.loadTexts: as2ProcAggregationsTable.setStatus('current')
as2ProcAggregationsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2ProcAggregationsEntry.setStatus('current')
as2paCurrentPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2paCurrentPartitions.setStatus('current')
as2paMemorySizeBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2paMemorySizeBytes.setStatus('current')
as2paMemorySizeRows = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2paMemorySizeRows.setStatus('current')
as2paRowsCreatedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2paRowsCreatedPerSec.setStatus('current')
as2paRowsMergedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2paRowsMergedPerSec.setStatus('current')
as2paTempFileBytesWrittenPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2paTempFileBytesWrittenPerSec.setStatus('current')
as2paTempFileRowsWrittenPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2paTempFileRowsWrittenPerSec.setStatus('current')
as2paTotalPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 10, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2paTotalPartitions.setStatus('current')
as2ProcIndexesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 11), )
if mibBuilder.loadTexts: as2ProcIndexesTable.setStatus('current')
as2ProcIndexesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 11, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2ProcIndexesEntry.setStatus('current')
as2ProcIndexesCurrentPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 11, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcIndexesCurrentPartitions.setStatus('current')
as2ProcIndexesRowsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 11, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcIndexesRowsPerSec.setStatus('current')
as2ProcIndexesTotalPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 11, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcIndexesTotalPartitions.setStatus('current')
as2ProcIndexesTotalRows = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 11, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcIndexesTotalRows.setStatus('current')
as2ProcessingTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 12), )
if mibBuilder.loadTexts: as2ProcessingTable.setStatus('current')
as2ProcessingEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 12, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2ProcessingEntry.setStatus('current')
as2ProcessingRowsConvertedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 12, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcessingRowsConvertedPerSec.setStatus('current')
as2ProcessingRowsReadPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 12, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcessingRowsReadPerSec.setStatus('current')
as2ProcessingRowsWrittenPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 12, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcessingRowsWrittenPerSec.setStatus('current')
as2ProcessingTotalRowsConverted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcessingTotalRowsConverted.setStatus('current')
as2ProcessingTotalRowsRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 12, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcessingTotalRowsRead.setStatus('current')
as2ProcessingTotalRowsWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 12, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ProcessingTotalRowsWritten.setStatus('current')
as2StorageEngineQueryTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13), )
if mibBuilder.loadTexts: as2StorageEngineQueryTable.setStatus('current')
as2StorageEngineQueryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2StorageEngineQueryEntry.setStatus('current')
as2seqAggregationHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqAggregationHitsPerSec.setStatus('current')
as2seqAggregationLookupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqAggregationLookupsPerSec.setStatus('current')
as2seqAvgTimePerQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqAvgTimePerQuery.setStatus('current')
as2seqBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqBytesSentPerSec.setStatus('current')
as2seqCalculationCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqCalculationCacheHitsPerSec.setStatus('current')
as2seqCalculationCacheLookupsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqCalculationCacheLookupsSec.setStatus('current')
as2seqCurrentDimensionQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqCurrentDimensionQueries.setStatus('current')
as2seqCurrentMeasureGroupQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqCurrentMeasureGroupQueries.setStatus('current')
as2seqDataBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqDataBytesPerSec.setStatus('current')
as2seqDataReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqDataReadsPerSec.setStatus('current')
as2seqDimensionCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqDimensionCacheHitsPerSec.setStatus('current')
as2seqDimensionCacheLookupSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqDimensionCacheLookupSec.setStatus('current')
as2seqDimensionQueriesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqDimensionQueriesPerSec.setStatus('current')
as2seqFlatCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqFlatCacheHitsPerSec.setStatus('current')
as2seqFlatCacheLookupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqFlatCacheLookupsPerSec.setStatus('current')
as2seqMapBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqMapBytesPerSec.setStatus('current')
as2seqMapReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqMapReadsPerSec.setStatus('current')
as2seqMeasureGroupCacheHitsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqMeasureGroupCacheHitsSec.setStatus('current')
as2seqMeasureGroupCacheLookupSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqMeasureGroupCacheLookupSec.setStatus('current')
as2seqMeasureGroupQueriesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqMeasureGroupQueriesPerSec.setStatus('current')
as2seqNetworkRoundTripsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqNetworkRoundTripsPerSec.setStatus('current')
as2seqPersistedCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqPersistedCacheHitsPerSec.setStatus('current')
as2seqsistedCacheLookupsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqsistedCacheLookupsSec.setStatus('current')
as2seqQueriesAnsweredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqQueriesAnsweredPerSec.setStatus('current')
as2seqQueryFromCacheDirectSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqQueryFromCacheDirectSec.setStatus('current')
as2seqQueryFromCacheFilteredSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqQueryFromCacheFilteredSec.setStatus('current')
as2seqQueriesFromFilePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqQueriesFromFilePerSec.setStatus('current')
as2seqRowsSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqRowsSentPerSec.setStatus('current')
as2seqTotalBytesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqTotalBytesSent.setStatus('current')
as2seqTotalDimensionQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqTotalDimensionQueries.setStatus('current')
as2seqTotalMeasureGroupQueries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqTotalMeasureGroupQueries.setStatus('current')
as2seqTotalNetworkRoundTrips = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqTotalNetworkRoundTrips.setStatus('current')
as2seqTotalQueriesAnswered = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqTotalQueriesAnswered.setStatus('current')
as2seqTotalQueryFromCacheDirect = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqTotalQueryFromCacheDirect.setStatus('current')
as2seqTotalQueryFromCachFiltered = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqTotalQueryFromCachFiltered.setStatus('current')
as2seqTotalQueriesFromFile = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqTotalQueriesFromFile.setStatus('current')
as2seqTotalRowsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 13, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2seqTotalRowsSent.setStatus('current')
as2ThreadsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14), )
if mibBuilder.loadTexts: as2ThreadsTable.setStatus('current')
as2ThreadsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "as2NameIndex"))
if mibBuilder.loadTexts: as2ThreadsEntry.setStatus('current')
as2ThdsLongParsingBusyThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsLongParsingBusyThreads.setStatus('current')
as2ThdsLongParsingIdleThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsLongParsingIdleThreads.setStatus('current')
as2ThdsLongParsingJobQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsLongParsingJobQueueLength.setStatus('current')
as2ThdsLongParsingJobRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsLongParsingJobRate.setStatus('current')
as2ThdsProcessingPoolBusyThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsProcessingPoolBusyThreads.setStatus('current')
as2ThdsProcessingPoolIdleThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsProcessingPoolIdleThreads.setStatus('current')
as2ThdsProcessPoolJobQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsProcessPoolJobQueueLength.setStatus('current')
as2ThdsProcessingPoolJobRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsProcessingPoolJobRate.setStatus('current')
as2ThdsQueryPoolBusyThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsQueryPoolBusyThreads.setStatus('current')
as2ThdsQueryPoolIdleThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsQueryPoolIdleThreads.setStatus('current')
as2ThdsQueryPoolJobQueueLength = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsQueryPoolJobQueueLength.setStatus('current')
as2ThdsQueryPoolJobRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsQueryPoolJobRate.setStatus('current')
as2ThdsShortParsingBusyThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsShortParsingBusyThreads.setStatus('current')
as2ThdsShortParsingIdleThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsShortParsingIdleThreads.setStatus('current')
as2ThdsShortParsingJobQueueLeng = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsShortParsingJobQueueLeng.setStatus('current')
as2ThdsShortParsingJobRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 1, 14, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: as2ThdsShortParsingJobRate.setStatus('current')
sqlServerEngineV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2))
ss2NameTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 1), )
if mibBuilder.loadTexts: ss2NameTable.setStatus('current')
ss2NameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 1, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2NameEntry.setStatus('current')
ss2NameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2NameIndex.setStatus('current')
ss2NameInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 1, 1, 2), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2NameInstance.setStatus('current')
ss2AccessMethodsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2), )
if mibBuilder.loadTexts: ss2AccessMethodsTable.setStatus('current')
ss2AccessMethodsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2AccessMethodsEntry.setStatus('current')
ss2amAUCleanupBatchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amAUCleanupBatchesPerSec.setStatus('current')
ss2amAUCleanupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amAUCleanupsPerSec.setStatus('current')
ss2amByReferenceLobCreateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amByReferenceLobCreateCount.setStatus('current')
ss2amByReferenceLobUseCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amByReferenceLobUseCount.setStatus('current')
ss2amCountLobReadahead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amCountLobReadahead.setStatus('current')
ss2amCountPullInRow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amCountPullInRow.setStatus('current')
ss2amCountPushOffRow = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amCountPushOffRow.setStatus('current')
ss2amDeferredDroppedRowsets = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amDeferredDroppedRowsets.setStatus('current')
ss2amDeferredDroppedAUs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amDeferredDroppedAUs.setStatus('current')
ss2amDroppedRowsetCleanupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amDroppedRowsetCleanupsPerSec.setStatus('current')
ss2amDroppedRowsetsSkippedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amDroppedRowsetsSkippedPerSec.setStatus('current')
ss2amExtentDeallocationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amExtentDeallocationsPerSec.setStatus('current')
ss2amExtentsAllocatedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amExtentsAllocatedPerSec.setStatus('current')
ss2amFailedAUCleanupBatchesSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amFailedAUCleanupBatchesSec.setStatus('current')
ss2amFailedLeafPageCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amFailedLeafPageCookie.setStatus('current')
ss2amFailedTreePageCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amFailedTreePageCookie.setStatus('current')
ss2amForwardedRecordsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amForwardedRecordsPerSec.setStatus('current')
ss2amFreeSpacePageFetchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amFreeSpacePageFetchesPerSec.setStatus('current')
ss2amFreeSpaceScansPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amFreeSpaceScansPerSec.setStatus('current')
ss2amFullScansPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amFullScansPerSec.setStatus('current')
ss2amIndexSearchesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amIndexSearchesPerSec.setStatus('current')
ss2amLobHandleCreateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amLobHandleCreateCount.setStatus('current')
ss2amLobHandleDestroyCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amLobHandleDestroyCount.setStatus('current')
ss2amLobSSProviderCreateCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amLobSSProviderCreateCount.setStatus('current')
ss2amLobSSProviderDestroyCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amLobSSProviderDestroyCount.setStatus('current')
ss2amLobSSProvideTruncationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amLobSSProvideTruncationCount.setStatus('current')
ss2amMixedPageAllocationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amMixedPageAllocationsPerSec.setStatus('current')
ss2amPageDeallocationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amPageDeallocationsPerSec.setStatus('current')
ss2amPageSplitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amPageSplitsPerSec.setStatus('current')
ss2amPageCompressionAttemptsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amPageCompressionAttemptsSec.setStatus('current')
ss2amPagesAllocatedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amPagesAllocatedPerSec.setStatus('current')
ss2amPagesCompressedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amPagesCompressedPerSec.setStatus('current')
ss2amProbeScansPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amProbeScansPerSec.setStatus('current')
ss2amRangeScansPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amRangeScansPerSec.setStatus('current')
ss2amScanPointRevalidationsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amScanPointRevalidationsSec.setStatus('current')
ss2amSkippedGhostedRecordsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amSkippedGhostedRecordsPerSec.setStatus('current')
ss2amTableLockEscalationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amTableLockEscalationsPerSec.setStatus('current')
ss2amUsedLeafPageCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 38), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amUsedLeafPageCookie.setStatus('current')
ss2amUsedTreePageCookie = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 39), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amUsedTreePageCookie.setStatus('current')
ss2amWorkfilesCreatedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 40), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amWorkfilesCreatedPerSec.setStatus('current')
ss2amWorktablesCreatedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 41), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amWorktablesCreatedPerSec.setStatus('current')
ss2amWorktablesFromCacheRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 2, 1, 42), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2amWorktablesFromCacheRatio.setStatus('current')
ss2BackupDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 3), )
if mibBuilder.loadTexts: ss2BackupDeviceTable.setStatus('current')
ss2BackupDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 3, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2BackupDeviceInstance"))
if mibBuilder.loadTexts: ss2BackupDeviceEntry.setStatus('current')
ss2BackupDeviceInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 3, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2BackupDeviceInstance.setStatus('current')
ss2BackupDeviceDeviceputBytesSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2BackupDeviceDeviceputBytesSec.setStatus('current')
ss2BrokerActivationTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 4), )
if mibBuilder.loadTexts: ss2BrokerActivationTable.setStatus('current')
ss2BrokerActivationEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 4, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2baInstance"))
if mibBuilder.loadTexts: ss2BrokerActivationEntry.setStatus('current')
ss2baInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 4, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2baInstance.setStatus('current')
ss2baStoredProceduresInvokedSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2baStoredProceduresInvokedSec.setStatus('current')
ss2baTaskLimitReached = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2baTaskLimitReached.setStatus('current')
ss2baTaskLimitReachedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2baTaskLimitReachedPerSec.setStatus('current')
ss2baTasksAbortedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2baTasksAbortedPerSec.setStatus('current')
ss2baTasksRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2baTasksRunning.setStatus('current')
ss2baTasksStartedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2baTasksStartedPerSec.setStatus('current')
ss2BrokerStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5), )
if mibBuilder.loadTexts: ss2BrokerStatisticsTable.setStatus('current')
ss2BrokerStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2BrokerStatisticsEntry.setStatus('current')
ss2bsActivationErrorsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsActivationErrorsTotal.setStatus('current')
ss2bsBrokerTransactionRollbacks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsBrokerTransactionRollbacks.setStatus('current')
ss2bsCorruptedMessagesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsCorruptedMessagesTotal.setStatus('current')
ss2bsDequeuedTransmissionQMsgSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsDequeuedTransmissionQMsgSec.setStatus('current')
ss2bsDialogTimerEventCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsDialogTimerEventCount.setStatus('current')
ss2bsDroppedMessagesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsDroppedMessagesTotal.setStatus('current')
ss2bsEnqueuedLocalMessagesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedLocalMessagesTotal.setStatus('current')
ss2bsEnqueuedLocalMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedLocalMessagesPerSec.setStatus('current')
ss2bsEnqueuedMessagesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedMessagesTotal.setStatus('current')
ss2bsEnqueuedMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedMessagesPerSec.setStatus('current')
ss2bsEnqueuedP1MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP1MessagesPerSec.setStatus('current')
ss2bsEnqueuedP10MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP10MessagesPerSec.setStatus('current')
ss2bsEnqueuedP2MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP2MessagesPerSec.setStatus('current')
ss2bsEnqueuedP3MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP3MessagesPerSec.setStatus('current')
ss2bsEnqueuedP4MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP4MessagesPerSec.setStatus('current')
ss2bsEnqueuedP5MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP5MessagesPerSec.setStatus('current')
ss2bsEnqueuedP6MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP6MessagesPerSec.setStatus('current')
ss2bsEnqueuedP7MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP7MessagesPerSec.setStatus('current')
ss2bsEnqueuedP8MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP8MessagesPerSec.setStatus('current')
ss2bsEnqueuedP9MessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedP9MessagesPerSec.setStatus('current')
ss2bsEnqueuedTransmissionQMsgSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedTransmissionQMsgSec.setStatus('current')
ss2bsEnqueuedTransportMsgFragTot = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedTransportMsgFragTot.setStatus('current')
ss2bsEnqueuedTransportMsgFragSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedTransportMsgFragSec.setStatus('current')
ss2bsEnqueuedTransportMsgsTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedTransportMsgsTotal.setStatus('current')
ss2bsEnqueuedTransportMsgsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsEnqueuedTransportMsgsPerSec.setStatus('current')
ss2bsForwardedMessagesTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsForwardedMessagesTotal.setStatus('current')
ss2bsForwardedMessagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsForwardedMessagesPerSec.setStatus('current')
ss2bsForwardedMsgByteTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsForwardedMsgByteTotal.setStatus('current')
ss2bsForwardedMsgBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsForwardedMsgBytesPerSec.setStatus('current')
ss2bsForwardedMsgDiscardedTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsForwardedMsgDiscardedTotal.setStatus('current')
ss2bsForwardedMsgsDiscardedSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsForwardedMsgsDiscardedSec.setStatus('current')
ss2bsForwardedPendingMsgBytes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsForwardedPendingMsgBytes.setStatus('current')
ss2bsForwardedPendingMsgCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 33), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsForwardedPendingMsgCount.setStatus('current')
ss2bsSQLReceiveTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 34), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsSQLReceiveTotal.setStatus('current')
ss2bsSQLReceivesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 35), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsSQLReceivesPerSec.setStatus('current')
ss2bsSQLSendTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 36), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsSQLSendTotal.setStatus('current')
ss2bsSQLSendsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 5, 1, 37), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bsSQLSendsPerSec.setStatus('current')
ss2BrokerTOStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 6), )
if mibBuilder.loadTexts: ss2BrokerTOStatisticsTable.setStatus('current')
ss2BrokerTOStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 6, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2BrokerTOStatisticsEntry.setStatus('current')
ss2btosAvgLengthOfBatchedWrites = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 6, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2btosAvgLengthOfBatchedWrites.setStatus('current')
ss2btosAvgTimeBetweenBatchesMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 6, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2btosAvgTimeBetweenBatchesMs.setStatus('current')
ss2btosAvgTimeToWriteBatchMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 6, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2btosAvgTimeToWriteBatchMs.setStatus('current')
ss2btosTransmissionObjGetsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 6, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2btosTransmissionObjGetsPerSec.setStatus('current')
ss2btosTransmissionObjSetDirtSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 6, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2btosTransmissionObjSetDirtSec.setStatus('current')
ss2btosTransmissionObjWritesSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 6, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2btosTransmissionObjWritesSec.setStatus('current')
ss2BrokerPerDBMTransportTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7), )
if mibBuilder.loadTexts: ss2BrokerPerDBMTransportTable.setStatus('current')
ss2BrokerPerDBMTransportEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2BrokerPerDBMTransportEntry.setStatus('current')
ss2bdtCurrentBytesForRecvIPerO = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtCurrentBytesForRecvIPerO.setStatus('current')
ss2bdtCurrentBytesForSendIPerO = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtCurrentBytesForSendIPerO.setStatus('current')
ss2bdtCurrentMsgFragForSendIO = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtCurrentMsgFragForSendIO.setStatus('current')
ss2bdtMessageFragmentP1SenSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMessageFragmentP1SenSec.setStatus('current')
ss2bdtMsgFragmentP10SendsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentP10SendsSec.setStatus('current')
ss2bdtMsgFragmentP2SendsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentP2SendsSec.setStatus('current')
ss2bdtMsgFragmentP3SendsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentP3SendsSec.setStatus('current')
ss2bdtMsgFragmentP4SendsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentP4SendsSec.setStatus('current')
ss2bdtMsgFragmentP5SendsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentP5SendsSec.setStatus('current')
ss2bdtMsgFragmentP6SendsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentP6SendsSec.setStatus('current')
ss2bdtMsgFragmentP7SendsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentP7SendsSec.setStatus('current')
ss2bdtMsgFragmentP8SendsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentP8SendsSec.setStatus('current')
ss2bdtMsgFragmentP9SendsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentP9SendsSec.setStatus('current')
ss2bdtMsgFragmentReceivesSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentReceivesSec.setStatus('current')
ss2bdtMessageFragmentSendsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMessageFragmentSendsPerSec.setStatus('current')
ss2bdtMsgFragmentRecvSizeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentRecvSizeAvg.setStatus('current')
ss2bdtMsgFragmentSendSizeAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtMsgFragmentSendSizeAvg.setStatus('current')
ss2bdtOpenConnectionCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtOpenConnectionCount.setStatus('current')
ss2bdtPendingBytesForRecvIPerO = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtPendingBytesForRecvIPerO.setStatus('current')
ss2bdtPendingBytesForSendIPerO = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtPendingBytesForSendIPerO.setStatus('current')
ss2bdtPendingMsgFragForRecvIO = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtPendingMsgFragForRecvIO.setStatus('current')
ss2bdtPendingMsgFragForSendIO = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtPendingMsgFragForSendIO.setStatus('current')
ss2bdtReceiveIPerOLenAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtReceiveIPerOLenAvg.setStatus('current')
ss2bdtReceiveIPerOBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtReceiveIPerOBytesPerSec.setStatus('current')
ss2bdtReceiveIPerOsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtReceiveIPerOsPerSec.setStatus('current')
ss2bdtRecvIPerOBufferCopiesCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtRecvIPerOBufferCopiesCount.setStatus('current')
ss2bdtRecvIOBufferCopiesBytesSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtRecvIOBufferCopiesBytesSec.setStatus('current')
ss2bdtSendIPerOLenAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtSendIPerOLenAvg.setStatus('current')
ss2bdtSendIPerOBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtSendIPerOBytesPerSec.setStatus('current')
ss2bdtSendIPerOsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 7, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bdtSendIPerOsPerSec.setStatus('current')
ss2BufferManagerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8), )
if mibBuilder.loadTexts: ss2BufferManagerTable.setStatus('current')
ss2BufferManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2BufferManagerEntry.setStatus('current')
ss2bmAWELookupMapsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmAWELookupMapsPerSec.setStatus('current')
ss2bmAWEStolenMapsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmAWEStolenMapsPerSec.setStatus('current')
ss2bmAWEUnmapCallsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmAWEUnmapCallsPerSec.setStatus('current')
ss2bmAWEUnmapPagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmAWEUnmapPagesPerSec.setStatus('current')
ss2bmAWEWriteMapsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmAWEWriteMapsPerSec.setStatus('current')
ss2bmBufferCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmBufferCacheHitRatio.setStatus('current')
ss2bmCheckpointPagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmCheckpointPagesPerSec.setStatus('current')
ss2bmDatabasePages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmDatabasePages.setStatus('current')
ss2bmFreeListStallsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmFreeListStallsPerSec.setStatus('current')
ss2bmFreePages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmFreePages.setStatus('current')
ss2bmLazyWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmLazyWritesPerSec.setStatus('current')
ss2bmPageLifeExpectancy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmPageLifeExpectancy.setStatus('current')
ss2bmPageLookupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmPageLookupsPerSec.setStatus('current')
ss2bmPageReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmPageReadsPerSec.setStatus('current')
ss2bmPageWritesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmPageWritesPerSec.setStatus('current')
ss2bmReadaheadPagesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmReadaheadPagesPerSec.setStatus('current')
ss2bmReservedPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmReservedPages.setStatus('current')
ss2bmStolenPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmStolenPages.setStatus('current')
ss2bmTargetPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmTargetPages.setStatus('current')
ss2bmTotalPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 8, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bmTotalPages.setStatus('current')
ss2BufferNodeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9), )
if mibBuilder.loadTexts: ss2BufferNodeTable.setStatus('current')
ss2BufferNodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2bnInstance"))
if mibBuilder.loadTexts: ss2BufferNodeEntry.setStatus('current')
ss2bnInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnInstance.setStatus('current')
ss2bnDatabasePages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnDatabasePages.setStatus('current')
ss2bnForeignPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnForeignPages.setStatus('current')
ss2bnFreePages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnFreePages.setStatus('current')
ss2bnLocalNodePageLookupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnLocalNodePageLookupsPerSec.setStatus('current')
ss2bnPageLifeExpectancy = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnPageLifeExpectancy.setStatus('current')
ss2bnRemoteNodePageLookupsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnRemoteNodePageLookupsPerSec.setStatus('current')
ss2bnStolenPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnStolenPages.setStatus('current')
ss2bnTargetPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnTargetPages.setStatus('current')
ss2bnTotalPages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 9, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bnTotalPages.setStatus('current')
ss2BufferPartitionTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 10), )
if mibBuilder.loadTexts: ss2BufferPartitionTable.setStatus('current')
ss2BufferPartitionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 10, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2bpInstance"))
if mibBuilder.loadTexts: ss2BufferPartitionEntry.setStatus('current')
ss2bpInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 10, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bpInstance.setStatus('current')
ss2bpFreeListEmptyPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 10, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bpFreeListEmptyPerSec.setStatus('current')
ss2bpFreeListRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 10, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bpFreeListRequestsPerSec.setStatus('current')
ss2bpFreePages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 10, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2bpFreePages.setStatus('current')
ss2CLRTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 11), )
if mibBuilder.loadTexts: ss2CLRTable.setStatus('current')
ss2CLREntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 11, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2CLREntry.setStatus('current')
ss2CLRCLRExecution = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 11, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2CLRCLRExecution.setStatus('current')
ss2CatalogMetadataTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 12), )
if mibBuilder.loadTexts: ss2CatalogMetadataTable.setStatus('current')
ss2CatalogMetadataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 12, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2cmdInstance"))
if mibBuilder.loadTexts: ss2CatalogMetadataEntry.setStatus('current')
ss2cmdInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 12, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmdInstance.setStatus('current')
ss2cmdCacheEntriesCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 12, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmdCacheEntriesCount.setStatus('current')
ss2cmdCacheEntriesPinnedCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 12, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmdCacheEntriesPinnedCount.setStatus('current')
ss2cmdCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 12, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmdCacheHitRatio.setStatus('current')
ss2CursorManagerTotalTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 13), )
if mibBuilder.loadTexts: ss2CursorManagerTotalTable.setStatus('current')
ss2CursorManagerTotalEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 13, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2CursorManagerTotalEntry.setStatus('current')
ss2cmtAsyncPopulationCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 13, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmtAsyncPopulationCount.setStatus('current')
ss2cmtCursorConversionRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 13, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmtCursorConversionRate.setStatus('current')
ss2cmtCursorFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 13, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmtCursorFlushes.setStatus('current')
ss2CursorManagerByTypeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14), )
if mibBuilder.loadTexts: ss2CursorManagerByTypeTable.setStatus('current')
ss2CursorManagerByTypeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2cmbtInstance"))
if mibBuilder.loadTexts: ss2CursorManagerByTypeEntry.setStatus('current')
ss2cmbtInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmbtInstance.setStatus('current')
ss2cmbtActiveCursors = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmbtActiveCursors.setStatus('current')
ss2cmbtCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmbtCacheHitRatio.setStatus('current')
ss2cmbtCachedCursorCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmbtCachedCursorCounts.setStatus('current')
ss2cmbtCursorCacheUseCountsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmbtCursorCacheUseCountsSec.setStatus('current')
ss2cmbtCursorRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmbtCursorRequestsPerSec.setStatus('current')
ss2cmbtCursorMemoryUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmbtCursorMemoryUsage.setStatus('current')
ss2cmbtCursorWorktableUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmbtCursorWorktableUsage.setStatus('current')
ss2cmbtNumberOfActiveCursorPlans = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 14, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2cmbtNumberOfActiveCursorPlans.setStatus('current')
ss2DatabaseMirroringTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15), )
if mibBuilder.loadTexts: ss2DatabaseMirroringTable.setStatus('current')
ss2DatabaseMirroringEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2dmInstance"))
if mibBuilder.loadTexts: ss2DatabaseMirroringEntry.setStatus('current')
ss2dmInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmInstance.setStatus('current')
ss2dmBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmBytesReceivedPerSec.setStatus('current')
ss2dmBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmBytesSentPerSec.setStatus('current')
ss2dmLogBytesReceivedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogBytesReceivedPerSec.setStatus('current')
ss2dmLogBytesRedoneFromCacheSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogBytesRedoneFromCacheSec.setStatus('current')
ss2dmLogBytesSentFromCachePerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogBytesSentFromCachePerSec.setStatus('current')
ss2dmLogBytesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogBytesSentPerSec.setStatus('current')
ss2dmLogCompressedBytesRcvdSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogCompressedBytesRcvdSec.setStatus('current')
ss2dmLogCompressedBytesSentSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogCompressedBytesSentSec.setStatus('current')
ss2dmLogHardenTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogHardenTimeMs.setStatus('current')
ss2dmLogRemainingForUndoKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogRemainingForUndoKB.setStatus('current')
ss2dmLogScannedForUndoKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogScannedForUndoKB.setStatus('current')
ss2dmLogSendFlowControlTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogSendFlowControlTimeMs.setStatus('current')
ss2dmLogSendQueueKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmLogSendQueueKB.setStatus('current')
ss2dmMirroredWritTransactionsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmMirroredWritTransactionsSec.setStatus('current')
ss2dmPagesSentPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmPagesSentPerSec.setStatus('current')
ss2dmReceivesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmReceivesPerSec.setStatus('current')
ss2dmRedoBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmRedoBytesPerSec.setStatus('current')
ss2dmRedoQueueKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmRedoQueueKB.setStatus('current')
ss2dmSendPerReceiveAckTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmSendPerReceiveAckTime.setStatus('current')
ss2dmSendsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmSendsPerSec.setStatus('current')
ss2dmTransactionDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 15, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dmTransactionDelay.setStatus('current')
ss2DatabasesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16), )
if mibBuilder.loadTexts: ss2DatabasesTable.setStatus('current')
ss2DatabasesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2dbInstance"))
if mibBuilder.loadTexts: ss2DatabasesEntry.setStatus('current')
ss2dbInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbInstance.setStatus('current')
ss2dbActiveTransactions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbActiveTransactions.setStatus('current')
ss2dbBackupRestoreThroughputSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbBackupRestoreThroughputSec.setStatus('current')
ss2dbBulkCopyRowsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbBulkCopyRowsPerSec.setStatus('current')
ss2dbBulkCopyThroughputPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbBulkCopyThroughputPerSec.setStatus('current')
ss2dbCommitTableEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbCommitTableEntries.setStatus('current')
ss2dbDBCCLogicalScanBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbDBCCLogicalScanBytesPerSec.setStatus('current')
ss2dbDataFileSSizeKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbDataFileSSizeKB.setStatus('current')
ss2dbLogBytesFlushedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogBytesFlushedPerSec.setStatus('current')
ss2dbLogCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogCacheHitRatio.setStatus('current')
ss2dbLogCacheReadsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogCacheReadsPerSec.setStatus('current')
ss2dbLogFileSSizeKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogFileSSizeKB.setStatus('current')
ss2dbLogFileSUsedSizeKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogFileSUsedSizeKB.setStatus('current')
ss2dbLogFlushWaitTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogFlushWaitTime.setStatus('current')
ss2dbLogFlushWaitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogFlushWaitsPerSec.setStatus('current')
ss2dbLogFlushesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogFlushesPerSec.setStatus('current')
ss2dbLogGrowths = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogGrowths.setStatus('current')
ss2dbLogShrinks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogShrinks.setStatus('current')
ss2dbLogTruncations = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbLogTruncations.setStatus('current')
ss2dbPercentLogUsed = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbPercentLogUsed.setStatus('current')
ss2dbReplPendingXacts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbReplPendingXacts.setStatus('current')
ss2dbReplTransRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbReplTransRate.setStatus('current')
ss2dbShrinkDataMovementBytesSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbShrinkDataMovementBytesSec.setStatus('current')
ss2dbTrackedTransactionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbTrackedTransactionsPerSec.setStatus('current')
ss2dbTransactionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbTransactionsPerSec.setStatus('current')
ss2dbWriteTransactionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 16, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2dbWriteTransactionsPerSec.setStatus('current')
ss2DeprecatedFeaturesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 17), )
if mibBuilder.loadTexts: ss2DeprecatedFeaturesTable.setStatus('current')
ss2DeprecatedFeaturesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 17, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2DeprecatedFeaturesInstance"))
if mibBuilder.loadTexts: ss2DeprecatedFeaturesEntry.setStatus('current')
ss2DeprecatedFeaturesInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 17, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2DeprecatedFeaturesInstance.setStatus('current')
ss2DeprecatedFeaturesUsage = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 17, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2DeprecatedFeaturesUsage.setStatus('current')
ss2ExecStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 18), )
if mibBuilder.loadTexts: ss2ExecStatisticsTable.setStatus('current')
ss2ExecStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 18, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2ExecStatisticsInstance"))
if mibBuilder.loadTexts: ss2ExecStatisticsEntry.setStatus('current')
ss2ExecStatisticsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 18, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2ExecStatisticsInstance.setStatus('current')
ss2ExecStatisticsDTCCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 18, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2ExecStatisticsDTCCalls.setStatus('current')
ss2ExecStatisticDistributedQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 18, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2ExecStatisticDistributedQuery.setStatus('current')
ss2ExecStatistExtendedProcedures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 18, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2ExecStatistExtendedProcedures.setStatus('current')
ss2ExecStatisticsOLEDBCalls = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 18, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2ExecStatisticsOLEDBCalls.setStatus('current')
ss2GeneralStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19), )
if mibBuilder.loadTexts: ss2GeneralStatisticsTable.setStatus('current')
ss2GeneralStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2GeneralStatisticsEntry.setStatus('current')
ss2gsActiveTempTables = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsActiveTempTables.setStatus('current')
ss2gsConnectionResetPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsConnectionResetPerSec.setStatus('current')
ss2gsEventNotificationsDelayDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsEventNotificationsDelayDrop.setStatus('current')
ss2gsHTTPAuthenticatedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsHTTPAuthenticatedRequests.setStatus('current')
ss2gsLogicalConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsLogicalConnections.setStatus('current')
ss2gsLoginsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsLoginsPerSec.setStatus('current')
ss2gsLogoutsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsLogoutsPerSec.setStatus('current')
ss2gsMarsDeadlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsMarsDeadlocks.setStatus('current')
ss2gsNonAtomicYieldRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsNonAtomicYieldRate.setStatus('current')
ss2gsProcessesBlocked = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsProcessesBlocked.setStatus('current')
ss2gsSOAPEmptyRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsSOAPEmptyRequests.setStatus('current')
ss2gsSOAPMethodInvocations = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsSOAPMethodInvocations.setStatus('current')
ss2gsSOAPSQLRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsSOAPSQLRequests.setStatus('current')
ss2gsSOAPSessionInitiateRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsSOAPSessionInitiateRequests.setStatus('current')
ss2gsSOAPSessionTerminateRequest = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsSOAPSessionTerminateRequest.setStatus('current')
ss2gsSOAPWSDLRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsSOAPWSDLRequests.setStatus('current')
ss2gsSQLTraceIOProviderLockWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsSQLTraceIOProviderLockWaits.setStatus('current')
ss2gsTempTablesCreationRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsTempTablesCreationRate.setStatus('current')
ss2gsTempTablesForDestruction = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsTempTablesForDestruction.setStatus('current')
ss2gsTempdbRecoveryUnitId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsTempdbRecoveryUnitId.setStatus('current')
ss2gsTempdbRowsetId = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsTempdbRowsetId.setStatus('current')
ss2gsTraceEventNotificationQueue = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsTraceEventNotificationQueue.setStatus('current')
ss2gsTransactions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsTransactions.setStatus('current')
ss2gsUserConnections = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 19, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2gsUserConnections.setStatus('current')
ss2LatchesTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 20), )
if mibBuilder.loadTexts: ss2LatchesTable.setStatus('current')
ss2LatchesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 20, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2LatchesEntry.setStatus('current')
ss2LatchesAverageLatchWaitTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 20, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LatchesAverageLatchWaitTimeMs.setStatus('current')
ss2LatchesLatchWaitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 20, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LatchesLatchWaitsPerSec.setStatus('current')
ss2LatchesNumberOfSuperLatches = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 20, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LatchesNumberOfSuperLatches.setStatus('current')
ss2LatchesSuLatchDemotionsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 20, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LatchesSuLatchDemotionsSec.setStatus('current')
ss2LatchesSuLatchPromotionsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 20, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LatchesSuLatchPromotionsSec.setStatus('current')
ss2LatchesTotalLatchWaitTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 20, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LatchesTotalLatchWaitTimeMs.setStatus('current')
ss2LocksTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21), )
if mibBuilder.loadTexts: ss2LocksTable.setStatus('current')
ss2LocksEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2LocksInstance"))
if mibBuilder.loadTexts: ss2LocksEntry.setStatus('current')
ss2LocksInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LocksInstance.setStatus('current')
ss2LocksAverageWaitTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LocksAverageWaitTimeMs.setStatus('current')
ss2LocksLockRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LocksLockRequestsPerSec.setStatus('current')
ss2LocksTimeoutsGreaterThan0Sec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LocksTimeoutsGreaterThan0Sec.setStatus('current')
ss2LocksLockTimeoutsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LocksLockTimeoutsPerSec.setStatus('current')
ss2LocksLockWaitTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LocksLockWaitTimeMs.setStatus('current')
ss2LocksLockWaitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LocksLockWaitsPerSec.setStatus('current')
ss2LocksNumberOfDeadlocksPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 21, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2LocksNumberOfDeadlocksPerSec.setStatus('current')
ss2MemoryManagerTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22), )
if mibBuilder.loadTexts: ss2MemoryManagerTable.setStatus('current')
ss2MemoryManagerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2MemoryManagerEntry.setStatus('current')
ss2mmConnectionMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmConnectionMemoryKB.setStatus('current')
ss2mmGrantedWorkspaceMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmGrantedWorkspaceMemoryKB.setStatus('current')
ss2mmLockBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmLockBlocks.setStatus('current')
ss2mmLockBlocksAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmLockBlocksAllocated.setStatus('current')
ss2mmLockMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmLockMemoryKB.setStatus('current')
ss2mmLockOwnerBlocks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmLockOwnerBlocks.setStatus('current')
ss2mmLockOwnerBlocksAllocated = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmLockOwnerBlocksAllocated.setStatus('current')
ss2mmMaximumWorkspaceMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmMaximumWorkspaceMemoryKB.setStatus('current')
ss2mmMemoryGrantsOutstanding = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmMemoryGrantsOutstanding.setStatus('current')
ss2mmMemoryGrantsPending = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmMemoryGrantsPending.setStatus('current')
ss2mmOptimizerMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmOptimizerMemoryKB.setStatus('current')
ss2mmSQLCacheMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmSQLCacheMemoryKB.setStatus('current')
ss2mmTargetServerMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmTargetServerMemoryKB.setStatus('current')
ss2mmTotalServerMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 22, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2mmTotalServerMemoryKB.setStatus('current')
ss2PlanCacheTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 23), )
if mibBuilder.loadTexts: ss2PlanCacheTable.setStatus('current')
ss2PlanCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 23, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2PlanCacheInstance"))
if mibBuilder.loadTexts: ss2PlanCacheEntry.setStatus('current')
ss2PlanCacheInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 23, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2PlanCacheInstance.setStatus('current')
ss2PlanCacheCacheHitRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 23, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2PlanCacheCacheHitRatio.setStatus('current')
ss2PlanCacheCacheObjectCounts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 23, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2PlanCacheCacheObjectCounts.setStatus('current')
ss2PlanCacheCacheObjectsInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 23, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2PlanCacheCacheObjectsInUse.setStatus('current')
ss2PlanCacheCachePages = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 23, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2PlanCacheCachePages.setStatus('current')
ss2ReplicationAgentsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 24), )
if mibBuilder.loadTexts: ss2ReplicationAgentsTable.setStatus('current')
ss2ReplicationAgentsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 24, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2ReplicationAgentsInstance"))
if mibBuilder.loadTexts: ss2ReplicationAgentsEntry.setStatus('current')
ss2ReplicationAgentsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 24, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2ReplicationAgentsInstance.setStatus('current')
ss2ReplicationAgentsRunning = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 24, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2ReplicationAgentsRunning.setStatus('current')
ss2ReplicationDistTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 25), )
if mibBuilder.loadTexts: ss2ReplicationDistTable.setStatus('current')
ss2ReplicationDistEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 25, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2rdInstance"))
if mibBuilder.loadTexts: ss2ReplicationDistEntry.setStatus('current')
ss2rdInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 25, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rdInstance.setStatus('current')
ss2rdDistDeliveredCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 25, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rdDistDeliveredCmdsPerSec.setStatus('current')
ss2rdDistDeliveredTransPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 25, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rdDistDeliveredTransPerSec.setStatus('current')
ss2rdDistDeliveryLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 25, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rdDistDeliveryLatency.setStatus('current')
ss2ReplicationLogreaderTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 26), )
if mibBuilder.loadTexts: ss2ReplicationLogreaderTable.setStatus('current')
ss2ReplicationLogreaderEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 26, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2rlInstance"))
if mibBuilder.loadTexts: ss2ReplicationLogreaderEntry.setStatus('current')
ss2rlInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 26, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rlInstance.setStatus('current')
ss2rlLogreaderDeliveredCmdsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 26, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rlLogreaderDeliveredCmdsSec.setStatus('current')
ss2rlLogreaderDeliveredTransSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 26, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rlLogreaderDeliveredTransSec.setStatus('current')
ss2rlLogreaderDeliveryLatency = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 26, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rlLogreaderDeliveryLatency.setStatus('current')
ss2ReplicationMergeTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 27), )
if mibBuilder.loadTexts: ss2ReplicationMergeTable.setStatus('current')
ss2ReplicationMergeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 27, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2rmInstance"))
if mibBuilder.loadTexts: ss2ReplicationMergeEntry.setStatus('current')
ss2rmInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 27, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rmInstance.setStatus('current')
ss2rmConflictsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 27, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rmConflictsPerSec.setStatus('current')
ss2rmDownloadedChangesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 27, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rmDownloadedChangesPerSec.setStatus('current')
ss2rmUploadedChangesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 27, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rmUploadedChangesPerSec.setStatus('current')
ss2ReplicationSnapshotTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 28), )
if mibBuilder.loadTexts: ss2ReplicationSnapshotTable.setStatus('current')
ss2ReplicationSnapshotEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 28, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2rsInstance"))
if mibBuilder.loadTexts: ss2ReplicationSnapshotEntry.setStatus('current')
ss2rsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 28, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rsInstance.setStatus('current')
ss2rsSnapshotDeliveredCmdsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 28, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rsSnapshotDeliveredCmdsPerSec.setStatus('current')
ss2rsSnapshotDeliveredTransSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 28, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rsSnapshotDeliveredTransSec.setStatus('current')
ss2ResourcePoolStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29), )
if mibBuilder.loadTexts: ss2ResourcePoolStatsTable.setStatus('current')
ss2ResourcePoolStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2rpsInstance"))
if mibBuilder.loadTexts: ss2ResourcePoolStatsEntry.setStatus('current')
ss2rpsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsInstance.setStatus('current')
ss2rpsActiveMemoryGrantAmountKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsActiveMemoryGrantAmountKB.setStatus('current')
ss2rpsActiveMemoryGrantsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsActiveMemoryGrantsCount.setStatus('current')
ss2rpsCPUControlEffectPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsCPUControlEffectPercent.setStatus('current')
ss2rpsCPUUsagePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsCPUUsagePercent.setStatus('current')
ss2rpsCPUUsageTargetPercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsCPUUsageTargetPercent.setStatus('current')
ss2rpsCacheMemoryTargetKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsCacheMemoryTargetKB.setStatus('current')
ss2rpsCompileMemoryTargetKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsCompileMemoryTargetKB.setStatus('current')
ss2rpsMaxMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsMaxMemoryKB.setStatus('current')
ss2rpsMemoryGrantTimeoutsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsMemoryGrantTimeoutsPerSec.setStatus('current')
ss2rpsMemoryGrantsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsMemoryGrantsPerSec.setStatus('current')
ss2rpsPendingMemoryGrantsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsPendingMemoryGrantsCount.setStatus('current')
ss2rpsQueryExecMemoryTargetKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsQueryExecMemoryTargetKB.setStatus('current')
ss2rpsTargetMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsTargetMemoryKB.setStatus('current')
ss2rpsUsedMemoryKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 29, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2rpsUsedMemoryKB.setStatus('current')
ss2SQLErrorsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 30), )
if mibBuilder.loadTexts: ss2SQLErrorsTable.setStatus('current')
ss2SQLErrorsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 30, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2SQLErrorsInstance"))
if mibBuilder.loadTexts: ss2SQLErrorsEntry.setStatus('current')
ss2SQLErrorsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 30, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SQLErrorsInstance.setStatus('current')
ss2SQLErrorsErrorsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 30, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SQLErrorsErrorsPerSec.setStatus('current')
ss2SQLStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31), )
if mibBuilder.loadTexts: ss2SQLStatisticsTable.setStatus('current')
ss2SQLStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2SQLStatisticsEntry.setStatus('current')
ss2sqsAutoParamAttemptsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsAutoParamAttemptsPerSec.setStatus('current')
ss2sqsBatchRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsBatchRequestsPerSec.setStatus('current')
ss2sqsFailedAutoParamsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsFailedAutoParamsPerSec.setStatus('current')
ss2sqsForcedParameterizationsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsForcedParameterizationsSec.setStatus('current')
ss2sqsGuidedPlanExecutionsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsGuidedPlanExecutionsPerSec.setStatus('current')
ss2sqsMisguidedPlanExecutionsSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsMisguidedPlanExecutionsSec.setStatus('current')
ss2sqsSQLAttentionRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsSQLAttentionRate.setStatus('current')
ss2sqsSQLCompilationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsSQLCompilationsPerSec.setStatus('current')
ss2sqsSQLReCompilationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsSQLReCompilationsPerSec.setStatus('current')
ss2sqsSafeAutoParamsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsSafeAutoParamsPerSec.setStatus('current')
ss2sqsUnsafeAutoParamsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 31, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2sqsUnsafeAutoParamsPerSec.setStatus('current')
ss2SSISPipelineTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32), )
if mibBuilder.loadTexts: ss2SSISPipelineTable.setStatus('current')
ss2SSISPipelineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2SSISPipelineEntry.setStatus('current')
ss2SSISPipelineBLOBBytesRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineBLOBBytesRead.setStatus('current')
ss2SSISPipelineBLOBBytesWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineBLOBBytesWritten.setStatus('current')
ss2SSISPipelineBLOBFilesInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineBLOBFilesInUse.setStatus('current')
ss2SSISPipelineBufferMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineBufferMemory.setStatus('current')
ss2SSISPipelineBuffersInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineBuffersInUse.setStatus('current')
ss2SSISPipelineBuffersSpooled = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineBuffersSpooled.setStatus('current')
ss2SSISPipelineFlatBufferMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineFlatBufferMemory.setStatus('current')
ss2SSISPipelineFlatBuffersInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineFlatBuffersInUse.setStatus('current')
ss2SSISPipelinePrivateBuffMemory = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelinePrivateBuffMemory.setStatus('current')
ss2SSISPipelinePrivateBuffersUse = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelinePrivateBuffersUse.setStatus('current')
ss2SSISPipelineRowsRead = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineRowsRead.setStatus('current')
ss2SSISPipelineRowsWritten = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 32, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISPipelineRowsWritten.setStatus('current')
ss2SSISServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 33), )
if mibBuilder.loadTexts: ss2SSISServiceTable.setStatus('current')
ss2SSISServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 33, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2SSISServiceEntry.setStatus('current')
ss2SSISServiceSSISPackageInstanc = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 33, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2SSISServiceSSISPackageInstanc.setStatus('current')
ss2TraceEventStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 34), )
if mibBuilder.loadTexts: ss2TraceEventStatisticsTable.setStatus('current')
ss2TraceEventStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 34, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2tesInstance"))
if mibBuilder.loadTexts: ss2TraceEventStatisticsEntry.setStatus('current')
ss2tesInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 34, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tesInstance.setStatus('current')
ss2tesBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 34, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tesBytesPerSec.setStatus('current')
ss2tesCPUTicksPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 34, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tesCPUTicksPerSec.setStatus('current')
ss2tesEventsFilteredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 34, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tesEventsFilteredPerSec.setStatus('current')
ss2tesEventsFiredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 34, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tesEventsFiredPerSec.setStatus('current')
ss2tesEventsPrefilteredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 34, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tesEventsPrefilteredPerSec.setStatus('current')
ss2TraceStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 35), )
if mibBuilder.loadTexts: ss2TraceStatisticsTable.setStatus('current')
ss2TraceStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 35, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2tstInstance"))
if mibBuilder.loadTexts: ss2TraceStatisticsEntry.setStatus('current')
ss2tstInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 35, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tstInstance.setStatus('current')
ss2tstBytesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 35, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tstBytesPerSec.setStatus('current')
ss2tstDroppedEventsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 35, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tstDroppedEventsPerSec.setStatus('current')
ss2tstEventsFilteredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 35, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tstEventsFilteredPerSec.setStatus('current')
ss2tstEventsFiredPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 35, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2tstEventsFiredPerSec.setStatus('current')
ss2TransactionsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36), )
if mibBuilder.loadTexts: ss2TransactionsTable.setStatus('current')
ss2TransactionsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"))
if mibBuilder.loadTexts: ss2TransactionsEntry.setStatus('current')
ss2trnFreeSpaceInTempdbKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnFreeSpaceInTempdbKB.setStatus('current')
ss2trnLongestTransactRunningTime = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnLongestTransactRunningTime.setStatus('current')
ss2trnNonSnapshotVersionTransact = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnNonSnapshotVersionTransact.setStatus('current')
ss2trnSnapshotTransactions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnSnapshotTransactions.setStatus('current')
ss2trnTransactions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnTransactions.setStatus('current')
ss2trnUpdateSnapshotTransactions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnUpdateSnapshotTransactions.setStatus('current')
ss2trnUpdateConflictRatio = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnUpdateConflictRatio.setStatus('current')
ss2trnVersionCleanupRateKBPerS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnVersionCleanupRateKBPerS.setStatus('current')
ss2trnVersionGenerationRateKBS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnVersionGenerationRateKBS.setStatus('current')
ss2trnVersionStoreSizeKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnVersionStoreSizeKB.setStatus('current')
ss2trnVersionStoreUnitCount = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnVersionStoreUnitCount.setStatus('current')
ss2trnVersionStoreUnitCreation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnVersionStoreUnitCreation.setStatus('current')
ss2trnVersionStoreUnitTruncation = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 36, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2trnVersionStoreUnitTruncation.setStatus('current')
ss2UserSettableTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 37), )
if mibBuilder.loadTexts: ss2UserSettableTable.setStatus('current')
ss2UserSettableEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 37, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2UserSettableInstance"))
if mibBuilder.loadTexts: ss2UserSettableEntry.setStatus('current')
ss2UserSettableInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 37, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2UserSettableInstance.setStatus('current')
ss2UserSettableQuery = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 37, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2UserSettableQuery.setStatus('current')
ss2WaitStatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38), )
if mibBuilder.loadTexts: ss2WaitStatisticsTable.setStatus('current')
ss2WaitStatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2wsInstance"))
if mibBuilder.loadTexts: ss2WaitStatisticsEntry.setStatus('current')
ss2wsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsInstance.setStatus('current')
ss2wsLockWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsLockWaits.setStatus('current')
ss2wsLogBufferWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsLogBufferWaits.setStatus('current')
ss2wsLogWriteWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsLogWriteWaits.setStatus('current')
ss2wsMemoryGrantQueueWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsMemoryGrantQueueWaits.setStatus('current')
ss2wsNetworkIOWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsNetworkIOWaits.setStatus('current')
ss2wsNonPageLatchWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsNonPageLatchWaits.setStatus('current')
ss2wsPageIOLatchWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsPageIOLatchWaits.setStatus('current')
ss2wsPageLatchWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsPageLatchWaits.setStatus('current')
ss2wsThreadSafeMemoryObjectsWait = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsThreadSafeMemoryObjectsWait.setStatus('current')
ss2wsTransactionOwnershipWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsTransactionOwnershipWaits.setStatus('current')
ss2wsWaitForTheWorker = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsWaitForTheWorker.setStatus('current')
ss2wsWorkspaceSynchronizatWaits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 38, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wsWorkspaceSynchronizatWaits.setStatus('current')
ss2WorkloadGroupStatsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39), )
if mibBuilder.loadTexts: ss2WorkloadGroupStatsTable.setStatus('current')
ss2WorkloadGroupStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "ss2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "ss2wgsInstance"))
if mibBuilder.loadTexts: ss2WorkloadGroupStatsEntry.setStatus('current')
ss2wgsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsInstance.setStatus('current')
ss2wgsActiveParallelThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsActiveParallelThreads.setStatus('current')
ss2wgsActiveRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsActiveRequests.setStatus('current')
ss2wgsBlockedTasks = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsBlockedTasks.setStatus('current')
ss2wgsCPUUsagePercent = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsCPUUsagePercent.setStatus('current')
ss2wgsMaxRequestCpuTimeMs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsMaxRequestCpuTimeMs.setStatus('current')
ss2wgsMaxRequestMemoryGrantKB = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsMaxRequestMemoryGrantKB.setStatus('current')
ss2wgsQueryOptimizationsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsQueryOptimizationsPerSec.setStatus('current')
ss2wgsQueuedRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsQueuedRequests.setStatus('current')
ss2wgsReducedMemoryGrantsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsReducedMemoryGrantsPerSec.setStatus('current')
ss2wgsRequestsCompletedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsRequestsCompletedPerSec.setStatus('current')
ss2wgsSuboptimalPlansPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 2, 39, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: ss2wgsSuboptimalPlansPerSec.setStatus('current')
sqlServerAgentV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3))
sa2NameTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 1), )
if mibBuilder.loadTexts: sa2NameTable.setStatus('current')
sa2NameEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 1, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "sa2NameIndex"))
if mibBuilder.loadTexts: sa2NameEntry.setStatus('current')
sa2NameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2NameIndex.setStatus('current')
sa2NameInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 1, 1, 2), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2NameInstance.setStatus('current')
sa2AlertsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 2), )
if mibBuilder.loadTexts: sa2AlertsTable.setStatus('current')
sa2AlertsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 2, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "sa2NameIndex"))
if mibBuilder.loadTexts: sa2AlertsEntry.setStatus('current')
sa2AlertsActivatedAlerts = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 2, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2AlertsActivatedAlerts.setStatus('current')
sa2AlertsAlertsActivatedMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2AlertsAlertsActivatedMinute.setStatus('current')
sa2JobsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 3), )
if mibBuilder.loadTexts: sa2JobsTable.setStatus('current')
sa2JobsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 3, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "sa2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "sa2JobsInstance"))
if mibBuilder.loadTexts: sa2JobsEntry.setStatus('current')
sa2JobsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 3, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobsInstance.setStatus('current')
sa2JobsActiveJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 3, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobsActiveJobs.setStatus('current')
sa2JobsFailedJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobsFailedJobs.setStatus('current')
sa2JobsJobSuccessRate = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobsJobSuccessRate.setStatus('current')
sa2JobsJobsActivatedPerMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 3, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobsJobsActivatedPerMinute.setStatus('current')
sa2JobsQueuedJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 3, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobsQueuedJobs.setStatus('current')
sa2JobsSuccessfulJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 3, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobsSuccessfulJobs.setStatus('current')
sa2JobStepsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 4), )
if mibBuilder.loadTexts: sa2JobStepsTable.setStatus('current')
sa2JobStepsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 4, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "sa2NameIndex"), (0, "INFORMANT-SQLSERVER-V2", "sa2JobStepsInstance"))
if mibBuilder.loadTexts: sa2JobStepsEntry.setStatus('current')
sa2JobStepsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 4, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobStepsInstance.setStatus('current')
sa2JobStepsActiveSteps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobStepsActiveSteps.setStatus('current')
sa2JobStepsQueuedSteps = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobStepsQueuedSteps.setStatus('current')
sa2JobStepsTotalStepRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2JobStepsTotalStepRetries.setStatus('current')
sa2StatisticsTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 5), )
if mibBuilder.loadTexts: sa2StatisticsTable.setStatus('current')
sa2StatisticsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 5, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "sa2NameIndex"))
if mibBuilder.loadTexts: sa2StatisticsEntry.setStatus('current')
sa2StatisticsSQLServerRestarted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 3, 5, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sa2StatisticsSQLServerRestarted.setStatus('current')
reportingServicesV2 = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4))
rs2WebService = MibIdentifier((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1))
rs2wbsActiveSessions = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsActiveSessions.setStatus('current')
rs2wbsCacheHitsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsCacheHitsPerSec.setStatus('current')
rs2wbsCacheHitsSecSemanticModels = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsCacheHitsSecSemanticModels.setStatus('current')
rs2wbsCacheMissesPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsCacheMissesPerSec.setStatus('current')
rs2wbsCacheMissesSecSemantModels = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsCacheMissesSecSemantModels.setStatus('current')
rs2wbsFirstSessionRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsFirstSessionRequestsPerSec.setStatus('current')
rs2wbsMemoryCacheHitsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsMemoryCacheHitsPerSec.setStatus('current')
rs2wbsMemoryCacheMissPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsMemoryCacheMissPerSec.setStatus('current')
rs2wbsNextSessionRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsNextSessionRequestsPerSec.setStatus('current')
rs2wbsReportRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsReportRequests.setStatus('current')
rs2wbsReportsExecutedPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsReportsExecutedPerSec.setStatus('current')
rs2wbsRequestsPerSec = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsRequestsPerSec.setStatus('current')
rs2wbsTotalCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalCacheHits.setStatus('current')
rs2wbsTotalCacheHitSemanticModel = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalCacheHitSemanticModel.setStatus('current')
rs2wbsTotalCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalCacheMisses.setStatus('current')
rs2wbsTotalCachMissSemanticModel = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalCachMissSemanticModel.setStatus('current')
rs2wbsTotalMemoryCacheHits = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalMemoryCacheHits.setStatus('current')
rs2wbsTotalMemoryCacheMisses = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalMemoryCacheMisses.setStatus('current')
rs2wbsTotalProcessingFailures = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalProcessingFailures.setStatus('current')
rs2wbsTotalRejectedThreads = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalRejectedThreads.setStatus('current')
rs2wbsTotalReportsExecute = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalReportsExecute.setStatus('current')
rs2wbsTotalRequests = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wbsTotalRequests.setStatus('current')
rs2WindowsServiceTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2), )
if mibBuilder.loadTexts: rs2WindowsServiceTable.setStatus('current')
rs2WindowsServiceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "rs2wnsInstance"))
if mibBuilder.loadTexts: rs2WindowsServiceEntry.setStatus('current')
rs2wnsInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 1), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsInstance.setStatus('current')
rs2wnsActiveSessions = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsActiveSessions.setStatus('current')
rs2wnsCacheFlushesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsCacheFlushesPerSec.setStatus('current')
rs2wnsCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsCacheHitsPerSec.setStatus('current')
rs2wnsCacheHitsSecSemanticModels = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsCacheHitsSecSemanticModels.setStatus('current')
rs2wnsCacheMissesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 6), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsCacheMissesPerSec.setStatus('current')
rs2wnsCacheMissSecSemanticModels = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsCacheMissSecSemanticModels.setStatus('current')
rs2wnsDeliversPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsDeliversPerSec.setStatus('current')
rs2wnsEventsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsEventsPerSec.setStatus('current')
rs2wnsFirstSessionRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsFirstSessionRequestsPerSec.setStatus('current')
rs2wnsMemoryCacheHitsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 11), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsMemoryCacheHitsPerSec.setStatus('current')
rs2wnsMemoryCacheMissPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 12), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsMemoryCacheMissPerSec.setStatus('current')
rs2wnsNextSessionRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsNextSessionRequestsPerSec.setStatus('current')
rs2wnsReportRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsReportRequests.setStatus('current')
rs2wnsReportsExecutedPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsReportsExecutedPerSec.setStatus('current')
rs2wnsRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsRequestsPerSec.setStatus('current')
rs2wnsSnapshotUpdatesPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsSnapshotUpdatesPerSec.setStatus('current')
rs2wnsTotalAppDomainRecycles = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalAppDomainRecycles.setStatus('current')
rs2wnsTotalCacheFlushes = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalCacheFlushes.setStatus('current')
rs2wnsTotalCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 20), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalCacheHits.setStatus('current')
rs2wnsTotalCacheHitSemanticModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 21), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalCacheHitSemanticModel.setStatus('current')
rs2wnsTotalCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 22), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalCacheMisses.setStatus('current')
rs2wnsTotalCachMissSemanticModel = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 23), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalCachMissSemanticModel.setStatus('current')
rs2wnsTotalDeliveries = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 24), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalDeliveries.setStatus('current')
rs2wnsTotalEvents = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 25), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalEvents.setStatus('current')
rs2wnsTotalMemoryCacheHits = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 26), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalMemoryCacheHits.setStatus('current')
rs2wnsTotalMemoryCacheMisses = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 27), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalMemoryCacheMisses.setStatus('current')
rs2wnsTotalProcessingFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 28), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalProcessingFailures.setStatus('current')
rs2wnsTotalRejectedThreads = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 29), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalRejectedThreads.setStatus('current')
rs2wnsTotalReportsExecuted = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 30), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalReportsExecuted.setStatus('current')
rs2wnsTotalRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 31), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalRequests.setStatus('current')
rs2wnsTotalSnapshotUpdates = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 2, 1, 32), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2wnsTotalSnapshotUpdates.setStatus('current')
rs2ReportServerHTTPTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 3), )
if mibBuilder.loadTexts: rs2ReportServerHTTPTable.setStatus('current')
rs2ReportServerHTTPEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 3, 1), ).setIndexNames((0, "INFORMANT-SQLSERVER-V2", "rs2HTTPNameIndex"))
if mibBuilder.loadTexts: rs2ReportServerHTTPEntry.setStatus('current')
rs2HTTPNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2HTTPNameIndex.setStatus('current')
rs2HTTPNameInstance = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 3, 1, 2), InstanceName()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2HTTPNameInstance.setStatus('current')
rs2HTTPRequestsPerSec = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 3, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2HTTPRequestsPerSec.setStatus('current')
rs2HTTPTotalRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 13, 4, 3, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rs2HTTPTotalRequests.setStatus('current')
mibBuilder.exportSymbols("INFORMANT-SQLSERVER-V2", ss2amLobSSProviderCreateCount=ss2amLobSSProviderCreateCount, as2StorageEngineQueryTable=as2StorageEngineQueryTable, ss2bmPageWritesPerSec=ss2bmPageWritesPerSec, ss2trnTransactions=ss2trnTransactions, ss2amIndexSearchesPerSec=ss2amIndexSearchesPerSec, ss2tesEventsFiredPerSec=ss2tesEventsFiredPerSec, rs2wnsMemoryCacheMissPerSec=rs2wnsMemoryCacheMissPerSec, ss2ReplicationMergeTable=ss2ReplicationMergeTable, ss2cmbtCursorRequestsPerSec=ss2cmbtCursorRequestsPerSec, ss2LocksAverageWaitTimeMs=ss2LocksAverageWaitTimeMs, rs2wnsTotalCacheHits=rs2wnsTotalCacheHits, as2memAggregationMapFiles=as2memAggregationMapFiles, ss2BufferNodeEntry=ss2BufferNodeEntry, ss2dmLogRemainingForUndoKB=ss2dmLogRemainingForUndoKB, ss2LatchesSuLatchPromotionsSec=ss2LatchesSuLatchPromotionsSec, ss2mmLockMemoryKB=ss2mmLockMemoryKB, as2MDXTotalNONEMPTY=as2MDXTotalNONEMPTY, ss2trnUpdateConflictRatio=ss2trnUpdateConflictRatio, ss2BackupDeviceInstance=ss2BackupDeviceInstance, as2memInMemDimenIndexHashFileKB=as2memInMemDimenIndexHashFileKB, ss2bsSQLReceiveTotal=ss2bsSQLReceiveTotal, ss2dmLogScannedForUndoKB=ss2dmLogScannedForUndoKB, as2ConnectionFailuresPerSec=as2ConnectionFailuresPerSec, as2ConnectionSuccessesPerSec=as2ConnectionSuccessesPerSec, as2MemoryEntry=as2MemoryEntry, as2CacheTotalEvictions=as2CacheTotalEvictions, ss2bsForwardedPendingMsgCount=ss2bsForwardedPendingMsgCount, as2memFilestoreIOErrorsPerSec=as2memFilestoreIOErrorsPerSec, rs2wbsFirstSessionRequestsPerSec=rs2wbsFirstSessionRequestsPerSec, as2memInMemoryMapFileKBPerSec=as2memInMemoryMapFileKBPerSec, as2seqRowsSentPerSec=as2seqRowsSentPerSec, ss2bsActivationErrorsTotal=ss2bsActivationErrorsTotal, ss2dbInstance=ss2dbInstance, as2ThdsShortParsingIdleThreads=as2ThdsShortParsingIdleThreads, ss2wsLogBufferWaits=ss2wsLogBufferWaits, ss2dmSendPerReceiveAckTime=ss2dmSendPerReceiveAckTime, as2MDXNumOfCachedotherEvalNode=as2MDXNumOfCachedotherEvalNode, ss2dbLogShrinks=ss2dbLogShrinks, ss2gsHTTPAuthenticatedRequests=ss2gsHTTPAuthenticatedRequests, ss2bsForwardedMsgsDiscardedSec=ss2bsForwardedMsgsDiscardedSec, as2memPagePool1LookasideKB=as2memPagePool1LookasideKB, ss2amExtentsAllocatedPerSec=ss2amExtentsAllocatedPerSec, as2ConnectionTotalRequests=as2ConnectionTotalRequests, as2MDXTotalSonarSubcubes=as2MDXTotalSonarSubcubes, ss2bdtMsgFragmentP5SendsSec=ss2bdtMsgFragmentP5SendsSec, ss2gsSOAPEmptyRequests=ss2gsSOAPEmptyRequests, ss2ReplicationMergeEntry=ss2ReplicationMergeEntry, ss2rpsMaxMemoryKB=ss2rpsMaxMemoryKB, ss2wsThreadSafeMemoryObjectsWait=ss2wsThreadSafeMemoryObjectsWait, rs2wnsFirstSessionRequestsPerSec=rs2wnsFirstSessionRequestsPerSec, ss2dmInstance=ss2dmInstance, ss2dmLogHardenTimeMs=ss2dmLogHardenTimeMs, sa2NameEntry=sa2NameEntry, ss2bdtSendIPerOsPerSec=ss2bdtSendIPerOsPerSec, ss2bdtPendingMsgFragForRecvIO=ss2bdtPendingMsgFragForRecvIO, ss2sqsSQLAttentionRate=ss2sqsSQLAttentionRate, ss2AccessMethodsEntry=ss2AccessMethodsEntry, ss2amPageSplitsPerSec=ss2amPageSplitsPerSec, ss2dmLogBytesSentPerSec=ss2dmLogBytesSentPerSec, ss2BufferManagerTable=ss2BufferManagerTable, ss2bdtMsgFragmentP2SendsSec=ss2bdtMsgFragmentP2SendsSec, ss2dmPagesSentPerSec=ss2dmPagesSentPerSec, ss2WorkloadGroupStatsEntry=ss2WorkloadGroupStatsEntry, ss2amPageCompressionAttemptsSec=ss2amPageCompressionAttemptsSec, ss2BackupDeviceEntry=ss2BackupDeviceEntry, ss2cmtCursorConversionRate=ss2cmtCursorConversionRate, as2seqBytesSentPerSec=as2seqBytesSentPerSec, rs2wnsReportsExecutedPerSec=rs2wnsReportsExecutedPerSec, as2memPotenMemAggregatMapFileKB=as2memPotenMemAggregatMapFileKB, ss2dmRedoQueueKB=ss2dmRedoQueueKB, rs2wnsTotalAppDomainRecycles=rs2wnsTotalAppDomainRecycles, ss2btosTransmissionObjWritesSec=ss2btosTransmissionObjWritesSec, rs2wnsTotalReportsExecuted=rs2wnsTotalReportsExecuted, ss2rdDistDeliveredTransPerSec=ss2rdDistDeliveredTransPerSec, ss2bsSQLSendTotal=ss2bsSQLSendTotal, ss2bmBufferCacheHitRatio=ss2bmBufferCacheHitRatio, as2CacheTotalInserts=as2CacheTotalInserts, ss2ExecStatisticDistributedQuery=ss2ExecStatisticDistributedQuery, as2memInMemDimenProtyFileKBSec=as2memInMemDimenProtyFileKBSec, ss2ReplicationAgentsRunning=ss2ReplicationAgentsRunning, as2seqCalculationCacheHitsPerSec=as2seqCalculationCacheHitsPerSec, ss2ResourcePoolStatsTable=ss2ResourcePoolStatsTable, as2seqFlatCacheLookupsPerSec=as2seqFlatCacheLookupsPerSec, ss2bpInstance=ss2bpInstance, sa2JobStepsEntry=sa2JobStepsEntry, ss2wsLockWaits=ss2wsLockWaits, as2LocksCurrentLockWaits=as2LocksCurrentLockWaits, ss2wsPageIOLatchWaits=ss2wsPageIOLatchWaits, ss2bdtPendingBytesForRecvIPerO=ss2bdtPendingBytesForRecvIPerO, ss2gsSOAPMethodInvocations=ss2gsSOAPMethodInvocations, ss2TransactionsEntry=ss2TransactionsEntry, ss2wgsMaxRequestCpuTimeMs=ss2wgsMaxRequestCpuTimeMs, as2memCleanerMemShrunkKBSec=as2memCleanerMemShrunkKBSec, ss2btosAvgTimeToWriteBatchMs=ss2btosAvgTimeToWriteBatchMs, ss2dbLogGrowths=ss2dbLogGrowths, as2CacheKBAddedPerSec=as2CacheKBAddedPerSec, ss2cmbtNumberOfActiveCursorPlans=ss2cmbtNumberOfActiveCursorPlans, as2ThdsLongParsingIdleThreads=as2ThdsLongParsingIdleThreads, ss2bpFreeListRequestsPerSec=ss2bpFreeListRequestsPerSec, as2dmpTotalRows=as2dmpTotalRows, rs2wnsInstance=rs2wnsInstance, ss2tstInstance=ss2tstInstance, ss2rpsMemoryGrantsPerSec=ss2rpsMemoryGrantsPerSec, ss2sqsSQLCompilationsPerSec=ss2sqsSQLCompilationsPerSec, ss2bsEnqueuedLocalMessagesTotal=ss2bsEnqueuedLocalMessagesTotal, ss2SSISPipelineFlatBuffersInUse=ss2SSISPipelineFlatBuffersInUse, rs2wbsMemoryCacheHitsPerSec=rs2wbsMemoryCacheHitsPerSec, ss2baInstance=ss2baInstance, ss2bsEnqueuedP8MessagesPerSec=ss2bsEnqueuedP8MessagesPerSec, ss2sqsForcedParameterizationsSec=ss2sqsForcedParameterizationsSec, ss2PlanCacheCacheObjectsInUse=ss2PlanCacheCacheObjectsInUse, ss2LocksInstance=ss2LocksInstance, rs2wbsNextSessionRequestsPerSec=rs2wbsNextSessionRequestsPerSec, as2CacheTotalLookups=as2CacheTotalLookups, rs2wbsTotalProcessingFailures=rs2wbsTotalProcessingFailures, ss2baTaskLimitReached=ss2baTaskLimitReached, rs2wnsTotalCacheMisses=rs2wnsTotalCacheMisses, as2CacheDirectHitsPerSec=as2CacheDirectHitsPerSec, as2memFilestoreKBReadsPerSec=as2memFilestoreKBReadsPerSec, ss2BrokerActivationEntry=ss2BrokerActivationEntry, as2ThdsLongParsingBusyThreads=as2ThdsLongParsingBusyThreads, ss2wsNetworkIOWaits=ss2wsNetworkIOWaits, as2memInMemDimenIndHashFileKBSec=as2memInMemDimenIndHashFileKBSec, ss2amUsedLeafPageCookie=ss2amUsedLeafPageCookie, ss2bdtMsgFragmentP4SendsSec=ss2bdtMsgFragmentP4SendsSec, ss2rlLogreaderDeliveryLatency=ss2rlLogreaderDeliveryLatency, ss2ExecStatistExtendedProcedures=ss2ExecStatistExtendedProcedures, ss2rpsActiveMemoryGrantsCount=ss2rpsActiveMemoryGrantsCount, rs2HTTPNameIndex=rs2HTTPNameIndex, rs2wbsCacheMissesSecSemantModels=rs2wbsCacheMissesSecSemantModels, ss2LocksLockWaitsPerSec=ss2LocksLockWaitsPerSec, as2memInMemDimenStringFileKBSec=as2memInMemDimenStringFileKBSec, as2memOtherFiles=as2memOtherFiles, rs2HTTPNameInstance=rs2HTTPNameInstance, ss2bdtSendIPerOLenAvg=ss2bdtSendIPerOLenAvg, ss2cmdCacheHitRatio=ss2cmdCacheHitRatio, as2pcProactiveCachingBeginPerSec=as2pcProactiveCachingBeginPerSec, ss2wgsMaxRequestMemoryGrantKB=ss2wgsMaxRequestMemoryGrantKB, as2ConnectionTable=as2ConnectionTable, ss2rmUploadedChangesPerSec=ss2rmUploadedChangesPerSec, as2ThdsShortParsingJobQueueLeng=as2ThdsShortParsingJobQueueLeng, as2ThdsQueryPoolJobQueueLength=as2ThdsQueryPoolJobQueueLength, ss2gsSQLTraceIOProviderLockWaits=ss2gsSQLTraceIOProviderLockWaits, ss2SSISPipelineBLOBBytesWritten=ss2SSISPipelineBLOBBytesWritten, as2ProcessingTotalRowsConverted=as2ProcessingTotalRowsConverted, ss2dmBytesSentPerSec=ss2dmBytesSentPerSec, ss2bsSQLSendsPerSec=ss2bsSQLSendsPerSec, ss2SQLErrorsInstance=ss2SQLErrorsInstance, ss2UserSettableQuery=ss2UserSettableQuery, ss2gsTransactions=ss2gsTransactions, ss2wsWaitForTheWorker=ss2wsWaitForTheWorker, ss2bdtMessageFragmentP1SenSec=ss2bdtMessageFragmentP1SenSec, ss2BufferPartitionTable=ss2BufferPartitionTable, ss2dmMirroredWritTransactionsSec=ss2dmMirroredWritTransactionsSec, as2CacheCurrentEntries=as2CacheCurrentEntries, ss2amCountPushOffRow=ss2amCountPushOffRow, as2CacheTotalFiltIteratorCachHit=as2CacheTotalFiltIteratorCachHit, ss2ReplicationDistTable=ss2ReplicationDistTable, ss2SSISPipelineEntry=ss2SSISPipelineEntry, ss2tesEventsFilteredPerSec=ss2tesEventsFilteredPerSec, as2seqMapReadsPerSec=as2seqMapReadsPerSec, ss2gsLoginsPerSec=ss2gsLoginsPerSec, as2ProcIndexesTable=as2ProcIndexesTable, ss2DeprecatedFeaturesEntry=ss2DeprecatedFeaturesEntry, ss2mmLockOwnerBlocks=ss2mmLockOwnerBlocks, ss2tesInstance=ss2tesInstance, rs2wnsRequestsPerSec=rs2wnsRequestsPerSec, ss2LocksLockRequestsPerSec=ss2LocksLockRequestsPerSec, rs2wnsEventsPerSec=rs2wnsEventsPerSec, as2seqAggregationLookupsPerSec=as2seqAggregationLookupsPerSec, ss2bdtMsgFragmentP7SendsSec=ss2bdtMsgFragmentP7SendsSec, ss2wgsSuboptimalPlansPerSec=ss2wgsSuboptimalPlansPerSec, ss2dbBackupRestoreThroughputSec=ss2dbBackupRestoreThroughputSec, ss2LatchesTotalLatchWaitTimeMs=ss2LatchesTotalLatchWaitTimeMs, ss2dbLogFlushWaitTime=ss2dbLogFlushWaitTime, as2seqTotalMeasureGroupQueries=as2seqTotalMeasureGroupQueries, ss2UserSettableEntry=ss2UserSettableEntry, ss2dbDBCCLogicalScanBytesPerSec=ss2dbDBCCLogicalScanBytesPerSec, ss2amDroppedRowsetsSkippedPerSec=ss2amDroppedRowsetsSkippedPerSec, ss2tstDroppedEventsPerSec=ss2tstDroppedEventsPerSec, as2LocksLockRequestsPerSec=as2LocksLockRequestsPerSec, ss2bdtMsgFragmentP3SendsSec=ss2bdtMsgFragmentP3SendsSec, as2memFilestoreClockPgExamineSec=as2memFilestoreClockPgExamineSec, as2paTempFileRowsWrittenPerSec=as2paTempFileRowsWrittenPerSec, ss2bsEnqueuedP6MessagesPerSec=ss2bsEnqueuedP6MessagesPerSec, ss2cmbtCursorWorktableUsage=ss2cmbtCursorWorktableUsage, ss2dbDataFileSSizeKB=ss2dbDataFileSSizeKB, ss2PlanCacheCacheHitRatio=ss2PlanCacheCacheHitRatio, ss2PlanCacheEntry=ss2PlanCacheEntry, as2ThdsProcessingPoolIdleThreads=as2ThdsProcessingPoolIdleThreads, as2memDimensionIndexHashFiles=as2memDimensionIndexHashFiles, rs2wnsTotalRequests=rs2wnsTotalRequests, as2ConnectionRequestsPerSec=as2ConnectionRequestsPerSec, PYSNMP_MODULE_ID=sqlServerV2, ss2bsDequeuedTransmissionQMsgSec=ss2bsDequeuedTransmissionQMsgSec, ss2cmbtCursorMemoryUsage=ss2cmbtCursorMemoryUsage, as2seqDimensionQueriesPerSec=as2seqDimensionQueriesPerSec, ss2amLobSSProviderDestroyCount=ss2amLobSSProviderDestroyCount, ss2gsSOAPWSDLRequests=ss2gsSOAPWSDLRequests, as2memQuotaKB=as2memQuotaKB, ss2bmAWEUnmapPagesPerSec=ss2bmAWEUnmapPagesPerSec, ss2amByReferenceLobUseCount=ss2amByReferenceLobUseCount, ss2bsEnqueuedTransportMsgsTotal=ss2bsEnqueuedTransportMsgsTotal, ss2mmTotalServerMemoryKB=ss2mmTotalServerMemoryKB, ss2amLobHandleDestroyCount=ss2amLobHandleDestroyCount, as2ConnectionTotalSuccesses=as2ConnectionTotalSuccesses, ss2wgsCPUUsagePercent=ss2wgsCPUUsagePercent, ss2dbLogFlushWaitsPerSec=ss2dbLogFlushWaitsPerSec, rs2wnsCacheMissesPerSec=rs2wnsCacheMissesPerSec, sa2JobsFailedJobs=sa2JobsFailedJobs, as2memFilestoreKB=as2memFilestoreKB, ss2amWorkfilesCreatedPerSec=ss2amWorkfilesCreatedPerSec, ss2CLREntry=ss2CLREntry, as2dmmpCasesPerSec=as2dmmpCasesPerSec, as2ProactiveCachingTable=as2ProactiveCachingTable, as2dmpTotalPredictions=as2dmpTotalPredictions, as2seqAggregationHitsPerSec=as2seqAggregationHitsPerSec, as2memInMemDimenStringFileKB=as2memInMemDimenStringFileKB, ss2amForwardedRecordsPerSec=ss2amForwardedRecordsPerSec, ss2gsNonAtomicYieldRate=ss2gsNonAtomicYieldRate, ss2ReplicationLogreaderEntry=ss2ReplicationLogreaderEntry, ss2SQLStatisticsEntry=ss2SQLStatisticsEntry, ss2SSISPipelineFlatBufferMemory=ss2SSISPipelineFlatBufferMemory, ss2ReplicationAgentsInstance=ss2ReplicationAgentsInstance, as2ThdsLongParsingJobQueueLength=as2ThdsLongParsingJobQueueLength, sa2JobStepsTable=sa2JobStepsTable, ss2bsEnqueuedP7MessagesPerSec=ss2bsEnqueuedP7MessagesPerSec, rs2HTTPTotalRequests=rs2HTTPTotalRequests, as2memMemoryUsageKB=as2memMemoryUsageKB, ss2dbLogCacheReadsPerSec=ss2dbLogCacheReadsPerSec, ss2bdtReceiveIPerOsPerSec=ss2bdtReceiveIPerOsPerSec, as2memFilestoreIOErrors=as2memFilestoreIOErrors, as2memFilestoreClockPgHaveRefSec=as2memFilestoreClockPgHaveRefSec, ss2wgsReducedMemoryGrantsPerSec=ss2wgsReducedMemoryGrantsPerSec, as2CacheEvictionsPerSec=as2CacheEvictionsPerSec, ss2sqsAutoParamAttemptsPerSec=ss2sqsAutoParamAttemptsPerSec, as2LocksLockGrantsPerSec=as2LocksLockGrantsPerSec, ss2bdtRecvIOBufferCopiesBytesSec=ss2bdtRecvIOBufferCopiesBytesSec, ss2wgsQueuedRequests=ss2wgsQueuedRequests, ss2SSISServiceSSISPackageInstanc=ss2SSISServiceSSISPackageInstanc, ss2amPageDeallocationsPerSec=ss2amPageDeallocationsPerSec, ss2bmDatabasePages=ss2bmDatabasePages, ss2bmPageLifeExpectancy=ss2bmPageLifeExpectancy, ss2bsForwardedMessagesTotal=ss2bsForwardedMessagesTotal, ss2CursorManagerByTypeEntry=ss2CursorManagerByTypeEntry, ss2LocksEntry=ss2LocksEntry, ss2rpsPendingMemoryGrantsCount=ss2rpsPendingMemoryGrantsCount, as2ProcessingRowsWrittenPerSec=as2ProcessingRowsWrittenPerSec, as2MDXTotalCellsCalculated=as2MDXTotalCellsCalculated, rs2wnsTotalCacheHitSemanticModel=rs2wnsTotalCacheHitSemanticModel, ss2amCountLobReadahead=ss2amCountLobReadahead, ss2cmtCursorFlushes=ss2cmtCursorFlushes, ss2sqsFailedAutoParamsPerSec=ss2sqsFailedAutoParamsPerSec, as2memFactDataFiles=as2memFactDataFiles)
mibBuilder.exportSymbols("INFORMANT-SQLSERVER-V2", ss2baStoredProceduresInvokedSec=ss2baStoredProceduresInvokedSec, ss2CatalogMetadataEntry=ss2CatalogMetadataEntry, ss2wgsInstance=ss2wgsInstance, as2pcProcessCancellationsSec=as2pcProcessCancellationsSec, ss2trnVersionStoreUnitCount=ss2trnVersionStoreUnitCount, ss2bmReservedPages=ss2bmReservedPages, ss2dmLogBytesRedoneFromCacheSec=ss2dmLogBytesRedoneFromCacheSec, as2memInMemoryFactStringFileKB=as2memInMemoryFactStringFileKB, as2ThdsShortParsingBusyThreads=as2ThdsShortParsingBusyThreads, ss2tesEventsPrefilteredPerSec=ss2tesEventsPrefilteredPerSec, ss2bsDroppedMessagesTotal=ss2bsDroppedMessagesTotal, ss2btosTransmissionObjSetDirtSec=ss2btosTransmissionObjSetDirtSec, ss2dbShrinkDataMovementBytesSec=ss2dbShrinkDataMovementBytesSec, rs2wnsTotalMemoryCacheHits=rs2wnsTotalMemoryCacheHits, as2memInMemoryMapFileKB=as2memInMemoryMapFileKB, ss2SSISPipelineRowsWritten=ss2SSISPipelineRowsWritten, ss2bdtPendingBytesForSendIPerO=ss2bdtPendingBytesForSendIPerO, reportingServicesV2=reportingServicesV2, rs2wnsCacheFlushesPerSec=rs2wnsCacheFlushesPerSec, ss2amPagesCompressedPerSec=ss2amPagesCompressedPerSec, ss2bnFreePages=ss2bnFreePages, as2paMemorySizeRows=as2paMemorySizeRows, as2memFilestoreClockPgValidSec=as2memFilestoreClockPgValidSec, ss2amByReferenceLobCreateCount=ss2amByReferenceLobCreateCount, ss2bsForwardedPendingMsgBytes=ss2bsForwardedPendingMsgBytes, ss2LocksTable=ss2LocksTable, ss2wgsQueryOptimizationsPerSec=ss2wgsQueryOptimizationsPerSec, sa2JobsQueuedJobs=sa2JobsQueuedJobs, as2MDXTotalFlatCacheInserts=as2MDXTotalFlatCacheInserts, as2memPotenMemDimenStringFileKB=as2memPotenMemDimenStringFileKB, ss2ExecStatisticsEntry=ss2ExecStatisticsEntry, ss2amCountPullInRow=ss2amCountPullInRow, as2ThdsProcessingPoolJobRate=as2ThdsProcessingPoolJobRate, ss2wsWorkspaceSynchronizatWaits=ss2wsWorkspaceSynchronizatWaits, ss2mmMaximumWorkspaceMemoryKB=ss2mmMaximumWorkspaceMemoryKB, ss2bmFreeListStallsPerSec=ss2bmFreeListStallsPerSec, ss2mmTargetServerMemoryKB=ss2mmTargetServerMemoryKB, ss2TransactionsTable=ss2TransactionsTable, sa2StatisticsEntry=sa2StatisticsEntry, rs2wbsTotalMemoryCacheMisses=rs2wbsTotalMemoryCacheMisses, ss2BrokerTOStatisticsTable=ss2BrokerTOStatisticsTable, rs2wnsReportRequests=rs2wnsReportRequests, as2StorageEngineQueryEntry=as2StorageEngineQueryEntry, ss2amLobHandleCreateCount=ss2amLobHandleCreateCount, as2pcProactiveCachCompSec=as2pcProactiveCachCompSec, as2memPotenMemFactAggregFileKB=as2memPotenMemFactAggregFileKB, as2ProcIndexesRowsPerSec=as2ProcIndexesRowsPerSec, ss2bsForwardedMessagesPerSec=ss2bsForwardedMessagesPerSec, ss2mmMemoryGrantsOutstanding=ss2mmMemoryGrantsOutstanding, as2memPotenMemOtherFileKB=as2memPotenMemOtherFileKB, ss2gsTempTablesCreationRate=ss2gsTempTablesCreationRate, ss2PlanCacheInstance=ss2PlanCacheInstance, ss2bsEnqueuedP3MessagesPerSec=ss2bsEnqueuedP3MessagesPerSec, as2MDXNumOfCellByCellEvalNode=as2MDXNumOfCellByCellEvalNode, ss2BufferNodeTable=ss2BufferNodeTable, as2MDXTotalAutoexist=as2MDXTotalAutoexist, ss2bnDatabasePages=ss2bnDatabasePages, as2memInMemFactAggregationFileKB=as2memInMemFactAggregationFileKB, rs2wbsTotalCachMissSemanticModel=rs2wbsTotalCachMissSemanticModel, ss2bmFreePages=ss2bmFreePages, ss2amMixedPageAllocationsPerSec=ss2amMixedPageAllocationsPerSec, as2memPotenMemDimenProFileKB=as2memPotenMemDimenProFileKB, ss2DeprecatedFeaturesInstance=ss2DeprecatedFeaturesInstance, ss2bmStolenPages=ss2bmStolenPages, ss2dbLogTruncations=ss2dbLogTruncations, ss2rpsCPUControlEffectPercent=ss2rpsCPUControlEffectPercent, ss2gsEventNotificationsDelayDrop=ss2gsEventNotificationsDelayDrop, as2MDXNumSubcubeMissCacheEvalNod=as2MDXNumSubcubeMissCacheEvalNod, ss2bmAWEStolenMapsPerSec=ss2bmAWEStolenMapsPerSec, ss2gsSOAPSessionTerminateRequest=ss2gsSOAPSessionTerminateRequest, as2seqTotalQueriesAnswered=as2seqTotalQueriesAnswered, ss2DatabasesTable=ss2DatabasesTable, ss2bmTargetPages=ss2bmTargetPages, as2memDimensionPropertyFiles=as2memDimensionPropertyFiles, ss2bdtCurrentBytesForSendIPerO=ss2bdtCurrentBytesForSendIPerO, as2CacheTotalDirectHits=as2CacheTotalDirectHits, ss2SQLErrorsEntry=ss2SQLErrorsEntry, ss2MemoryManagerTable=ss2MemoryManagerTable, ss2SSISServiceEntry=ss2SSISServiceEntry, as2MDXNumCacheStorEngineEvalNode=as2MDXNumCacheStorEngineEvalNode, ss2dbBulkCopyRowsPerSec=ss2dbBulkCopyRowsPerSec, as2CacheInsertsPerSec=as2CacheInsertsPerSec, ss2SQLErrorsTable=ss2SQLErrorsTable, rs2wnsCacheHitsSecSemanticModels=rs2wnsCacheHitsSecSemanticModels, ss2BrokerActivationTable=ss2BrokerActivationTable, ss2GeneralStatisticsEntry=ss2GeneralStatisticsEntry, ss2dmLogSendQueueKB=ss2dmLogSendQueueKB, ss2rlInstance=ss2rlInstance, ss2bdtMessageFragmentSendsPerSec=ss2bdtMessageFragmentSendsPerSec, ss2sqsSafeAutoParamsPerSec=ss2sqsSafeAutoParamsPerSec, ss2dbCommitTableEntries=ss2dbCommitTableEntries, ss2dbLogFileSUsedSizeKB=ss2dbLogFileSUsedSizeKB, ss2PlanCacheCacheObjectCounts=ss2PlanCacheCacheObjectCounts, ss2trnVersionGenerationRateKBS=ss2trnVersionGenerationRateKBS, rs2wbsCacheHitsPerSec=rs2wbsCacheHitsPerSec, as2MDXNumberOfCalculationCovers=as2MDXNumberOfCalculationCovers, as2ProcIndexesTotalPartitions=as2ProcIndexesTotalPartitions, ss2bnStolenPages=ss2bnStolenPages, ss2wgsActiveParallelThreads=ss2wgsActiveParallelThreads, ss2LatchesSuLatchDemotionsSec=ss2LatchesSuLatchDemotionsSec, ss2wsPageLatchWaits=ss2wsPageLatchWaits, ss2CursorManagerTotalTable=ss2CursorManagerTotalTable, analysisServicesV2=analysisServicesV2, as2ProcIndexesTotalRows=as2ProcIndexesTotalRows, as2memPotenMemDimenIndHashFilKB=as2memPotenMemDimenIndHashFilKB, ss2WorkloadGroupStatsTable=ss2WorkloadGroupStatsTable, rs2HTTPRequestsPerSec=rs2HTTPRequestsPerSec, ss2ExecStatisticsInstance=ss2ExecStatisticsInstance, ss2bsEnqueuedP1MessagesPerSec=ss2bsEnqueuedP1MessagesPerSec, ss2bnRemoteNodePageLookupsPerSec=ss2bnRemoteNodePageLookupsPerSec, as2memMapFiles=as2memMapFiles, as2paRowsMergedPerSec=as2paRowsMergedPerSec, ss2trnVersionStoreUnitTruncation=ss2trnVersionStoreUnitTruncation, as2paMemorySizeBytes=as2paMemorySizeBytes, as2seqQueriesAnsweredPerSec=as2seqQueriesAnsweredPerSec, as2paCurrentPartitions=as2paCurrentPartitions, ss2tesBytesPerSec=ss2tesBytesPerSec, ss2trnVersionCleanupRateKBPerS=ss2trnVersionCleanupRateKBPerS, as2memAggCacheKB=as2memAggCacheKB, ss2bmPageReadsPerSec=ss2bmPageReadsPerSec, as2memFactAggregationFiles=as2memFactAggregationFiles, ss2rmInstance=ss2rmInstance, as2memPagePool1AllocKB=as2memPagePool1AllocKB, ss2dbTrackedTransactionsPerSec=ss2dbTrackedTransactionsPerSec, ss2bdtMsgFragmentP8SendsSec=ss2bdtMsgFragmentP8SendsSec, ss2dbActiveTransactions=ss2dbActiveTransactions, ss2amFailedAUCleanupBatchesSec=ss2amFailedAUCleanupBatchesSec, ss2sqsSQLReCompilationsPerSec=ss2sqsSQLReCompilationsPerSec, as2memCleanerMemoryKB=as2memCleanerMemoryKB, ss2cmdCacheEntriesCount=ss2cmdCacheEntriesCount, ss2cmbtInstance=ss2cmbtInstance, ss2bdtSendIPerOBytesPerSec=ss2bdtSendIPerOBytesPerSec, as2seqQueryFromCacheFilteredSec=as2seqQueryFromCacheFilteredSec, ss2BrokerTOStatisticsEntry=ss2BrokerTOStatisticsEntry, rs2wbsTotalRequests=rs2wbsTotalRequests, as2ProactiveCachingEntry=as2ProactiveCachingEntry, sqlServerV2=sqlServerV2, ss2gsSOAPSessionInitiateRequests=ss2gsSOAPSessionInitiateRequests, ss2amFreeSpacePageFetchesPerSec=ss2amFreeSpacePageFetchesPerSec, ss2bsForwardedMsgDiscardedTotal=ss2bsForwardedMsgDiscardedTotal, ss2wsNonPageLatchWaits=ss2wsNonPageLatchWaits, ss2mmLockBlocksAllocated=ss2mmLockBlocksAllocated, ss2gsMarsDeadlocks=ss2gsMarsDeadlocks, as2dmpPredictionsPerSec=as2dmpPredictionsPerSec, ss2SSISPipelineBuffersSpooled=ss2SSISPipelineBuffersSpooled, as2seqCurrentMeasureGroupQueries=as2seqCurrentMeasureGroupQueries, as2dmpRowsPerSec=as2dmpRowsPerSec, as2memFilestoreReadsPerSec=as2memFilestoreReadsPerSec, ss2rsSnapshotDeliveredCmdsPerSec=ss2rsSnapshotDeliveredCmdsPerSec, as2seqCalculationCacheLookupsSec=as2seqCalculationCacheLookupsSec, as2MDXNumEvalNodeCalcSameGranula=as2MDXNumEvalNodeCalcSameGranula, ss2rdInstance=ss2rdInstance, as2DataMiningPredictionTable=as2DataMiningPredictionTable, ss2bsEnqueuedP2MessagesPerSec=ss2bsEnqueuedP2MessagesPerSec, ss2amFailedTreePageCookie=ss2amFailedTreePageCookie, as2paTotalPartitions=as2paTotalPartitions, ss2rmConflictsPerSec=ss2rmConflictsPerSec, as2memPagePool8LookasideKB=as2memPagePool8LookasideKB, rs2wbsTotalCacheHitSemanticModel=rs2wbsTotalCacheHitSemanticModel, sa2JobsTable=sa2JobsTable, as2seqCurrentDimensionQueries=as2seqCurrentDimensionQueries, rs2wbsTotalCacheMisses=rs2wbsTotalCacheMisses, ss2gsTempTablesForDestruction=ss2gsTempTablesForDestruction, ss2dbReplPendingXacts=ss2dbReplPendingXacts, ss2bdtMsgFragmentReceivesSec=ss2bdtMsgFragmentReceivesSec, as2NameTable=as2NameTable, as2memMemoryLimitLowKB=as2memMemoryLimitLowKB, sa2JobsEntry=sa2JobsEntry, ss2bnTargetPages=ss2bnTargetPages, ss2bnPageLifeExpectancy=ss2bnPageLifeExpectancy, ss2CatalogMetadataTable=ss2CatalogMetadataTable, ss2CursorManagerTotalEntry=ss2CursorManagerTotalEntry, ss2dmSendsPerSec=ss2dmSendsPerSec, ss2amAUCleanupsPerSec=ss2amAUCleanupsPerSec, as2seqTotalQueryFromCachFiltered=as2seqTotalQueryFromCachFiltered, as2ThreadsEntry=as2ThreadsEntry, as2ConnectionCurrentConnections=as2ConnectionCurrentConnections, ss2AccessMethodsTable=ss2AccessMethodsTable, ss2bmAWELookupMapsPerSec=ss2bmAWELookupMapsPerSec, ss2bnTotalPages=ss2bnTotalPages, as2seqPersistedCacheHitsPerSec=as2seqPersistedCacheHitsPerSec, ss2sqsMisguidedPlanExecutionsSec=ss2sqsMisguidedPlanExecutionsSec, ss2wgsActiveRequests=ss2wgsActiveRequests, ss2trnLongestTransactRunningTime=ss2trnLongestTransactRunningTime, ss2ResourcePoolStatsEntry=ss2ResourcePoolStatsEntry, sa2NameIndex=sa2NameIndex, ss2DatabaseMirroringTable=ss2DatabaseMirroringTable, ss2SSISPipelinePrivateBuffersUse=ss2SSISPipelinePrivateBuffersUse, as2memInMemFactDataFileKBSec=as2memInMemFactDataFileKBSec, as2MDXEntry=as2MDXEntry, as2memInMemFactStringFileKBSec=as2memInMemFactStringFileKBSec, ss2amLobSSProvideTruncationCount=ss2amLobSSProvideTruncationCount, ss2mmLockOwnerBlocksAllocated=ss2mmLockOwnerBlocksAllocated, rs2wbsCacheMissesPerSec=rs2wbsCacheMissesPerSec, ss2DeprecatedFeaturesUsage=ss2DeprecatedFeaturesUsage, ss2trnVersionStoreSizeKB=ss2trnVersionStoreSizeKB, as2seqsistedCacheLookupsSec=as2seqsistedCacheLookupsSec, ss2dmLogBytesSentFromCachePerSec=ss2dmLogBytesSentFromCachePerSec, as2ThdsQueryPoolBusyThreads=as2ThdsQueryPoolBusyThreads, ss2SSISPipelineBufferMemory=ss2SSISPipelineBufferMemory, as2ProcAggregationsTable=as2ProcAggregationsTable, as2ProcessingTotalRowsWritten=as2ProcessingTotalRowsWritten, as2dmpQueriesPerSec=as2dmpQueriesPerSec, as2LocksEntry=as2LocksEntry, sa2NameInstance=sa2NameInstance, ss2rpsCPUUsagePercent=ss2rpsCPUUsagePercent, ss2bsEnqueuedMessagesTotal=ss2bsEnqueuedMessagesTotal, ss2SQLStatisticsTable=ss2SQLStatisticsTable, rs2wbsCacheHitsSecSemanticModels=rs2wbsCacheHitsSecSemanticModels, ss2baTasksRunning=ss2baTasksRunning, as2seqNetworkRoundTripsPerSec=as2seqNetworkRoundTripsPerSec, ss2cmbtActiveCursors=ss2cmbtActiveCursors, ss2bdtCurrentBytesForRecvIPerO=ss2bdtCurrentBytesForRecvIPerO, as2memCleanerBalancePerSec=as2memCleanerBalancePerSec, ss2BufferPartitionEntry=ss2BufferPartitionEntry, ss2trnUpdateSnapshotTransactions=ss2trnUpdateSnapshotTransactions, rs2wbsReportsExecutedPerSec=rs2wbsReportsExecutedPerSec, as2ThdsLongParsingJobRate=as2ThdsLongParsingJobRate, ss2bsEnqueuedTransmissionQMsgSec=ss2bsEnqueuedTransmissionQMsgSec, ss2LatchesLatchWaitsPerSec=ss2LatchesLatchWaitsPerSec, ss2rsSnapshotDeliveredTransSec=ss2rsSnapshotDeliveredTransSec, rs2wbsTotalReportsExecute=rs2wbsTotalReportsExecute, ss2sqsBatchRequestsPerSec=ss2sqsBatchRequestsPerSec, ss2TraceEventStatisticsTable=ss2TraceEventStatisticsTable, ss2trnSnapshotTransactions=ss2trnSnapshotTransactions, sa2StatisticsTable=sa2StatisticsTable, ss2bmAWEUnmapCallsPerSec=ss2bmAWEUnmapCallsPerSec, as2CacheCurrentKB=as2CacheCurrentKB, as2ProcAggregationsEntry=as2ProcAggregationsEntry, as2MDXNumCellCellHitCacheEvalNod=as2MDXNumCellCellHitCacheEvalNod, ss2bmLazyWritesPerSec=ss2bmLazyWritesPerSec, ss2dmLogBytesReceivedPerSec=ss2dmLogBytesReceivedPerSec, as2ThdsQueryPoolIdleThreads=as2ThdsQueryPoolIdleThreads, rs2wnsCacheMissSecSemanticModels=rs2wnsCacheMissSecSemanticModels, sa2NameTable=sa2NameTable, ss2bdtReceiveIPerOBytesPerSec=ss2bdtReceiveIPerOBytesPerSec, ss2NameTable=ss2NameTable, as2DataMiningModelProcessTable=as2DataMiningModelProcessTable, as2pcNotificationsPerSec=as2pcNotificationsPerSec, rs2wnsCacheHitsPerSec=rs2wnsCacheHitsPerSec, ss2baTasksStartedPerSec=ss2baTasksStartedPerSec, as2dmmpCurrentModelsProcessing=as2dmmpCurrentModelsProcessing, ss2bdtMsgFragmentP10SendsSec=ss2bdtMsgFragmentP10SendsSec, as2MDXNumHashdexHitsCacheEvalNod=as2MDXNumHashdexHitsCacheEvalNod, ss2SSISPipelineBuffersInUse=ss2SSISPipelineBuffersInUse, as2MDXNumCellCellMissCachEvalNod=as2MDXNumCellCellMissCachEvalNod, as2seqMeasureGroupCacheHitsSec=as2seqMeasureGroupCacheHitsSec, sa2JobsSuccessfulJobs=sa2JobsSuccessfulJobs, as2ProcessingRowsConvertedPerSec=as2ProcessingRowsConvertedPerSec, rs2wbsTotalRejectedThreads=rs2wbsTotalRejectedThreads, rs2wnsTotalCachMissSemanticModel=rs2wnsTotalCachMissSemanticModel, ss2dbLogBytesFlushedPerSec=ss2dbLogBytesFlushedPerSec, as2memDimensionStringFiles=as2memDimensionStringFiles, ss2wgsRequestsCompletedPerSec=ss2wgsRequestsCompletedPerSec)
mibBuilder.exportSymbols("INFORMANT-SQLSERVER-V2", ss2amDeferredDroppedRowsets=ss2amDeferredDroppedRowsets, ss2dmLogSendFlowControlTimeMs=ss2dmLogSendFlowControlTimeMs, as2MDXTotalEXISTING=as2MDXTotalEXISTING, as2LocksCurrentLatchWaits=as2LocksCurrentLatchWaits, ss2tstBytesPerSec=ss2tstBytesPerSec, ss2bmCheckpointPagesPerSec=ss2bmCheckpointPagesPerSec, ss2dmLogCompressedBytesRcvdSec=ss2dmLogCompressedBytesRcvdSec, as2dmpTotalQueries=as2dmpTotalQueries, rs2wnsTotalProcessingFailures=rs2wnsTotalProcessingFailures, as2ThdsProcessPoolJobQueueLength=as2ThdsProcessPoolJobQueueLength, as2memFilestoreWritesPerSec=as2memFilestoreWritesPerSec, sa2JobsJobSuccessRate=sa2JobsJobSuccessRate, ss2rpsCacheMemoryTargetKB=ss2rpsCacheMemoryTargetKB, ss2bmPageLookupsPerSec=ss2bmPageLookupsPerSec, ss2bnLocalNodePageLookupsPerSec=ss2bnLocalNodePageLookupsPerSec, as2memInMemAggregationMapFileKB=as2memInMemAggregationMapFileKB, as2LocksLatchWaitsPerSec=as2LocksLatchWaitsPerSec, as2seqTotalDimensionQueries=as2seqTotalDimensionQueries, ss2gsActiveTempTables=ss2gsActiveTempTables, ss2sqsUnsafeAutoParamsPerSec=ss2sqsUnsafeAutoParamsPerSec, ss2DeprecatedFeaturesTable=ss2DeprecatedFeaturesTable, as2memPotenMemFactStringFileKB=as2memPotenMemFactStringFileKB, ss2amExtentDeallocationsPerSec=ss2amExtentDeallocationsPerSec, ss2LatchesTable=ss2LatchesTable, ss2ExecStatisticsTable=ss2ExecStatisticsTable, ss2TraceEventStatisticsEntry=ss2TraceEventStatisticsEntry, ss2bmReadaheadPagesPerSec=ss2bmReadaheadPagesPerSec, ss2wsInstance=ss2wsInstance, sa2JobStepsQueuedSteps=sa2JobStepsQueuedSteps, as2MDXTotalNONEMPTYUnoptimized=as2MDXTotalNONEMPTYUnoptimized, ss2cmbtCursorCacheUseCountsSec=ss2cmbtCursorCacheUseCountsSec, as2memFactStringFiles=as2memFactStringFiles, ss2rpsCompileMemoryTargetKB=ss2rpsCompileMemoryTargetKB, ss2BackupDeviceDeviceputBytesSec=ss2BackupDeviceDeviceputBytesSec, ss2amFailedLeafPageCookie=ss2amFailedLeafPageCookie, ss2mmSQLCacheMemoryKB=ss2mmSQLCacheMemoryKB, as2CacheTotalFiltIteratorCachMis=as2CacheTotalFiltIteratorCachMis, ss2bsCorruptedMessagesTotal=ss2bsCorruptedMessagesTotal, as2memFilestorePageFaultsPerSec=as2memFilestorePageFaultsPerSec, as2memInMemAggregateMapFileKBSec=as2memInMemAggregateMapFileKBSec, ss2bmAWEWriteMapsPerSec=ss2bmAWEWriteMapsPerSec, as2paRowsCreatedPerSec=as2paRowsCreatedPerSec, ss2ReplicationAgentsTable=ss2ReplicationAgentsTable, ss2rpsQueryExecMemoryTargetKB=ss2rpsQueryExecMemoryTargetKB, as2MDXTable=as2MDXTable, rs2wnsNextSessionRequestsPerSec=rs2wnsNextSessionRequestsPerSec, as2memFilestoreKBWritePerSec=as2memFilestoreKBWritePerSec, ss2amTableLockEscalationsPerSec=ss2amTableLockEscalationsPerSec, ss2bpFreeListEmptyPerSec=ss2bpFreeListEmptyPerSec, ss2WaitStatisticsTable=ss2WaitStatisticsTable, ss2LocksLockTimeoutsPerSec=ss2LocksLockTimeoutsPerSec, rs2wbsActiveSessions=rs2wbsActiveSessions, ss2BufferManagerEntry=ss2BufferManagerEntry, ss2gsProcessesBlocked=ss2gsProcessesBlocked, ss2rsInstance=ss2rsInstance, rs2wnsTotalCacheFlushes=rs2wnsTotalCacheFlushes, rs2wbsRequestsPerSec=rs2wbsRequestsPerSec, ss2amWorktablesFromCacheRatio=ss2amWorktablesFromCacheRatio, as2MDXNumEvictionsEvalNode=as2MDXNumEvictionsEvalNode, as2MDXNumOfStorageEngineEvalNode=as2MDXNumOfStorageEngineEvalNode, ss2LatchesAverageLatchWaitTimeMs=ss2LatchesAverageLatchWaitTimeMs, ss2bsEnqueuedP5MessagesPerSec=ss2bsEnqueuedP5MessagesPerSec, sa2JobStepsActiveSteps=sa2JobStepsActiveSteps, ss2CursorManagerByTypeTable=ss2CursorManagerByTypeTable, ss2ReplicationSnapshotEntry=ss2ReplicationSnapshotEntry, as2memPagePool64LookasideKB=as2memPagePool64LookasideKB, as2MDXNumEvalNodThatCovASglCell=as2MDXNumEvalNodThatCovASglCell, as2memPotenMemFactDataFileKB=as2memPotenMemFactDataFileKB, ss2LatchesEntry=ss2LatchesEntry, ss2btosAvgLengthOfBatchedWrites=ss2btosAvgLengthOfBatchedWrites, ss2rpsTargetMemoryKB=ss2rpsTargetMemoryKB, as2paTempFileBytesWrittenPerSec=as2paTempFileBytesWrittenPerSec, as2seqTotalQueriesFromFile=as2seqTotalQueriesFromFile, as2CacheMissesPerSec=as2CacheMissesPerSec, ss2btosTransmissionObjGetsPerSec=ss2btosTransmissionObjGetsPerSec, as2DataMiningPredictionEntry=as2DataMiningPredictionEntry, ss2dbLogFileSSizeKB=ss2dbLogFileSSizeKB, as2CacheLookupsPerSec=as2CacheLookupsPerSec, ss2cmdInstance=ss2cmdInstance, as2seqQueriesFromFilePerSec=as2seqQueriesFromFilePerSec, ss2SSISPipelineBLOBBytesRead=ss2SSISPipelineBLOBBytesRead, as2MDXTotalRecomputes=as2MDXTotalRecomputes, ss2ExecStatisticsOLEDBCalls=ss2ExecStatisticsOLEDBCalls, as2MDXNumOfBulkModeEvalNode=as2MDXNumOfBulkModeEvalNode, ss2cmbtCacheHitRatio=ss2cmbtCacheHitRatio, ss2BrokerPerDBMTransportTable=ss2BrokerPerDBMTransportTable, as2ProcIndexesCurrentPartitions=as2ProcIndexesCurrentPartitions, ss2SSISPipelineRowsRead=ss2SSISPipelineRowsRead, ss2dmBytesReceivedPerSec=ss2dmBytesReceivedPerSec, as2CacheTable=as2CacheTable, as2memPotentialInMemoryMapFileKB=as2memPotentialInMemoryMapFileKB, ss2SSISServiceTable=ss2SSISServiceTable, ss2amDeferredDroppedAUs=ss2amDeferredDroppedAUs, as2memCleanerMemNonshrinkableKB=as2memCleanerMemNonshrinkableKB, ss2dbTransactionsPerSec=ss2dbTransactionsPerSec, ss2LocksNumberOfDeadlocksPerSec=ss2LocksNumberOfDeadlocksPerSec, ss2bdtPendingMsgFragForSendIO=ss2bdtPendingMsgFragForSendIO, ss2ReplicationDistEntry=ss2ReplicationDistEntry, ss2bsEnqueuedTransportMsgFragSec=ss2bsEnqueuedTransportMsgFragSec, as2LocksTotalDeadlocksDetected=as2LocksTotalDeadlocksDetected, ss2bdtMsgFragmentP9SendsSec=ss2bdtMsgFragmentP9SendsSec, ss2DatabasesEntry=ss2DatabasesEntry, rs2WindowsServiceTable=rs2WindowsServiceTable, as2memMemoryLimitHighKB=as2memMemoryLimitHighKB, ss2rlLogreaderDeliveredCmdsSec=ss2rlLogreaderDeliveredCmdsSec, ss2SSISPipelineTable=ss2SSISPipelineTable, ss2baTasksAbortedPerSec=ss2baTasksAbortedPerSec, sa2JobsInstance=sa2JobsInstance, ss2bsEnqueuedP10MessagesPerSec=ss2bsEnqueuedP10MessagesPerSec, ss2mmConnectionMemoryKB=ss2mmConnectionMemoryKB, ss2wgsBlockedTasks=ss2wgsBlockedTasks, ss2amPagesAllocatedPerSec=ss2amPagesAllocatedPerSec, rs2wnsDeliversPerSec=rs2wnsDeliversPerSec, ss2CLRCLRExecution=ss2CLRCLRExecution, as2memCleanerCurrentPrice=as2memCleanerCurrentPrice, rs2wnsMemoryCacheHitsPerSec=rs2wnsMemoryCacheHitsPerSec, ss2bsDialogTimerEventCount=ss2bsDialogTimerEventCount, ss2NameIndex=ss2NameIndex, as2MDXNumSubcubeHitsCacheEvalNod=as2MDXNumSubcubeHitsCacheEvalNod, ss2TraceStatisticsEntry=ss2TraceStatisticsEntry, ss2mmLockBlocks=ss2mmLockBlocks, as2CacheEntry=as2CacheEntry, as2seqQueryFromCacheDirectSec=as2seqQueryFromCacheDirectSec, as2ThreadsTable=as2ThreadsTable, ss2BrokerStatisticsTable=ss2BrokerStatisticsTable, ss2wsLogWriteWaits=ss2wsLogWriteWaits, ss2tesCPUTicksPerSec=ss2tesCPUTicksPerSec, ss2bnForeignPages=ss2bnForeignPages, as2seqDataReadsPerSec=as2seqDataReadsPerSec, ss2DatabaseMirroringEntry=ss2DatabaseMirroringEntry, sa2AlertsActivatedAlerts=sa2AlertsActivatedAlerts, ss2bdtMsgFragmentRecvSizeAvg=ss2bdtMsgFragmentRecvSizeAvg, ss2wsTransactionOwnershipWaits=ss2wsTransactionOwnershipWaits, as2seqMeasureGroupQueriesPerSec=as2seqMeasureGroupQueriesPerSec, ss2gsLogicalConnections=ss2gsLogicalConnections, as2LocksLockWaitsPerSec=as2LocksLockWaitsPerSec, ss2GeneralStatisticsTable=ss2GeneralStatisticsTable, ss2gsConnectionResetPerSec=ss2gsConnectionResetPerSec, ss2bsEnqueuedP4MessagesPerSec=ss2bsEnqueuedP4MessagesPerSec, ss2bsEnqueuedTransportMsgsPerSec=ss2bsEnqueuedTransportMsgsPerSec, ss2amScanPointRevalidationsSec=ss2amScanPointRevalidationsSec, ss2rpsMemoryGrantTimeoutsPerSec=ss2rpsMemoryGrantTimeoutsPerSec, as2NameEntry=as2NameEntry, rs2WebService=rs2WebService, sa2StatisticsSQLServerRestarted=sa2StatisticsSQLServerRestarted, ss2LocksTimeoutsGreaterThan0Sec=ss2LocksTimeoutsGreaterThan0Sec, ss2bdtMsgFragmentSendSizeAvg=ss2bdtMsgFragmentSendSizeAvg, ss2dmRedoBytesPerSec=ss2dmRedoBytesPerSec, as2memQuotaBlocked=as2memQuotaBlocked, sa2AlertsTable=sa2AlertsTable, ss2amFullScansPerSec=ss2amFullScansPerSec, sa2JobsJobsActivatedPerMinute=sa2JobsJobsActivatedPerMinute, rs2WindowsServiceEntry=rs2WindowsServiceEntry, ss2sqsGuidedPlanExecutionsPerSec=ss2sqsGuidedPlanExecutionsPerSec, as2MDXNumOfCacheBulkModeEvalNode=as2MDXNumOfCacheBulkModeEvalNode, ss2TraceStatisticsTable=ss2TraceStatisticsTable, as2ConnectionCurrentUserSessions=as2ConnectionCurrentUserSessions, sa2JobStepsInstance=sa2JobStepsInstance, as2memInMemFactAggregatFileKBSec=as2memInMemFactAggregatFileKBSec, ss2trnNonSnapshotVersionTransact=ss2trnNonSnapshotVersionTransact, ss2ReplicationLogreaderTable=ss2ReplicationLogreaderTable, ss2SSISPipelineBLOBFilesInUse=ss2SSISPipelineBLOBFilesInUse, ss2amSkippedGhostedRecordsPerSec=ss2amSkippedGhostedRecordsPerSec, as2ConnectionTotalFailures=as2ConnectionTotalFailures, as2seqAvgTimePerQuery=as2seqAvgTimePerQuery, ss2gsTempdbRecoveryUnitId=ss2gsTempdbRecoveryUnitId, sa2JobStepsTotalStepRetries=sa2JobStepsTotalStepRetries, ss2bsEnqueuedMessagesPerSec=ss2bsEnqueuedMessagesPerSec, ss2gsTraceEventNotificationQueue=ss2gsTraceEventNotificationQueue, ss2tstEventsFiredPerSec=ss2tstEventsFiredPerSec, as2LocksUnlockRequestsPerSec=as2LocksUnlockRequestsPerSec, ss2WaitStatisticsEntry=ss2WaitStatisticsEntry, rs2wnsTotalEvents=rs2wnsTotalEvents, ss2BrokerPerDBMTransportEntry=ss2BrokerPerDBMTransportEntry, ss2dmTransactionDelay=ss2dmTransactionDelay, ss2mmMemoryGrantsPending=ss2mmMemoryGrantsPending, ss2MemoryManagerEntry=ss2MemoryManagerEntry, ss2cmtAsyncPopulationCount=ss2cmtAsyncPopulationCount, as2memInMemoryOtherFileKB=as2memInMemoryOtherFileKB, ss2rdDistDeliveryLatency=ss2rdDistDeliveryLatency, as2MDXTotalNONEMPTYCalculatMemb=as2MDXTotalNONEMPTYCalculatMemb, ss2dmReceivesPerSec=ss2dmReceivesPerSec, as2memCleanerMemoryShrinkableKB=as2memCleanerMemoryShrinkableKB, ss2dbLogFlushesPerSec=ss2dbLogFlushesPerSec, ss2trnVersionStoreUnitCreation=ss2trnVersionStoreUnitCreation, ss2SQLErrorsErrorsPerSec=ss2SQLErrorsErrorsPerSec, ss2bdtReceiveIPerOLenAvg=ss2bdtReceiveIPerOLenAvg, sa2JobsActiveJobs=sa2JobsActiveJobs, ss2UserSettableTable=ss2UserSettableTable, ss2bmTotalPages=ss2bmTotalPages, as2seqFlatCacheHitsPerSec=as2seqFlatCacheHitsPerSec, rs2wnsTotalDeliveries=rs2wnsTotalDeliveries, ss2amAUCleanupBatchesPerSec=ss2amAUCleanupBatchesPerSec, as2CacheDirectHitRatio=as2CacheDirectHitRatio, rs2wnsTotalRejectedThreads=rs2wnsTotalRejectedThreads, rs2wnsActiveSessions=rs2wnsActiveSessions, ss2baTaskLimitReachedPerSec=ss2baTaskLimitReachedPerSec, ss2bsBrokerTransactionRollbacks=ss2bsBrokerTransactionRollbacks, ss2gsLogoutsPerSec=ss2gsLogoutsPerSec, as2memPagePool8AllocKB=as2memPagePool8AllocKB, ss2ExecStatisticsDTCCalls=ss2ExecStatisticsDTCCalls, as2ProcIndexesEntry=as2ProcIndexesEntry, ss2amFreeSpaceScansPerSec=ss2amFreeSpaceScansPerSec, ss2rlLogreaderDeliveredTransSec=ss2rlLogreaderDeliveredTransSec, as2ProcessingTable=as2ProcessingTable, as2ProcessingEntry=as2ProcessingEntry, as2ConnectionEntry=as2ConnectionEntry, ss2bsEnqueuedLocalMessagesPerSec=ss2bsEnqueuedLocalMessagesPerSec, as2seqDataBytesPerSec=as2seqDataBytesPerSec, rs2wnsTotalSnapshotUpdates=rs2wnsTotalSnapshotUpdates, ss2gsTempdbRowsetId=ss2gsTempdbRowsetId, ss2cmbtCachedCursorCounts=ss2cmbtCachedCursorCounts, as2seqMeasureGroupCacheLookupSec=as2seqMeasureGroupCacheLookupSec, ss2ReplicationSnapshotTable=ss2ReplicationSnapshotTable, ss2rpsCPUUsageTargetPercent=ss2rpsCPUUsageTargetPercent, as2seqTotalBytesSent=as2seqTotalBytesSent, sqlServerEngineV2=sqlServerEngineV2, ss2dbWriteTransactionsPerSec=ss2dbWriteTransactionsPerSec, rs2wnsTotalMemoryCacheMisses=rs2wnsTotalMemoryCacheMisses, ss2tstEventsFilteredPerSec=ss2tstEventsFilteredPerSec, ss2cmdCacheEntriesPinnedCount=ss2cmdCacheEntriesPinnedCount, as2seqTotalNetworkRoundTrips=as2seqTotalNetworkRoundTrips, sqlServerAgentV2=sqlServerAgentV2, ss2bdtOpenConnectionCount=ss2bdtOpenConnectionCount, ss2bpFreePages=ss2bpFreePages, as2ProcessingRowsReadPerSec=as2ProcessingRowsReadPerSec, ss2CLRTable=ss2CLRTable, ss2gsUserConnections=ss2gsUserConnections, as2DataMiningModelProcessEntry=as2DataMiningModelProcessEntry, as2memInMemoryFactDataFileKB=as2memInMemoryFactDataFileKB, ss2bsForwardedMsgBytesPerSec=ss2bsForwardedMsgBytesPerSec, as2MDXCurrentNumOfEvalNode=as2MDXCurrentNumOfEvalNode, ss2rmDownloadedChangesPerSec=ss2rmDownloadedChangesPerSec, ss2NameEntry=ss2NameEntry, ss2gsSOAPSQLRequests=ss2gsSOAPSQLRequests, ss2amProbeScansPerSec=ss2amProbeScansPerSec, ss2LatchesNumberOfSuperLatches=ss2LatchesNumberOfSuperLatches, ss2amDroppedRowsetCleanupsPerSec=ss2amDroppedRowsetCleanupsPerSec, ss2amRangeScansPerSec=ss2amRangeScansPerSec, as2ThdsShortParsingJobRate=as2ThdsShortParsingJobRate, rs2ReportServerHTTPEntry=rs2ReportServerHTTPEntry, as2memInMemDimenProtyFileKB=as2memInMemDimenProtyFileKB, ss2bdtRecvIPerOBufferCopiesCount=ss2bdtRecvIPerOBufferCopiesCount, rs2wbsTotalMemoryCacheHits=rs2wbsTotalMemoryCacheHits, ss2amUsedTreePageCookie=ss2amUsedTreePageCookie, as2LocksCurrentLocks=as2LocksCurrentLocks, as2seqTotalRowsSent=as2seqTotalRowsSent, as2seqTotalQueryFromCacheDirect=as2seqTotalQueryFromCacheDirect, ss2LocksLockWaitTimeMs=ss2LocksLockWaitTimeMs, ss2PlanCacheTable=ss2PlanCacheTable, as2seqDimensionCacheHitsPerSec=as2seqDimensionCacheHitsPerSec, as2LocksLockDenialsPerSec=as2LocksLockDenialsPerSec, as2MemoryTable=as2MemoryTable, ss2rdDistDeliveredCmdsPerSec=ss2rdDistDeliveredCmdsPerSec)
mibBuilder.exportSymbols("INFORMANT-SQLSERVER-V2", ss2BackupDeviceTable=ss2BackupDeviceTable, as2NameInstance=as2NameInstance, ss2dbPercentLogUsed=ss2dbPercentLogUsed, sa2AlertsEntry=sa2AlertsEntry, ss2dbBulkCopyThroughputPerSec=ss2dbBulkCopyThroughputPerSec, rs2wbsTotalCacheHits=rs2wbsTotalCacheHits, as2memFilestoreMemoryPinnedKB=as2memFilestoreMemoryPinnedKB, as2seqDimensionCacheLookupSec=as2seqDimensionCacheLookupSec, as2NameIndex=as2NameIndex, ss2bnInstance=ss2bnInstance, rs2ReportServerHTTPTable=rs2ReportServerHTTPTable, ss2mmOptimizerMemoryKB=ss2mmOptimizerMemoryKB, as2dmpConcurrentDMQueries=as2dmpConcurrentDMQueries, ss2trnFreeSpaceInTempdbKB=ss2trnFreeSpaceInTempdbKB, as2ProcessingTotalRowsRead=as2ProcessingTotalRowsRead, as2ThdsProcessingPoolBusyThreads=as2ThdsProcessingPoolBusyThreads, as2memPagePool64AllocKB=as2memPagePool64AllocKB, as2ThdsQueryPoolJobRate=as2ThdsQueryPoolJobRate, ss2amWorktablesCreatedPerSec=ss2amWorktablesCreatedPerSec, ss2rpsUsedMemoryKB=ss2rpsUsedMemoryKB, ss2dbReplTransRate=ss2dbReplTransRate, ss2dmLogCompressedBytesSentSec=ss2dmLogCompressedBytesSentSec, ss2mmGrantedWorkspaceMemoryKB=ss2mmGrantedWorkspaceMemoryKB, ss2dbLogCacheHitRatio=ss2dbLogCacheHitRatio, as2seqMapBytesPerSec=as2seqMapBytesPerSec, ss2wsMemoryGrantQueueWaits=ss2wsMemoryGrantQueueWaits, ss2bsEnqueuedTransportMsgFragTot=ss2bsEnqueuedTransportMsgFragTot, ss2btosAvgTimeBetweenBatchesMs=ss2btosAvgTimeBetweenBatchesMs, ss2PlanCacheCachePages=ss2PlanCacheCachePages, as2LocksTable=as2LocksTable, sa2AlertsAlertsActivatedMinute=sa2AlertsAlertsActivatedMinute, rs2wnsSnapshotUpdatesPerSec=rs2wnsSnapshotUpdatesPerSec, ss2bsSQLReceivesPerSec=ss2bsSQLReceivesPerSec, ss2bsForwardedMsgByteTotal=ss2bsForwardedMsgByteTotal, ss2UserSettableInstance=ss2UserSettableInstance, ss2rpsInstance=ss2rpsInstance, ss2NameInstance=ss2NameInstance, ss2rpsActiveMemoryGrantAmountKB=ss2rpsActiveMemoryGrantAmountKB, ss2SSISPipelinePrivateBuffMemory=ss2SSISPipelinePrivateBuffMemory, rs2wbsMemoryCacheMissPerSec=rs2wbsMemoryCacheMissPerSec, ss2bsEnqueuedP9MessagesPerSec=ss2bsEnqueuedP9MessagesPerSec, as2MDXCurrentNumOfCachedEvalNode=as2MDXCurrentNumOfCachedEvalNode, ss2bdtMsgFragmentP6SendsSec=ss2bdtMsgFragmentP6SendsSec, ss2bdtCurrentMsgFragForSendIO=ss2bdtCurrentMsgFragForSendIO, ss2ReplicationAgentsEntry=ss2ReplicationAgentsEntry, as2CacheTotalMisses=as2CacheTotalMisses, rs2wbsReportRequests=rs2wbsReportRequests, as2memInMemoryOtherFileKBPerSec=as2memInMemoryOtherFileKBPerSec, ss2BrokerStatisticsEntry=ss2BrokerStatisticsEntry)
