#
# PySNMP MIB module CENTILLION-SYSTEM-MONITOR-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CENTILLION-SYSTEM-MONITOR-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:30:34 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion")
sysMonitor, = mibBuilder.importSymbols("CENTILLION-ROOT-MIB", "sysMonitor")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
TimeTicks, NotificationType, ModuleIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, Gauge32, Unsigned32, MibIdentifier, Counter64, Counter32, IpAddress, Integer32, ObjectIdentity, Bits = mibBuilder.importSymbols("SNMPv2-SMI", "TimeTicks", "NotificationType", "ModuleIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "Gauge32", "Unsigned32", "MibIdentifier", "Counter64", "Counter32", "IpAddress", "Integer32", "ObjectIdentity", "Bits")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
cardMonitorTable = MibTable((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1), )
if mibBuilder.loadTexts: cardMonitorTable.setStatus('mandatory')
cardMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1), ).setIndexNames((0, "CENTILLION-SYSTEM-MONITOR-MIB", "cardMonIndex"))
if mibBuilder.loadTexts: cardMonEntry.setStatus('mandatory')
cardMonIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonIndex.setStatus('mandatory')
cardMonCellsReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCellsReceived.setStatus('mandatory')
cardMonCellsTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCellsTransmitted.setStatus('mandatory')
cardMonCellsDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCellsDropped.setStatus('mandatory')
cardMonSARReceived = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonSARReceived.setStatus('mandatory')
cardMonSARTransmitted = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonSARTransmitted.setStatus('mandatory')
cardMonSARDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonSARDropped.setStatus('mandatory')
cardMonMSIMsgs = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonMSIMsgs.setStatus('mandatory')
cardMonCardInsertions = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCardInsertions.setStatus('mandatory')
cardMonCardRemovals = MibTableColumn((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cardMonCardRemovals.setStatus('mandatory')
cpuPctUse = MibScalar((1, 3, 6, 1, 4, 1, 930, 2, 1, 3, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cpuPctUse.setStatus('mandatory')
mibBuilder.exportSymbols("CENTILLION-SYSTEM-MONITOR-MIB", cardMonitorTable=cardMonitorTable, cardMonEntry=cardMonEntry, cardMonCardInsertions=cardMonCardInsertions, cardMonIndex=cardMonIndex, cardMonCellsTransmitted=cardMonCellsTransmitted, cpuPctUse=cpuPctUse, cardMonSARTransmitted=cardMonSARTransmitted, cardMonMSIMsgs=cardMonMSIMsgs, cardMonCellsDropped=cardMonCellsDropped, cardMonSARReceived=cardMonSARReceived, cardMonCellsReceived=cardMonCellsReceived, cardMonCardRemovals=cardMonCardRemovals, cardMonSARDropped=cardMonSARDropped)
