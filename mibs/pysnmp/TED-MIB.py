#
# PySNMP MIB module TED-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TED-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:08:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion")
Float32TC, = mibBuilder.importSymbols("FLOAT-TC-MIB", "Float32TC")
IANAGmplsLSPEncodingTypeTC, IANAGmplsSwitchingTypeTC = mibBuilder.importSymbols("IANA-GMPLS-TC-MIB", "IANAGmplsLSPEncodingTypeTC", "IANAGmplsSwitchingTypeTC")
InetAddressType, InetAddress = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
ObjectIdentity, iso, NotificationType, Counter32, IpAddress, transmission, Bits, ModuleIdentity, MibIdentifier, Unsigned32, Gauge32, Counter64, TimeTicks, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "iso", "NotificationType", "Counter32", "IpAddress", "transmission", "Bits", "ModuleIdentity", "MibIdentifier", "Unsigned32", "Gauge32", "Counter64", "TimeTicks", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn")
RowPointer, TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "TextualConvention", "DisplayString")
tedMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 273))
tedMIB.setRevisions(('2012-12-21 00:00',))
if mibBuilder.loadTexts: tedMIB.setLastUpdated('201212210000Z')
if mibBuilder.loadTexts: tedMIB.setOrganization('IETF CCAMP Working Group.')
class TedAreaIdTC(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 20)

class TedRouterIdTC(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 6)

class TedLinkIndexTC(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 8)

tedNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 273, 0))
tedObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 273, 1))
tedConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 273, 2))
tedTable = MibTable((1, 3, 6, 1, 2, 1, 10, 273, 1, 1), )
if mibBuilder.loadTexts: tedTable.setStatus('current')
tedEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1), ).setIndexNames((0, "TED-MIB", "tedLocalRouterId"), (0, "TED-MIB", "tedRemoteRouterId"), (0, "TED-MIB", "tedLinkInformationSource"), (0, "TED-MIB", "tedLinkIndex"))
if mibBuilder.loadTexts: tedEntry.setStatus('current')
tedLinkInformationSource = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 0), ("locallyConfigured", 1), ("ospfv2", 2), ("ospfv3", 3), ("isis", 4), ("other", 5))))
if mibBuilder.loadTexts: tedLinkInformationSource.setStatus('current')
tedLocalRouterId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 2), TedRouterIdTC())
if mibBuilder.loadTexts: tedLocalRouterId.setStatus('current')
tedRemoteRouterId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 3), TedRouterIdTC())
if mibBuilder.loadTexts: tedRemoteRouterId.setStatus('current')
tedLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 4), TedLinkIndexTC())
if mibBuilder.loadTexts: tedLinkIndex.setStatus('current')
tedLinkInformationData = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 5), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedLinkInformationData.setStatus('current')
tedLinkState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("unknown", 0), ("up", 1), ("down", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedLinkState.setStatus('current')
tedAreaId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 7), TedAreaIdTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedAreaId.setStatus('current')
tedLinkType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pointToPoint", 1), ("multiAccess", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedLinkType.setStatus('current')
tedTeRouterIdAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 9), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedTeRouterIdAddrType.setStatus('current')
tedTeRouterIdAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 10), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedTeRouterIdAddr.setStatus('current')
tedLinkIdAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 11), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedLinkIdAddrType.setStatus('current')
tedLinkIdAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 12), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedLinkIdAddr.setStatus('current')
tedMetric = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedMetric.setStatus('current')
tedMaxBandwidth = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 14), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedMaxBandwidth.setStatus('current')
tedMaxReservableBandwidth = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 15), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedMaxReservableBandwidth.setStatus('current')
tedUnreservedBandwidthPri0 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 16), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedUnreservedBandwidthPri0.setStatus('current')
tedUnreservedBandwidthPri1 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 17), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedUnreservedBandwidthPri1.setStatus('current')
tedUnreservedBandwidthPri2 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 18), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedUnreservedBandwidthPri2.setStatus('current')
tedUnreservedBandwidthPri3 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 19), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedUnreservedBandwidthPri3.setStatus('current')
tedUnreservedBandwidthPri4 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 20), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedUnreservedBandwidthPri4.setStatus('current')
tedUnreservedBandwidthPri5 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 21), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedUnreservedBandwidthPri5.setStatus('current')
tedUnreservedBandwidthPri6 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 22), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedUnreservedBandwidthPri6.setStatus('current')
tedUnreservedBandwidthPri7 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 23), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedUnreservedBandwidthPri7.setStatus('current')
tedAdministrativeGroup = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedAdministrativeGroup.setStatus('current')
tedLocalId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 25), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedLocalId.setStatus('current')
tedRemoteId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedRemoteId.setStatus('current')
tedLinkProtectionType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 1, 1, 27), Bits().clone(namedValues=NamedValues(("extraTraffic", 0), ("unprotected", 1), ("shared", 2), ("dedicatedOneToOne", 3), ("dedicatedOnePlusOne", 4), ("enhanced", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedLinkProtectionType.setStatus('current')
tedLocalIfAddrTable = MibTable((1, 3, 6, 1, 2, 1, 10, 273, 1, 2), )
if mibBuilder.loadTexts: tedLocalIfAddrTable.setStatus('current')
tedLocalIfAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 273, 1, 2, 1), ).setIndexNames((0, "TED-MIB", "tedLinkIndex"), (0, "TED-MIB", "tedLocalIfAddr"))
if mibBuilder.loadTexts: tedLocalIfAddrEntry.setStatus('current')
tedLocalIfAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 2, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedLocalIfAddrType.setStatus('current')
tedLocalIfAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 2, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: tedLocalIfAddr.setStatus('current')
tedRemoteIfAddrTable = MibTable((1, 3, 6, 1, 2, 1, 10, 273, 1, 3), )
if mibBuilder.loadTexts: tedRemoteIfAddrTable.setStatus('current')
tedRemoteIfAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 273, 1, 3, 1), ).setIndexNames((0, "TED-MIB", "tedLinkIndex"), (0, "TED-MIB", "tedRemoteIfAddr"))
if mibBuilder.loadTexts: tedRemoteIfAddrEntry.setStatus('current')
tedRemoteIfAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 3, 1, 1), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedRemoteIfAddrType.setStatus('current')
tedRemoteIfAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 3, 1, 2), InetAddress().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: tedRemoteIfAddr.setStatus('current')
tedSwCapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 273, 1, 4), )
if mibBuilder.loadTexts: tedSwCapTable.setStatus('current')
tedSwCapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1), ).setIndexNames((0, "TED-MIB", "tedLinkIndex"), (0, "TED-MIB", "tedSwCapIndex"))
if mibBuilder.loadTexts: tedSwCapEntry.setStatus('current')
tedSwCapIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: tedSwCapIndex.setStatus('current')
tedSwCapType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 2), IANAGmplsSwitchingTypeTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapType.setStatus('current')
tedSwCapEncoding = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 3), IANAGmplsLSPEncodingTypeTC()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapEncoding.setStatus('current')
tedSwCapMaxLspBandwidthPri0 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 4), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapMaxLspBandwidthPri0.setStatus('current')
tedSwCapMaxLspBandwidthPri1 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 5), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapMaxLspBandwidthPri1.setStatus('current')
tedSwCapMaxLspBandwidthPri2 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 6), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapMaxLspBandwidthPri2.setStatus('current')
tedSwCapMaxLspBandwidthPri3 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 7), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapMaxLspBandwidthPri3.setStatus('current')
tedSwCapMaxLspBandwidthPri4 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 8), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapMaxLspBandwidthPri4.setStatus('current')
tedSwCapMaxLspBandwidthPri5 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 9), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapMaxLspBandwidthPri5.setStatus('current')
tedSwCapMaxLspBandwidthPri6 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 10), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapMaxLspBandwidthPri6.setStatus('current')
tedSwCapMaxLspBandwidthPri7 = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 11), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapMaxLspBandwidthPri7.setStatus('current')
tedSwCapMinLspBandwidth = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 12), Float32TC()).setUnits('Byte per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapMinLspBandwidth.setStatus('current')
tedSwCapIfMtu = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapIfMtu.setStatus('current')
tedSwCapIndication = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 4, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("standard", 0), ("arbitrary", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSwCapIndication.setStatus('current')
tedSrlgTable = MibTable((1, 3, 6, 1, 2, 1, 10, 273, 1, 5), )
if mibBuilder.loadTexts: tedSrlgTable.setStatus('current')
tedSrlgEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 273, 1, 5, 1), ).setIndexNames((0, "TED-MIB", "tedLinkIndex"), (0, "TED-MIB", "tedSrlgIndex"))
if mibBuilder.loadTexts: tedSrlgEntry.setStatus('current')
tedSrlgIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 5, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: tedSrlgIndex.setStatus('current')
tedSrlg = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 273, 1, 5, 1, 2), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tedSrlg.setStatus('current')
tedStatusChangeNotificationMaxRate = MibScalar((1, 3, 6, 1, 2, 1, 10, 273, 1, 6), Unsigned32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tedStatusChangeNotificationMaxRate.setStatus('current')
tedCreatedDeletedNotificationMaxRate = MibScalar((1, 3, 6, 1, 2, 1, 10, 273, 1, 7), Unsigned32().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tedCreatedDeletedNotificationMaxRate.setStatus('current')
tedStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 10, 273, 0, 1)).setObjects(("TED-MIB", "tedLinkState"))
if mibBuilder.loadTexts: tedStatusChange.setStatus('current')
tedEntryCreated = NotificationType((1, 3, 6, 1, 2, 1, 10, 273, 0, 2)).setObjects(("TED-MIB", "tedLinkState"))
if mibBuilder.loadTexts: tedEntryCreated.setStatus('current')
tedEntryDeleted = NotificationType((1, 3, 6, 1, 2, 1, 10, 273, 0, 3)).setObjects(("TED-MIB", "tedLinkState"))
if mibBuilder.loadTexts: tedEntryDeleted.setStatus('current')
tedCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 273, 2, 1))
tedGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 273, 2, 2))
tedModuleFullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 273, 2, 1, 1)).setObjects(("TED-MIB", "tedMainGroup"), ("TED-MIB", "tedObjectsGroup"), ("TED-MIB", "tedNotificationGroup"), ("TED-MIB", "tedUnnumberedLinkGroup"), ("TED-MIB", "tedNumberedLinkGroup"), ("TED-MIB", "tedSwCapGroup"), ("TED-MIB", "tedSwCapMinLspBandwidthGroup"), ("TED-MIB", "tedSwCapIfMtuGroup"), ("TED-MIB", "tedSwCapIndicationGroup"), ("TED-MIB", "tedSrlgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedModuleFullCompliance = tedModuleFullCompliance.setStatus('current')
tedModuleReadOnlyCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 273, 2, 1, 2)).setObjects(("TED-MIB", "tedMainGroup"), ("TED-MIB", "tedUnnumberedLinkGroup"), ("TED-MIB", "tedNumberedLinkGroup"), ("TED-MIB", "tedSwCapGroup"), ("TED-MIB", "tedSwCapMinLspBandwidthGroup"), ("TED-MIB", "tedSwCapIfMtuGroup"), ("TED-MIB", "tedSwCapIndicationGroup"), ("TED-MIB", "tedSrlgGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedModuleReadOnlyCompliance = tedModuleReadOnlyCompliance.setStatus('current')
tedMainGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 1)).setObjects(("TED-MIB", "tedLinkState"), ("TED-MIB", "tedAreaId"), ("TED-MIB", "tedLinkType"), ("TED-MIB", "tedTeRouterIdAddrType"), ("TED-MIB", "tedTeRouterIdAddr"), ("TED-MIB", "tedLinkIdAddrType"), ("TED-MIB", "tedLinkIdAddr"), ("TED-MIB", "tedMetric"), ("TED-MIB", "tedMaxBandwidth"), ("TED-MIB", "tedMaxReservableBandwidth"), ("TED-MIB", "tedUnreservedBandwidthPri0"), ("TED-MIB", "tedUnreservedBandwidthPri1"), ("TED-MIB", "tedUnreservedBandwidthPri2"), ("TED-MIB", "tedUnreservedBandwidthPri3"), ("TED-MIB", "tedUnreservedBandwidthPri4"), ("TED-MIB", "tedUnreservedBandwidthPri5"), ("TED-MIB", "tedUnreservedBandwidthPri6"), ("TED-MIB", "tedUnreservedBandwidthPri7"), ("TED-MIB", "tedAdministrativeGroup"), ("TED-MIB", "tedLinkProtectionType"), ("TED-MIB", "tedLinkInformationData"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedMainGroup = tedMainGroup.setStatus('current')
tedObjectsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 2)).setObjects(("TED-MIB", "tedStatusChangeNotificationMaxRate"), ("TED-MIB", "tedCreatedDeletedNotificationMaxRate"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedObjectsGroup = tedObjectsGroup.setStatus('current')
tedNotificationGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 3)).setObjects(("TED-MIB", "tedStatusChange"), ("TED-MIB", "tedEntryCreated"), ("TED-MIB", "tedEntryDeleted"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedNotificationGroup = tedNotificationGroup.setStatus('current')
tedUnnumberedLinkGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 4)).setObjects(("TED-MIB", "tedLocalId"), ("TED-MIB", "tedRemoteId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedUnnumberedLinkGroup = tedUnnumberedLinkGroup.setStatus('current')
tedNumberedLinkGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 5)).setObjects(("TED-MIB", "tedLocalIfAddrType"), ("TED-MIB", "tedRemoteIfAddrType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedNumberedLinkGroup = tedNumberedLinkGroup.setStatus('current')
tedSwCapGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 6)).setObjects(("TED-MIB", "tedSwCapType"), ("TED-MIB", "tedSwCapEncoding"), ("TED-MIB", "tedSwCapMaxLspBandwidthPri0"), ("TED-MIB", "tedSwCapMaxLspBandwidthPri1"), ("TED-MIB", "tedSwCapMaxLspBandwidthPri2"), ("TED-MIB", "tedSwCapMaxLspBandwidthPri3"), ("TED-MIB", "tedSwCapMaxLspBandwidthPri4"), ("TED-MIB", "tedSwCapMaxLspBandwidthPri5"), ("TED-MIB", "tedSwCapMaxLspBandwidthPri6"), ("TED-MIB", "tedSwCapMaxLspBandwidthPri7"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedSwCapGroup = tedSwCapGroup.setStatus('current')
tedSwCapMinLspBandwidthGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 7)).setObjects(("TED-MIB", "tedSwCapMinLspBandwidth"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedSwCapMinLspBandwidthGroup = tedSwCapMinLspBandwidthGroup.setStatus('current')
tedSwCapIfMtuGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 8)).setObjects(("TED-MIB", "tedSwCapIfMtu"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedSwCapIfMtuGroup = tedSwCapIfMtuGroup.setStatus('current')
tedSwCapIndicationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 9)).setObjects(("TED-MIB", "tedSwCapIndication"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedSwCapIndicationGroup = tedSwCapIndicationGroup.setStatus('current')
tedSrlgGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 273, 2, 2, 10)).setObjects(("TED-MIB", "tedSrlg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tedSrlgGroup = tedSrlgGroup.setStatus('current')
mibBuilder.exportSymbols("TED-MIB", tedTeRouterIdAddrType=tedTeRouterIdAddrType, tedSwCapTable=tedSwCapTable, tedAreaId=tedAreaId, tedNotificationGroup=tedNotificationGroup, tedRemoteIfAddrTable=tedRemoteIfAddrTable, tedMainGroup=tedMainGroup, tedLocalRouterId=tedLocalRouterId, tedNumberedLinkGroup=tedNumberedLinkGroup, tedLocalIfAddr=tedLocalIfAddr, tedRemoteIfAddrType=tedRemoteIfAddrType, tedSwCapEntry=tedSwCapEntry, tedAdministrativeGroup=tedAdministrativeGroup, tedSwCapType=tedSwCapType, TedAreaIdTC=TedAreaIdTC, tedSwCapIfMtu=tedSwCapIfMtu, tedUnreservedBandwidthPri6=tedUnreservedBandwidthPri6, tedObjectsGroup=tedObjectsGroup, tedTable=tedTable, tedSwCapMaxLspBandwidthPri1=tedSwCapMaxLspBandwidthPri1, tedLinkProtectionType=tedLinkProtectionType, tedUnnumberedLinkGroup=tedUnnumberedLinkGroup, tedSwCapMaxLspBandwidthPri6=tedSwCapMaxLspBandwidthPri6, tedSwCapIfMtuGroup=tedSwCapIfMtuGroup, tedCreatedDeletedNotificationMaxRate=tedCreatedDeletedNotificationMaxRate, tedSwCapMaxLspBandwidthPri7=tedSwCapMaxLspBandwidthPri7, tedLinkIdAddrType=tedLinkIdAddrType, tedSwCapMaxLspBandwidthPri4=tedSwCapMaxLspBandwidthPri4, tedLinkInformationSource=tedLinkInformationSource, tedUnreservedBandwidthPri2=tedUnreservedBandwidthPri2, tedLocalIfAddrType=tedLocalIfAddrType, tedLinkInformationData=tedLinkInformationData, tedMIB=tedMIB, tedMaxBandwidth=tedMaxBandwidth, tedModuleReadOnlyCompliance=tedModuleReadOnlyCompliance, tedLinkType=tedLinkType, PYSNMP_MODULE_ID=tedMIB, TedLinkIndexTC=TedLinkIndexTC, TedRouterIdTC=TedRouterIdTC, tedEntryCreated=tedEntryCreated, tedSwCapMinLspBandwidthGroup=tedSwCapMinLspBandwidthGroup, tedLocalId=tedLocalId, tedSrlg=tedSrlg, tedStatusChange=tedStatusChange, tedSwCapEncoding=tedSwCapEncoding, tedTeRouterIdAddr=tedTeRouterIdAddr, tedEntry=tedEntry, tedSwCapMaxLspBandwidthPri5=tedSwCapMaxLspBandwidthPri5, tedUnreservedBandwidthPri5=tedUnreservedBandwidthPri5, tedSwCapGroup=tedSwCapGroup, tedLinkIndex=tedLinkIndex, tedSwCapMinLspBandwidth=tedSwCapMinLspBandwidth, tedUnreservedBandwidthPri1=tedUnreservedBandwidthPri1, tedObjects=tedObjects, tedSwCapIndication=tedSwCapIndication, tedLocalIfAddrTable=tedLocalIfAddrTable, tedSrlgIndex=tedSrlgIndex, tedUnreservedBandwidthPri0=tedUnreservedBandwidthPri0, tedConformance=tedConformance, tedMetric=tedMetric, tedRemoteRouterId=tedRemoteRouterId, tedSrlgTable=tedSrlgTable, tedSrlgGroup=tedSrlgGroup, tedRemoteIfAddrEntry=tedRemoteIfAddrEntry, tedLocalIfAddrEntry=tedLocalIfAddrEntry, tedSwCapMaxLspBandwidthPri2=tedSwCapMaxLspBandwidthPri2, tedModuleFullCompliance=tedModuleFullCompliance, tedRemoteId=tedRemoteId, tedSwCapMaxLspBandwidthPri3=tedSwCapMaxLspBandwidthPri3, tedSrlgEntry=tedSrlgEntry, tedUnreservedBandwidthPri4=tedUnreservedBandwidthPri4, tedStatusChangeNotificationMaxRate=tedStatusChangeNotificationMaxRate, tedEntryDeleted=tedEntryDeleted, tedMaxReservableBandwidth=tedMaxReservableBandwidth, tedGroups=tedGroups, tedRemoteIfAddr=tedRemoteIfAddr, tedLinkState=tedLinkState, tedLinkIdAddr=tedLinkIdAddr, tedSwCapMaxLspBandwidthPri0=tedSwCapMaxLspBandwidthPri0, tedSwCapIndicationGroup=tedSwCapIndicationGroup, tedNotifications=tedNotifications, tedSwCapIndex=tedSwCapIndex, tedUnreservedBandwidthPri7=tedUnreservedBandwidthPri7, tedCompliances=tedCompliances, tedUnreservedBandwidthPri3=tedUnreservedBandwidthPri3)
