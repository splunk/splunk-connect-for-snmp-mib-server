#
# PySNMP MIB module WWP-LEOS-TABLE-CHG-NOTIF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WWP-LEOS-TABLE-CHG-NOTIF-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:31:43 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueRangeConstraint, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueRangeConstraint", "ConstraintsUnion")
AddressFamilyNumbers, = mibBuilder.importSymbols("IANA-ADDRESS-FAMILY-NUMBERS-MIB", "AddressFamilyNumbers")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Unsigned32, iso, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, Counter32, Counter64, NotificationType, IpAddress, TimeTicks, MibIdentifier, Gauge32, ModuleIdentity, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Unsigned32", "iso", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "Counter32", "Counter64", "NotificationType", "IpAddress", "TimeTicks", "MibIdentifier", "Gauge32", "ModuleIdentity", "Integer32")
TruthValue, MacAddress, DisplayString, TextualConvention, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue", "MacAddress", "DisplayString", "TextualConvention", "RowStatus")
wwpModules, wwpModulesLeos = mibBuilder.importSymbols("WWP-SMI", "wwpModules", "wwpModulesLeos")
wwpLeosTableChgNotifMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9))
wwpLeosTableChgNotifMIB.setRevisions(('2002-03-12 00:00',))
if mibBuilder.loadTexts: wwpLeosTableChgNotifMIB.setLastUpdated('200203120000Z')
if mibBuilder.loadTexts: wwpLeosTableChgNotifMIB.setOrganization('World Wide Packets, Inc')
wwpLeosTableChgNotifMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1))
wwpLeosTableChgNotif = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 7))
wwpLeosTableChgNotifMIBNotificationPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 2))
wwpLeosTableChgNotifMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 2, 0))
wwpLeosTableChgNotifMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 3))
wwpLeosTableChgNotifMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 3, 1))
wwpLeosTableChgNotifMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 3, 2))
wwpLeosTableTrapNotifTimer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 3600))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosTableTrapNotifTimer.setStatus('current')
wwpLeosListenerRefreshTimer = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: wwpLeosListenerRefreshTimer.setStatus('current')
wwpLeosTableChgNotifTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4), )
if mibBuilder.loadTexts: wwpLeosTableChgNotifTable.setStatus('current')
wwpLeosTableChgNotifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4, 1), ).setIndexNames((0, "WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosTableChgNotifIndex"))
if mibBuilder.loadTexts: wwpLeosTableChgNotifEntry.setStatus('current')
wwpLeosTableChgNotifIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTableChgNotifIndex.setStatus('current')
wwpLeosTableChgNotifOid = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4, 1, 2), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTableChgNotifOid.setStatus('current')
wwpLeosTableChgNotifNumChanges = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTableChgNotifNumChanges.setStatus('current')
wwpLeosListenerTable = MibTable((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5), )
if mibBuilder.loadTexts: wwpLeosListenerTable.setStatus('current')
wwpLeosListenerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1), ).setIndexNames((0, "WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosListenerIndex"))
if mibBuilder.loadTexts: wwpLeosListenerEntry.setStatus('current')
wwpLeosListenerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosListenerIndex.setStatus('current')
wwpLeosListenerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1, 2), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosListenerAddr.setStatus('current')
wwpLeosListenerResolvedIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1, 3), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosListenerResolvedIp.setStatus('current')
wwpLeosListenerStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 5, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: wwpLeosListenerStatus.setStatus('current')
wwpLeosTableChgNotifIndexStr = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 7, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosTableChgNotifIndexStr.setStatus('current')
wwpLeosListenerRefreshCount = MibScalar((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 1, 7, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(30, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: wwpLeosListenerRefreshCount.setStatus('current')
wwpLeosTableChgTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 2, 0, 1)).setObjects(("WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosTableChgNotifOid"), ("WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosTableChgNotifNumChanges"), ("WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosTableChgNotifIndexStr"))
if mibBuilder.loadTexts: wwpLeosTableChgTrap.setStatus('current')
wwpLeosTableRefreshTrap = NotificationType((1, 3, 6, 1, 4, 1, 6141, 2, 60, 9, 2, 0, 2)).setObjects(("WWP-LEOS-TABLE-CHG-NOTIF-MIB", "wwpLeosListenerRefreshCount"))
if mibBuilder.loadTexts: wwpLeosTableRefreshTrap.setStatus('current')
mibBuilder.exportSymbols("WWP-LEOS-TABLE-CHG-NOTIF-MIB", wwpLeosListenerRefreshCount=wwpLeosListenerRefreshCount, wwpLeosTableChgNotifOid=wwpLeosTableChgNotifOid, wwpLeosListenerIndex=wwpLeosListenerIndex, wwpLeosTableChgNotifTable=wwpLeosTableChgNotifTable, wwpLeosTableTrapNotifTimer=wwpLeosTableTrapNotifTimer, wwpLeosTableChgNotifMIBObjects=wwpLeosTableChgNotifMIBObjects, wwpLeosTableChgNotifEntry=wwpLeosTableChgNotifEntry, wwpLeosTableChgNotifMIBNotifications=wwpLeosTableChgNotifMIBNotifications, wwpLeosTableChgNotifMIB=wwpLeosTableChgNotifMIB, wwpLeosTableChgTrap=wwpLeosTableChgTrap, wwpLeosTableChgNotifIndexStr=wwpLeosTableChgNotifIndexStr, wwpLeosListenerRefreshTimer=wwpLeosListenerRefreshTimer, wwpLeosTableChgNotif=wwpLeosTableChgNotif, PYSNMP_MODULE_ID=wwpLeosTableChgNotifMIB, wwpLeosTableChgNotifIndex=wwpLeosTableChgNotifIndex, wwpLeosListenerStatus=wwpLeosListenerStatus, wwpLeosTableRefreshTrap=wwpLeosTableRefreshTrap, wwpLeosTableChgNotifMIBCompliances=wwpLeosTableChgNotifMIBCompliances, wwpLeosTableChgNotifMIBNotificationPrefix=wwpLeosTableChgNotifMIBNotificationPrefix, wwpLeosTableChgNotifMIBConformance=wwpLeosTableChgNotifMIBConformance, wwpLeosListenerTable=wwpLeosListenerTable, wwpLeosListenerAddr=wwpLeosListenerAddr, wwpLeosTableChgNotifMIBGroups=wwpLeosTableChgNotifMIBGroups, wwpLeosListenerResolvedIp=wwpLeosListenerResolvedIp, wwpLeosTableChgNotifNumChanges=wwpLeosTableChgNotifNumChanges, wwpLeosListenerEntry=wwpLeosListenerEntry)
