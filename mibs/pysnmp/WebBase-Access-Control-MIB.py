#
# PySNMP MIB module WebBase-Access-Control-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/WebBase-Access-Control-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:32:15 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
dlink_common_mgmt, = mibBuilder.importSymbols("DLINK-ID-REC-MIB", "dlink-common-mgmt")
Ipv6Address, = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
IpAddress, MibScalar, MibTable, MibTableRow, MibTableColumn, Counter32, Counter64, NotificationType, ObjectIdentity, Unsigned32, Bits, iso, ModuleIdentity, Integer32, Gauge32, TimeTicks, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "IpAddress", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Counter32", "Counter64", "NotificationType", "ObjectIdentity", "Unsigned32", "Bits", "iso", "ModuleIdentity", "Integer32", "Gauge32", "TimeTicks", "MibIdentifier")
DisplayString, TextualConvention, RowStatus, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "RowStatus", "MacAddress")
class VlanId(Integer32):
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 4094)

swWACMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 171, 12, 27))
if mibBuilder.loadTexts: swWACMIB.setLastUpdated('0907200000Z')
if mibBuilder.loadTexts: swWACMIB.setOrganization('D-Link Corp.')
swWACCtrl = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 27, 1))
swWACInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 27, 2))
swWACMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 171, 12, 27, 3))
swWebAuthAdminState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWebAuthAdminState.setStatus('current')
swWebAuthMethod = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("local", 1), ("radius", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWebAuthMethod.setStatus('current')
swWebAuthVlanName = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWebAuthVlanName.setStatus('obsolete')
swWebAuthAllPortstate = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWebAuthAllPortstate.setStatus('obsolete')
swWebAuthDefaultredirpath = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWebAuthDefaultredirpath.setStatus('current')
swWebAuthLogouttimer = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWebAuthLogouttimer.setStatus('obsolete')
swWACVirtualIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 7), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACVirtualIpAddr.setStatus('current')
swWACSwitchHttpProtocol = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("http", 1), ("https", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACSwitchHttpProtocol.setStatus('current')
swWACSwitchHttpPort = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACSwitchHttpPort.setStatus('current')
swWACAuthFailOverState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACAuthFailOverState.setStatus('current')
swWACRadiusAuthorizationState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACRadiusAuthorizationState.setStatus('current')
swWACLocalAuthorizationState = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACLocalAuthorizationState.setStatus('current')
swWACAuthClearDefaultredirpath = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("start", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACAuthClearDefaultredirpath.setStatus('current')
swWACVirtualIPv6Addr = MibScalar((1, 3, 6, 1, 4, 1, 171, 12, 27, 1, 14), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACVirtualIPv6Addr.setStatus('current')
swWACAuthInfoTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1), )
if mibBuilder.loadTexts: swWACAuthInfoTable.setStatus('current')
swWACAuthInfoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1), ).setIndexNames((0, "WebBase-Access-Control-MIB", "swWACAuthInfoPort"), (0, "WebBase-Access-Control-MIB", "swWACAuthInfoAuthStatus"), (0, "WebBase-Access-Control-MIB", "swWACAuthInfoMACAddr"))
if mibBuilder.loadTexts: swWACAuthInfoEntry.setStatus('current')
swWACAuthInfoPort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthInfoPort.setStatus('current')
swWACAuthInfoAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("authenticated", 1), ("authenticating", 2), ("blocked", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthInfoAuthStatus.setStatus('current')
swWACAuthInfoMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthInfoMACAddr.setStatus('current')
swWACAuthInfoVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1, 4), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthInfoVID.setStatus('current')
swWACAuthInfoRemainAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthInfoRemainAgeTime.setStatus('current')
swWACAuthInfoIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthInfoIdleTime.setStatus('current')
swWACAuthInfoBlockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthInfoBlockTime.setStatus('current')
swWACAuthInfoStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACAuthInfoStatus.setStatus('current')
swWACAuthInfoPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 1, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthInfoPriority.setStatus('current')
swWACAuthStateTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2), )
if mibBuilder.loadTexts: swWACAuthStateTable.setStatus('current')
swWACAuthStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1), ).setIndexNames((0, "WebBase-Access-Control-MIB", "swWACAuthStatePort"), (0, "WebBase-Access-Control-MIB", "swWACAuthStateOriginalVid"), (0, "WebBase-Access-Control-MIB", "swWACAuthStateMACAddr"))
if mibBuilder.loadTexts: swWACAuthStateEntry.setStatus('current')
swWACAuthStatePort = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthStatePort.setStatus('current')
swWACAuthStateOriginalVid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1, 2), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthStateOriginalVid.setStatus('current')
swWACAuthStateMACAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthStateMACAddr.setStatus('current')
swWACAuthStateAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("authenticated", 1), ("authenticating", 2), ("blocked", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthStateAuthStatus.setStatus('current')
swWACAuthStateAssignVid = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1, 7), VlanId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthStateAssignVid.setStatus('current')
swWACAuthStateAssignPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthStateAssignPriority.setStatus('current')
swWACAuthStateRemainTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1, 12), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthStateRemainTime.setStatus('current')
swWACAuthStateIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWACAuthStateIdleTime.setStatus('current')
swWACAuthStateDelAction = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 2, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("delete", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACAuthStateDelAction.setStatus('current')
swWebAuthPortTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1), )
if mibBuilder.loadTexts: swWebAuthPortTable.setStatus('current')
swWebAuthPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1, 1), ).setIndexNames((0, "WebBase-Access-Control-MIB", "swWebAuthPortIndex"))
if mibBuilder.loadTexts: swWebAuthPortEntry.setStatus('current')
swWebAuthPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1, 1, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWebAuthPortIndex.setStatus('current')
swWebAuthPortState = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("disabled", 2), ("enabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWebAuthPortState.setStatus('current')
swWebAuthPortUserName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1, 1, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWebAuthPortUserName.setStatus('obsolete')
swWebAuthAuthStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("unauthenticated", 1), ("authenticated", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWebAuthAuthStatus.setStatus('obsolete')
swWebAuthAssignedVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWebAuthAssignedVID.setStatus('obsolete')
swWACPortAgeingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACPortAgeingTime.setStatus('current')
swWACPortIdleTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACPortIdleTime.setStatus('current')
swWACPortBlockTime = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 300))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: swWACPortBlockTime.setStatus('current')
swWebAuthUserTable = MibTable((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 2), )
if mibBuilder.loadTexts: swWebAuthUserTable.setStatus('current')
swWebAuthUserEntry = MibTableRow((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 2, 1), ).setIndexNames((0, "WebBase-Access-Control-MIB", "swWebAuthUserNameIndex"))
if mibBuilder.loadTexts: swWebAuthUserEntry.setStatus('current')
swWebAuthUserNameIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: swWebAuthUserNameIndex.setStatus('current')
swWebAuthUserPWD = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 15))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swWebAuthUserPWD.setStatus('current')
swWebAuthUserVlanName = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swWebAuthUserVlanName.setStatus('obsolete')
swWebAuthUserStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 2, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swWebAuthUserStatus.setStatus('current')
swWebAuthUserVID = MibTableColumn((1, 3, 6, 1, 4, 1, 171, 12, 27, 3, 2, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4094))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: swWebAuthUserVID.setStatus('current')
mibBuilder.exportSymbols("WebBase-Access-Control-MIB", swWebAuthAdminState=swWebAuthAdminState, swWACPortBlockTime=swWACPortBlockTime, swWebAuthAllPortstate=swWebAuthAllPortstate, swWACAuthInfoEntry=swWACAuthInfoEntry, swWACAuthStatePort=swWACAuthStatePort, swWACAuthStateOriginalVid=swWACAuthStateOriginalVid, swWACAuthInfoPriority=swWACAuthInfoPriority, swWACInfo=swWACInfo, swWACCtrl=swWACCtrl, swWACAuthInfoVID=swWACAuthInfoVID, VlanId=VlanId, swWACAuthStateDelAction=swWACAuthStateDelAction, swWACRadiusAuthorizationState=swWACRadiusAuthorizationState, swWebAuthPortUserName=swWebAuthPortUserName, swWebAuthUserNameIndex=swWebAuthUserNameIndex, swWACMIB=swWACMIB, PYSNMP_MODULE_ID=swWACMIB, swWebAuthUserStatus=swWebAuthUserStatus, swWACPortIdleTime=swWACPortIdleTime, swWACAuthInfoIdleTime=swWACAuthInfoIdleTime, swWACVirtualIPv6Addr=swWACVirtualIPv6Addr, swWebAuthPortState=swWebAuthPortState, swWebAuthUserEntry=swWebAuthUserEntry, swWACAuthInfoMACAddr=swWACAuthInfoMACAddr, swWebAuthAssignedVID=swWebAuthAssignedVID, swWACMgmt=swWACMgmt, swWACAuthStateTable=swWACAuthStateTable, swWebAuthPortIndex=swWebAuthPortIndex, swWebAuthUserVID=swWebAuthUserVID, swWebAuthDefaultredirpath=swWebAuthDefaultredirpath, swWebAuthPortTable=swWebAuthPortTable, swWACAuthFailOverState=swWACAuthFailOverState, swWACAuthStateMACAddr=swWACAuthStateMACAddr, swWebAuthAuthStatus=swWebAuthAuthStatus, swWACAuthInfoBlockTime=swWACAuthInfoBlockTime, swWebAuthMethod=swWebAuthMethod, swWACPortAgeingTime=swWACPortAgeingTime, swWACAuthInfoPort=swWACAuthInfoPort, swWACAuthInfoRemainAgeTime=swWACAuthInfoRemainAgeTime, swWebAuthUserVlanName=swWebAuthUserVlanName, swWACAuthInfoAuthStatus=swWACAuthInfoAuthStatus, swWebAuthUserPWD=swWebAuthUserPWD, swWACAuthStateAuthStatus=swWACAuthStateAuthStatus, swWACSwitchHttpPort=swWACSwitchHttpPort, swWebAuthVlanName=swWebAuthVlanName, swWACAuthStateEntry=swWACAuthStateEntry, swWACAuthStateIdleTime=swWACAuthStateIdleTime, swWACAuthStateAssignPriority=swWACAuthStateAssignPriority, swWACVirtualIpAddr=swWACVirtualIpAddr, swWACAuthInfoStatus=swWACAuthInfoStatus, swWACAuthInfoTable=swWACAuthInfoTable, swWACAuthStateAssignVid=swWACAuthStateAssignVid, swWACAuthClearDefaultredirpath=swWACAuthClearDefaultredirpath, swWACLocalAuthorizationState=swWACLocalAuthorizationState, swWACSwitchHttpProtocol=swWACSwitchHttpProtocol, swWACAuthStateRemainTime=swWACAuthStateRemainTime, swWebAuthLogouttimer=swWebAuthLogouttimer, swWebAuthUserTable=swWebAuthUserTable, swWebAuthPortEntry=swWebAuthPortEntry)
