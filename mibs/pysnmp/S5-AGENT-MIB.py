#
# PySNMP MIB module S5-AGENT-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/S5-AGENT-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:19:14 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddress, InetAddressType = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType")
Ipv6Address, Ipv6AddressPrefix = mibBuilder.importSymbols("IPV6-TC", "Ipv6Address", "Ipv6AddressPrefix")
PortList, VlanId = mibBuilder.importSymbols("Q-BRIDGE-MIB", "PortList", "VlanId")
s5Agent, = mibBuilder.importSymbols("S5-ROOT-MIB", "s5Agent")
TimeIntervalSec, IpxAddress = mibBuilder.importSymbols("S5-TCS-MIB", "TimeIntervalSec", "IpxAddress")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, MibIdentifier, Counter32, iso, Bits, Gauge32, IpAddress, ModuleIdentity, Unsigned32, NotificationType, Counter64, Integer32, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibIdentifier", "Counter32", "iso", "Bits", "Gauge32", "IpAddress", "ModuleIdentity", "Unsigned32", "NotificationType", "Counter64", "Integer32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
DisplayString, DateAndTime, MacAddress, TruthValue, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "DateAndTime", "MacAddress", "TruthValue", "TextualConvention")
s5AgentMib = ModuleIdentity((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 8))
s5AgentMib.setRevisions(('2015-03-17 00:00', '2015-03-10 00:00', '2015-03-02 00:00', '2015-01-07 00:00', '2014-12-19 00:00', '2014-08-20 00:00', '2014-04-09 00:00', '2014-04-07 00:00', '2013-11-28 00:00', '2013-11-26 00:00', '2013-07-29 00:00', '2013-04-24 00:00', '2013-04-04 00:00', '2013-03-05 00:00', '2013-02-13 00:00', '2013-01-17 00:00', '2012-11-28 00:00', '2012-10-10 00:00', '2012-10-04 00:00', '2012-09-13 00:00', '2012-09-13 00:00', '2012-08-14 00:00', '2012-07-17 00:00', '2012-07-03 00:00', '2012-06-26 00:00', '2012-06-01 00:00', '2012-05-07 00:00', '2012-04-06 00:00', '2012-03-29 00:00', '2012-03-09 00:00', '2012-02-21 00:00', '2012-02-17 00:00', '2011-09-13 00:00', '2011-03-25 00:00', '2011-02-08 00:00', '2010-12-01 00:00', '2010-11-03 00:00', '2010-10-14 00:00', '2010-09-20 00:00', '2010-09-14 00:00', '2010-08-11 00:00', '2010-08-10 00:00', '2010-07-21 00:00', '2010-04-15 00:00', '2010-01-29 00:00', '2009-12-14 00:00', '2009-11-16 00:00', '2009-10-23 00:00', '2009-10-20 00:00', '2009-09-24 00:00', '2009-09-10 00:00', '2009-07-23 00:00', '2009-07-13 00:00', '2009-06-07 00:00', '2009-01-05 00:00', '2008-10-21 00:00', '2008-07-24 00:01', '2008-07-24 00:00', '2008-03-04 00:00', '2008-01-28 00:00', '2008-01-25 00:00', '2007-12-10 00:00', '2007-12-05 00:00', '2007-11-04 00:00', '2007-09-19 00:00', '2007-09-04 00:00', '2007-08-21 00:00', '2007-05-11 00:00', '2007-05-03 00:00', '2007-03-05 00:00', '2007-02-27 00:00', '2007-02-16 00:00', '2007-01-08 00:00', '2006-11-07 00:00', '2006-09-19 00:00', '2006-08-28 00:00', '2006-08-14 00:00', '2006-08-07 00:00', '2006-04-05 00:00', '2006-03-22 00:00', '2006-03-07 00:00', '2006-02-14 00:00', '2005-10-11 00:00', '2005-09-30 00:00', '2005-05-13 00:00', '2005-05-11 00:00', '2005-05-04 00:00', '2005-04-22 00:00', '2005-03-24 00:00', '2005-03-22 00:00', '2004-12-09 00:00', '2004-11-09 00:00', '2004-09-30 00:00', '2004-06-18 00:00', '2003-05-29 00:00',))
if mibBuilder.loadTexts: s5AgentMib.setLastUpdated('201503100000Z')
if mibBuilder.loadTexts: s5AgentMib.setOrganization('Avaya')
s5AgentHw = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 1))
s5AgentInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2))
s5AgentMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3))
s5AgentSystem = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4))
s5AgentBanner = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 5))
s5AgentSntp = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6))
s5AgentSsl = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 7))
s5AgentDaylightSavings = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9))
s5AgentBootConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10))
s5AgentAsciiConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11))
s5AgentLicense = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12))
s5AgentScript = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 13))
s5AgentClock = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 14))
s5AgMyGrpIndx = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgMyGrpIndx.setStatus('current')
s5AgMyComIndx = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgMyComIndx.setStatus('current')
s5AgentGbl = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1))
s5AgInfoReBoot = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("other", 1), ("running", 2), ("restart", 3), ("reboot", 4), ("reset", 5), ("download", 6), ("downloadAndRestart", 7), ("downloadAndReboot", 8), ("downloadAndReset", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoReBoot.setStatus('current')
s5AgInfoWriteCfg = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("write", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoWriteCfg.setStatus('current')
s5AgInfoMgmtProtocolNxtBoot = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ipOnly", 2), ("ipxOnly", 3), ("ipAndIpx", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoMgmtProtocolNxtBoot.setStatus('current')
s5AgInfoMgmtProtocolCur = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ipOnly", 2), ("ipxOnly", 3), ("ipAndIpx", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoMgmtProtocolCur.setStatus('current')
s5AgInfoBootMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("net", 3), ("netWhenNeeded", 4), ("netOrLastAddress", 5), ("dhcp", 6), ("dhcpWhenNeeded", 7), ("dhcpOrLastAddress", 8)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoBootMode.setStatus('current')
s5AgInfoCfgLoadMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("net", 3), ("locAsBk", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoCfgLoadMode.setStatus('current')
s5AgInfoImgLoadMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("local", 2), ("net", 3), ("locAsBk", 4), ("netIfNewer", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoImgLoadMode.setStatus('current')
s5AgInfoImgSaveMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notAvail", 1), ("writeIfDiff", 2), ("writeIfNewer", 3), ("noWrite", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoImgSaveMode.setStatus('current')
s5AgInfoImgSaveStatus = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("notAvail", 1), ("noSave", 2), ("saved", 3), ("saveFailed", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoImgSaveStatus.setStatus('current')
s5AgInfoVer = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoVer.setStatus('current')
s5AgInfoLocStorVer = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoLocStorVer.setStatus('current')
s5AgInfoNxtBootDfltGwAddr = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoNxtBootDfltGwAddr.setStatus('current')
s5AgInfoCurDfltGwAddr = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 13), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoCurDfltGwAddr.setStatus('current')
s5AgInfoDramUsage = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoDramUsage.setStatus('current')
s5AgInfoLoadProtocolNxtBoot = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("ipOnly", 2), ("ipxOnly", 3), ("auto", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoLoadProtocolNxtBoot.setStatus('current')
s5AgInfoLoadProtocolLast = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("reserved", 1), ("ip", 2), ("ipx", 3), ("local", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoLoadProtocolLast.setStatus('current')
s5AgInfoSlotScope = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 17), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoSlotScope.setStatus('current')
s5AgInfoImgType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("typeA", 2), ("typeB", 3), ("typeC", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoImgType.setStatus('current')
s5AgInfoScheduleBootTime = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10080))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoScheduleBootTime.setStatus('current')
s5AgInfoScheduleBootCancel = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("other", 1), ("cancel", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoScheduleBootCancel.setStatus('current')
s5AgInfoNumBootBanks = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoNumBootBanks.setStatus('current')
s5AgInfoNextBootBank = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoNextBootBank.setStatus('current')
s5AgInfoDstLoadBank = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoDstLoadBank.setStatus('current')
s5AgInfoFileAction = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39))).clone(namedValues=NamedValues(("other", 1), ("dnldConfig", 2), ("dnldImg", 3), ("upldConfig", 4), ("upldImg", 5), ("dnldFw", 6), ("upldFw", 7), ("dnldImgIfNewer", 8), ("dnldImgToDram", 9), ("dnldImgNoReset", 10), ("dnldFwNoReset", 11), ("dnldImgFromUsb", 12), ("upldImgToUsb", 13), ("dnldFwFromUsb", 14), ("upldFwToUsb", 15), ("dnldConfigFromUsb", 16), ("upldConfigToUsb", 17), ("dnldLicense", 18), ("upldLicense", 19), ("dnldLicenseFromUsb", 20), ("upldLicenseToUsb", 21), ("copyConfigToNvram", 22), ("dnldSshDsaAuthKeyFromUsb", 23), ("dnldImgFromSftp", 24), ("dnldFwFromSftp", 25), ("dnldConfigFromSftp", 26), ("upldConfigToSftp", 27), ("dnldSshRsaAuthKeyFromUsb", 28), ("dnldSshDsaAuthKeyFromSftp", 29), ("dnldSshRsaAuthKeyFromSftp", 30), ("dnldImgFromSftpNoReset", 31), ("dnldFwFromSftpNoReset", 32), ("dnldLicenseFromSftp", 33), ("dnldImgFromUsbNoReset", 34), ("dnldImgIfNewerNoReset", 35), ("dnldImgIfNewerFromUsb", 36), ("dnldImgIfNewerFromUsbNoReset", 37), ("dnldImgIfNewerFromSftp", 38), ("dnldImgIfNewerFromSftpNoReset", 39)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoFileAction.setStatus('current')
s5AgInfoFileStatus = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("inProgress", 2), ("success", 3), ("fail", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoFileStatus.setStatus('current')
s5AgInfoStackBootpMACUsage = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("useBaseUnitMACAddress", 2), ("useStackMACAddress", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgInfoStackBootpMACUsage.setStatus('current')
s5AgInfoImgDownloadStatus = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 1), ("downloading", 2), ("programming", 3), ("rebooting", 4), ("transferring", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoImgDownloadStatus.setStatus('current')
s5AgInfoImgDownloadPercentComplete = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgInfoImgDownloadPercentComplete.setStatus('current')
s5AgMyIfTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2), )
if mibBuilder.loadTexts: s5AgMyIfTable.setStatus('current')
s5AgMyIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgMyIfIndx"))
if mibBuilder.loadTexts: s5AgMyIfEntry.setStatus('current')
s5AgMyIfIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 1), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgMyIfIndx.setStatus('current')
s5AgMyIfNxtBootIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgMyIfNxtBootIpAddr.setStatus('current')
s5AgMyIfNxtBootNetMask = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgMyIfNxtBootNetMask.setStatus('current')
s5AgMyIfCfgFname = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgMyIfCfgFname.setStatus('current')
s5AgMyIfLdSvrAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgMyIfLdSvrAddr.setStatus('current')
s5AgMyIfImgFname = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgMyIfImgFname.setStatus('current')
s5AgMyIfValidFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("valid", 1), ("invalid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgMyIfValidFlag.setStatus('current')
s5AgMyIfNxtBootIpxAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 8), IpxAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgMyIfNxtBootIpxAddr.setStatus('current')
s5AgMyIfBootRouterAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 9), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgMyIfBootRouterAddr.setStatus('current')
s5AgMyIfMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 2, 1, 10), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgMyIfMacAddr.setStatus('current')
s5AgOthIfTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 3), )
if mibBuilder.loadTexts: s5AgOthIfTable.setStatus('current')
s5AgOthIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 3, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgOthIfGrpIndx"), (0, "S5-AGENT-MIB", "s5AgOthIfComIndx"), (0, "S5-AGENT-MIB", "s5AgOthIfIndx"))
if mibBuilder.loadTexts: s5AgOthIfEntry.setStatus('current')
s5AgOthIfGrpIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgOthIfGrpIndx.setStatus('current')
s5AgOthIfComIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 32767))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgOthIfComIndx.setStatus('current')
s5AgOthIfIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 3, 1, 3), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgOthIfIndx.setStatus('current')
s5AgOthIfIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 3, 1, 4), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgOthIfIpAddr.setStatus('current')
s5AgOthIfIpxAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 3, 1, 5), IpxAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgOthIfIpxAddr.setStatus('current')
s5AgIpRtrDefaultTimeToLive = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 4), TimeIntervalSec().subtype(subtypeSpec=ValueRangeConstraint(60, 3600)).clone(540)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgIpRtrDefaultTimeToLive.setStatus('current')
s5AgIpDefaultRtrSelectionMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("config", 2), ("static", 3), ("dynamic", 4))).clone('dynamic')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgIpDefaultRtrSelectionMode.setStatus('current')
s5AgIpRtrDiscoverySolicitMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("multicast", 1), ("broadcast", 2))).clone('broadcast')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgIpRtrDiscoverySolicitMode.setStatus('current')
s5AgDataCollectTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 7), )
if mibBuilder.loadTexts: s5AgDataCollectTable.setStatus('current')
s5AgDataCollectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 7, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgDataCollectIfIndex"))
if mibBuilder.loadTexts: s5AgDataCollectEntry.setStatus('current')
s5AgDataCollectIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 7, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgDataCollectIfIndex.setStatus('current')
s5AgDataCollectSnTimeStamp = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 7, 1, 2), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgDataCollectSnTimeStamp.setStatus('current')
s5AgDataCollectNetworkAddrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("alwaysOff", 1), ("on", 2), ("off", 3))).clone('on')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDataCollectNetworkAddrStatus.setStatus('current')
s5AgUnAuthIpAddr = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 8), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgUnAuthIpAddr.setStatus('current')
s5AgUnAuthIpxAddr = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 9), IpxAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgUnAuthIpxAddr.setStatus('current')
s5AgUnAuthComm = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 10), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgUnAuthComm.setStatus('current')
s5AgTrapFilterTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11), )
if mibBuilder.loadTexts: s5AgTrapFilterTable.setStatus('current')
s5AgTrapFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgTrapFilterIndex"))
if mibBuilder.loadTexts: s5AgTrapFilterEntry.setStatus('current')
s5AgTrapFilterIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgTrapFilterIndex.setStatus('current')
s5AgTrapFilterTrapOID = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrapFilterTrapOID.setStatus('current')
s5AgTrapFilterTrapInitiator1 = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrapFilterTrapInitiator1.setStatus('current')
s5AgTrapFilterTrapInitiator2 = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrapFilterTrapInitiator2.setStatus('current')
s5AgTrapFilterTrapInitiator3 = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrapFilterTrapInitiator3.setStatus('current')
s5AgTrapFilterStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrapFilterStatus.setStatus('current')
s5AgTrapFilterDelayTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11, 1, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrapFilterDelayTime.setStatus('current')
s5AgTrapEntryStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 11, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("valid", 1), ("createRequest", 2), ("underCreation", 3), ("invalid", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrapEntryStatus.setStatus('current')
s5AgTrapFilterGlobalStatus = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("enable-all", 1), ("disable-all", 2), ("enable-all-and-use-table", 3), ("disable-all-and-use-table", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrapFilterGlobalStatus.setStatus('current')
s5AgUnAuthInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 13), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgUnAuthInetAddressType.setStatus('current')
s5AgUnAuthInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 2, 14), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgUnAuthInetAddress.setStatus('current')
s5AgTrpRcvrMaxEnt = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgTrpRcvrMaxEnt.setStatus('current')
s5AgTrpRcvrCurEnt = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgTrpRcvrCurEnt.setStatus('current')
s5AgTrpRcvrNext = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgTrpRcvrNext.setStatus('current')
s5AgTrpRcvrTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 4), )
if mibBuilder.loadTexts: s5AgTrpRcvrTable.setStatus('current')
s5AgTrpRcvrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 4, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgTrpRcvrIndx"))
if mibBuilder.loadTexts: s5AgTrpRcvrEntry.setStatus('current')
s5AgTrpRcvrIndx = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgTrpRcvrIndx.setStatus('current')
s5AgTrpRcvrStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 4, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("other", 1), ("valid", 2), ("ignore", 3), ("delete", 4), ("create", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrpRcvrStatus.setStatus('current')
s5AgTrpRcvrAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 4, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ip", 1), ("ipx", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrpRcvrAddrType.setStatus('current')
s5AgTrpRcvrNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 4, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrpRcvrNetAddr.setStatus('current')
s5AgTrpRcvrComm = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 4, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrpRcvrComm.setStatus('current')
s5AgTrpRcvrAgeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 4, 1, 6), TimeIntervalSec()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgTrpRcvrAgeTime.setStatus('current')
s5AgRemoteLoginMgmt = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 5))
s5AgRemoteLoginIp = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 5, 1), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgRemoteLoginIp.setStatus('current')
s5AgRemoteLoginStatus = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 5, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))).clone(namedValues=NamedValues(("statusUnknown", 1), ("successful", 2), ("passwordFail", 3), ("loginTimeout", 4), ("loginInactivityTimeout", 5), ("telnetSessionExisted", 6), ("nonAllowedIPaddr", 7), ("localConsoleBusy", 8), ("excessiveLoginFail", 9), ("accessPermissionOff", 10), ("loginLogout", 11)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgRemoteLoginStatus.setStatus('current')
s5AgRemoteLoginInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 5, 3), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgRemoteLoginInetAddressType.setStatus('current')
s5AgRemoteLoginInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 3, 5, 4), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgRemoteLoginInetAddress.setStatus('current')
s5AgSysAutoPvid = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAutoPvid.setStatus('current')
s5AgSysCurrentOperationalMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pure", 1), ("hybrid", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSysCurrentOperationalMode.setStatus('current')
s5AgSysNextBootOperationalMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pure", 1), ("hybrid", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysNextBootOperationalMode.setStatus('current')
s5AgSysBinaryConfigFilename = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysBinaryConfigFilename.setStatus('current')
s5AgSysTftpServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 5), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysTftpServerAddress.setStatus('current')
s5AgSysAsciiConfigFilename = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAsciiConfigFilename.setStatus('deprecated')
s5AgSysAsciiConfigAutoDownload = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("disabled", 1), ("useBootp", 2), ("useConfig", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAsciiConfigAutoDownload.setStatus('deprecated')
s5AgSysAsciiConfigAutoDldStatus = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("passed", 1), ("inProgress", 2), ("failed", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSysAsciiConfigAutoDldStatus.setStatus('deprecated')
s5AgSysAsciiConfigManualDownload = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("passed", 1), ("inProgress", 2), ("failed", 3), ("downloadNow", 4), ("downloadFromUsb", 5), ("downloadFromSftp", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAsciiConfigManualDownload.setStatus('deprecated')
s5AgSysCpuIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 10), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysCpuIpAddress.setStatus('current')
s5AgSysStackIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 11), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysStackIpAddress.setStatus('current')
s5AgSysCpuNetMask = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 12), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysCpuNetMask.setStatus('current')
s5AgSysManagementVlanId = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4094))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysManagementVlanId.setStatus('current')
s5AgSysBinaryConfigUnitNumber = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysBinaryConfigUnitNumber.setStatus('current')
s5AgSysStackInsertionUnitNumber = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 15), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysStackInsertionUnitNumber.setStatus('current')
s5AgSysSpanningTreeOperMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("avayaStpg", 1), ("pvst", 2), ("rstp", 3), ("mstp", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSysSpanningTreeOperMode.setStatus('current')
s5AgSysSpanningTreeAdminMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("avayaStpg", 1), ("pvst", 2), ("rstp", 3), ("mstp", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysSpanningTreeAdminMode.setStatus('current')
s5AgSysAutoUnitReplacementEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("true", 1), ("false", 2), ("setToDefault", 3))).clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAutoUnitReplacementEnabled.setStatus('current')
s5AgSysAsciiConfigManualUpload = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("passed", 1), ("inProgress", 2), ("failed", 3), ("uploadNow", 4), ("uploadToUsb", 5), ("uploadVerboseNow", 6), ("uploadVerboseToUsb", 7), ("uploadToSftp", 8), ("uploadVerboseToSftp", 9)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAsciiConfigManualUpload.setStatus('deprecated')
s5AgSysSpanningTreePathCostCalculationMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("ieee802dot1dCompatible", 1), ("ieee802dot1tCompatible", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysSpanningTreePathCostCalculationMode.setStatus('current')
s5AgSysUsbTargetUnit = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 10))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysUsbTargetUnit.setStatus('current')
s5AgSysSpanningTreePortMode = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("normal", 1), ("auto", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysSpanningTreePortMode.setStatus('current')
s5AgSysLicenseFilename = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 23), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysLicenseFilename.setStatus('current')
s5AgSysSpanningTreeAdminCompatibility = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 24), Bits().clone(namedValues=NamedValues(("port802dot1dLearning", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysSpanningTreeAdminCompatibility.setStatus('current')
s5AgSysSpanningTreeOperCompatibility = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 25), Bits().clone(namedValues=NamedValues(("port802dot1dLearning", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSysSpanningTreeOperCompatibility.setStatus('current')
s5AgSysGlobalFlowControlEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 26), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysGlobalFlowControlEnabled.setStatus('current')
s5AgSysAutosaveToNvramEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 27), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAutosaveToNvramEnabled.setStatus('current')
s5AgSysFlushMacAddrTableAll = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("flush", 1), ("dynamic", 2), ("static", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysFlushMacAddrTableAll.setStatus('current')
s5AgSysFlushMacAddrTableByPortList = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 29), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysFlushMacAddrTableByPortList.setStatus('current')
s5AgSysFlushMacAddrTableByVlan = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 30), VlanId()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysFlushMacAddrTableByVlan.setStatus('current')
s5AgSysFlushMacAddrTableByTrunk = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysFlushMacAddrTableByTrunk.setStatus('current')
s5AgSysFlushMacAddrTableByAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 32), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysFlushMacAddrTableByAddress.setStatus('current')
s5AgSysVlanConfigControl = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("automatic", 1), ("autopvid", 2), ("flexible", 3), ("strict", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysVlanConfigControl.setStatus('current')
s5AgSysJumboFramesEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 34), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysJumboFramesEnabled.setStatus('current')
s5AgSysAutoUnitReplacementSaveEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 35), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAutoUnitReplacementSaveEnabled.setStatus('current')
s5AgSysAutoUnitReplacementRestore = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAutoUnitReplacementRestore.setStatus('current')
s5AgSysAutoUnitReplacementForceSave = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAutoUnitReplacementForceSave.setStatus('current')
s5AgSysTftpServerInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 38), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysTftpServerInetAddressType.setStatus('current')
s5AgSysTftpServerInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 39), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysTftpServerInetAddress.setStatus('current')
s5AgSysTelnetSessionLoginAuthenType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("radius", 3), ("tacacs", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysTelnetSessionLoginAuthenType.setStatus('current')
s5AgSysSerialConsoleLoginAuthenType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("none", 1), ("local", 2), ("radius", 3), ("tacacs", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysSerialConsoleLoginAuthenType.setStatus('current')
s5AgSysSshAuthKeyFilename = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 42), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysSshAuthKeyFilename.setStatus('current')
s5AgSysAsciiConfigManualUploadApplications = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 43), Bits().clone(namedValues=NamedValues(("ieee802dot1ab", 0), ("aaur", 1), ("adac", 2), ("arpInspection", 3), ("assetId", 4), ("aur", 5), ("banner", 6), ("brouter", 7), ("cops", 8), ("core", 9), ("defaultCmdInterface", 10), ("dhcpRelay", 11), ("dhcpSnooping", 12), ("eap", 13), ("esu", 14), ("interface", 15), ("ip", 16), ("ipSourceGuard", 17), ("ipfix", 18), ("ipmc", 19), ("ipmgr", 20), ("ipv6", 21), ("l3", 22), ("l3Protocols", 23), ("lacp", 24), ("logging", 25), ("macSecurity", 26), ("mlt", 27), ("pim", 28), ("poe", 29), ("portMirroring", 30), ("pvst", 31), ("qos", 32), ("rateLimit", 33), ("rmon", 34), ("rtc", 35), ("slpp", 36), ("snmp", 37), ("smlt", 38), ("nsna", 39), ("ssh", 40), ("ssl", 41), ("stack", 42), ("stkmon", 43), ("stp", 44), ("vlacp", 45), ("vlan", 46), ("energySaver", 47), ("unicastStormControl", 48), ("wireless", 49), ("sshc", 50), ("dhcpServer", 51), ("fcoe", 52), ("cfm", 53), ("slamon", 54), ("spbm", 55), ("lst", 56), ("sflow", 57), ("ipv6-mld", 58), ("ipv6-fhs", 59), ("stormControl", 60), ("aaa", 61), ("fabric-attach", 62), ("ipv6-ripng", 63), ("radius", 64)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAsciiConfigManualUploadApplications.setStatus('current')
s5AgSysOperationalLicense = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("basic", 1), ("advanced", 2), ("premier", 3), ("stack", 4), ("macsec", 5), ("advanced-macsec", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSysOperationalLicense.setStatus('current')
s5AgSysInstalledLicense = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("basic", 1), ("advanced", 2), ("premier", 3), ("stack", 4), ("macsec", 5), ("advanced-macsec", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSysInstalledLicense.setStatus('current')
s5AgSysCpuIpv6Address = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 46), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysCpuIpv6Address.setStatus('current')
s5AgSysStackIpv6Address = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 47), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysStackIpv6Address.setStatus('current')
s5AgSysCpuIpv6NetMask = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 48), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysCpuIpv6NetMask.setStatus('current')
s5AgSysStackIpv6NetMask = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 49), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysStackIpv6NetMask.setStatus('current')
s5AgSysIpv6DefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 50), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysIpv6DefaultGateway.setStatus('current')
s5AgSysSpanningTreeBpduFilterIgnoreSelf = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 51), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysSpanningTreeBpduFilterIgnoreSelf.setStatus('current')
s5AgSysIdentifyUnits = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 52), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("dummy", 1), ("identify", 2))).clone('dummy')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysIdentifyUnits.setStatus('current')
s5AgSysMacAddrTableLearningPorts = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 53), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysMacAddrTableLearningPorts.setStatus('current')
s5AgSysSerialSecurityEnable = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 54), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysSerialSecurityEnable.setStatus('current')
s5AgSysMgmtStackIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 55), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysMgmtStackIpAddress.setStatus('current')
s5AgSysAuditEnable = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 56), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysAuditEnable.setStatus('current')
s5AgSysQuickConfigEnable = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 57), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysQuickConfigEnable.setStatus('current')
s5AgSysStackIpv6MgmtAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 58), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysStackIpv6MgmtAddress.setStatus('current')
s5AgSysStackIpv6MgmtNetMask = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 59), Ipv6AddressPrefix()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysStackIpv6MgmtNetMask.setStatus('current')
s5AgSysIpv6MgmtGateway = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 60), Ipv6Address()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysIpv6MgmtGateway.setStatus('current')
s5AgSysBlinkLeds = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 61), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("on", 1), ("off", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysBlinkLeds.setStatus('current')
s5AgSysBlinkLedsUnit = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 62), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysBlinkLedsUnit.setStatus('current')
s5AgSysBlinkLedsTimeThreshold = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 63), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 10))).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysBlinkLedsTimeThreshold.setStatus('current')
s5AgSysJumboFramesSize = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 64), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1519, 9216)).clone(9216)).setUnits('Bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysJumboFramesSize.setStatus('current')
s5AgSysDiagnosticsQuickModeEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 65), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysDiagnosticsQuickModeEnabled.setStatus('current')
s5AgSysTimeStampEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 66), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysTimeStampEnabled.setStatus('current')
s5AgSysForcedStackModeEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 67), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysForcedStackModeEnabled.setStatus('current')
s5AgSysSflowGlobalEnable = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 4, 68), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSysSflowGlobalEnable.setStatus('current')
s5AgBannerControl = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 5, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("static", 1), ("custom", 2), ("disabled", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgBannerControl.setStatus('current')
s5AgCustomBannerTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 5, 2), )
if mibBuilder.loadTexts: s5AgCustomBannerTable.setStatus('current')
s5AgCustomBannerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 5, 2, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgCustomBannerType"), (0, "S5-AGENT-MIB", "s5AgCustomBannerId"))
if mibBuilder.loadTexts: s5AgCustomBannerEntry.setStatus('current')
s5AgCustomBannerType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 5, 2, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("switch", 1), ("stack", 2))))
if mibBuilder.loadTexts: s5AgCustomBannerType.setStatus('current')
s5AgCustomBannerId = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 5, 2, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 19)))
if mibBuilder.loadTexts: s5AgCustomBannerId.setStatus('current')
s5AgCustomBannerLine = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 5, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgCustomBannerLine.setStatus('current')
s5AgSntpState = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("disabled", 1), ("unicast", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpState.setStatus('current')
s5AgSntpPrimaryServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpPrimaryServerAddress.setStatus('current')
s5AgSntpSecondaryServerAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpSecondaryServerAddress.setStatus('current')
s5AgSntpSyncInterval = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 168))).setUnits('Hours').setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpSyncInterval.setStatus('current')
s5AgSntpManualSyncRequest = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("requestSync", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpManualSyncRequest.setStatus('current')
s5AgSntpLastSyncTime = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSntpLastSyncTime.setStatus('current')
s5AgSntpLastSyncSource = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 7), IpAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSntpLastSyncSource.setStatus('current')
s5AgSntpNextSyncTime = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSntpNextSyncTime.setStatus('current')
s5AgSntpPrimaryServerSyncFailures = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSntpPrimaryServerSyncFailures.setStatus('current')
s5AgSntpSecondaryServerSyncFailures = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSntpSecondaryServerSyncFailures.setStatus('current')
s5AgSntpCurrentTime = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 11), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSntpCurrentTime.setStatus('current')
s5AgSntpTimeZone = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-48, 52))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpTimeZone.setStatus('current')
s5AgSntpSyncRetryInterval = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(5, 60))).setUnits('Seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpSyncRetryInterval.setStatus('current')
s5AgSntpTimeZoneAcronym = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpTimeZoneAcronym.setStatus('current')
s5AgSntpPrimaryServerInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 15), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpPrimaryServerInetAddressType.setStatus('current')
s5AgSntpPrimaryServerInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 16), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpPrimaryServerInetAddress.setStatus('current')
s5AgSntpSecondaryServerInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 17), InetAddressType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpSecondaryServerInetAddressType.setStatus('current')
s5AgSntpSecondaryServerInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 18), InetAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSntpSecondaryServerInetAddress.setStatus('current')
s5AgSntpLastSyncSourceInetAddressType = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 19), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSntpLastSyncSourceInetAddressType.setStatus('current')
s5AgSntpLastSyncSourceInetAddress = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 6, 20), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSntpLastSyncSourceInetAddress.setStatus('current')
s5AgentSslScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 7, 1))
s5AgSslEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 7, 1, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSslEnabled.setStatus('current')
s5AgSslCertificateControl = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 7, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("create", 1), ("delete", 2), ("other", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSslCertificateControl.setStatus('current')
s5AgSslCertificateExists = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 7, 1, 4), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSslCertificateExists.setStatus('current')
s5AgSslCertificateData = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 7, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 1024))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSslCertificateData.setStatus('current')
s5AgSslCertificateControlStatus = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 7, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("inProgress", 1), ("success", 2), ("failure", 3), ("other", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgSslCertificateControlStatus.setStatus('current')
s5AgSslServerControl = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 7, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("reset", 1), ("other", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgSslServerControl.setStatus('current')
s5AgDaylightSavingsEnabled = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 1), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsEnabled.setStatus('current')
s5AgDaylightSavingsStartMonth = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsStartMonth.setStatus('current')
s5AgDaylightSavingsStartDay = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsStartDay.setStatus('current')
s5AgDaylightSavingsStartHour = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsStartHour.setStatus('current')
s5AgDaylightSavingsEndMonth = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 12))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsEndMonth.setStatus('current')
s5AgDaylightSavingsEndDay = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 31))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsEndDay.setStatus('current')
s5AgDaylightSavingsEndHour = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsEndHour.setStatus('current')
s5AgDaylightSavingsOffset = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-840, 840))).setUnits('Minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsOffset.setStatus('current')
s5AgDaylightSavingsStartMinutes = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsStartMinutes.setStatus('current')
s5AgDaylightSavingsEndMinutes = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsEndMinutes.setStatus('current')
s5AgDaylightSavingsStartYear = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1990, 2099))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsStartYear.setStatus('current')
s5AgDaylightSavingsEndYear = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1990, 2099))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsEndYear.setStatus('current')
s5AgDaylightSavingsRecurring = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurring.setStatus('current')
s5AgDaylightSavingsTimeZoneAcronym = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 7))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsTimeZoneAcronym.setStatus('current')
s5AgDaylightSavingsRecurringStartWeek = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 5), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringStartWeek.setStatus('current')
s5AgDaylightSavingsRecurringStartDay = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringStartDay.setStatus('current')
s5AgDaylightSavingsRecurringStartMonth = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringStartMonth.setStatus('current')
s5AgDaylightSavingsRecurringStartHour = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 18), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringStartHour.setStatus('current')
s5AgDaylightSavingsRecurringStartMinute = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringStartMinute.setStatus('current')
s5AgDaylightSavingsRecurringEndWeek = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 5), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringEndWeek.setStatus('current')
s5AgDaylightSavingsRecurringEndDay = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("monday", 1), ("tuesday", 2), ("wednesday", 3), ("thursday", 4), ("friday", 5), ("saturday", 6), ("sunday", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringEndDay.setStatus('current')
s5AgDaylightSavingsRecurringEndMonth = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))).clone(namedValues=NamedValues(("january", 1), ("february", 2), ("march", 3), ("april", 4), ("may", 5), ("june", 6), ("july", 7), ("august", 8), ("september", 9), ("october", 10), ("november", 11), ("december", 12)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringEndMonth.setStatus('current')
s5AgDaylightSavingsRecurringEndHour = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringEndHour.setStatus('current')
s5AgDaylightSavingsRecurringEndMinute = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringEndMinute.setStatus('current')
s5AgDaylightSavingsRecurringOffset = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 9, 25), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgDaylightSavingsRecurringOffset.setStatus('current')
s5AgentBootConfigScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 1))
s5AgBootCfgSaveToBlock = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgBootCfgSaveToBlock.setStatus('current')
s5AgBootCfgNextBootBlock = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgBootCfgNextBootBlock.setStatus('current')
s5AgBootCfgCurrentBootBlock = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgBootCfgCurrentBootBlock.setStatus('current')
s5AgBootCfgBlocksTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 2), )
if mibBuilder.loadTexts: s5AgBootCfgBlocksTable.setStatus('current')
s5AgBootCfgBlocksEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 2, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgBootCfgBlocksIndex"))
if mibBuilder.loadTexts: s5AgBootCfgBlocksEntry.setStatus('current')
s5AgBootCfgBlocksIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: s5AgBootCfgBlocksIndex.setStatus('current')
s5AgBootCfgBlocksName = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 2, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgBootCfgBlocksName.setStatus('current')
s5AgBootCfgBlocksTime = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 2, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgBootCfgBlocksTime.setStatus('current')
s5AgBootCfgBlocksValid = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 10, 2, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgBootCfgBlocksValid.setStatus('current')
s5AgAsciiConfigScriptTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11, 1), )
if mibBuilder.loadTexts: s5AgAsciiConfigScriptTable.setStatus('current')
s5AgAsciiConfigScriptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11, 1, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgAsciiConfigScriptIndex"))
if mibBuilder.loadTexts: s5AgAsciiConfigScriptEntry.setStatus('current')
s5AgAsciiConfigScriptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 127)))
if mibBuilder.loadTexts: s5AgAsciiConfigScriptIndex.setStatus('current')
s5AgAsciiConfigScriptBootPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11, 1, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgAsciiConfigScriptBootPriority.setStatus('current')
s5AgAsciiConfigScriptSource = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 327))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgAsciiConfigScriptSource.setStatus('current')
s5AgAsciiConfigScriptManual = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("other", 1), ("download", 2), ("upload", 3), ("uploadVerbose", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgAsciiConfigScriptManual.setStatus('current')
s5AgAsciiConfigScriptOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))).clone(namedValues=NamedValues(("other", 1), ("autoDownloadPassed", 2), ("autoDownloadInProgress", 3), ("autoDownloadFailed", 4), ("manualDownloadPassed", 5), ("manualDownloadInProgress", 6), ("manualDownloadFailed", 7), ("manualUploadPassed", 8), ("manualUploadInProgress", 9), ("manualUploadFailed", 10), ("manualUploadVerbosePassed", 11), ("manualUploadVerboseInProgress", 12), ("manualUploadVerboseFailed", 13)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgAsciiConfigScriptOperStatus.setStatus('current')
s5AgAsciiConfigScriptLastStatusChange = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgAsciiConfigScriptLastStatusChange.setStatus('current')
s5AgAsciiConfigScriptUploadApplications = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 11, 1, 1, 7), Bits().clone(namedValues=NamedValues(("ieee802dot1ab", 0), ("aaur", 1), ("adac", 2), ("arpInspection", 3), ("assetId", 4), ("aur", 5), ("banner", 6), ("brouter", 7), ("cops", 8), ("core", 9), ("defaultCmdInterface", 10), ("dhcpRelay", 11), ("dhcpSnooping", 12), ("eap", 13), ("esu", 14), ("interface", 15), ("ip", 16), ("ipSourceGuard", 17), ("ipfix", 18), ("ipmc", 19), ("ipmgr", 20), ("ipv6", 21), ("l3", 22), ("l3Protocols", 23), ("lacp", 24), ("logging", 25), ("macSecurity", 26), ("mlt", 27), ("pim", 28), ("poe", 29), ("portMirroring", 30), ("pvst", 31), ("qos", 32), ("rateLimit", 33), ("rmon", 34), ("rtc", 35), ("slpp", 36), ("snmp", 37), ("smlt", 38), ("nsna", 39), ("ssh", 40), ("ssl", 41), ("stack", 42), ("stkmon", 43), ("stp", 44), ("vlacp", 45), ("vlan", 46), ("energySaver", 47), ("unicastStormControl", 48), ("wireless", 49), ("sshc", 50), ("dhcpServer", 51), ("fcoe", 52), ("cfm", 53), ("slamon", 54), ("spbm", 55), ("lst", 56), ("sflow", 57), ("ipv6-mld", 58), ("ipv6-fhs", 59), ("stormControl", 60), ("aaa", 61), ("fabric-attach", 62), ("ipv6-ripng", 63), ("radius", 64)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgAsciiConfigScriptUploadApplications.setStatus('current')
s5AgentLicenseTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1), )
if mibBuilder.loadTexts: s5AgentLicenseTable.setStatus('current')
s5AgentLicenseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgentLicenseIndex"))
if mibBuilder.loadTexts: s5AgentLicenseEntry.setStatus('current')
s5AgentLicenseIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 9)))
if mibBuilder.loadTexts: s5AgentLicenseIndex.setStatus('current')
s5AgentLicenseType = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("demo", 1), ("advanced", 2), ("premier", 3), ("stacking", 4), ("macsec", 5), ("advanced-macsec", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseType.setStatus('current')
s5AgentLicenseVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseVersion.setStatus('current')
s5AgentLicenseMd5Key = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseMd5Key.setStatus('current')
s5AgentLicenseMd5File = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(16, 16)).setFixedLength(16)).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseMd5File.setStatus('current')
s5AgentLicenseTimeBase = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 6), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseTimeBase.setStatus('current')
s5AgentLicenseTimeModify = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 7), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseTimeModify.setStatus('current')
s5AgentLicenseTimeExpiration = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 8), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseTimeExpiration.setStatus('current')
s5AgentLicenseNumUniqueIds = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseNumUniqueIds.setStatus('current')
s5AgentLicenseFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 10), Bits().clone(namedValues=NamedValues(("singleSerial", 0), ("site", 1), ("expirationEnabled", 2), ("emergency", 3), ("compressed", 4), ("memoAttached", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseFlags.setStatus('current')
s5AgentLicenseMemo = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 11), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentLicenseMemo.setStatus('current')
s5AgentLicenseStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 12, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("active", 1), ("remove", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgentLicenseStatus.setStatus('current')
s5AgentScriptTable = MibTable((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 13, 1), )
if mibBuilder.loadTexts: s5AgentScriptTable.setStatus('current')
s5AgentScriptEntry = MibTableRow((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 13, 1, 1), ).setIndexNames((0, "S5-AGENT-MIB", "s5AgentScriptIndex"))
if mibBuilder.loadTexts: s5AgentScriptEntry.setStatus('current')
s5AgentScriptIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 13, 1, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ip-office", 1), ("lldp", 2), ("adac", 3), ("voice", 4))))
if mibBuilder.loadTexts: s5AgentScriptIndex.setStatus('current')
s5AgentScriptParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 13, 1, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 512))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgentScriptParameters.setStatus('current')
s5AgentScriptStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 13, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("passed", 1), ("failed", 2), ("inProgress", 3))).clone('passed')).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgentScriptStatus.setStatus('current')
s5AgentScriptRun = MibTableColumn((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 13, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("default", 1), ("verbose", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgentScriptRun.setStatus('current')
s5AgClockSystemTime = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 14, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgClockSystemTime.setStatus('current')
s5AgClockRtcSyncWithNtp = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 14, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgClockRtcSyncWithNtp.setStatus('current')
s5AgClockSource = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("rtc", 1), ("sntp", 2), ("ntp", 3), ("sysUpTime", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgClockSource.setStatus('current')
s5AgClockNtpTime = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 14, 4), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgClockNtpTime.setStatus('current')
s5AgClockSntpTime = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 14, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: s5AgClockSntpTime.setStatus('current')
s5AgClockRtcTime = MibScalar((1, 3, 6, 1, 4, 1, 45, 1, 6, 4, 14, 6), DateAndTime()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: s5AgClockRtcTime.setStatus('current')
mibBuilder.exportSymbols("S5-AGENT-MIB", s5AgRemoteLoginStatus=s5AgRemoteLoginStatus, s5AgSysFlushMacAddrTableByVlan=s5AgSysFlushMacAddrTableByVlan, s5AgUnAuthIpxAddr=s5AgUnAuthIpxAddr, s5AgSysAutoUnitReplacementForceSave=s5AgSysAutoUnitReplacementForceSave, s5AgDaylightSavingsEnabled=s5AgDaylightSavingsEnabled, s5AgInfoDstLoadBank=s5AgInfoDstLoadBank, s5AgDaylightSavingsRecurringStartDay=s5AgDaylightSavingsRecurringStartDay, s5AgClockRtcTime=s5AgClockRtcTime, s5AgOthIfGrpIndx=s5AgOthIfGrpIndx, s5AgMyIfValidFlag=s5AgMyIfValidFlag, s5AgentLicense=s5AgentLicense, s5AgentDaylightSavings=s5AgentDaylightSavings, s5AgOthIfIpxAddr=s5AgOthIfIpxAddr, s5AgentLicenseMemo=s5AgentLicenseMemo, s5AgInfoScheduleBootTime=s5AgInfoScheduleBootTime, s5AgSntpSecondaryServerInetAddress=s5AgSntpSecondaryServerInetAddress, s5AgSysAutoUnitReplacementEnabled=s5AgSysAutoUnitReplacementEnabled, s5AgDaylightSavingsRecurringStartMonth=s5AgDaylightSavingsRecurringStartMonth, s5AgSysCpuIpv6Address=s5AgSysCpuIpv6Address, s5AgOthIfIpAddr=s5AgOthIfIpAddr, s5AgentScriptTable=s5AgentScriptTable, s5AgentLicenseTimeExpiration=s5AgentLicenseTimeExpiration, s5AgentLicenseTimeBase=s5AgentLicenseTimeBase, s5AgInfoMgmtProtocolNxtBoot=s5AgInfoMgmtProtocolNxtBoot, s5AgTrpRcvrIndx=s5AgTrpRcvrIndx, s5AgSysCpuIpAddress=s5AgSysCpuIpAddress, s5AgSysStackIpAddress=s5AgSysStackIpAddress, s5AgSysSpanningTreePortMode=s5AgSysSpanningTreePortMode, s5AgSntpSecondaryServerSyncFailures=s5AgSntpSecondaryServerSyncFailures, s5AgDaylightSavingsRecurringEndMonth=s5AgDaylightSavingsRecurringEndMonth, s5AgSysAsciiConfigAutoDownload=s5AgSysAsciiConfigAutoDownload, s5AgSysSerialConsoleLoginAuthenType=s5AgSysSerialConsoleLoginAuthenType, s5AgDaylightSavingsTimeZoneAcronym=s5AgDaylightSavingsTimeZoneAcronym, s5AgentScriptEntry=s5AgentScriptEntry, s5AgClockSystemTime=s5AgClockSystemTime, s5AgInfoImgSaveStatus=s5AgInfoImgSaveStatus, s5AgSysTftpServerAddress=s5AgSysTftpServerAddress, s5AgTrpRcvrEntry=s5AgTrpRcvrEntry, s5AgSysBlinkLedsUnit=s5AgSysBlinkLedsUnit, s5AgSntpPrimaryServerInetAddressType=s5AgSntpPrimaryServerInetAddressType, s5AgIpRtrDiscoverySolicitMode=s5AgIpRtrDiscoverySolicitMode, s5AgSslCertificateControl=s5AgSslCertificateControl, s5AgentLicenseMd5File=s5AgentLicenseMd5File, s5AgSysAsciiConfigManualDownload=s5AgSysAsciiConfigManualDownload, s5AgentLicenseType=s5AgentLicenseType, s5AgInfoImgDownloadPercentComplete=s5AgInfoImgDownloadPercentComplete, s5AgSysTftpServerInetAddress=s5AgSysTftpServerInetAddress, s5AgIpRtrDefaultTimeToLive=s5AgIpRtrDefaultTimeToLive, s5AgSysFlushMacAddrTableByAddress=s5AgSysFlushMacAddrTableByAddress, s5AgSysAutoPvid=s5AgSysAutoPvid, s5AgAsciiConfigScriptIndex=s5AgAsciiConfigScriptIndex, s5AgAsciiConfigScriptManual=s5AgAsciiConfigScriptManual, s5AgSysUsbTargetUnit=s5AgSysUsbTargetUnit, s5AgSysJumboFramesEnabled=s5AgSysJumboFramesEnabled, s5AgSntpManualSyncRequest=s5AgSntpManualSyncRequest, s5AgDataCollectIfIndex=s5AgDataCollectIfIndex, s5AgInfoImgSaveMode=s5AgInfoImgSaveMode, s5AgSysCpuNetMask=s5AgSysCpuNetMask, s5AgClockNtpTime=s5AgClockNtpTime, s5AgentLicenseTable=s5AgentLicenseTable, s5AgClockSntpTime=s5AgClockSntpTime, s5AgInfoLoadProtocolLast=s5AgInfoLoadProtocolLast, s5AgRemoteLoginMgmt=s5AgRemoteLoginMgmt, s5AgRemoteLoginInetAddress=s5AgRemoteLoginInetAddress, s5AgSysNextBootOperationalMode=s5AgSysNextBootOperationalMode, s5AgRemoteLoginInetAddressType=s5AgRemoteLoginInetAddressType, s5AgSysSflowGlobalEnable=s5AgSysSflowGlobalEnable, s5AgentScriptRun=s5AgentScriptRun, s5AgentInfo=s5AgentInfo, s5AgUnAuthComm=s5AgUnAuthComm, s5AgInfoImgDownloadStatus=s5AgInfoImgDownloadStatus, s5AgTrapFilterDelayTime=s5AgTrapFilterDelayTime, s5AgIpDefaultRtrSelectionMode=s5AgIpDefaultRtrSelectionMode, s5AgSysBinaryConfigFilename=s5AgSysBinaryConfigFilename, s5AgSysIpv6DefaultGateway=s5AgSysIpv6DefaultGateway, s5AgSysJumboFramesSize=s5AgSysJumboFramesSize, s5AgDaylightSavingsRecurringOffset=s5AgDaylightSavingsRecurringOffset, s5AgAsciiConfigScriptEntry=s5AgAsciiConfigScriptEntry, s5AgentScriptParameters=s5AgentScriptParameters, s5AgInfoNumBootBanks=s5AgInfoNumBootBanks, s5AgBootCfgSaveToBlock=s5AgBootCfgSaveToBlock, s5AgSntpNextSyncTime=s5AgSntpNextSyncTime, s5AgTrapFilterTrapInitiator3=s5AgTrapFilterTrapInitiator3, s5AgDaylightSavingsStartMinutes=s5AgDaylightSavingsStartMinutes, s5AgUnAuthInetAddressType=s5AgUnAuthInetAddressType, s5AgTrpRcvrNetAddr=s5AgTrpRcvrNetAddr, s5AgBootCfgBlocksValid=s5AgBootCfgBlocksValid, s5AgSysIpv6MgmtGateway=s5AgSysIpv6MgmtGateway, s5AgMyIfLdSvrAddr=s5AgMyIfLdSvrAddr, s5AgentLicenseVersion=s5AgentLicenseVersion, s5AgRemoteLoginIp=s5AgRemoteLoginIp, s5AgSysCurrentOperationalMode=s5AgSysCurrentOperationalMode, s5AgentSslScalars=s5AgentSslScalars, s5AgSntpCurrentTime=s5AgSntpCurrentTime, s5AgSysGlobalFlowControlEnabled=s5AgSysGlobalFlowControlEnabled, s5AgMyIfIndx=s5AgMyIfIndx, s5AgTrapFilterTable=s5AgTrapFilterTable, s5AgSntpSyncInterval=s5AgSntpSyncInterval, s5AgSntpSecondaryServerInetAddressType=s5AgSntpSecondaryServerInetAddressType, s5AgCustomBannerEntry=s5AgCustomBannerEntry, s5AgCustomBannerId=s5AgCustomBannerId, s5AgTrpRcvrMaxEnt=s5AgTrpRcvrMaxEnt, s5AgSysSpanningTreeAdminCompatibility=s5AgSysSpanningTreeAdminCompatibility, s5AgSysSshAuthKeyFilename=s5AgSysSshAuthKeyFilename, s5AgOthIfComIndx=s5AgOthIfComIndx, s5AgSntpLastSyncSourceInetAddress=s5AgSntpLastSyncSourceInetAddress, s5AgInfoWriteCfg=s5AgInfoWriteCfg, s5AgentLicenseFlags=s5AgentLicenseFlags, s5AgMyIfNxtBootNetMask=s5AgMyIfNxtBootNetMask, s5AgSysAutoUnitReplacementSaveEnabled=s5AgSysAutoUnitReplacementSaveEnabled, s5AgAsciiConfigScriptSource=s5AgAsciiConfigScriptSource, s5AgentLicenseStatus=s5AgentLicenseStatus, s5AgSysStackIpv6MgmtAddress=s5AgSysStackIpv6MgmtAddress, s5AgentAsciiConfig=s5AgentAsciiConfig, s5AgCustomBannerTable=s5AgCustomBannerTable, s5AgSntpTimeZoneAcronym=s5AgSntpTimeZoneAcronym, s5AgentLicenseIndex=s5AgentLicenseIndex, s5AgSysManagementVlanId=s5AgSysManagementVlanId, s5AgSslCertificateExists=s5AgSslCertificateExists, s5AgDaylightSavingsRecurringStartMinute=s5AgDaylightSavingsRecurringStartMinute, s5AgBootCfgBlocksEntry=s5AgBootCfgBlocksEntry, s5AgDaylightSavingsStartHour=s5AgDaylightSavingsStartHour, s5AgSysTftpServerInetAddressType=s5AgSysTftpServerInetAddressType, s5AgDaylightSavingsEndDay=s5AgDaylightSavingsEndDay, s5AgSysAutoUnitReplacementRestore=s5AgSysAutoUnitReplacementRestore, s5AgDaylightSavingsRecurringEndMinute=s5AgDaylightSavingsRecurringEndMinute, s5AgSslCertificateData=s5AgSslCertificateData, s5AgMyIfImgFname=s5AgMyIfImgFname, s5AgSysBinaryConfigUnitNumber=s5AgSysBinaryConfigUnitNumber, s5AgentLicenseTimeModify=s5AgentLicenseTimeModify, s5AgBootCfgBlocksName=s5AgBootCfgBlocksName, s5AgSysDiagnosticsQuickModeEnabled=s5AgSysDiagnosticsQuickModeEnabled, s5AgSysAuditEnable=s5AgSysAuditEnable, s5AgInfoFileStatus=s5AgInfoFileStatus, s5AgSysAsciiConfigAutoDldStatus=s5AgSysAsciiConfigAutoDldStatus, s5AgSntpPrimaryServerInetAddress=s5AgSntpPrimaryServerInetAddress, s5AgSysMgmtStackIpAddress=s5AgSysMgmtStackIpAddress, s5AgTrpRcvrAgeTime=s5AgTrpRcvrAgeTime, s5AgSysSpanningTreeOperMode=s5AgSysSpanningTreeOperMode, s5AgSntpPrimaryServerSyncFailures=s5AgSntpPrimaryServerSyncFailures, s5AgSysFlushMacAddrTableAll=s5AgSysFlushMacAddrTableAll, s5AgentScriptStatus=s5AgentScriptStatus, s5AgDataCollectEntry=s5AgDataCollectEntry, s5AgDataCollectTable=s5AgDataCollectTable, s5AgentClock=s5AgentClock, s5AgentScriptIndex=s5AgentScriptIndex, s5AgSysInstalledLicense=s5AgSysInstalledLicense, PYSNMP_MODULE_ID=s5AgentMib, s5AgTrpRcvrTable=s5AgTrpRcvrTable, s5AgBootCfgNextBootBlock=s5AgBootCfgNextBootBlock, s5AgInfoVer=s5AgInfoVer, s5AgDaylightSavingsEndMonth=s5AgDaylightSavingsEndMonth, s5AgDaylightSavingsRecurringEndDay=s5AgDaylightSavingsRecurringEndDay, s5AgMyIfEntry=s5AgMyIfEntry, s5AgInfoCfgLoadMode=s5AgInfoCfgLoadMode, s5AgOthIfEntry=s5AgOthIfEntry, s5AgBootCfgBlocksTime=s5AgBootCfgBlocksTime, s5AgMyIfTable=s5AgMyIfTable, s5AgTrapFilterEntry=s5AgTrapFilterEntry, s5AgAsciiConfigScriptLastStatusChange=s5AgAsciiConfigScriptLastStatusChange, s5AgentHw=s5AgentHw, s5AgentSsl=s5AgentSsl, s5AgTrapFilterStatus=s5AgTrapFilterStatus, s5AgSysSerialSecurityEnable=s5AgSysSerialSecurityEnable, s5AgSntpTimeZone=s5AgSntpTimeZone, s5AgDaylightSavingsRecurringEndWeek=s5AgDaylightSavingsRecurringEndWeek, s5AgTrapEntryStatus=s5AgTrapEntryStatus, s5AgSysFlushMacAddrTableByTrunk=s5AgSysFlushMacAddrTableByTrunk, s5AgSysCpuIpv6NetMask=s5AgSysCpuIpv6NetMask, s5AgDaylightSavingsOffset=s5AgDaylightSavingsOffset, s5AgSslServerControl=s5AgSslServerControl, s5AgSysStackInsertionUnitNumber=s5AgSysStackInsertionUnitNumber, s5AgInfoReBoot=s5AgInfoReBoot, s5AgMyIfMacAddr=s5AgMyIfMacAddr, s5AgentMgmt=s5AgentMgmt, s5AgSysFlushMacAddrTableByPortList=s5AgSysFlushMacAddrTableByPortList, s5AgTrpRcvrComm=s5AgTrpRcvrComm, s5AgSysOperationalLicense=s5AgSysOperationalLicense, s5AgSysQuickConfigEnable=s5AgSysQuickConfigEnable, s5AgAsciiConfigScriptOperStatus=s5AgAsciiConfigScriptOperStatus, s5AgSysAutosaveToNvramEnabled=s5AgSysAutosaveToNvramEnabled, s5AgOthIfIndx=s5AgOthIfIndx, s5AgInfoNxtBootDfltGwAddr=s5AgInfoNxtBootDfltGwAddr, s5AgUnAuthInetAddress=s5AgUnAuthInetAddress, s5AgSysMacAddrTableLearningPorts=s5AgSysMacAddrTableLearningPorts, s5AgSysStackIpv6MgmtNetMask=s5AgSysStackIpv6MgmtNetMask, s5AgSysAsciiConfigManualUploadApplications=s5AgSysAsciiConfigManualUploadApplications, s5AgSysAsciiConfigFilename=s5AgSysAsciiConfigFilename, s5AgBootCfgCurrentBootBlock=s5AgBootCfgCurrentBootBlock, s5AgInfoImgLoadMode=s5AgInfoImgLoadMode, s5AgDaylightSavingsRecurringStartHour=s5AgDaylightSavingsRecurringStartHour, s5AgInfoLocStorVer=s5AgInfoLocStorVer, s5AgMyComIndx=s5AgMyComIndx, s5AgInfoSlotScope=s5AgInfoSlotScope, s5AgDaylightSavingsStartYear=s5AgDaylightSavingsStartYear, s5AgInfoScheduleBootCancel=s5AgInfoScheduleBootCancel, s5AgMyIfNxtBootIpAddr=s5AgMyIfNxtBootIpAddr, s5AgBootCfgBlocksIndex=s5AgBootCfgBlocksIndex, s5AgMyIfCfgFname=s5AgMyIfCfgFname, s5AgDataCollectNetworkAddrStatus=s5AgDataCollectNetworkAddrStatus, s5AgSysSpanningTreeBpduFilterIgnoreSelf=s5AgSysSpanningTreeBpduFilterIgnoreSelf, s5AgentSntp=s5AgentSntp, s5AgSysSpanningTreeOperCompatibility=s5AgSysSpanningTreeOperCompatibility, s5AgSntpLastSyncSourceInetAddressType=s5AgSntpLastSyncSourceInetAddressType, s5AgDaylightSavingsRecurringStartWeek=s5AgDaylightSavingsRecurringStartWeek, s5AgCustomBannerLine=s5AgCustomBannerLine, s5AgSysStackIpv6Address=s5AgSysStackIpv6Address, s5AgSysIdentifyUnits=s5AgSysIdentifyUnits, s5AgSntpLastSyncTime=s5AgSntpLastSyncTime, s5AgentBanner=s5AgentBanner, s5AgInfoFileAction=s5AgInfoFileAction, s5AgTrpRcvrCurEnt=s5AgTrpRcvrCurEnt, s5AgInfoMgmtProtocolCur=s5AgInfoMgmtProtocolCur, s5AgDaylightSavingsEndMinutes=s5AgDaylightSavingsEndMinutes, s5AgUnAuthIpAddr=s5AgUnAuthIpAddr, s5AgDaylightSavingsRecurring=s5AgDaylightSavingsRecurring, s5AgTrpRcvrAddrType=s5AgTrpRcvrAddrType, s5AgSysStackIpv6NetMask=s5AgSysStackIpv6NetMask, s5AgDaylightSavingsRecurringEndHour=s5AgDaylightSavingsRecurringEndHour, s5AgSysSpanningTreeAdminMode=s5AgSysSpanningTreeAdminMode, s5AgentLicenseMd5Key=s5AgentLicenseMd5Key, s5AgDaylightSavingsEndHour=s5AgDaylightSavingsEndHour, s5AgClockRtcSyncWithNtp=s5AgClockRtcSyncWithNtp, s5AgDataCollectSnTimeStamp=s5AgDataCollectSnTimeStamp, s5AgentLicenseEntry=s5AgentLicenseEntry, s5AgTrpRcvrStatus=s5AgTrpRcvrStatus, s5AgSysBlinkLeds=s5AgSysBlinkLeds, s5AgCustomBannerType=s5AgCustomBannerType, s5AgInfoLoadProtocolNxtBoot=s5AgInfoLoadProtocolNxtBoot, s5AgSslEnabled=s5AgSslEnabled, s5AgentSystem=s5AgentSystem, s5AgAsciiConfigScriptUploadApplications=s5AgAsciiConfigScriptUploadApplications, s5AgSysSpanningTreePathCostCalculationMode=s5AgSysSpanningTreePathCostCalculationMode, s5AgSntpSyncRetryInterval=s5AgSntpSyncRetryInterval, s5AgOthIfTable=s5AgOthIfTable, s5AgBannerControl=s5AgBannerControl, s5AgTrapFilterGlobalStatus=s5AgTrapFilterGlobalStatus, s5AgSntpPrimaryServerAddress=s5AgSntpPrimaryServerAddress, s5AgDaylightSavingsStartMonth=s5AgDaylightSavingsStartMonth, s5AgSysTelnetSessionLoginAuthenType=s5AgSysTelnetSessionLoginAuthenType, s5AgSntpState=s5AgSntpState, s5AgSslCertificateControlStatus=s5AgSslCertificateControlStatus, s5AgentScript=s5AgentScript, s5AgentLicenseNumUniqueIds=s5AgentLicenseNumUniqueIds, s5AgMyIfBootRouterAddr=s5AgMyIfBootRouterAddr, s5AgSysAsciiConfigManualUpload=s5AgSysAsciiConfigManualUpload, s5AgTrapFilterTrapOID=s5AgTrapFilterTrapOID, s5AgInfoCurDfltGwAddr=s5AgInfoCurDfltGwAddr, s5AgTrapFilterTrapInitiator2=s5AgTrapFilterTrapInitiator2, s5AgInfoImgType=s5AgInfoImgType, s5AgSysForcedStackModeEnabled=s5AgSysForcedStackModeEnabled, s5AgDaylightSavingsStartDay=s5AgDaylightSavingsStartDay, s5AgSysBlinkLedsTimeThreshold=s5AgSysBlinkLedsTimeThreshold, s5AgDaylightSavingsEndYear=s5AgDaylightSavingsEndYear)
mibBuilder.exportSymbols("S5-AGENT-MIB", s5AgAsciiConfigScriptTable=s5AgAsciiConfigScriptTable, s5AgSntpLastSyncSource=s5AgSntpLastSyncSource, s5AgBootCfgBlocksTable=s5AgBootCfgBlocksTable, s5AgTrpRcvrNext=s5AgTrpRcvrNext, s5AgTrapFilterIndex=s5AgTrapFilterIndex, s5AgInfoDramUsage=s5AgInfoDramUsage, s5AgSysTimeStampEnabled=s5AgSysTimeStampEnabled, s5AgInfoBootMode=s5AgInfoBootMode, s5AgMyIfNxtBootIpxAddr=s5AgMyIfNxtBootIpxAddr, s5AgTrapFilterTrapInitiator1=s5AgTrapFilterTrapInitiator1, s5AgSysVlanConfigControl=s5AgSysVlanConfigControl, s5AgentMib=s5AgentMib, s5AgClockSource=s5AgClockSource, s5AgInfoStackBootpMACUsage=s5AgInfoStackBootpMACUsage, s5AgSysLicenseFilename=s5AgSysLicenseFilename, s5AgSntpSecondaryServerAddress=s5AgSntpSecondaryServerAddress, s5AgInfoNextBootBank=s5AgInfoNextBootBank, s5AgentBootConfig=s5AgentBootConfig, s5AgAsciiConfigScriptBootPriority=s5AgAsciiConfigScriptBootPriority, s5AgMyGrpIndx=s5AgMyGrpIndx, s5AgentBootConfigScalars=s5AgentBootConfigScalars, s5AgentGbl=s5AgentGbl)
