#
# PySNMP MIB module VTGW-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/VTGW-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:28:44 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsIntersection, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "SingleValueConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Counter32, ObjectIdentity, TimeTicks, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, Counter64, enterprises, NotificationType, Unsigned32, IpAddress, MibIdentifier, Gauge32, Integer32, NotificationType, ModuleIdentity = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "ObjectIdentity", "TimeTicks", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "Counter64", "enterprises", "NotificationType", "Unsigned32", "IpAddress", "MibIdentifier", "Gauge32", "Integer32", "NotificationType", "ModuleIdentity")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
vocaltec = MibIdentifier((1, 3, 6, 1, 4, 1, 2516))
vtg = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2))
tgw = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 1))
vnmvgk = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 2))
hasp = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 3))
audio = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 4))
ports = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 5))
ivr = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 6))
telephonyProtocols = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 7))
stat = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 8))
trapParameters = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 9))
analog = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 7, 1))
enm = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2))
gc = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 7, 3))
pri = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 7, 4))
erbium = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 7, 5))
iridium = MibIdentifier((1, 3, 6, 1, 4, 1, 2516, 2, 7, 7))
softwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: softwareVersion.setStatus('mandatory')
cti2Service = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cti2Service.setStatus('mandatory')
resloveMode = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("gatekeeper", 1), ("local", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: resloveMode.setStatus('mandatory')
telephonyProtocol = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("analog", 1), ("pri", 2), ("enm", 3), ("gc", 4), ("erbium", 5), ("carbon", 6), ("iridium", 7)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: telephonyProtocol.setStatus('mandatory')
internetProtocol = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("classic", 1), ("h323", 2), ("dm3", 3), ("cobalt", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: internetProtocol.setStatus('mandatory')
universalLinesNumber = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 6), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: universalLinesNumber.setStatus('mandatory')
voiceLinesNumber = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceLinesNumber.setStatus('mandatory')
faxLinesNumber = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 8), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxLinesNumber.setStatus('mandatory')
sncLinesNumber = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncLinesNumber.setStatus('mandatory')
iPhoneLinesNumber = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 10), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPhoneLinesNumber.setStatus('mandatory')
dialerLinesNumber = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dialerLinesNumber.setStatus('mandatory')
cti2ServicePollingQuantum = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 1, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cti2ServicePollingQuantum.setStatus('mandatory')
rcamPort = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 2, 1), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rcamPort.setStatus('mandatory')
id = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 2, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: id.setStatus('mandatory')
alias = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 2, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: alias.setStatus('mandatory')
time2Live = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 2, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: time2Live.setStatus('mandatory')
loginSetAttempts = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 2, 6), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: loginSetAttempts.setStatus('mandatory')
timeB4LoginAttempt = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 2, 7), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeB4LoginAttempt.setStatus('mandatory')
timeB4LoginSet = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 2, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: timeB4LoginSet.setStatus('mandatory')
rasPort = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 2, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rasPort.setStatus('mandatory')
codecsPriorities = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 4, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: codecsPriorities.setStatus('mandatory')
preferredCodec = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: preferredCodec.setStatus('mandatory')
outputGain = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 4, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outputGain.setStatus('mandatory')
inputGain = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 4, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: inputGain.setStatus('mandatory')
codecsTable = MibTable((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5), )
if mibBuilder.loadTexts: codecsTable.setStatus('mandatory')
codecEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5, 1), ).setIndexNames((0, "VTGW-MIB", "coder"))
if mibBuilder.loadTexts: codecEntry.setStatus('mandatory')
coder = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))).clone(namedValues=NamedValues(("g711a", 1), ("g711m", 2), ("g723", 3), ("g729", 4), ("gsm", 5), ("g726", 6), ("g727", 7), ("g728", 8), ("vsc", 9), ("vhqc4800", 10), ("vhqc5600", 11), ("vhqc6400", 12), ("vhqc7200", 13), ("vhqc8000", 14), ("vhqc8800", 15), ("vhqc9600", 16)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: coder.setStatus('mandatory')
vadEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: vadEnable.setStatus('mandatory')
coderRate = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5, 1, 3), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coderRate.setStatus('mandatory')
framesPerPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5, 1, 4), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: framesPerPkt.setStatus('mandatory')
framesSize = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5, 1, 5), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: framesSize.setStatus('mandatory')
jitter = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5, 1, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jitter.setStatus('mandatory')
jitterOptFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5, 1, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: jitterOptFactor.setStatus('mandatory')
coderRedundency = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 4, 5, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: coderRedundency.setStatus('mandatory')
portsTable = MibTable((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1), )
if mibBuilder.loadTexts: portsTable.setStatus('mandatory')
portEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1), ).setIndexNames((0, "VTGW-MIB", "portNumber"))
if mibBuilder.loadTexts: portEntry.setStatus('mandatory')
portNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portNumber.setStatus('mandatory')
portEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: portEnable.setStatus('mandatory')
connectedTo = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pbx", 1), ("pstn", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: connectedTo.setStatus('mandatory')
boundDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("inbound", 1), ("outbound", 2), ("bidirectional", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: boundDirection.setStatus('mandatory')
dialingMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("dialing-dtmf", 1), ("dialing-pulse", 2), ("dialing-mf", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialingMode.setStatus('mandatory')
detectionMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("detection-dtmf", 1), ("detection-lpd", 2), ("detection-apd", 3), ("detection-mf", 4), ("detection-dpd", 5), ("detection-dpd2", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: detectionMode.setStatus('mandatory')
ivrMode = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("numberphone", 1), ("numberpin", 2), ("phonepin", 3), ("pbx", 4), ("ani", 5), ("dnis", 6)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ivrMode.setStatus('mandatory')
repeatIVR = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 8), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: repeatIVR.setStatus('mandatory')
overSilenceTime = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 9), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: overSilenceTime.setStatus('mandatory')
comment = MibTableColumn((1, 3, 6, 1, 4, 1, 2516, 2, 5, 1, 1, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: comment.setStatus('mandatory')
interDigitTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 6, 1), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: interDigitTimeout.setStatus('mandatory')
digitsTimeout = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 6, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitsTimeout.setStatus('mandatory')
channelSelectionOrder = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("up", 1), ("down", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: channelSelectionOrder.setStatus('mandatory')
glareMode = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("yield", 1), ("stand", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: glareMode.setStatus('mandatory')
ringCount = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 1, 21), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringCount.setStatus('mandatory')
volume = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 1, 22), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: volume.setStatus('mandatory')
idle = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: idle.setStatus('mandatory')
outOfService = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: outOfService.setStatus('mandatory')
seizeOutbound = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: seizeOutbound.setStatus('mandatory')
seizeInbound = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 4), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: seizeInbound.setStatus('mandatory')
seizeAckOutbound = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 5), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: seizeAckOutbound.setStatus('mandatory')
seizeAckInbound = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 6), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: seizeAckInbound.setStatus('mandatory')
answerOutbound = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 7), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerOutbound.setStatus('mandatory')
answerInbound = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 8), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: answerInbound.setStatus('mandatory')
dropOutbound = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 9), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dropOutbound.setStatus('mandatory')
dropInbound = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 10), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dropInbound.setStatus('mandatory')
noAnswerSec = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 11), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: noAnswerSec.setStatus('mandatory')
continuesNoSignal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 12), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: continuesNoSignal.setStatus('mandatory')
helloEdge = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 13), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: helloEdge.setStatus('mandatory')
maxInterRing = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 14), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxInterRing.setStatus('mandatory')
dialToneLocal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 15), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialToneLocal.setStatus('mandatory')
dialToneIntl = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 16), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialToneIntl.setStatus('mandatory')
dialToneXtra = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 17), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dialToneXtra.setStatus('mandatory')
busy1Tone = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 18), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: busy1Tone.setStatus('mandatory')
busy2Tone = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 19), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: busy2Tone.setStatus('mandatory')
ringback1Tone = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 20), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringback1Tone.setStatus('mandatory')
ringback2Tone = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 21), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ringback2Tone.setStatus('mandatory')
disconnect1Tone = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 22), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect1Tone.setStatus('mandatory')
disconnect2Tone = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 23), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: disconnect2Tone.setStatus('mandatory')
waitForDropAckTimer = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 24), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: waitForDropAckTimer.setStatus('mandatory')
waitForSiezeAckTimer = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 25), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: waitForSiezeAckTimer.setStatus('mandatory')
digitsMode = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 26), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: digitsMode.setStatus('mandatory')
isDnisBeforeAni = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 27), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: isDnisBeforeAni.setStatus('mandatory')
collectAni = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 28), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: collectAni.setStatus('mandatory')
prewinkLength = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 29), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: prewinkLength.setStatus('mandatory')
winkLength = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 30), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: winkLength.setStatus('mandatory')
minWinkDetection = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 31), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: minWinkDetection.setStatus('mandatory')
maxWinkDetection = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 32), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxWinkDetection.setStatus('mandatory')
maxDigitsDnis = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 33), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxDigitsDnis.setStatus('mandatory')
maxDigitsAni = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 34), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: maxDigitsAni.setStatus('mandatory')
minTimeToDetectTransition = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 35), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: minTimeToDetectTransition.setStatus('mandatory')
charBeforedigits = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 36), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: charBeforedigits.setStatus('mandatory')
charBetweenAniAndDnis = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 37), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: charBetweenAniAndDnis.setStatus('mandatory')
charInTheEndOfDigits = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 38), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: charInTheEndOfDigits.setStatus('mandatory')
sendCharBeforeDigits = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 39), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendCharBeforeDigits.setStatus('mandatory')
sendDnisbeforeAni = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 40), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendDnisbeforeAni.setStatus('mandatory')
sendCharBetweenAniAndDnis = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 41), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendCharBetweenAniAndDnis.setStatus('mandatory')
sendCharcharInTheEndOfDigits = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 42), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sendCharcharInTheEndOfDigits.setStatus('mandatory')
fileToPlay = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 43), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: fileToPlay.setStatus('mandatory')
repeatPlayFile = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 2, 44), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: repeatPlayFile.setStatus('mandatory')
protocolConfigFileIn = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 3, 1), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protocolConfigFileIn.setStatus('mandatory')
protocolConfigFileOut = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 3, 2), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protocolConfigFileOut.setStatus('mandatory')
listOfProtocolConfigFilesIn = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 3, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: listOfProtocolConfigFilesIn.setStatus('mandatory')
listOfProtocolConfigFilesOut = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 3, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: listOfProtocolConfigFilesOut.setStatus('mandatory')
protocolTrace = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 4, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: protocolTrace.setStatus('mandatory')
hostID = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 7, 2), Integer32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: hostID.setStatus('mandatory')
sIUIPorID = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 7, 7, 3), DisplayString()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: sIUIPorID.setStatus('mandatory')
timeUpTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeUpTotal.setStatus('mandatory')
timeUpInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeUpInterval.setStatus('mandatory')
timeSpanTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 3), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeSpanTotal.setStatus('mandatory')
timeSpanInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: timeSpanInterval.setStatus('mandatory')
vgkLoginAttemptTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLoginAttemptTotal.setStatus('mandatory')
vgkLoginAttemptInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLoginAttemptInterval.setStatus('mandatory')
vgkLoginSuccessTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLoginSuccessTotal.setStatus('mandatory')
vgkLoginSuccessInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLoginSuccessInterval.setStatus('mandatory')
vgkLoginFailureTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLoginFailureTotal.setStatus('mandatory')
vgkLoginFailureInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLoginFailureInterval.setStatus('mandatory')
vgkLogoutAttemptTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLogoutAttemptTotal.setStatus('mandatory')
vgkLogoutAttemptInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLogoutAttemptInterval.setStatus('mandatory')
vgkLogoutSuccessTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLogoutSuccessTotal.setStatus('mandatory')
vgkLogoutSuccessInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLogoutSuccessInterval.setStatus('mandatory')
vgkLogoutFailureTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLogoutFailureTotal.setStatus('mandatory')
vgkLogoutFailureInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkLogoutFailureInterval.setStatus('mandatory')
vgkDisconnectionTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkDisconnectionTotal.setStatus('mandatory')
vgkDisconnectionInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkDisconnectionInterval.setStatus('mandatory')
callValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 19), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callValue.setStatus('mandatory')
callInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callInterval.setStatus('mandatory')
callMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 21), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callMaxTotal.setStatus('mandatory')
callMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 22), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callMaxInterval.setStatus('mandatory')
callAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 23), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callAverageTotal.setStatus('mandatory')
callAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 24), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callAverageInterval.setStatus('mandatory')
callTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 25), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: callTotal.setStatus('mandatory')
universalCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 26), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: universalCallValue.setStatus('mandatory')
universalCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: universalCallInterval.setStatus('mandatory')
universalCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 28), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: universalCallMaxTotal.setStatus('mandatory')
universalCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 29), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: universalCallMaxInterval.setStatus('mandatory')
universalCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 30), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: universalCallAverageTotal.setStatus('mandatory')
universalCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 31), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: universalCallAverageInterval.setStatus('mandatory')
universalCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 32), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: universalCallTotal.setStatus('mandatory')
voiceCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 33), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallValue.setStatus('mandatory')
voiceCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 34), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallInterval.setStatus('mandatory')
voiceCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 35), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallMaxTotal.setStatus('mandatory')
voiceCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 36), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallMaxInterval.setStatus('mandatory')
voiceCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 37), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallAverageTotal.setStatus('mandatory')
voiceCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 38), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallAverageInterval.setStatus('mandatory')
voiceCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 39), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: voiceCallTotal.setStatus('mandatory')
faxCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 40), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxCallValue.setStatus('mandatory')
faxCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 41), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxCallInterval.setStatus('mandatory')
faxCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 42), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxCallMaxTotal.setStatus('mandatory')
faxCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 43), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxCallMaxInterval.setStatus('mandatory')
faxCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 44), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxCallAverageTotal.setStatus('mandatory')
faxCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 45), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxCallAverageInterval.setStatus('mandatory')
faxCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: faxCallTotal.setStatus('mandatory')
sncCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 47), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncCallValue.setStatus('mandatory')
sncCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 48), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncCallInterval.setStatus('mandatory')
sncCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 49), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncCallMaxTotal.setStatus('mandatory')
sncCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 50), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncCallMaxInterval.setStatus('mandatory')
sncCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 51), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncCallAverageTotal.setStatus('mandatory')
sncCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 52), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncCallAverageInterval.setStatus('mandatory')
sncCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 53), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: sncCallTotal.setStatus('mandatory')
iPhoneCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 54), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPhoneCallValue.setStatus('mandatory')
iPhoneCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 55), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPhoneCallInterval.setStatus('mandatory')
iPhoneCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 56), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPhoneCallMaxTotal.setStatus('mandatory')
iPhoneCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 57), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPhoneCallMaxInterval.setStatus('mandatory')
iPhoneCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 58), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPhoneCallAverageTotal.setStatus('mandatory')
iPhoneCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 59), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPhoneCallAverageInterval.setStatus('mandatory')
iPhoneCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 60), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: iPhoneCallTotal.setStatus('mandatory')
dialerCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 61), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dialerCallValue.setStatus('mandatory')
dialerCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 62), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dialerCallInterval.setStatus('mandatory')
dialerCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 63), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dialerCallMaxTotal.setStatus('mandatory')
dialerCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 64), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dialerCallMaxInterval.setStatus('mandatory')
dialerCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 65), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dialerCallAverageTotal.setStatus('mandatory')
dialerCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 66), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dialerCallAverageInterval.setStatus('mandatory')
dialerCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 67), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: dialerCallTotal.setStatus('mandatory')
incorrectPasswordCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 68), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incorrectPasswordCallTotal.setStatus('mandatory')
incorrectPasswordCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 69), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incorrectPasswordCallInterval.setStatus('mandatory')
notSupportedCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 72), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: notSupportedCallTotal.setStatus('mandatory')
notSupportedCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 73), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: notSupportedCallInterval.setStatus('mandatory')
incomingInternetAttemptCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 74), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetAttemptCallValue.setStatus('mandatory')
incomingInternetAttemptCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 75), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetAttemptCallInterval.setStatus('mandatory')
incomingInternetAttemptCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 76), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetAttemptCallMaxTotal.setStatus('mandatory')
incomingInternetAttemptCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 77), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetAttemptCallMaxInterval.setStatus('mandatory')
incomingInternetAttemptCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 78), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetAttemptCallAverageTotal.setStatus('mandatory')
incomingInternetAttemptCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 79), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetAttemptCallAverageInterval.setStatus('mandatory')
incomingInternetAttemptCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 80), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetAttemptCallTotal.setStatus('mandatory')
incomingInternetSuccessCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 81), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetSuccessCallValue.setStatus('mandatory')
incomingInternetSuccessCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 82), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetSuccessCallInterval.setStatus('mandatory')
incomingInternetSuccessCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 83), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetSuccessCallMaxTotal.setStatus('mandatory')
incomingInternetSuccessCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 84), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetSuccessCallMaxInterval.setStatus('mandatory')
incomingInternetSuccessCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 85), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetSuccessCallAverageTotal.setStatus('mandatory')
incomingInternetSuccessCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 86), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetSuccessCallAverageInterval.setStatus('mandatory')
incomingInternetSuccessCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 87), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingInternetSuccessCallTotal.setStatus('mandatory')
incomingTelephonyAttemptCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 88), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonyAttemptCallValue.setStatus('mandatory')
incomingTelephonyAttemptCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 89), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonyAttemptCallInterval.setStatus('mandatory')
incomingTelephonyAttemptCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 90), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonyAttemptCallMaxTotal.setStatus('mandatory')
incomingTelephonyAttemptCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 91), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonyAttemptCallMaxInterval.setStatus('mandatory')
incomingTelephonyAttemptCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 92), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonyAttemptCallAverageTotal.setStatus('mandatory')
incomingTelephonyAttemptCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 93), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonyAttemptCallAverageInterval.setStatus('mandatory')
incomingTelephonyAttemptCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 94), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonyAttemptCallTotal.setStatus('mandatory')
incomingTelephonySuccessCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 95), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonySuccessCallValue.setStatus('mandatory')
incomingTelephonySuccessCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 96), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonySuccessCallInterval.setStatus('mandatory')
incomingTelephonySuccessCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 97), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonySuccessCallMaxTotal.setStatus('mandatory')
incomingTelephonySuccessCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 98), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonySuccessCallMaxInterval.setStatus('mandatory')
incomingTelephonySuccessCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 99), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonySuccessCallAverageTotal.setStatus('mandatory')
incomingTelephonySuccessCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 100), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonySuccessCallAverageInterval.setStatus('mandatory')
incomingTelephonySuccessCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 101), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: incomingTelephonySuccessCallTotal.setStatus('mandatory')
outgoingInternetCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 102), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingInternetCallValue.setStatus('mandatory')
outgoingInternetCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 103), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingInternetCallInterval.setStatus('mandatory')
outgoingInternetCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 104), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingInternetCallMaxTotal.setStatus('mandatory')
outgoingInternetCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 105), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingInternetCallMaxInterval.setStatus('mandatory')
outgoingInternetCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 106), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingInternetCallAverageTotal.setStatus('mandatory')
outgoingInternetCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 107), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingInternetCallAverageInterval.setStatus('mandatory')
outgoingInternetCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 108), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingInternetCallTotal.setStatus('mandatory')
outgoingTelephonyCallValue = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 109), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingTelephonyCallValue.setStatus('mandatory')
outgoingTelephonyCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 110), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingTelephonyCallInterval.setStatus('mandatory')
outgoingTelephonyCallMaxTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 111), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingTelephonyCallMaxTotal.setStatus('mandatory')
outgoingTelephonyCallMaxInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 112), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingTelephonyCallMaxInterval.setStatus('mandatory')
outgoingTelephonyCallAverageTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 113), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingTelephonyCallAverageTotal.setStatus('mandatory')
outgoingTelephonyCallAverageInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 114), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingTelephonyCallAverageInterval.setStatus('mandatory')
outgoingTelephonyCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 115), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: outgoingTelephonyCallTotal.setStatus('mandatory')
accountExpiredCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 116), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: accountExpiredCallTotal.setStatus('mandatory')
accountExpiredCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 117), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: accountExpiredCallInterval.setStatus('mandatory')
vgkNotAvailableCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 118), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkNotAvailableCallTotal.setStatus('mandatory')
vgkNotAvailableCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 119), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vgkNotAvailableCallInterval.setStatus('mandatory')
vtgShutDownCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 120), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgShutDownCallTotal.setStatus('mandatory')
vtgShutDownCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 121), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgShutDownCallInterval.setStatus('mandatory')
vtgOutOfHoursCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 122), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgOutOfHoursCallTotal.setStatus('mandatory')
vtgOutOfHoursCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 123), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgOutOfHoursCallInterval.setStatus('mandatory')
vtgBusyCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 124), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgBusyCallTotal.setStatus('mandatory')
vtgBusyCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 125), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgBusyCallInterval.setStatus('mandatory')
vtgNoAnswerCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 126), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgNoAnswerCallTotal.setStatus('mandatory')
vtgNoAnswerCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 127), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgNoAnswerCallInterval.setStatus('mandatory')
telephoneBusyCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 128), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephoneBusyCallTotal.setStatus('mandatory')
telephoneBusyCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 129), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephoneBusyCallInterval.setStatus('mandatory')
telephoneNoAnswerCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 130), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephoneNoAnswerCallTotal.setStatus('mandatory')
telephoneNoAnswerCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 131), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: telephoneNoAnswerCallInterval.setStatus('mandatory')
miscReasonDisconnectedCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 132), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: miscReasonDisconnectedCallTotal.setStatus('mandatory')
miscReasonDisconnectedCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 133), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: miscReasonDisconnectedCallInterval.setStatus('mandatory')
totalDisconnectedCallsTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 134), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalDisconnectedCallsTotal.setStatus('mandatory')
totalDisconnectedCallsInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 135), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalDisconnectedCallsInterval.setStatus('mandatory')
vtgOutOfServiceCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 136), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgOutOfServiceCallTotal.setStatus('mandatory')
vtgOutOfServiceCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 137), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vtgOutOfServiceCallInterval.setStatus('mandatory')
unauthorizedUserCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 138), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unauthorizedUserCallTotal.setStatus('mandatory')
unauthorizedUserCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 139), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: unauthorizedUserCallInterval.setStatus('mandatory')
resolveFailureCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 140), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resolveFailureCallTotal.setStatus('mandatory')
resolveFailureCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 141), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: resolveFailureCallInterval.setStatus('mandatory')
pstnFailureCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 142), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pstnFailureCallTotal.setStatus('mandatory')
pstnFailureCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 143), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: pstnFailureCallInterval.setStatus('mandatory')
abnormalTerminationCallTotal = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 144), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: abnormalTerminationCallTotal.setStatus('mandatory')
abnormalTerminationCallInterval = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 8, 145), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: abnormalTerminationCallInterval.setStatus('mandatory')
telephonyErrorDescription = MibScalar((1, 3, 6, 1, 4, 1, 2516, 2, 9, 1), DisplayString())
if mibBuilder.loadTexts: telephonyErrorDescription.setStatus('mandatory')
setParameterFailure = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,1))
haspExistance = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,2))
cti2ServiceFailure = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,3))
vgkLoginFailure = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,4))
vgkLogoutFailure = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,5))
vgkDisconnection = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,6))
telephonyError = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,7)).setObjects(("VTGW-MIB", "telephonyErrorDescription"))
incorrectPasswordCalls = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,8))
disconnectedCalls = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,9))
notSupportedCalls = NotificationType((1, 3, 6, 1, 4, 1, 2516, 2) + (0,10))
mibBuilder.exportSymbols("VTGW-MIB", listOfProtocolConfigFilesIn=listOfProtocolConfigFilesIn, notSupportedCallInterval=notSupportedCallInterval, telephoneNoAnswerCallInterval=telephoneNoAnswerCallInterval, timeUpInterval=timeUpInterval, trapParameters=trapParameters, erbium=erbium, audio=audio, incomingTelephonyAttemptCallInterval=incomingTelephonyAttemptCallInterval, continuesNoSignal=continuesNoSignal, cti2ServicePollingQuantum=cti2ServicePollingQuantum, outgoingTelephonyCallTotal=outgoingTelephonyCallTotal, portNumber=portNumber, outgoingInternetCallValue=outgoingInternetCallValue, channelSelectionOrder=channelSelectionOrder, outgoingInternetCallMaxTotal=outgoingInternetCallMaxTotal, dialToneXtra=dialToneXtra, outgoingInternetCallAverageTotal=outgoingInternetCallAverageTotal, time2Live=time2Live, waitForDropAckTimer=waitForDropAckTimer, incomingInternetSuccessCallMaxInterval=incomingInternetSuccessCallMaxInterval, detectionMode=detectionMode, incomingTelephonySuccessCallTotal=incomingTelephonySuccessCallTotal, jitterOptFactor=jitterOptFactor, miscReasonDisconnectedCallInterval=miscReasonDisconnectedCallInterval, outgoingInternetCallInterval=outgoingInternetCallInterval, pstnFailureCallInterval=pstnFailureCallInterval, outgoingTelephonyCallValue=outgoingTelephonyCallValue, timeUpTotal=timeUpTotal, iPhoneCallMaxInterval=iPhoneCallMaxInterval, inputGain=inputGain, dropInbound=dropInbound, incomingInternetSuccessCallAverageInterval=incomingInternetSuccessCallAverageInterval, vtgNoAnswerCallTotal=vtgNoAnswerCallTotal, universalCallTotal=universalCallTotal, vtgShutDownCallInterval=vtgShutDownCallInterval, voiceCallInterval=voiceCallInterval, gc=gc, sncCallMaxInterval=sncCallMaxInterval, vgkLoginAttemptTotal=vgkLoginAttemptTotal, faxCallInterval=faxCallInterval, sendCharBetweenAniAndDnis=sendCharBetweenAniAndDnis, iPhoneCallValue=iPhoneCallValue, vtgOutOfServiceCallInterval=vtgOutOfServiceCallInterval, enm=enm, vgkLoginSuccessInterval=vgkLoginSuccessInterval, interDigitTimeout=interDigitTimeout, ports=ports, incomingInternetAttemptCallValue=incomingInternetAttemptCallValue, outgoingInternetCallMaxInterval=outgoingInternetCallMaxInterval, timeSpanTotal=timeSpanTotal, cti2Service=cti2Service, jitter=jitter, outgoingTelephonyCallAverageInterval=outgoingTelephonyCallAverageInterval, accountExpiredCallInterval=accountExpiredCallInterval, vtgBusyCallInterval=vtgBusyCallInterval, outgoingTelephonyCallInterval=outgoingTelephonyCallInterval, repeatIVR=repeatIVR, dialerCallValue=dialerCallValue, sncCallTotal=sncCallTotal, coderRate=coderRate, incorrectPasswordCallInterval=incorrectPasswordCallInterval, outgoingInternetCallAverageInterval=outgoingInternetCallAverageInterval, vgkLoginFailureTotal=vgkLoginFailureTotal, incomingTelephonySuccessCallMaxInterval=incomingTelephonySuccessCallMaxInterval, fileToPlay=fileToPlay, seizeInbound=seizeInbound, timeB4LoginSet=timeB4LoginSet, sncCallAverageTotal=sncCallAverageTotal, maxDigitsDnis=maxDigitsDnis, seizeOutbound=seizeOutbound, iPhoneCallAverageTotal=iPhoneCallAverageTotal, incomingInternetSuccessCallMaxTotal=incomingInternetSuccessCallMaxTotal, universalLinesNumber=universalLinesNumber, sIUIPorID=sIUIPorID, incomingTelephonySuccessCallMaxTotal=incomingTelephonySuccessCallMaxTotal, maxWinkDetection=maxWinkDetection, comment=comment, totalDisconnectedCallsInterval=totalDisconnectedCallsInterval, faxCallTotal=faxCallTotal, outgoingInternetCallTotal=outgoingInternetCallTotal, vtgNoAnswerCallInterval=vtgNoAnswerCallInterval, vgkNotAvailableCallInterval=vgkNotAvailableCallInterval, vocaltec=vocaltec, listOfProtocolConfigFilesOut=listOfProtocolConfigFilesOut, vgkLogoutAttemptTotal=vgkLogoutAttemptTotal, ivrMode=ivrMode, telephonyProtocol=telephonyProtocol, timeB4LoginAttempt=timeB4LoginAttempt, resloveMode=resloveMode, dropOutbound=dropOutbound, faxCallValue=faxCallValue, codecsTable=codecsTable, hostID=hostID, tgw=tgw, universalCallAverageTotal=universalCallAverageTotal, voiceCallTotal=voiceCallTotal, universalCallInterval=universalCallInterval, outgoingTelephonyCallAverageTotal=outgoingTelephonyCallAverageTotal, coder=coder, incomingTelephonySuccessCallInterval=incomingTelephonySuccessCallInterval, incomingTelephonySuccessCallAverageInterval=incomingTelephonySuccessCallAverageInterval, boundDirection=boundDirection, incomingTelephonyAttemptCallTotal=incomingTelephonyAttemptCallTotal, totalDisconnectedCallsTotal=totalDisconnectedCallsTotal, resolveFailureCallInterval=resolveFailureCallInterval, seizeAckInbound=seizeAckInbound, telephonyProtocols=telephonyProtocols, vgkDisconnection=vgkDisconnection, repeatPlayFile=repeatPlayFile, codecEntry=codecEntry, outputGain=outputGain, vtg=vtg, ringback2Tone=ringback2Tone, protocolTrace=protocolTrace, callMaxInterval=callMaxInterval, voiceCallAverageInterval=voiceCallAverageInterval, setParameterFailure=setParameterFailure, coderRedundency=coderRedundency, vnmvgk=vnmvgk, loginSetAttempts=loginSetAttempts, universalCallMaxInterval=universalCallMaxInterval, telephoneBusyCallInterval=telephoneBusyCallInterval, ivr=ivr, abnormalTerminationCallTotal=abnormalTerminationCallTotal, incorrectPasswordCalls=incorrectPasswordCalls, vtgOutOfHoursCallInterval=vtgOutOfHoursCallInterval, vgkDisconnectionTotal=vgkDisconnectionTotal, universalCallMaxTotal=universalCallMaxTotal, incomingTelephonyAttemptCallMaxTotal=incomingTelephonyAttemptCallMaxTotal, vgkLogoutFailureTotal=vgkLogoutFailureTotal, dialerCallTotal=dialerCallTotal, faxCallMaxInterval=faxCallMaxInterval, incomingTelephonyAttemptCallMaxInterval=incomingTelephonyAttemptCallMaxInterval, vtgShutDownCallTotal=vtgShutDownCallTotal, iPhoneCallInterval=iPhoneCallInterval, vgkLogoutSuccessTotal=vgkLogoutSuccessTotal, incomingInternetAttemptCallAverageTotal=incomingInternetAttemptCallAverageTotal, callAverageTotal=callAverageTotal, incomingInternetAttemptCallTotal=incomingInternetAttemptCallTotal, incomingTelephonyAttemptCallValue=incomingTelephonyAttemptCallValue, busy2Tone=busy2Tone, charBetweenAniAndDnis=charBetweenAniAndDnis, isDnisBeforeAni=isDnisBeforeAni, dialerCallMaxTotal=dialerCallMaxTotal, incomingTelephonySuccessCallValue=incomingTelephonySuccessCallValue, telephoneBusyCallTotal=telephoneBusyCallTotal, callTotal=callTotal, protocolConfigFileOut=protocolConfigFileOut, telephonyErrorDescription=telephonyErrorDescription, outgoingTelephonyCallMaxTotal=outgoingTelephonyCallMaxTotal, notSupportedCalls=notSupportedCalls, portsTable=portsTable, answerOutbound=answerOutbound, sendDnisbeforeAni=sendDnisbeforeAni, sncCallAverageInterval=sncCallAverageInterval, vgkLogoutFailure=vgkLogoutFailure, vgkLogoutSuccessInterval=vgkLogoutSuccessInterval, resolveFailureCallTotal=resolveFailureCallTotal, internetProtocol=internetProtocol, voiceCallAverageTotal=voiceCallAverageTotal, hasp=hasp, dialerLinesNumber=dialerLinesNumber, volume=volume, iridium=iridium, incomingTelephonyAttemptCallAverageInterval=incomingTelephonyAttemptCallAverageInterval, unauthorizedUserCallInterval=unauthorizedUserCallInterval, overSilenceTime=overSilenceTime, maxInterRing=maxInterRing, glareMode=glareMode, vgkLogoutFailureInterval=vgkLogoutFailureInterval, prewinkLength=prewinkLength, vgkLoginAttemptInterval=vgkLoginAttemptInterval, dialerCallMaxInterval=dialerCallMaxInterval, softwareVersion=softwareVersion, dialToneLocal=dialToneLocal, charBeforedigits=charBeforedigits, iPhoneCallAverageInterval=iPhoneCallAverageInterval, dialerCallAverageInterval=dialerCallAverageInterval, id=id, winkLength=winkLength, telephonyError=telephonyError, framesPerPkt=framesPerPkt, sendCharcharInTheEndOfDigits=sendCharcharInTheEndOfDigits, vadEnable=vadEnable, preferredCodec=preferredCodec, vtgOutOfServiceCallTotal=vtgOutOfServiceCallTotal, notSupportedCallTotal=notSupportedCallTotal, minWinkDetection=minWinkDetection, sncCallValue=sncCallValue, idle=idle, ringCount=ringCount, incomingTelephonyAttemptCallAverageTotal=incomingTelephonyAttemptCallAverageTotal, portEntry=portEntry, sncCallMaxTotal=sncCallMaxTotal, iPhoneCallTotal=iPhoneCallTotal, dialerCallInterval=dialerCallInterval, haspExistance=haspExistance, vgkDisconnectionInterval=vgkDisconnectionInterval, sncCallInterval=sncCallInterval, accountExpiredCallTotal=accountExpiredCallTotal, incomingInternetAttemptCallMaxTotal=incomingInternetAttemptCallMaxTotal, cti2ServiceFailure=cti2ServiceFailure, outOfService=outOfService, rasPort=rasPort, busy1Tone=busy1Tone, codecsPriorities=codecsPriorities, ringback1Tone=ringback1Tone, incomingInternetSuccessCallValue=incomingInternetSuccessCallValue, protocolConfigFileIn=protocolConfigFileIn, iPhoneCallMaxTotal=iPhoneCallMaxTotal, faxCallMaxTotal=faxCallMaxTotal, voiceCallValue=voiceCallValue, faxCallAverageInterval=faxCallAverageInterval, incomingInternetAttemptCallInterval=incomingInternetAttemptCallInterval, disconnect1Tone=disconnect1Tone, outgoingTelephonyCallMaxInterval=outgoingTelephonyCallMaxInterval, callValue=callValue, universalCallValue=universalCallValue, incomingInternetSuccessCallTotal=incomingInternetSuccessCallTotal, vgkLoginFailure=vgkLoginFailure, iPhoneLinesNumber=iPhoneLinesNumber, incomingTelephonySuccessCallAverageTotal=incomingTelephonySuccessCallAverageTotal, telephoneNoAnswerCallTotal=telephoneNoAnswerCallTotal, faxLinesNumber=faxLinesNumber, collectAni=collectAni, vgkLoginSuccessTotal=vgkLoginSuccessTotal, pri=pri, disconnect2Tone=disconnect2Tone, waitForSiezeAckTimer=waitForSiezeAckTimer, analog=analog, callMaxTotal=callMaxTotal, miscReasonDisconnectedCallTotal=miscReasonDisconnectedCallTotal, unauthorizedUserCallTotal=unauthorizedUserCallTotal, alias=alias, voiceCallMaxTotal=voiceCallMaxTotal, incomingInternetAttemptCallAverageInterval=incomingInternetAttemptCallAverageInterval, disconnectedCalls=disconnectedCalls, seizeAckOutbound=seizeAckOutbound, callAverageInterval=callAverageInterval, voiceLinesNumber=voiceLinesNumber, vtgBusyCallTotal=vtgBusyCallTotal, maxDigitsAni=maxDigitsAni, vgkLoginFailureInterval=vgkLoginFailureInterval, dialerCallAverageTotal=dialerCallAverageTotal, vgkNotAvailableCallTotal=vgkNotAvailableCallTotal, connectedTo=connectedTo, helloEdge=helloEdge, incomingInternetSuccessCallInterval=incomingInternetSuccessCallInterval, charInTheEndOfDigits=charInTheEndOfDigits, digitsMode=digitsMode, timeSpanInterval=timeSpanInterval, voiceCallMaxInterval=voiceCallMaxInterval, minTimeToDetectTransition=minTimeToDetectTransition, incomingInternetAttemptCallMaxInterval=incomingInternetAttemptCallMaxInterval)
mibBuilder.exportSymbols("VTGW-MIB", rcamPort=rcamPort, dialToneIntl=dialToneIntl, stat=stat, noAnswerSec=noAnswerSec, faxCallAverageTotal=faxCallAverageTotal, answerInbound=answerInbound, vtgOutOfHoursCallTotal=vtgOutOfHoursCallTotal, universalCallAverageInterval=universalCallAverageInterval, pstnFailureCallTotal=pstnFailureCallTotal, portEnable=portEnable, abnormalTerminationCallInterval=abnormalTerminationCallInterval, sncLinesNumber=sncLinesNumber, incorrectPasswordCallTotal=incorrectPasswordCallTotal, dialingMode=dialingMode, sendCharBeforeDigits=sendCharBeforeDigits, incomingInternetSuccessCallAverageTotal=incomingInternetSuccessCallAverageTotal, vgkLogoutAttemptInterval=vgkLogoutAttemptInterval, callInterval=callInterval, digitsTimeout=digitsTimeout, framesSize=framesSize)
