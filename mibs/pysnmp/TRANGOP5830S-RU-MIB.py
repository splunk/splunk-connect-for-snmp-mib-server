#
# PySNMP MIB module TRANGOP5830S-RU-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/TRANGOP5830S-RU-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 21:19:36 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Integer32, iso, Unsigned32, Counter64, enterprises, ObjectIdentity, MibIdentifier, Bits, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType, Counter32, Gauge32, IpAddress, ModuleIdentity, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Integer32", "iso", "Unsigned32", "Counter64", "enterprises", "ObjectIdentity", "MibIdentifier", "Bits", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType", "Counter32", "Gauge32", "IpAddress", "ModuleIdentity", "TimeTicks")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

trango = MibIdentifier((1, 3, 6, 1, 4, 1, 5454))
tbw = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1))
p5830sru = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24))
rusys = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1))
rurf = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2))
mibinfo = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 5))
ruversion = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 1))
ruswitches = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 8))
rutraffic = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 9))
ruipconfig = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 13))
rurftable = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4))
ruism = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 5))
ruunii = MibIdentifier((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 6))
ruversionHW = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 1, 1), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruversionHW.setStatus('mandatory')
ruversionFW = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruversionFW.setStatus('mandatory')
ruversionFPGA = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruversionFPGA.setStatus('mandatory')
ruversionFWChecksum = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruversionFWChecksum.setStatus('mandatory')
ruversionFPGAChecksum = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruversionFPGAChecksum.setStatus('mandatory')
rusysDeviceId = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 2), OctetString().subtype(subtypeSpec=ValueSizeConstraint(6, 6)).setFixedLength(6)).setMaxAccess("readonly")
if mibBuilder.loadTexts: rusysDeviceId.setStatus('mandatory')
rusysDefOpMode = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 0))).clone(namedValues=NamedValues(("on", 16), ("off", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rusysDefOpMode.setStatus('mandatory')
rusysCurOpMode = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(16, 0))).clone(namedValues=NamedValues(("on", 16), ("off", 0)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rusysCurOpMode.setStatus('mandatory')
rusysActivateOpmode = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1))).clone('deactivated')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rusysActivateOpmode.setStatus('mandatory')
rusysReadCommStr = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rusysReadCommStr.setStatus('mandatory')
rusysWriteCommStr = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rusysWriteCommStr.setStatus('mandatory')
ruswitchesBlockBroadcastMulticast = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 8, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("passed", 0), ("blocked", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruswitchesBlockBroadcastMulticast.setStatus('mandatory')
ruswitchesHTTPD = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 8, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruswitchesHTTPD.setStatus('mandatory')
ruswitchesAutoScanMasterSignal = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 8, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruswitchesAutoScanMasterSignal.setStatus('mandatory')
rutrafficEthInOctets = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 9, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rutrafficEthInOctets.setStatus('mandatory')
rutrafficEthOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 9, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rutrafficEthOutOctets.setStatus('mandatory')
rutrafficRfInOctets = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 9, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rutrafficRfInOctets.setStatus('mandatory')
rutrafficRfOutOctets = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 9, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: rutrafficRfOutOctets.setStatus('mandatory')
rusysTemperature = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rusysTemperature.setStatus('mandatory')
rusysUpdateFlashAndActivate = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("no", 0), ("yes", 1))).clone('no')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rusysUpdateFlashAndActivate.setStatus('mandatory')
rusysReboot = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("deactivated", 0), ("activated", 1))).clone('deactivated')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rusysReboot.setStatus('mandatory')
ruipconfigIpAddress = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 13, 1), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruipconfigIpAddress.setStatus('mandatory')
ruipconfigSubnet = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 13, 2), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruipconfigSubnet.setStatus('mandatory')
ruipconfigDefaultGateway = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 1, 13, 3), IpAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruipconfigDefaultGateway.setStatus('mandatory')
rurfRSSI = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: rurfRSSI.setStatus('mandatory')
rurftableChannel1 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel1.setStatus('mandatory')
rurftableChannel2 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel2.setStatus('mandatory')
rurftableChannel3 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel3.setStatus('mandatory')
rurftableChannel4 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel4.setStatus('mandatory')
rurftableChannel5 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel5.setStatus('mandatory')
rurftableChannel6 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel6.setStatus('mandatory')
rurftableChannel7 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel7.setStatus('mandatory')
rurftableChannel8 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel8.setStatus('mandatory')
rurftableChannel9 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel9.setStatus('mandatory')
rurftableChannel10 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel10.setStatus('mandatory')
rurftableChannel11 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel11.setStatus('mandatory')
rurftableChannel12 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel12.setStatus('mandatory')
rurftableChannel13 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel13.setStatus('mandatory')
rurftableChannel14 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel14.setStatus('mandatory')
rurftableChannel15 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel15.setStatus('mandatory')
rurftableChannel16 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel16.setStatus('mandatory')
rurftableChannel17 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel17.setStatus('mandatory')
rurftableChannel18 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel18.setStatus('mandatory')
rurftableChannel19 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel19.setStatus('mandatory')
rurftableChannel20 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel20.setStatus('mandatory')
rurftableChannel21 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel21.setStatus('mandatory')
rurftableChannel22 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel22.setStatus('mandatory')
rurftableChannel23 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel23.setStatus('mandatory')
rurftableChannel24 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel24.setStatus('mandatory')
rurftableChannel25 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel25.setStatus('mandatory')
rurftableChannel26 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel26.setStatus('mandatory')
rurftableChannel27 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel27.setStatus('mandatory')
rurftableChannel28 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel28.setStatus('mandatory')
rurftableChannel29 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel29.setStatus('mandatory')
rurftableChannel30 = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 4, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(5260, 5340), ValueRangeConstraint(5736, 5836), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: rurftableChannel30.setStatus('mandatory')
ruismTxPowerMax = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 5, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruismTxPowerMax.setStatus('mandatory')
ruismTxPowerMin = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 5, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruismTxPowerMin.setStatus('mandatory')
ruismTxPower = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 5, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruismTxPower.setStatus('mandatory')
ruismRxThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 5, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-90, -90), ValueRangeConstraint(-85, -85), ValueRangeConstraint(-80, -80), ValueRangeConstraint(-75, -75), ValueRangeConstraint(-70, -70), ValueRangeConstraint(-65, -65), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruismRxThreshold.setStatus('mandatory')
ruuniiTxPowerMax = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 6, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruuniiTxPowerMax.setStatus('mandatory')
ruuniiTxPowerMin = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 6, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readonly")
if mibBuilder.loadTexts: ruuniiTxPowerMin.setStatus('mandatory')
ruuniiTxPower = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 6, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-128, 127))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruuniiTxPower.setStatus('mandatory')
ruuniiRxThreshold = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 2, 6, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-90, -90), ValueRangeConstraint(-85, -85), ValueRangeConstraint(-80, -80), ValueRangeConstraint(-75, -75), ValueRangeConstraint(-70, -70), ValueRangeConstraint(-65, -65), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: ruuniiRxThreshold.setStatus('mandatory')
mibinfoVersion = MibScalar((1, 3, 6, 1, 4, 1, 5454, 1, 24, 5, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mibinfoVersion.setStatus('mandatory')
mibBuilder.exportSymbols("TRANGOP5830S-RU-MIB", mibinfo=mibinfo, rurftableChannel9=rurftableChannel9, ruswitchesAutoScanMasterSignal=ruswitchesAutoScanMasterSignal, ruversionFWChecksum=ruversionFWChecksum, rusysActivateOpmode=rusysActivateOpmode, ruversionHW=ruversionHW, rurftableChannel24=rurftableChannel24, rurftableChannel27=rurftableChannel27, rurftableChannel2=rurftableChannel2, rutrafficEthInOctets=rutrafficEthInOctets, rurftableChannel14=rurftableChannel14, ruismTxPowerMax=ruismTxPowerMax, rusys=rusys, ruunii=ruunii, rurftableChannel15=rurftableChannel15, rusysCurOpMode=rusysCurOpMode, rurftableChannel5=rurftableChannel5, rurftableChannel11=rurftableChannel11, ruversionFPGAChecksum=ruversionFPGAChecksum, rurftableChannel12=rurftableChannel12, rusysDeviceId=rusysDeviceId, rurftableChannel25=rurftableChannel25, ruswitches=ruswitches, ruismTxPowerMin=ruismTxPowerMin, ruuniiTxPower=ruuniiTxPower, ruversionFPGA=ruversionFPGA, rurftableChannel8=rurftableChannel8, p5830sru=p5830sru, rutrafficRfInOctets=rutrafficRfInOctets, ruismTxPower=ruismTxPower, rusysReboot=rusysReboot, rusysUpdateFlashAndActivate=rusysUpdateFlashAndActivate, rurftableChannel4=rurftableChannel4, rurftable=rurftable, rurftableChannel6=rurftableChannel6, rurftableChannel16=rurftableChannel16, rusysReadCommStr=rusysReadCommStr, ruversionFW=ruversionFW, ruswitchesBlockBroadcastMulticast=ruswitchesBlockBroadcastMulticast, rurftableChannel30=rurftableChannel30, rurftableChannel18=rurftableChannel18, ruipconfig=ruipconfig, ruismRxThreshold=ruismRxThreshold, rurftableChannel28=rurftableChannel28, rurftableChannel10=rurftableChannel10, rutraffic=rutraffic, rurftableChannel13=rurftableChannel13, rurftableChannel3=rurftableChannel3, ruuniiTxPowerMax=ruuniiTxPowerMax, rusysTemperature=rusysTemperature, rusysWriteCommStr=rusysWriteCommStr, rurftableChannel22=rurftableChannel22, mibinfoVersion=mibinfoVersion, tbw=tbw, ruipconfigDefaultGateway=ruipconfigDefaultGateway, rurftableChannel17=rurftableChannel17, ruswitchesHTTPD=ruswitchesHTTPD, rurftableChannel21=rurftableChannel21, ruipconfigIpAddress=ruipconfigIpAddress, ruuniiTxPowerMin=ruuniiTxPowerMin, rurftableChannel26=rurftableChannel26, ruism=ruism, rurftableChannel19=rurftableChannel19, trango=trango, rurfRSSI=rurfRSSI, rutrafficRfOutOctets=rutrafficRfOutOctets, rurftableChannel23=rurftableChannel23, rutrafficEthOutOctets=rutrafficEthOutOctets, ruversion=ruversion, rurftableChannel20=rurftableChannel20, rurftableChannel1=rurftableChannel1, DisplayString=DisplayString, ruipconfigSubnet=ruipconfigSubnet, rurftableChannel7=rurftableChannel7, rurftableChannel29=rurftableChannel29, rusysDefOpMode=rusysDefOpMode, rurf=rurf, ruuniiRxThreshold=ruuniiRxThreshold)
