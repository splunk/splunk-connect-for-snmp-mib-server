#
# PySNMP MIB module CISCO-VISM-HDLC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/CISCO-VISM-HDLC-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 18:02:10 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsUnion, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsUnion", "ConstraintsIntersection")
voice, = mibBuilder.importSymbols("BASIS-MIB", "voice")
ciscoWan, = mibBuilder.importSymbols("CISCOWAN-SMI", "ciscoWan")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
Counter32, iso, Bits, Unsigned32, IpAddress, ModuleIdentity, TimeTicks, Integer32, Counter64, Gauge32, ObjectIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "iso", "Bits", "Unsigned32", "IpAddress", "ModuleIdentity", "TimeTicks", "Integer32", "Counter64", "Gauge32", "ObjectIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "NotificationType")
TextualConvention, DisplayString, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "RowStatus")
ciscoVismHdlcMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 351, 150, 91))
ciscoVismHdlcMIB.setRevisions(('2003-10-09 00:00',))
if mibBuilder.loadTexts: ciscoVismHdlcMIB.setLastUpdated('200310090000Z')
if mibBuilder.loadTexts: ciscoVismHdlcMIB.setOrganization('Cisco Systems, Inc.')
vismSigGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6))
vismHdlcChanTable = MibTable((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1), )
if mibBuilder.loadTexts: vismHdlcChanTable.setStatus('current')
vismHdlcChanEntry = MibTableRow((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1), ).setIndexNames((0, "CISCO-VISM-HDLC-MIB", "vismHdlcChanNum"))
if mibBuilder.loadTexts: vismHdlcChanEntry.setStatus('current')
vismHdlcChanNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 248))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismHdlcChanNum.setStatus('current')
vismHdlcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismHdlcRowStatus.setStatus('current')
vismHdlcMaxFrameSize = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismHdlcMaxFrameSize.setStatus('deprecated')
vismHdlcLcnNum = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(131, 510))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vismHdlcLcnNum.setStatus('current')
vismHdlcXmtFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismHdlcXmtFrames.setStatus('current')
vismHdlcRcvFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismHdlcRcvFrames.setStatus('current')
vismHdlcRcvCrcErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismHdlcRcvCrcErrors.setStatus('current')
vismHdlcRcvBufOverflows = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismHdlcRcvBufOverflows.setStatus('current')
vismHdlcTxUnderflows = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismHdlcTxUnderflows.setStatus('current')
vismHdlcTxAbortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismHdlcTxAbortFrames.setStatus('current')
vismHdlcRxAbortFrames = MibTableColumn((1, 3, 6, 1, 4, 1, 351, 110, 5, 5, 6, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vismHdlcRxAbortFrames.setStatus('current')
ciscoVismHdlcMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 91, 2))
ciscoVismHdlcMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 91, 2, 1))
ciscoVismHdlcMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 351, 150, 91, 2, 2))
ciscoVismHdlcCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 351, 150, 91, 2, 2, 1)).setObjects(("CISCO-VISM-HDLC-MIB", "ciscoVismHdlcGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismHdlcCompliance = ciscoVismHdlcCompliance.setStatus('current')
ciscoVismHdlcGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 91, 2, 1, 1)).setObjects(("CISCO-VISM-HDLC-MIB", "vismHdlcChanNum"), ("CISCO-VISM-HDLC-MIB", "vismHdlcRowStatus"), ("CISCO-VISM-HDLC-MIB", "vismHdlcLcnNum"), ("CISCO-VISM-HDLC-MIB", "vismHdlcXmtFrames"), ("CISCO-VISM-HDLC-MIB", "vismHdlcRcvFrames"), ("CISCO-VISM-HDLC-MIB", "vismHdlcRcvCrcErrors"), ("CISCO-VISM-HDLC-MIB", "vismHdlcRcvBufOverflows"), ("CISCO-VISM-HDLC-MIB", "vismHdlcTxUnderflows"), ("CISCO-VISM-HDLC-MIB", "vismHdlcTxAbortFrames"), ("CISCO-VISM-HDLC-MIB", "vismHdlcRxAbortFrames"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismHdlcGroup = ciscoVismHdlcGroup.setStatus('current')
ciscoVismHdlcDeprecateGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 351, 150, 91, 2, 1, 2)).setObjects(("CISCO-VISM-HDLC-MIB", "vismHdlcMaxFrameSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    ciscoVismHdlcDeprecateGroup = ciscoVismHdlcDeprecateGroup.setStatus('deprecated')
mibBuilder.exportSymbols("CISCO-VISM-HDLC-MIB", ciscoVismHdlcMIB=ciscoVismHdlcMIB, vismHdlcXmtFrames=vismHdlcXmtFrames, ciscoVismHdlcMIBConformance=ciscoVismHdlcMIBConformance, vismHdlcTxAbortFrames=vismHdlcTxAbortFrames, vismSigGrp=vismSigGrp, vismHdlcChanEntry=vismHdlcChanEntry, ciscoVismHdlcMIBCompliances=ciscoVismHdlcMIBCompliances, vismHdlcChanTable=vismHdlcChanTable, ciscoVismHdlcGroup=ciscoVismHdlcGroup, ciscoVismHdlcDeprecateGroup=ciscoVismHdlcDeprecateGroup, vismHdlcRcvCrcErrors=vismHdlcRcvCrcErrors, vismHdlcLcnNum=vismHdlcLcnNum, vismHdlcRxAbortFrames=vismHdlcRxAbortFrames, vismHdlcTxUnderflows=vismHdlcTxUnderflows, PYSNMP_MODULE_ID=ciscoVismHdlcMIB, vismHdlcMaxFrameSize=vismHdlcMaxFrameSize, vismHdlcChanNum=vismHdlcChanNum, vismHdlcRcvBufOverflows=vismHdlcRcvBufOverflows, vismHdlcRowStatus=vismHdlcRowStatus, ciscoVismHdlcCompliance=ciscoVismHdlcCompliance, ciscoVismHdlcMIBGroups=ciscoVismHdlcMIBGroups, vismHdlcRcvFrames=vismHdlcRcvFrames)
