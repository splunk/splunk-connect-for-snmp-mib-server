#
# PySNMP MIB module INFORMANT-MBM (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/INFORMANT-MBM
# Produced by pysmi-0.3.4 at Mon Apr 29 19:42:16 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
ObjectIdentifier, OctetString, Integer = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "OctetString", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Counter32, IpAddress, Unsigned32, Counter64, TimeTicks, Gauge32, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, Bits, MibIdentifier, ObjectIdentity, NotificationType, Integer32 = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "IpAddress", "Unsigned32", "Counter64", "TimeTicks", "Gauge32", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Bits", "MibIdentifier", "ObjectIdentity", "NotificationType", "Integer32")
DisplayString, TextualConvention, TruthValue, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention", "TruthValue", "DateAndTime")
WtcsDisplayString, informant = mibBuilder.importSymbols("WTCS", "WtcsDisplayString", "informant")
motherBoardMonitor = ModuleIdentity((1, 3, 6, 1, 4, 1, 9600, 1, 10))
motherBoardMonitor.setRevisions(('2004-06-23 20:39',))
if mibBuilder.loadTexts: motherBoardMonitor.setLastUpdated('200406232039Z')
if mibBuilder.loadTexts: motherBoardMonitor.setOrganization('Informant Systems, Inc.')
mbmBusType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 10, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmBusType.setStatus('current')
mbmPath = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 10, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmPath.setStatus('current')
mbmSmbName = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 10, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSmbName.setStatus('current')
mbmSmbType = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 10, 4), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSmbType.setStatus('current')
mbmVersion = MibScalar((1, 3, 6, 1, 4, 1, 9600, 1, 10, 5), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmVersion.setStatus('current')
mbmSensorTable = MibTable((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6), )
if mibBuilder.loadTexts: mbmSensorTable.setStatus('current')
mbmSensorEntry = MibTableRow((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1), ).setIndexNames((0, "INFORMANT-MBM", "mbmSensorIndex"))
if mibBuilder.loadTexts: mbmSensorEntry.setStatus('current')
mbmSensorIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 99))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorIndex.setStatus('current')
mbmSensorName = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 11))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorName.setStatus('current')
mbmSensorType = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("stUnknown", 0), ("stTemperature", 1), ("stVoltage", 2), ("stFan", 3), ("stMhz", 4), ("stPercentage", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorType.setStatus('current')
mbmSensorReadout = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 4), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorReadout.setStatus('current')
mbmSensorCurrentI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 5), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorCurrentI.setStatus('current')
mbmSensorCurrentS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorCurrentS.setStatus('current')
mbmSensorLowI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorLowI.setStatus('current')
mbmSensorLowS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 8), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorLowS.setStatus('current')
mbmSensorHighI = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 9), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorHighI.setStatus('current')
mbmSensorHighS = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 10), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorHighS.setStatus('current')
mbmSensorAlarm1I = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 11), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorAlarm1I.setStatus('current')
mbmSensorAlarm1S = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorAlarm1S.setStatus('current')
mbmSensorAlarm2I = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 13), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorAlarm2I.setStatus('current')
mbmSensorAlarm2S = MibTableColumn((1, 3, 6, 1, 4, 1, 9600, 1, 10, 6, 1, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 50))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mbmSensorAlarm2S.setStatus('current')
mibBuilder.exportSymbols("INFORMANT-MBM", mbmVersion=mbmVersion, mbmPath=mbmPath, mbmSensorLowI=mbmSensorLowI, mbmSensorAlarm2S=mbmSensorAlarm2S, mbmSensorIndex=mbmSensorIndex, mbmSensorCurrentI=mbmSensorCurrentI, mbmSensorAlarm1S=mbmSensorAlarm1S, mbmSensorReadout=mbmSensorReadout, mbmSensorCurrentS=mbmSensorCurrentS, mbmSensorEntry=mbmSensorEntry, mbmSensorTable=mbmSensorTable, mbmSensorName=mbmSensorName, mbmSmbType=mbmSmbType, mbmSensorLowS=mbmSensorLowS, PYSNMP_MODULE_ID=motherBoardMonitor, mbmSensorAlarm2I=mbmSensorAlarm2I, mbmSensorAlarm1I=mbmSensorAlarm1I, mbmSensorHighI=mbmSensorHighI, mbmSmbName=mbmSmbName, mbmSensorType=mbmSensorType, motherBoardMonitor=motherBoardMonitor, mbmBusType=mbmBusType, mbmSensorHighS=mbmSensorHighS)
