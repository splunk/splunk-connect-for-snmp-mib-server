#
# PySNMP MIB module ASCEND-MIBSWITCHCONFIG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ASCEND-MIBSWITCHCONFIG-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 17:12:33 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
configuration, = mibBuilder.importSymbols("ASCEND-MIB", "configuration")
ObjectIdentifier, Integer, OctetString = mibBuilder.importSymbols("ASN1", "ObjectIdentifier", "Integer", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ConstraintsUnion, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ConstraintsUnion", "ValueSizeConstraint")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
Bits, Integer32, Counter64, ObjectIdentity, TimeTicks, IpAddress, Counter32, Gauge32, Unsigned32, MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, NotificationType, ModuleIdentity, iso = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Counter64", "ObjectIdentity", "TimeTicks", "IpAddress", "Counter32", "Gauge32", "Unsigned32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "NotificationType", "ModuleIdentity", "iso")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
class DisplayString(OctetString):
    pass

mibswitchConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 529, 23, 151))
mibswitchConfigTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 151, 1), )
if mibBuilder.loadTexts: mibswitchConfigTable.setStatus('mandatory')
mibswitchConfigEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 151, 1, 1), ).setIndexNames((0, "ASCEND-MIBSWITCHCONFIG-MIB", "switchConfig-SwitchName"))
if mibBuilder.loadTexts: mibswitchConfigEntry.setStatus('mandatory')
switchConfig_SwitchName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 1, 1, 1), DisplayString()).setLabel("switchConfig-SwitchName").setMaxAccess("readonly")
if mibBuilder.loadTexts: switchConfig_SwitchName.setStatus('mandatory')
switchConfig_Action_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 1, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("noAction", 1), ("createProfile", 2), ("deleteProfile", 3)))).setLabel("switchConfig-Action-o").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_Action_o.setStatus('mandatory')
mibswitchConfig_AtmParameters_OutgoingShaperTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 151, 2), ).setLabel("mibswitchConfig-AtmParameters-OutgoingShaperTable")
if mibBuilder.loadTexts: mibswitchConfig_AtmParameters_OutgoingShaperTable.setStatus('mandatory')
mibswitchConfig_AtmParameters_OutgoingShaperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 151, 2, 1), ).setLabel("mibswitchConfig-AtmParameters-OutgoingShaperEntry").setIndexNames((0, "ASCEND-MIBSWITCHCONFIG-MIB", "switchConfig-AtmParameters-OutgoingShaper-SwitchName"), (0, "ASCEND-MIBSWITCHCONFIG-MIB", "switchConfig-AtmParameters-OutgoingShaper-Index-o"))
if mibBuilder.loadTexts: mibswitchConfig_AtmParameters_OutgoingShaperEntry.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingShaper_SwitchName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 2, 1, 1), DisplayString()).setLabel("switchConfig-AtmParameters-OutgoingShaper-SwitchName").setMaxAccess("readonly")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingShaper_SwitchName.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingShaper_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 2, 1, 2), Integer32()).setLabel("switchConfig-AtmParameters-OutgoingShaper-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingShaper_Index_o.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingShaper_QueueIndex = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 2, 1, 3), Integer32()).setLabel("switchConfig-AtmParameters-OutgoingShaper-QueueIndex").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingShaper_QueueIndex.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingShaper_Vpi = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 2, 1, 4), Integer32()).setLabel("switchConfig-AtmParameters-OutgoingShaper-Vpi").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingShaper_Vpi.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingShaper_Bandwidth = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 2, 1, 5), Integer32()).setLabel("switchConfig-AtmParameters-OutgoingShaper-Bandwidth").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingShaper_Bandwidth.setStatus('mandatory')
mibswitchConfig_AtmParameters_OutgoingQueueTable = MibTable((1, 3, 6, 1, 4, 1, 529, 23, 151, 3), ).setLabel("mibswitchConfig-AtmParameters-OutgoingQueueTable")
if mibBuilder.loadTexts: mibswitchConfig_AtmParameters_OutgoingQueueTable.setStatus('mandatory')
mibswitchConfig_AtmParameters_OutgoingQueueEntry = MibTableRow((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1), ).setLabel("mibswitchConfig-AtmParameters-OutgoingQueueEntry").setIndexNames((0, "ASCEND-MIBSWITCHCONFIG-MIB", "switchConfig-AtmParameters-OutgoingQueue-SwitchName"), (0, "ASCEND-MIBSWITCHCONFIG-MIB", "switchConfig-AtmParameters-OutgoingQueue-Index-o"))
if mibBuilder.loadTexts: mibswitchConfig_AtmParameters_OutgoingQueueEntry.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_SwitchName = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 1), DisplayString()).setLabel("switchConfig-AtmParameters-OutgoingQueue-SwitchName").setMaxAccess("readonly")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_SwitchName.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_Index_o = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 2), Integer32()).setLabel("switchConfig-AtmParameters-OutgoingQueue-Index-o").setMaxAccess("readonly")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_Index_o.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_Active = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-Active").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_Active.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_Name = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 4), DisplayString()).setLabel("switchConfig-AtmParameters-OutgoingQueue-Name").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_Name.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-PhysicalAddress-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_Shelf.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-PhysicalAddress-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_Slot.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 7), Integer32()).setLabel("switchConfig-AtmParameters-OutgoingQueue-PhysicalAddress-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_ItemNumber.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_Cbr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-Cbr").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_Cbr.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_RealTimeVbr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-RealTimeVbr").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_RealTimeVbr.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_NonRealTimeVbr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-NonRealTimeVbr").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_NonRealTimeVbr.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_Ubr = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("no", 1), ("yes", 2)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-Ubr").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_Ubr.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_HighPriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 12), Integer32()).setLabel("switchConfig-AtmParameters-OutgoingQueue-HighPriorityWeight").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_HighPriorityWeight.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_LowPriorityWeight = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 13), Integer32()).setLabel("switchConfig-AtmParameters-OutgoingQueue-LowPriorityWeight").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_LowPriorityWeight.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_SourcePort_Shelf = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("anyShelf", 1), ("shelf1", 2), ("shelf2", 3), ("shelf3", 4), ("shelf4", 5), ("shelf5", 6), ("shelf6", 7), ("shelf7", 8), ("shelf8", 9), ("shelf9", 10)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-SourcePort-Shelf").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_SourcePort_Shelf.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_SourcePort_Slot = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 49, 50, 42, 53, 54, 45, 46, 51, 59))).clone(namedValues=NamedValues(("anySlot", 1), ("slot1", 2), ("slot2", 3), ("slot3", 4), ("slot4", 5), ("slot5", 6), ("slot6", 7), ("slot7", 8), ("slot8", 9), ("slot9", 10), ("slot10", 11), ("slot11", 12), ("slot12", 13), ("slot13", 14), ("slot14", 15), ("slot15", 16), ("slot16", 17), ("slot17", 18), ("slot18", 19), ("slot19", 20), ("slot20", 21), ("slot21", 22), ("slot22", 23), ("slot23", 24), ("slot24", 25), ("slot25", 26), ("slot26", 27), ("slot27", 28), ("slot28", 29), ("slot29", 30), ("slot30", 31), ("slot31", 32), ("slot32", 33), ("slot33", 34), ("slot34", 35), ("slot35", 36), ("slot36", 37), ("slot37", 38), ("slot38", 39), ("slot39", 40), ("slot40", 41), ("aLim", 55), ("bLim", 56), ("cLim", 57), ("dLim", 58), ("leftController", 49), ("rightController", 50), ("controller", 42), ("firstControlModule", 53), ("secondControlModule", 54), ("trunkModule1", 45), ("trunkModule2", 46), ("controlModule", 51), ("slotPrimary", 59)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-SourcePort-Slot").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_SourcePort_Slot.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_SourcePort_ItemNumber = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 16), Integer32()).setLabel("switchConfig-AtmParameters-OutgoingQueue-SourcePort-ItemNumber").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_SourcePort_ItemNumber.setStatus('mandatory')
switchConfig_AtmParameters_OutgoingQueue_HopLevel = MibScalar((1, 3, 6, 1, 4, 1, 529, 23, 151, 3, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("n-0Level", 1), ("n-1Level", 2), ("n-2Level", 3), ("n-3Level", 4), ("anyLevel", 5)))).setLabel("switchConfig-AtmParameters-OutgoingQueue-HopLevel").setMaxAccess("readwrite")
if mibBuilder.loadTexts: switchConfig_AtmParameters_OutgoingQueue_HopLevel.setStatus('mandatory')
mibBuilder.exportSymbols("ASCEND-MIBSWITCHCONFIG-MIB", switchConfig_AtmParameters_OutgoingQueue_LowPriorityWeight=switchConfig_AtmParameters_OutgoingQueue_LowPriorityWeight, mibswitchConfigTable=mibswitchConfigTable, switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_ItemNumber=switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_ItemNumber, switchConfig_AtmParameters_OutgoingQueue_HopLevel=switchConfig_AtmParameters_OutgoingQueue_HopLevel, mibswitchConfigEntry=mibswitchConfigEntry, switchConfig_AtmParameters_OutgoingQueue_SourcePort_Slot=switchConfig_AtmParameters_OutgoingQueue_SourcePort_Slot, switchConfig_AtmParameters_OutgoingShaper_Bandwidth=switchConfig_AtmParameters_OutgoingShaper_Bandwidth, switchConfig_AtmParameters_OutgoingQueue_NonRealTimeVbr=switchConfig_AtmParameters_OutgoingQueue_NonRealTimeVbr, switchConfig_AtmParameters_OutgoingQueue_RealTimeVbr=switchConfig_AtmParameters_OutgoingQueue_RealTimeVbr, switchConfig_AtmParameters_OutgoingShaper_Index_o=switchConfig_AtmParameters_OutgoingShaper_Index_o, switchConfig_AtmParameters_OutgoingQueue_Name=switchConfig_AtmParameters_OutgoingQueue_Name, mibswitchConfig=mibswitchConfig, mibswitchConfig_AtmParameters_OutgoingShaperTable=mibswitchConfig_AtmParameters_OutgoingShaperTable, switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_Slot=switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_Slot, mibswitchConfig_AtmParameters_OutgoingQueueTable=mibswitchConfig_AtmParameters_OutgoingQueueTable, switchConfig_AtmParameters_OutgoingShaper_QueueIndex=switchConfig_AtmParameters_OutgoingShaper_QueueIndex, switchConfig_AtmParameters_OutgoingQueue_SourcePort_Shelf=switchConfig_AtmParameters_OutgoingQueue_SourcePort_Shelf, DisplayString=DisplayString, switchConfig_AtmParameters_OutgoingQueue_SourcePort_ItemNumber=switchConfig_AtmParameters_OutgoingQueue_SourcePort_ItemNumber, switchConfig_AtmParameters_OutgoingShaper_Vpi=switchConfig_AtmParameters_OutgoingShaper_Vpi, switchConfig_Action_o=switchConfig_Action_o, switchConfig_AtmParameters_OutgoingQueue_Cbr=switchConfig_AtmParameters_OutgoingQueue_Cbr, switchConfig_AtmParameters_OutgoingQueue_HighPriorityWeight=switchConfig_AtmParameters_OutgoingQueue_HighPriorityWeight, switchConfig_AtmParameters_OutgoingQueue_Ubr=switchConfig_AtmParameters_OutgoingQueue_Ubr, switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_Shelf=switchConfig_AtmParameters_OutgoingQueue_PhysicalAddress_Shelf, switchConfig_AtmParameters_OutgoingQueue_Index_o=switchConfig_AtmParameters_OutgoingQueue_Index_o, mibswitchConfig_AtmParameters_OutgoingShaperEntry=mibswitchConfig_AtmParameters_OutgoingShaperEntry, switchConfig_SwitchName=switchConfig_SwitchName, mibswitchConfig_AtmParameters_OutgoingQueueEntry=mibswitchConfig_AtmParameters_OutgoingQueueEntry, switchConfig_AtmParameters_OutgoingShaper_SwitchName=switchConfig_AtmParameters_OutgoingShaper_SwitchName, switchConfig_AtmParameters_OutgoingQueue_SwitchName=switchConfig_AtmParameters_OutgoingQueue_SwitchName, switchConfig_AtmParameters_OutgoingQueue_Active=switchConfig_AtmParameters_OutgoingQueue_Active)
