#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-DprsMcsEpMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-DprsMcsEpMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:20:28 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, ValueRangeConstraint, SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "ValueRangeConstraint", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion")
mscMcsMgrIndex, mscMcsMgr = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex", "mscMcsMgr")
Integer32, Unsigned32, Counter32, Gauge32, RowStatus, DisplayString, RowPointer, StorageType = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "Integer32", "Unsigned32", "Counter32", "Gauge32", "RowStatus", "DisplayString", "RowPointer", "StorageType")
AsciiString, EnterpriseDateAndTime, PassportCounter64, Unsigned64, Link, FixedPoint2, HexString, NonReplicated = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "AsciiString", "EnterpriseDateAndTime", "PassportCounter64", "Unsigned64", "Link", "FixedPoint2", "HexString", "NonReplicated")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
Bits, iso, Integer32, ModuleIdentity, Unsigned32, Counter32, Counter64, NotificationType, Gauge32, ObjectIdentity, TimeTicks, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, MibIdentifier = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "iso", "Integer32", "ModuleIdentity", "Unsigned32", "Counter32", "Counter64", "NotificationType", "Gauge32", "ObjectIdentity", "TimeTicks", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "MibIdentifier")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
dprsMcsEpMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 125))
mscMcsMgrDprsMcsEpG = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2))
mscMcsMgrDprsMcsEpGRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 1), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGRowStatusTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGRowStatusEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGRowStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGStorageType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 8191)))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 10), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGOperTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGOperEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 44))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGRemoteAddress.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAssociatedEpGroupName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 10, 1, 2), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAssociatedEpGroupName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddr = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2))
mscMcsMgrDprsMcsEpGAddrRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 1), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrRowStatusTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddrRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGAddrIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrRowStatusEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrRowStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddrComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddrStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrStorageType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddrIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddrProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 10), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrProvTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddrProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGAddrIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrProvEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddrRemoteAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 10, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(1, 44))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrRemoteAddress.setStatus('mandatory')
mscMcsMgrDprsMcsEpGAddrCommentText = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 2, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 60)).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGAddrCommentText.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEp = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3))
mscMcsMgrDprsMcsEpGEpRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 1), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpRowStatusTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpRowStatusEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpRowStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpStorageType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 256)))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpStateTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpStateTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpStateEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpStateEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("locked", 0), ("unlocked", 1), ("shuttingDown", 2))).clone('unlocked')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAdminState.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpOperationalState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1))).clone('disabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpOperationalState.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpUsageState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("idle", 0), ("active", 1), ("busy", 2))).clone('idle')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpUsageState.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAvailabilityStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1, 4), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAvailabilityStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpProceduralStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpProceduralStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpControlStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpControlStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAlarmStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAlarmStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpStandbyStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 15))).clone(namedValues=NamedValues(("hotStandby", 0), ("coldStandby", 1), ("providingService", 2), ("notSet", 15))).clone('notSet')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpStandbyStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpUnknownStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 10, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("false", 0), ("true", 1))).clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpUnknownStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpOperTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpOperEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLastTransportConnectionClearCause = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLastTransportConnectionClearCause.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("originating", 0), ("terminating", 1))).clone('originating')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpSupportedTransferPriorities = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 5), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpSupportedTransferPriorities.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConnectionTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConnectionTransferPriority.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpServiceCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("ubr", 0), ("cbr", 1), ("rtVbr", 2), ("nrtVbr", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpServiceCategory.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpBandwidth.setStatus('obsolete')
mscMcsMgrDprsMcsEpGEpRemoteComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 9), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 46))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpRemoteComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpRemoteRoutingId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 126))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpRemoteRoutingId.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpRemoteModuleId = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1909))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpRemoteModuleId.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLastTrConnDiagCode = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 12), HexString().subtype(subtypeSpec=ValueSizeConstraint(0, 10))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLastTrConnDiagCode.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpForwardBandwith = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpForwardBandwith.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpReverseBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 11, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpReverseBandwidth.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 12), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpStatsTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 12, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpStatsEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpSetupAttempts = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 12, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpSetupAttempts.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpPktDiscErroredFromMcs = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 12, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpPktDiscErroredFromMcs.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpPktFromMcsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 402), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpPktFromMcsTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpPktFromMcsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 402, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpPktFromMcsIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpPktFromMcsEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpPktFromMcsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 402, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("discardPriority0", 0), ("discardPriority1", 1), ("discardPriority2", 2), ("discardPriority3", 3))))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpPktFromMcsIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpPktFromMcsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 402, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpPktFromMcsValue.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpOctetsFromMcsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 403), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpOctetsFromMcsTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpOctetsFromMcsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 403, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpOctetsFromMcsIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpOctetsFromMcsEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpOctetsFromMcsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 403, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("discardPriority0", 0), ("discardPriority1", 1), ("discardPriority2", 2), ("discardPriority3", 3))))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpOctetsFromMcsIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpOctetsFromMcsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 403, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpOctetsFromMcsValue.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 404), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 404, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 404, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("discardPriority0", 0), ("discardPriority1", 1), ("discardPriority2", 2), ("discardPriority3", 3))))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 404, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsValue.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpD = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2))
mscMcsMgrDprsMcsEpGEpEpDRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 1), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDRowStatusTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpEpDIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDRowStatusEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDRowStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDStorageType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDProvTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpEpDIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDProvEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(56000, 155000000)).clone(512000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDBandwidth.setStatus('obsolete')
mscMcsMgrDprsMcsEpGEpEpDConnectionTransferPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDConnectionTransferPriority.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDTransportConnectionPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3))).clone(namedValues=NamedValues(("atmOnly", 1), ("porsOnly", 3))).clone('porsOnly')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDTransportConnectionPreference.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10, 1, 4), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDProfile.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDPorsManualPath = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10, 1, 5), Link()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDPorsManualPath.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDSupportedTransferPriorities = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2).clone(hexValue="8000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDSupportedTransferPriorities.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDForwardBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(56000, 155000000)).clone(512000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDForwardBandwidth.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpEpDReverseBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 2, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(56000, 155000000), ValueRangeConstraint(155000002, 155000002), )).clone(155000002)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpEpDReverseBandwidth.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAtmCon = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3))
mscMcsMgrDprsMcsEpGEpAtmConRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3, 1), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAtmConRowStatusTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAtmConRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpAtmConIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAtmConRowStatusEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAtmConRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAtmConRowStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAtmConComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAtmConComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAtmConStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAtmConStorageType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAtmConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAtmConIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAtmConOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3, 10), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAtmConOperTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAtmConOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpAtmConIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAtmConOperEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpAtmConNextHop = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 3, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpAtmConNextHop.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCo = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4))
mscMcsMgrDprsMcsEpGEpLCoRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 1), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRowStatusTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpLCoIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRowStatusEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRowStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoStorageType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPathDataTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPathDataTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPathDataEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpLCoIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPathDataEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoState = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))).clone(namedValues=NamedValues(("pathDown", 0), ("selectingRoute", 1), ("connecting", 2), ("pathUp", 3), ("pathDownRetrying", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoState.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoOverrideRemoteName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 2), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoOverrideRemoteName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoEnd = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("calling", 0), ("called", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoEnd.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoCostMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoCostMetric.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoDelayMetric = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoDelayMetric.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoRoundTripDelay = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRoundTripDelay.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoSetupPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoSetupPriority.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoHoldingPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoHoldingPriority.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoRequiredTxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 9), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRequiredTxBandwidth.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoRequiredRxBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 10), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRequiredRxBandwidth.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoRequiredTrafficType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("voice", 0), ("data", 1), ("video", 2), ("trafficType1", 3), ("trafficType2", 4), ("trafficType3", 5), ("trafficType4", 6), ("trafficType5", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRequiredTrafficType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPermittedTrunkTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 12), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPermittedTrunkTypes.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoRequiredSecurity = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRequiredSecurity.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoRequiredCustomerParameter = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRequiredCustomerParameter.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoEmissionPriority.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoDiscardPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoDiscardPriority.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("normal", 0), ("manual", 1), ("forced", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPathType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoRetryCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoRetryCount.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPathFailureCount = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPathFailureCount.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoReasonForNoRoute = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("none", 0), ("destinationNameTooLong", 1), ("destinationNotSpecified", 2), ("unknownDestinationName", 3), ("incorrectDestination", 4), ("incorrectDestinationEndPoint", 5), ("unknownSource", 6), ("unknownDestination", 7), ("sameNode", 8), ("routeCostTooMuch", 9), ("routesDelayTooLong", 10), ("attributesNotMet", 11), ("anError", 12), ("attributeProfileProblem", 13), ("manualPathIndexProblem", 14))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoReasonForNoRoute.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoLastTearDownReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23))).clone(namedValues=NamedValues(("none", 0), ("normalShutDown", 1), ("insufficientTxLcOrBandwidth", 2), ("insufficientRxLcOrBandwidth", 3), ("trunkFailure", 4), ("trunkCardFailure", 5), ("operatorForced", 6), ("lostLcnClash", 7), ("networkCongestion", 8), ("trunkNotFound", 9), ("farEndNotFound", 10), ("wrongModuleReached", 11), ("farEndBusy", 12), ("callLoopedBack", 13), ("unknownReason", 14), ("farEndNotReady", 15), ("remoteNameMismatch", 16), ("serviceTypeMismatch", 17), ("reconnectFromFarEnd", 18), ("bumped", 19), ("accessCardFailure", 20), ("optimized", 21), ("overrideRemoteName", 22), ("trunkOrFarEndDidNotSupportMode", 23))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoLastTearDownReason.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPathFailureAction = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disconnectConnection", 0), ("reRoutePath", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPathFailureAction.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoBumpPreference = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("bumpWhenNecessary", 0), ("bumpToObtainBestRoute", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoBumpPreference.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoOptimization = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("disabled", 0), ("enabled", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoOptimization.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPathUpDateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 10, 1, 25), EnterpriseDateAndTime().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(19, 19), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPathUpDateTime.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoStatsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 11), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoStatsTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpLCoIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoStatsEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPktsToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 11, 1, 1), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPktsToNetwork.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoBytesToNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 11, 1, 2), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoBytesToNetwork.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPktsFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 11, 1, 3), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPktsFromNetwork.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoBytesFromNetwork = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 11, 1, 4), PassportCounter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoBytesFromNetwork.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPathTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 264), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPathTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPathEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 264, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpLCoIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpLCoPathValue"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPathEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpLCoPathValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 4, 264, 1, 1), AsciiString().subtype(subtypeSpec=ValueSizeConstraint(0, 40))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpLCoPathValue.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCac = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5))
mscMcsMgrDprsMcsEpGEpCacRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 1), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacRowStatusTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacRowStatusEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacRowStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacStorageType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacOperTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacOperEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacEffectiveBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 1), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacEffectiveBandwidth.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacEffectiveBandwidthAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 2), Unsigned64().subtype(subtypeSpec=ValueSizeConstraint(8, 8)).setFixedLength(8)).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacEffectiveBandwidthAvailable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacNumberOfCallsActive = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacNumberOfCallsActive.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enforced", 0), ("monitored", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacPolicy.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("eir", 0), ("cir", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacMaximumSvcBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 155000000), ValueRangeConstraint(155000001, 155000001), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacMaximumSvcBandwidth.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacMaximumPvcBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 155000000), ValueRangeConstraint(155000001, 155000001), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacMaximumPvcBandwidth.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacNumberOfCacFailures = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacNumberOfCacFailures.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacLastFailedFrDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 9), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacLastFailedFrDlci.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacLastFailedReason = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("none", 0), ("noBandwidthAvailable", 1), ("maxSvcExceeded", 2), ("maxPvcExceeded", 3), ("epCacUnavailable", 4), ("maxConsExceeded", 5))).clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacLastFailedReason.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacOverSubscriptionFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 10, 1, 11), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacOverSubscriptionFactor.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacAlarmThresholdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 802), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacAlarmThresholdTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacAlarmThresholdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 802, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacAlarmThresholdIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacAlarmThresholdEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacAlarmThresholdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 802, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("minor", 0), ("major", 1), ("critical", 2))))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacAlarmThresholdIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacAlarmThresholdValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 802, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacAlarmThresholdValue.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacd = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2))
mscMcsMgrDprsMcsEpGEpCacCacdRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 1), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdRowStatusTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacCacdIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdRowStatusEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdRowStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdStorageType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdFrwdTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 10), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdFrwdTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdFrwdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacCacdIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdFrwdEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdForwardCacPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("enforced", 0), ("monitored", 1))).clone('monitored')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdForwardCacPolicy.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdForwardCacType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1))).clone(namedValues=NamedValues(("eir", 0), ("cir", 1))).clone('cir')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdForwardCacType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdForwardOversubFactor = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 10, 1, 3), FixedPoint2().subtype(subtypeSpec=ValueRangeConstraint(0, 10000)).clone(100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdForwardOversubFactor.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdForwardMaximumSvcBw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 155000000), ValueRangeConstraint(155000001, 155000001), )).clone(155000001)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdForwardMaximumSvcBw.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdForwardMaximumPvcBw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 155000000), ValueRangeConstraint(155000001, 155000001), )).clone(155000001)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdForwardMaximumPvcBw.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdRvrsTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 11), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdRvrsTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdRvrsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 11, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacCacdIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdRvrsEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdReverseCacPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 11, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("enforced", 0), ("monitored", 1), ("sameAsForward", 2))).clone('sameAsForward')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdReverseCacPolicy.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdReverseCacType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 11, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("eir", 0), ("cir", 1), ("sameAsForward", 2))).clone('sameAsForward')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdReverseCacType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdReverseCacOverSub = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 11, 1, 3), FixedPoint2().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 10000), ValueRangeConstraint(10100, 10100), )).clone(10100)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdReverseCacOverSub.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdReverseMaxSvcBw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 11, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 155000000), ValueRangeConstraint(155000001, 155000001), ValueRangeConstraint(155000002, 155000002), )).clone(155000002)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdReverseMaxSvcBw.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdReverseMaxPvcBw = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 11, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 155000000), ValueRangeConstraint(155000001, 155000001), ValueRangeConstraint(155000002, 155000002), )).clone(155000002)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdReverseMaxPvcBw.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 800), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 800, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacCacdIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 800, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("minor", 0), ("major", 1), ("critical", 2))))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 800, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshValue.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 801), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 801, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacCacdIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 801, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("minor", 0), ("major", 1), ("critical", 2))))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshValue = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 5, 2, 801, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshValue.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpCon = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6))
mscMcsMgrDprsMcsEpGEpConRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 1), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConRowStatusTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpConIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConRowStatusEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConRowStatus.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConComponentName.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConStorageType.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 512)))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConIndex.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConOperTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 10), )
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConOperTable.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-McsMgrMIB", "mscMcsMgrIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpIndex"), (0, "Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", "mscMcsMgrDprsMcsEpGEpConIndex"))
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConOperEntry.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConFrameRelayDlci = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 10, 1, 1), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConFrameRelayDlci.setStatus('mandatory')
mscMcsMgrDprsMcsEpGEpConReservedBandwidth = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 122, 2, 3, 6, 10, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 155000000))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscMcsMgrDprsMcsEpGEpConReservedBandwidth.setStatus('mandatory')
dprsMcsEpGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 125, 1))
dprsMcsEpGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 125, 1, 1))
dprsMcsEpGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 125, 1, 1, 3))
dprsMcsEpGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 125, 1, 1, 3, 2))
dprsMcsEpCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 125, 3))
dprsMcsEpCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 125, 3, 1))
dprsMcsEpCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 125, 3, 1, 3))
dprsMcsEpCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 125, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-DprsMcsEpMIB", mscMcsMgrDprsMcsEpGEpLCoDiscardPriority=mscMcsMgrDprsMcsEpGEpLCoDiscardPriority, mscMcsMgrDprsMcsEpGEpCacCacdReverseCacOverSub=mscMcsMgrDprsMcsEpGEpCacCacdReverseCacOverSub, mscMcsMgrDprsMcsEpGEpCacCacdRowStatusTable=mscMcsMgrDprsMcsEpGEpCacCacdRowStatusTable, mscMcsMgrDprsMcsEpGEpLCoRetryCount=mscMcsMgrDprsMcsEpGEpLCoRetryCount, mscMcsMgrDprsMcsEpGEpCacAlarmThresholdValue=mscMcsMgrDprsMcsEpGEpCacAlarmThresholdValue, mscMcsMgrDprsMcsEpGEpLCoRoundTripDelay=mscMcsMgrDprsMcsEpGEpLCoRoundTripDelay, mscMcsMgrDprsMcsEpGEpLCoBytesToNetwork=mscMcsMgrDprsMcsEpGEpLCoBytesToNetwork, mscMcsMgrDprsMcsEpGEpLCoPktsFromNetwork=mscMcsMgrDprsMcsEpGEpLCoPktsFromNetwork, mscMcsMgrDprsMcsEpGAddr=mscMcsMgrDprsMcsEpGAddr, mscMcsMgrDprsMcsEpGEpLCoIndex=mscMcsMgrDprsMcsEpGEpLCoIndex, mscMcsMgrDprsMcsEpGEpCacLastFailedReason=mscMcsMgrDprsMcsEpGEpCacLastFailedReason, mscMcsMgrDprsMcsEpGEpLCoPathFailureAction=mscMcsMgrDprsMcsEpGEpLCoPathFailureAction, mscMcsMgrDprsMcsEpGEpLCoPathUpDateTime=mscMcsMgrDprsMcsEpGEpLCoPathUpDateTime, mscMcsMgrDprsMcsEpGRowStatus=mscMcsMgrDprsMcsEpGRowStatus, mscMcsMgrDprsMcsEpGEpCacAlarmThresholdTable=mscMcsMgrDprsMcsEpGEpCacAlarmThresholdTable, mscMcsMgrDprsMcsEpGEpEpDRowStatusEntry=mscMcsMgrDprsMcsEpGEpEpDRowStatusEntry, mscMcsMgrDprsMcsEpGEpEpDComponentName=mscMcsMgrDprsMcsEpGEpEpDComponentName, mscMcsMgrDprsMcsEpGEpCacRowStatusTable=mscMcsMgrDprsMcsEpGEpCacRowStatusTable, mscMcsMgrDprsMcsEpGEpAtmConRowStatusEntry=mscMcsMgrDprsMcsEpGEpAtmConRowStatusEntry, mscMcsMgrDprsMcsEpGEpEpDTransportConnectionPreference=mscMcsMgrDprsMcsEpGEpEpDTransportConnectionPreference, mscMcsMgrDprsMcsEpGRowStatusEntry=mscMcsMgrDprsMcsEpGRowStatusEntry, mscMcsMgrDprsMcsEpGEpPktFromMcsEntry=mscMcsMgrDprsMcsEpGEpPktFromMcsEntry, mscMcsMgrDprsMcsEpGEpAtmConOperTable=mscMcsMgrDprsMcsEpGEpAtmConOperTable, mscMcsMgrDprsMcsEpGEpCon=mscMcsMgrDprsMcsEpGEpCon, mscMcsMgrDprsMcsEpGEpCacAlarmThresholdEntry=mscMcsMgrDprsMcsEpGEpCacAlarmThresholdEntry, mscMcsMgrDprsMcsEpGEpOperEntry=mscMcsMgrDprsMcsEpGEpOperEntry, mscMcsMgrDprsMcsEpGEpLCoCostMetric=mscMcsMgrDprsMcsEpGEpLCoCostMetric, mscMcsMgrDprsMcsEpGEpLCoLastTearDownReason=mscMcsMgrDprsMcsEpGEpLCoLastTearDownReason, mscMcsMgrDprsMcsEpGEpCacIndex=mscMcsMgrDprsMcsEpGEpCacIndex, mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsValue=mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsValue, mscMcsMgrDprsMcsEpGEpOctetsFromMcsIndex=mscMcsMgrDprsMcsEpGEpOctetsFromMcsIndex, mscMcsMgrDprsMcsEpGEpCacCacType=mscMcsMgrDprsMcsEpGEpCacCacType, dprsMcsEpGroupCA02=dprsMcsEpGroupCA02, mscMcsMgrDprsMcsEpGEpAtmConRowStatus=mscMcsMgrDprsMcsEpGEpAtmConRowStatus, mscMcsMgrDprsMcsEpGEpAlarmStatus=mscMcsMgrDprsMcsEpGEpAlarmStatus, mscMcsMgrDprsMcsEpGEpBandwidth=mscMcsMgrDprsMcsEpGEpBandwidth, mscMcsMgrDprsMcsEpGEpCacCacdRvrsTable=mscMcsMgrDprsMcsEpGEpCacCacdRvrsTable, mscMcsMgrDprsMcsEpGEpConRowStatusTable=mscMcsMgrDprsMcsEpGEpConRowStatusTable, mscMcsMgrDprsMcsEpGEpCacEffectiveBandwidthAvailable=mscMcsMgrDprsMcsEpGEpCacEffectiveBandwidthAvailable, mscMcsMgrDprsMcsEpGEpRowStatus=mscMcsMgrDprsMcsEpGEpRowStatus, mscMcsMgrDprsMcsEpGEpLCoPathFailureCount=mscMcsMgrDprsMcsEpGEpLCoPathFailureCount, mscMcsMgrDprsMcsEpGStorageType=mscMcsMgrDprsMcsEpGStorageType, mscMcsMgrDprsMcsEpGEpCacCacdForwardMaximumPvcBw=mscMcsMgrDprsMcsEpGEpCacCacdForwardMaximumPvcBw, mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshIndex=mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshIndex, mscMcsMgrDprsMcsEpGEpEpDBandwidth=mscMcsMgrDprsMcsEpGEpEpDBandwidth, mscMcsMgrDprsMcsEpGEpControlStatus=mscMcsMgrDprsMcsEpGEpControlStatus, mscMcsMgrDprsMcsEpGEpStateTable=mscMcsMgrDprsMcsEpGEpStateTable, mscMcsMgrDprsMcsEpGEpLCoRequiredSecurity=mscMcsMgrDprsMcsEpGEpLCoRequiredSecurity, dprsMcsEpCapabilitiesCA02=dprsMcsEpCapabilitiesCA02, mscMcsMgrDprsMcsEpGEpLCoPathDataTable=mscMcsMgrDprsMcsEpGEpLCoPathDataTable, mscMcsMgrDprsMcsEpGEpLCoEmissionPriority=mscMcsMgrDprsMcsEpGEpLCoEmissionPriority, mscMcsMgrDprsMcsEpGAddrRowStatus=mscMcsMgrDprsMcsEpGAddrRowStatus, mscMcsMgrDprsMcsEpGEpAtmConIndex=mscMcsMgrDprsMcsEpGEpAtmConIndex, mscMcsMgrDprsMcsEpGEpOperationalState=mscMcsMgrDprsMcsEpGEpOperationalState, mscMcsMgrDprsMcsEpGEpAtmConStorageType=mscMcsMgrDprsMcsEpGEpAtmConStorageType, mscMcsMgrDprsMcsEpGEpLCoComponentName=mscMcsMgrDprsMcsEpGEpLCoComponentName, mscMcsMgrDprsMcsEpGRowStatusTable=mscMcsMgrDprsMcsEpGRowStatusTable, mscMcsMgrDprsMcsEpGEpConRowStatusEntry=mscMcsMgrDprsMcsEpGEpConRowStatusEntry, mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshValue=mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshValue, mscMcsMgrDprsMcsEpGOperTable=mscMcsMgrDprsMcsEpGOperTable, mscMcsMgrDprsMcsEpGEpStorageType=mscMcsMgrDprsMcsEpGEpStorageType, mscMcsMgrDprsMcsEpGEpAtmConNextHop=mscMcsMgrDprsMcsEpGEpAtmConNextHop, mscMcsMgrDprsMcsEpGEpLCoPermittedTrunkTypes=mscMcsMgrDprsMcsEpGEpLCoPermittedTrunkTypes, dprsMcsEpGroupCA=dprsMcsEpGroupCA, mscMcsMgrDprsMcsEpGEpLCoPathDataEntry=mscMcsMgrDprsMcsEpGEpLCoPathDataEntry, mscMcsMgrDprsMcsEpGAddrProvEntry=mscMcsMgrDprsMcsEpGAddrProvEntry, mscMcsMgrDprsMcsEpGEpEpDStorageType=mscMcsMgrDprsMcsEpGEpEpDStorageType, mscMcsMgrDprsMcsEpGEpAvailabilityStatus=mscMcsMgrDprsMcsEpGEpAvailabilityStatus, mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsTable=mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsTable, mscMcsMgrDprsMcsEpGEpCacRowStatusEntry=mscMcsMgrDprsMcsEpGEpCacRowStatusEntry, mscMcsMgrDprsMcsEpGEpStatsTable=mscMcsMgrDprsMcsEpGEpStatsTable, mscMcsMgrDprsMcsEpGEpEpDIndex=mscMcsMgrDprsMcsEpGEpEpDIndex, mscMcsMgrDprsMcsEpGEpLCoPathValue=mscMcsMgrDprsMcsEpGEpLCoPathValue, mscMcsMgrDprsMcsEpGEpPktDiscErroredFromMcs=mscMcsMgrDprsMcsEpGEpPktDiscErroredFromMcs, mscMcsMgrDprsMcsEpGEpEpDForwardBandwidth=mscMcsMgrDprsMcsEpGEpEpDForwardBandwidth, mscMcsMgrDprsMcsEpGEpCacAlarmThresholdIndex=mscMcsMgrDprsMcsEpGEpCacAlarmThresholdIndex, mscMcsMgrDprsMcsEpGEpPktFromMcsValue=mscMcsMgrDprsMcsEpGEpPktFromMcsValue, mscMcsMgrDprsMcsEpGEpLCoStatsEntry=mscMcsMgrDprsMcsEpGEpLCoStatsEntry, mscMcsMgrDprsMcsEpGEpForwardBandwith=mscMcsMgrDprsMcsEpGEpForwardBandwith, mscMcsMgrDprsMcsEpGEpReverseBandwidth=mscMcsMgrDprsMcsEpGEpReverseBandwidth, mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsEntry=mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsEntry, dprsMcsEpCapabilitiesCA02A=dprsMcsEpCapabilitiesCA02A, mscMcsMgrDprsMcsEpGEpCacStorageType=mscMcsMgrDprsMcsEpGEpCacStorageType, mscMcsMgrDprsMcsEpGEpCacEffectiveBandwidth=mscMcsMgrDprsMcsEpGEpCacEffectiveBandwidth, dprsMcsEpCapabilities=dprsMcsEpCapabilities, mscMcsMgrDprsMcsEpGEpCacCacdFrwdEntry=mscMcsMgrDprsMcsEpGEpCacCacdFrwdEntry, mscMcsMgrDprsMcsEpGEpEpDReverseBandwidth=mscMcsMgrDprsMcsEpGEpEpDReverseBandwidth, mscMcsMgrDprsMcsEpGRemoteAddress=mscMcsMgrDprsMcsEpGRemoteAddress, mscMcsMgrDprsMcsEpGEpConOperEntry=mscMcsMgrDprsMcsEpGEpConOperEntry, mscMcsMgrDprsMcsEpGEpConFrameRelayDlci=mscMcsMgrDprsMcsEpGEpConFrameRelayDlci, mscMcsMgrDprsMcsEpGEpServiceCategory=mscMcsMgrDprsMcsEpGEpServiceCategory, mscMcsMgrDprsMcsEpGEpConnectionTransferPriority=mscMcsMgrDprsMcsEpGEpConnectionTransferPriority, mscMcsMgrDprsMcsEpGEpLCoPathTable=mscMcsMgrDprsMcsEpGEpLCoPathTable, mscMcsMgrDprsMcsEpGEpCacComponentName=mscMcsMgrDprsMcsEpGEpCacComponentName, mscMcsMgrDprsMcsEpGEpCacCacdRowStatusEntry=mscMcsMgrDprsMcsEpGEpCacCacdRowStatusEntry, mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshTable=mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshTable, mscMcsMgrDprsMcsEpGEpCacCacdForwardMaximumSvcBw=mscMcsMgrDprsMcsEpGEpCacCacdForwardMaximumSvcBw, mscMcsMgrDprsMcsEpGAddrProvTable=mscMcsMgrDprsMcsEpGAddrProvTable, mscMcsMgrDprsMcsEpGEpConIndex=mscMcsMgrDprsMcsEpGEpConIndex, mscMcsMgrDprsMcsEpGEpEpD=mscMcsMgrDprsMcsEpGEpEpD, mscMcsMgrDprsMcsEpGEpLCo=mscMcsMgrDprsMcsEpGEpLCo, mscMcsMgrDprsMcsEpGOperEntry=mscMcsMgrDprsMcsEpGOperEntry, mscMcsMgrDprsMcsEpGEpCac=mscMcsMgrDprsMcsEpGEpCac, mscMcsMgrDprsMcsEpGEpLCoPktsToNetwork=mscMcsMgrDprsMcsEpGEpLCoPktsToNetwork, mscMcsMgrDprsMcsEpGEpLCoStorageType=mscMcsMgrDprsMcsEpGEpLCoStorageType, mscMcsMgrDprsMcsEpGIndex=mscMcsMgrDprsMcsEpGIndex, dprsMcsEpGroupCA02A=dprsMcsEpGroupCA02A, mscMcsMgrDprsMcsEpGEpProceduralStatus=mscMcsMgrDprsMcsEpGEpProceduralStatus, mscMcsMgrDprsMcsEpGEpAtmConOperEntry=mscMcsMgrDprsMcsEpGEpAtmConOperEntry, mscMcsMgrDprsMcsEpGEpLCoBumpPreference=mscMcsMgrDprsMcsEpGEpLCoBumpPreference, mscMcsMgrDprsMcsEpGEpCacCacdReverseCacPolicy=mscMcsMgrDprsMcsEpGEpCacCacdReverseCacPolicy, mscMcsMgrDprsMcsEpGAddrRemoteAddress=mscMcsMgrDprsMcsEpGAddrRemoteAddress, mscMcsMgrDprsMcsEpGEpLCoStatsTable=mscMcsMgrDprsMcsEpGEpLCoStatsTable, mscMcsMgrDprsMcsEpGEpLCoBytesFromNetwork=mscMcsMgrDprsMcsEpGEpLCoBytesFromNetwork, mscMcsMgrDprsMcsEpGEpCacCacdReverseCacType=mscMcsMgrDprsMcsEpGEpCacCacdReverseCacType, mscMcsMgrDprsMcsEpGEpOperTable=mscMcsMgrDprsMcsEpGEpOperTable, mscMcsMgrDprsMcsEpGEpLastTrConnDiagCode=mscMcsMgrDprsMcsEpGEpLastTrConnDiagCode, mscMcsMgrDprsMcsEpGEpStatsEntry=mscMcsMgrDprsMcsEpGEpStatsEntry, mscMcsMgrDprsMcsEpGEpLCoDelayMetric=mscMcsMgrDprsMcsEpGEpLCoDelayMetric, mscMcsMgrDprsMcsEpGEpType=mscMcsMgrDprsMcsEpGEpType, mscMcsMgrDprsMcsEpGEpAtmConRowStatusTable=mscMcsMgrDprsMcsEpGEpAtmConRowStatusTable, mscMcsMgrDprsMcsEpGEpCacCacdFrwdTable=mscMcsMgrDprsMcsEpGEpCacCacdFrwdTable, mscMcsMgrDprsMcsEpGEpCacCacdForwardCacType=mscMcsMgrDprsMcsEpGEpCacCacdForwardCacType, mscMcsMgrDprsMcsEpGEpRowStatusTable=mscMcsMgrDprsMcsEpGEpRowStatusTable, mscMcsMgrDprsMcsEpGEpCacCacdComponentName=mscMcsMgrDprsMcsEpGEpCacCacdComponentName, mscMcsMgrDprsMcsEpGEpEpDProvTable=mscMcsMgrDprsMcsEpGEpEpDProvTable, mscMcsMgrDprsMcsEpGEpLCoOptimization=mscMcsMgrDprsMcsEpGEpLCoOptimization, mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshValue=mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshValue, mscMcsMgrDprsMcsEpGEpSupportedTransferPriorities=mscMcsMgrDprsMcsEpGEpSupportedTransferPriorities, mscMcsMgrDprsMcsEpGEpAtmConComponentName=mscMcsMgrDprsMcsEpGEpAtmConComponentName, dprsMcsEpGroup=dprsMcsEpGroup, mscMcsMgrDprsMcsEpG=mscMcsMgrDprsMcsEpG, mscMcsMgrDprsMcsEpGAddrCommentText=mscMcsMgrDprsMcsEpGAddrCommentText, mscMcsMgrDprsMcsEpGEpOctetsFromMcsEntry=mscMcsMgrDprsMcsEpGEpOctetsFromMcsEntry, mscMcsMgrDprsMcsEpGEpUnknownStatus=mscMcsMgrDprsMcsEpGEpUnknownStatus, mscMcsMgrDprsMcsEpGEpEpDProfile=mscMcsMgrDprsMcsEpGEpEpDProfile, mscMcsMgrDprsMcsEpGEpCacMaximumSvcBandwidth=mscMcsMgrDprsMcsEpGEpCacMaximumSvcBandwidth, mscMcsMgrDprsMcsEpGEpStandbyStatus=mscMcsMgrDprsMcsEpGEpStandbyStatus, mscMcsMgrDprsMcsEpGEpLCoRowStatusEntry=mscMcsMgrDprsMcsEpGEpLCoRowStatusEntry, mscMcsMgrDprsMcsEpGEpConOperTable=mscMcsMgrDprsMcsEpGEpConOperTable, mscMcsMgrDprsMcsEpGEpCacCacdReverseMaxSvcBw=mscMcsMgrDprsMcsEpGEpCacCacdReverseMaxSvcBw, mscMcsMgrDprsMcsEpGEpCacCacdForwardOversubFactor=mscMcsMgrDprsMcsEpGEpCacCacdForwardOversubFactor, mscMcsMgrDprsMcsEpGEpRemoteModuleId=mscMcsMgrDprsMcsEpGEpRemoteModuleId, mscMcsMgrDprsMcsEpGEpPktFromMcsIndex=mscMcsMgrDprsMcsEpGEpPktFromMcsIndex, mscMcsMgrDprsMcsEpGEpCacCacdRvrsEntry=mscMcsMgrDprsMcsEpGEpCacCacdRvrsEntry, mscMcsMgrDprsMcsEpGEpCacOverSubscriptionFactor=mscMcsMgrDprsMcsEpGEpCacOverSubscriptionFactor, mscMcsMgrDprsMcsEpGEpRemoteRoutingId=mscMcsMgrDprsMcsEpGEpRemoteRoutingId, mscMcsMgrDprsMcsEpGEpSetupAttempts=mscMcsMgrDprsMcsEpGEpSetupAttempts, mscMcsMgrDprsMcsEpGEpLCoPathEntry=mscMcsMgrDprsMcsEpGEpLCoPathEntry, mscMcsMgrDprsMcsEpGEpAtmCon=mscMcsMgrDprsMcsEpGEpAtmCon, mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshEntry=mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshEntry, mscMcsMgrDprsMcsEpGEpLastTransportConnectionClearCause=mscMcsMgrDprsMcsEpGEpLastTransportConnectionClearCause, mscMcsMgrDprsMcsEpGEpConReservedBandwidth=mscMcsMgrDprsMcsEpGEpConReservedBandwidth, mscMcsMgrDprsMcsEpGEpLCoEnd=mscMcsMgrDprsMcsEpGEpLCoEnd, mscMcsMgrDprsMcsEpGEpLCoState=mscMcsMgrDprsMcsEpGEpLCoState, mscMcsMgrDprsMcsEpGEpCacOperTable=mscMcsMgrDprsMcsEpGEpCacOperTable, mscMcsMgrDprsMcsEpGEpEpDRowStatus=mscMcsMgrDprsMcsEpGEpEpDRowStatus, mscMcsMgrDprsMcsEpGEpIndex=mscMcsMgrDprsMcsEpGEpIndex, mscMcsMgrDprsMcsEpGEpLCoReasonForNoRoute=mscMcsMgrDprsMcsEpGEpLCoReasonForNoRoute, mscMcsMgrDprsMcsEpGEpCacCacdForwardCacPolicy=mscMcsMgrDprsMcsEpGEpCacCacdForwardCacPolicy, mscMcsMgrDprsMcsEpGEpCacCacdStorageType=mscMcsMgrDprsMcsEpGEpCacCacdStorageType, mscMcsMgrDprsMcsEpGEpEpDConnectionTransferPriority=mscMcsMgrDprsMcsEpGEpEpDConnectionTransferPriority, mscMcsMgrDprsMcsEpGEpRowStatusEntry=mscMcsMgrDprsMcsEpGEpRowStatusEntry, mscMcsMgrDprsMcsEpGEpConComponentName=mscMcsMgrDprsMcsEpGEpConComponentName, mscMcsMgrDprsMcsEpGAddrComponentName=mscMcsMgrDprsMcsEpGAddrComponentName, mscMcsMgrDprsMcsEpGEpEpDRowStatusTable=mscMcsMgrDprsMcsEpGEpEpDRowStatusTable, mscMcsMgrDprsMcsEpGEpEpDPorsManualPath=mscMcsMgrDprsMcsEpGEpEpDPorsManualPath, mscMcsMgrDprsMcsEpGEpCacRowStatus=mscMcsMgrDprsMcsEpGEpCacRowStatus, mscMcsMgrDprsMcsEpGAddrRowStatusEntry=mscMcsMgrDprsMcsEpGAddrRowStatusEntry, mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshTable=mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshTable, mscMcsMgrDprsMcsEpGEpCacNumberOfCacFailures=mscMcsMgrDprsMcsEpGEpCacNumberOfCacFailures, mscMcsMgrDprsMcsEpGEpConRowStatus=mscMcsMgrDprsMcsEpGEpConRowStatus, mscMcsMgrDprsMcsEpGEpLCoRowStatusTable=mscMcsMgrDprsMcsEpGEpLCoRowStatusTable, mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex=mscMcsMgrDprsMcsEpGEpPktDiscCongestedFromMcsIndex, mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshIndex=mscMcsMgrDprsMcsEpGEpCacCacdFAlarmThreshIndex, mscMcsMgrDprsMcsEpGEpCacCacdReverseMaxPvcBw=mscMcsMgrDprsMcsEpGEpCacCacdReverseMaxPvcBw, mscMcsMgrDprsMcsEpGEpCacOperEntry=mscMcsMgrDprsMcsEpGEpCacOperEntry, mscMcsMgrDprsMcsEpGAddrIndex=mscMcsMgrDprsMcsEpGAddrIndex, mscMcsMgrDprsMcsEpGEpCacNumberOfCallsActive=mscMcsMgrDprsMcsEpGEpCacNumberOfCallsActive, mscMcsMgrDprsMcsEpGEpCacMaximumPvcBandwidth=mscMcsMgrDprsMcsEpGEpCacMaximumPvcBandwidth, mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshEntry=mscMcsMgrDprsMcsEpGEpCacCacdRAlarmThreshEntry, mscMcsMgrDprsMcsEpGEpOctetsFromMcsValue=mscMcsMgrDprsMcsEpGEpOctetsFromMcsValue, mscMcsMgrDprsMcsEpGAssociatedEpGroupName=mscMcsMgrDprsMcsEpGAssociatedEpGroupName, mscMcsMgrDprsMcsEpGEpComponentName=mscMcsMgrDprsMcsEpGEpComponentName, mscMcsMgrDprsMcsEpGEpLCoPathType=mscMcsMgrDprsMcsEpGEpLCoPathType, mscMcsMgrDprsMcsEpGEpAdminState=mscMcsMgrDprsMcsEpGEpAdminState, mscMcsMgrDprsMcsEpGAddrStorageType=mscMcsMgrDprsMcsEpGAddrStorageType, dprsMcsEpMIB=dprsMcsEpMIB, mscMcsMgrDprsMcsEpGEpLCoRowStatus=mscMcsMgrDprsMcsEpGEpLCoRowStatus, mscMcsMgrDprsMcsEpGEpLCoRequiredTrafficType=mscMcsMgrDprsMcsEpGEpLCoRequiredTrafficType, mscMcsMgrDprsMcsEpGEpLCoRequiredCustomerParameter=mscMcsMgrDprsMcsEpGEpLCoRequiredCustomerParameter, mscMcsMgrDprsMcsEpGEpConStorageType=mscMcsMgrDprsMcsEpGEpConStorageType, dprsMcsEpCapabilitiesCA=dprsMcsEpCapabilitiesCA, mscMcsMgrDprsMcsEpGEpUsageState=mscMcsMgrDprsMcsEpGEpUsageState, mscMcsMgrDprsMcsEpGEpLCoRequiredTxBandwidth=mscMcsMgrDprsMcsEpGEpLCoRequiredTxBandwidth, mscMcsMgrDprsMcsEpGEpCacCacd=mscMcsMgrDprsMcsEpGEpCacCacd, mscMcsMgrDprsMcsEpGAddrRowStatusTable=mscMcsMgrDprsMcsEpGAddrRowStatusTable, mscMcsMgrDprsMcsEpGEpLCoSetupPriority=mscMcsMgrDprsMcsEpGEpLCoSetupPriority, mscMcsMgrDprsMcsEpGEpStateEntry=mscMcsMgrDprsMcsEpGEpStateEntry, mscMcsMgrDprsMcsEpGEpLCoHoldingPriority=mscMcsMgrDprsMcsEpGEpLCoHoldingPriority, mscMcsMgrDprsMcsEpGEpCacCacdIndex=mscMcsMgrDprsMcsEpGEpCacCacdIndex, mscMcsMgrDprsMcsEpGEpEpDSupportedTransferPriorities=mscMcsMgrDprsMcsEpGEpEpDSupportedTransferPriorities, mscMcsMgrDprsMcsEpGEpLCoRequiredRxBandwidth=mscMcsMgrDprsMcsEpGEpLCoRequiredRxBandwidth, mscMcsMgrDprsMcsEpGEp=mscMcsMgrDprsMcsEpGEp, mscMcsMgrDprsMcsEpGEpLCoOverrideRemoteName=mscMcsMgrDprsMcsEpGEpLCoOverrideRemoteName, mscMcsMgrDprsMcsEpGEpEpDProvEntry=mscMcsMgrDprsMcsEpGEpEpDProvEntry, mscMcsMgrDprsMcsEpGEpCacCacPolicy=mscMcsMgrDprsMcsEpGEpCacCacPolicy, mscMcsMgrDprsMcsEpGEpCacCacdRowStatus=mscMcsMgrDprsMcsEpGEpCacCacdRowStatus, mscMcsMgrDprsMcsEpGComponentName=mscMcsMgrDprsMcsEpGComponentName, mscMcsMgrDprsMcsEpGEpPktFromMcsTable=mscMcsMgrDprsMcsEpGEpPktFromMcsTable, mscMcsMgrDprsMcsEpGEpOctetsFromMcsTable=mscMcsMgrDprsMcsEpGEpOctetsFromMcsTable, mscMcsMgrDprsMcsEpGEpCacLastFailedFrDlci=mscMcsMgrDprsMcsEpGEpCacLastFailedFrDlci, mscMcsMgrDprsMcsEpGEpRemoteComponentName=mscMcsMgrDprsMcsEpGEpRemoteComponentName)
