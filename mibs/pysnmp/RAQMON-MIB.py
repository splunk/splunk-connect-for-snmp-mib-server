#
# PySNMP MIB module RAQMON-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/RAQMON-MIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:43:42 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ConstraintsUnion, SingleValueConstraint, ConstraintsIntersection, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ConstraintsUnion", "SingleValueConstraint", "ConstraintsIntersection", "ValueSizeConstraint")
InetAddress, InetAddressType, InetPortNumber = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetPortNumber")
rmon, = mibBuilder.importSymbols("RMON-MIB", "rmon")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibIdentifier, Unsigned32, Integer32, Counter64, Counter32, Gauge32, Bits, ObjectIdentity, ModuleIdentity, iso, MibScalar, MibTable, MibTableRow, MibTableColumn, IpAddress, TimeTicks, NotificationType = mibBuilder.importSymbols("SNMPv2-SMI", "MibIdentifier", "Unsigned32", "Integer32", "Counter64", "Counter32", "Gauge32", "Bits", "ObjectIdentity", "ModuleIdentity", "iso", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "IpAddress", "TimeTicks", "NotificationType")
TextualConvention, RowStatus, DisplayString, DateAndTime, RowPointer, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "RowStatus", "DisplayString", "DateAndTime", "RowPointer", "TruthValue")
raqmonMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 16, 31))
raqmonMIB.setRevisions(('2006-10-10 00:00',))
if mibBuilder.loadTexts: raqmonMIB.setLastUpdated('200610100000Z')
if mibBuilder.loadTexts: raqmonMIB.setOrganization('IETF RMON MIB Working Group')
raqmonNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 31, 0))
raqmonSessionAlarm = NotificationType((1, 3, 6, 1, 2, 1, 16, 31, 0, 1)).setObjects(("RAQMON-MIB", "raqmonParticipantAddr"), ("RAQMON-MIB", "raqmonParticipantName"), ("RAQMON-MIB", "raqmonParticipantPeerAddrType"), ("RAQMON-MIB", "raqmonParticipantPeerAddr"), ("RAQMON-MIB", "raqmonQoSEnd2EndNetDelay"), ("RAQMON-MIB", "raqmonQoSInterArrivalJitter"), ("RAQMON-MIB", "raqmonQosLostPackets"), ("RAQMON-MIB", "raqmonQosRcvdPackets"))
if mibBuilder.loadTexts: raqmonSessionAlarm.setStatus('current')
raqmonMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 31, 1))
raqmonSession = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 31, 1, 1))
raqmonParticipantTable = MibTable((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1), )
if mibBuilder.loadTexts: raqmonParticipantTable.setStatus('current')
raqmonParticipantEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1), ).setIndexNames((0, "RAQMON-MIB", "raqmonParticipantStartDate"), (0, "RAQMON-MIB", "raqmonParticipantIndex"))
if mibBuilder.loadTexts: raqmonParticipantEntry.setStatus('current')
raqmonParticipantStartDate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 1), DateAndTime())
if mibBuilder.loadTexts: raqmonParticipantStartDate.setStatus('current')
raqmonParticipantIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: raqmonParticipantIndex.setStatus('current')
raqmonParticipantReportCaps = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 3), Bits().clone(namedValues=NamedValues(("raqmonPartRepDsrcName", 0), ("raqmonPartRepRecvName", 1), ("raqmonPartRepDsrcPort", 2), ("raqmonPartRepRecvPort", 3), ("raqmonPartRepSetupTime", 4), ("raqmonPartRepSetupDelay", 5), ("raqmonPartRepSessionDuration", 6), ("raqmonPartRepSetupStatus", 7), ("raqmonPartRepRTEnd2EndNetDelay", 8), ("raqmonPartRepOWEnd2EndNetDelay", 9), ("raqmonPartApplicationDelay", 10), ("raqmonPartRepIAJitter", 11), ("raqmonPartRepIPDV", 12), ("raqmonPartRepRcvdPackets", 13), ("raqmonPartRepRcvdOctets", 14), ("raqmonPartRepSentPackets", 15), ("raqmonPartRepSentOctets", 16), ("raqmonPartRepCumPacketsLoss", 17), ("raqmonPartRepFractionPacketsLoss", 18), ("raqmonPartRepCumDiscards", 19), ("raqmonPartRepFractionDiscards", 20), ("raqmonPartRepSrcPayloadType", 21), ("raqmonPartRepDestPayloadType", 22), ("raqmonPartRepSrcLayer2Priority", 23), ("raqmonPartRepSrcTosDscp", 24), ("raqmonPartRepDestLayer2Priority", 25), ("raqmonPartRepDestTosDscp", 26), ("raqmonPartRepCPU", 27), ("raqmonPartRepMemory", 28), ("raqmonPartRepAppName", 29)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantReportCaps.setStatus('current')
raqmonParticipantAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 4), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantAddrType.setStatus('current')
raqmonParticipantAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 5), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantAddr.setStatus('current')
raqmonParticipantSendPort = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 6), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantSendPort.setStatus('current')
raqmonParticipantRecvPort = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 7), InetPortNumber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantRecvPort.setStatus('current')
raqmonParticipantSetupDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantSetupDelay.setStatus('current')
raqmonParticipantName = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantName.setStatus('current')
raqmonParticipantAppName = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 10), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantAppName.setStatus('current')
raqmonParticipantQosCount = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 11), Gauge32()).setUnits('entries').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantQosCount.setStatus('current')
raqmonParticipantEndDate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 12), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantEndDate.setStatus('current')
raqmonParticipantDestPayloadType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 127), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantDestPayloadType.setStatus('current')
raqmonParticipantSrcPayloadType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 127), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantSrcPayloadType.setStatus('current')
raqmonParticipantActive = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantActive.setStatus('current')
raqmonParticipantPeer = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 16), RowPointer()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantPeer.setStatus('current')
raqmonParticipantPeerAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 17), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantPeerAddrType.setStatus('current')
raqmonParticipantPeerAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 18), InetAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantPeerAddr.setStatus('current')
raqmonParticipantSrcL2Priority = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 7), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantSrcL2Priority.setStatus('current')
raqmonParticipantDestL2Priority = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 7), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantDestL2Priority.setStatus('current')
raqmonParticipantSrcDSCP = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantSrcDSCP.setStatus('current')
raqmonParticipantDestDSCP = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 63), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantDestDSCP.setStatus('current')
raqmonParticipantCpuMean = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setUnits('percents').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantCpuMean.setStatus('current')
raqmonParticipantCpuMin = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setUnits('percents').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantCpuMin.setStatus('current')
raqmonParticipantCpuMax = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setUnits('percents').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantCpuMax.setStatus('current')
raqmonParticipantMemoryMean = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 26), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setUnits('percents').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantMemoryMean.setStatus('current')
raqmonParticipantMemoryMin = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 27), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setUnits('percents').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantMemoryMin.setStatus('current')
raqmonParticipantMemoryMax = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 28), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setUnits('percents').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantMemoryMax.setStatus('current')
raqmonParticipantNetRTTMean = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 29), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantNetRTTMean.setStatus('current')
raqmonParticipantNetRTTMin = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 30), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantNetRTTMin.setStatus('current')
raqmonParticipantNetRTTMax = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantNetRTTMax.setStatus('current')
raqmonParticipantIAJitterMean = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantIAJitterMean.setStatus('current')
raqmonParticipantIAJitterMin = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantIAJitterMin.setStatus('current')
raqmonParticipantIAJitterMax = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 34), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantIAJitterMax.setStatus('current')
raqmonParticipantIPDVMean = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantIPDVMean.setStatus('current')
raqmonParticipantIPDVMin = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 36), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantIPDVMin.setStatus('current')
raqmonParticipantIPDVMax = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 37), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantIPDVMax.setStatus('current')
raqmonParticipantNetOwdMean = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 38), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantNetOwdMean.setStatus('current')
raqmonParticipantNetOwdMin = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantNetOwdMin.setStatus('current')
raqmonParticipantNetOwdMax = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantNetOwdMax.setStatus('current')
raqmonParticipantAppDelayMean = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantAppDelayMean.setStatus('current')
raqmonParticipantAppDelayMin = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantAppDelayMin.setStatus('current')
raqmonParticipantAppDelayMax = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantAppDelayMax.setStatus('current')
raqmonParticipantPacketsRcvd = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantPacketsRcvd.setStatus('current')
raqmonParticipantPacketsSent = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantPacketsSent.setStatus('current')
raqmonParticipantOctetsRcvd = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 46), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantOctetsRcvd.setStatus('current')
raqmonParticipantOctetsSent = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 47), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('Octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantOctetsSent.setStatus('current')
raqmonParticipantLostPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 48), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantLostPackets.setStatus('current')
raqmonParticipantLostPacketsFrct = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 49), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setUnits('percents').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantLostPacketsFrct.setStatus('current')
raqmonParticipantDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 50), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantDiscards.setStatus('current')
raqmonParticipantDiscardsFrct = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 1, 1, 51), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), ))).setUnits('percents').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantDiscardsFrct.setStatus('current')
raqmonQosTable = MibTable((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2), )
if mibBuilder.loadTexts: raqmonQosTable.setStatus('current')
raqmonQosEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1), ).setIndexNames((0, "RAQMON-MIB", "raqmonParticipantStartDate"), (0, "RAQMON-MIB", "raqmonParticipantIndex"), (0, "RAQMON-MIB", "raqmonQosTime"))
if mibBuilder.loadTexts: raqmonQosEntry.setStatus('current')
raqmonQosTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setUnits('seconds')
if mibBuilder.loadTexts: raqmonQosTime.setStatus('current')
raqmonQoSEnd2EndNetDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonQoSEnd2EndNetDelay.setStatus('current')
raqmonQoSInterArrivalJitter = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('milliseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonQoSInterArrivalJitter.setStatus('current')
raqmonQosRcvdPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonQosRcvdPackets.setStatus('current')
raqmonQosRcvdOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonQosRcvdOctets.setStatus('current')
raqmonQosSentPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonQosSentPackets.setStatus('current')
raqmonQosSentOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonQosSentOctets.setStatus('current')
raqmonQosLostPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 2147483647), ))).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonQosLostPackets.setStatus('current')
raqmonQosSessionStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 2, 1, 9), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonQosSessionStatus.setStatus('current')
raqmonParticipantAddrTable = MibTable((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 3), )
if mibBuilder.loadTexts: raqmonParticipantAddrTable.setStatus('current')
raqmonParticipantAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 3, 1), ).setIndexNames((0, "RAQMON-MIB", "raqmonParticipantAddrType"), (0, "RAQMON-MIB", "raqmonParticipantAddr"), (0, "RAQMON-MIB", "raqmonParticipantStartDate"), (0, "RAQMON-MIB", "raqmonParticipantIndex"))
if mibBuilder.loadTexts: raqmonParticipantAddrEntry.setStatus('current')
raqmonParticipantAddrEndDate = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 1, 3, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonParticipantAddrEndDate.setStatus('current')
raqmonException = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 31, 1, 2))
raqmonSessionExceptionTable = MibTable((1, 3, 6, 1, 2, 1, 16, 31, 1, 2, 2), )
if mibBuilder.loadTexts: raqmonSessionExceptionTable.setStatus('current')
raqmonSessionExceptionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 31, 1, 2, 2, 1), ).setIndexNames((0, "RAQMON-MIB", "raqmonSessionExceptionIndex"))
if mibBuilder.loadTexts: raqmonSessionExceptionEntry.setStatus('current')
raqmonSessionExceptionIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 2, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: raqmonSessionExceptionIndex.setStatus('current')
raqmonSessionExceptionIAJitterThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 2, 2, 1, 3), Unsigned32()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: raqmonSessionExceptionIAJitterThreshold.setStatus('current')
raqmonSessionExceptionNetRTTThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 2, 2, 1, 4), Unsigned32()).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: raqmonSessionExceptionNetRTTThreshold.setStatus('current')
raqmonSessionExceptionLostPacketsThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 2, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setUnits('tenth of a percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: raqmonSessionExceptionLostPacketsThreshold.setStatus('current')
raqmonSessionExceptionRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 31, 1, 2, 2, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: raqmonSessionExceptionRowStatus.setStatus('current')
raqmonConfig = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 31, 1, 3))
raqmonConfigPort = MibScalar((1, 3, 6, 1, 2, 1, 16, 31, 1, 3, 1), InetPortNumber()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: raqmonConfigPort.setStatus('current')
raqmonConfigPduTransport = MibScalar((1, 3, 6, 1, 2, 1, 16, 31, 1, 3, 2), Bits().clone(namedValues=NamedValues(("other", 0), ("tcp", 1), ("snmp", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonConfigPduTransport.setStatus('current')
raqmonConfigRaqmonPdus = MibScalar((1, 3, 6, 1, 2, 1, 16, 31, 1, 3, 3), Counter32()).setUnits('PDUs').setMaxAccess("readonly")
if mibBuilder.loadTexts: raqmonConfigRaqmonPdus.setStatus('current')
raqmonConfigRDSTimeout = MibScalar((1, 3, 6, 1, 2, 1, 16, 31, 1, 3, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: raqmonConfigRDSTimeout.setStatus('current')
raqmonConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 31, 2))
raqmonCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 31, 2, 1))
raqmonGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 31, 2, 2))
raqmonCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 16, 31, 2, 1, 1)).setObjects(("RAQMON-MIB", "raqmonCollectorGroup"), ("RAQMON-MIB", "raqmonCollectorNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    raqmonCompliance = raqmonCompliance.setStatus('current')
raqmonCollectorGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 16, 31, 2, 2, 1)).setObjects(("RAQMON-MIB", "raqmonParticipantReportCaps"), ("RAQMON-MIB", "raqmonParticipantAddrType"), ("RAQMON-MIB", "raqmonParticipantAddr"), ("RAQMON-MIB", "raqmonParticipantSendPort"), ("RAQMON-MIB", "raqmonParticipantRecvPort"), ("RAQMON-MIB", "raqmonParticipantSetupDelay"), ("RAQMON-MIB", "raqmonParticipantName"), ("RAQMON-MIB", "raqmonParticipantAppName"), ("RAQMON-MIB", "raqmonParticipantQosCount"), ("RAQMON-MIB", "raqmonParticipantEndDate"), ("RAQMON-MIB", "raqmonParticipantDestPayloadType"), ("RAQMON-MIB", "raqmonParticipantSrcPayloadType"), ("RAQMON-MIB", "raqmonParticipantActive"), ("RAQMON-MIB", "raqmonParticipantPeer"), ("RAQMON-MIB", "raqmonParticipantPeerAddrType"), ("RAQMON-MIB", "raqmonParticipantPeerAddr"), ("RAQMON-MIB", "raqmonParticipantSrcL2Priority"), ("RAQMON-MIB", "raqmonParticipantDestL2Priority"), ("RAQMON-MIB", "raqmonParticipantSrcDSCP"), ("RAQMON-MIB", "raqmonParticipantDestDSCP"), ("RAQMON-MIB", "raqmonParticipantCpuMean"), ("RAQMON-MIB", "raqmonParticipantCpuMin"), ("RAQMON-MIB", "raqmonParticipantCpuMax"), ("RAQMON-MIB", "raqmonParticipantMemoryMean"), ("RAQMON-MIB", "raqmonParticipantMemoryMin"), ("RAQMON-MIB", "raqmonParticipantMemoryMax"), ("RAQMON-MIB", "raqmonParticipantNetRTTMean"), ("RAQMON-MIB", "raqmonParticipantNetRTTMin"), ("RAQMON-MIB", "raqmonParticipantNetRTTMax"), ("RAQMON-MIB", "raqmonParticipantIAJitterMean"), ("RAQMON-MIB", "raqmonParticipantIAJitterMin"), ("RAQMON-MIB", "raqmonParticipantIAJitterMax"), ("RAQMON-MIB", "raqmonParticipantIPDVMean"), ("RAQMON-MIB", "raqmonParticipantIPDVMin"), ("RAQMON-MIB", "raqmonParticipantIPDVMax"), ("RAQMON-MIB", "raqmonParticipantNetOwdMean"), ("RAQMON-MIB", "raqmonParticipantNetOwdMin"), ("RAQMON-MIB", "raqmonParticipantNetOwdMax"), ("RAQMON-MIB", "raqmonParticipantAppDelayMean"), ("RAQMON-MIB", "raqmonParticipantAppDelayMin"), ("RAQMON-MIB", "raqmonParticipantAppDelayMax"), ("RAQMON-MIB", "raqmonParticipantPacketsRcvd"), ("RAQMON-MIB", "raqmonParticipantPacketsSent"), ("RAQMON-MIB", "raqmonParticipantOctetsRcvd"), ("RAQMON-MIB", "raqmonParticipantOctetsSent"), ("RAQMON-MIB", "raqmonParticipantLostPackets"), ("RAQMON-MIB", "raqmonParticipantLostPacketsFrct"), ("RAQMON-MIB", "raqmonParticipantDiscards"), ("RAQMON-MIB", "raqmonParticipantDiscardsFrct"), ("RAQMON-MIB", "raqmonQoSEnd2EndNetDelay"), ("RAQMON-MIB", "raqmonQoSInterArrivalJitter"), ("RAQMON-MIB", "raqmonQosRcvdPackets"), ("RAQMON-MIB", "raqmonQosRcvdOctets"), ("RAQMON-MIB", "raqmonQosSentPackets"), ("RAQMON-MIB", "raqmonQosSentOctets"), ("RAQMON-MIB", "raqmonQosLostPackets"), ("RAQMON-MIB", "raqmonQosSessionStatus"), ("RAQMON-MIB", "raqmonParticipantAddrEndDate"), ("RAQMON-MIB", "raqmonConfigPort"), ("RAQMON-MIB", "raqmonSessionExceptionIAJitterThreshold"), ("RAQMON-MIB", "raqmonSessionExceptionNetRTTThreshold"), ("RAQMON-MIB", "raqmonSessionExceptionLostPacketsThreshold"), ("RAQMON-MIB", "raqmonSessionExceptionRowStatus"), ("RAQMON-MIB", "raqmonConfigPduTransport"), ("RAQMON-MIB", "raqmonConfigRaqmonPdus"), ("RAQMON-MIB", "raqmonConfigRDSTimeout"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    raqmonCollectorGroup = raqmonCollectorGroup.setStatus('current')
raqmonCollectorNotificationsGroup = NotificationGroup((1, 3, 6, 1, 2, 1, 16, 31, 2, 2, 2)).setObjects(("RAQMON-MIB", "raqmonSessionAlarm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    raqmonCollectorNotificationsGroup = raqmonCollectorNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("RAQMON-MIB", raqmonCompliances=raqmonCompliances, raqmonParticipantDestPayloadType=raqmonParticipantDestPayloadType, raqmonMIBObjects=raqmonMIBObjects, raqmonParticipantSendPort=raqmonParticipantSendPort, raqmonParticipantNetRTTMin=raqmonParticipantNetRTTMin, raqmonParticipantPeerAddr=raqmonParticipantPeerAddr, raqmonConfigPort=raqmonConfigPort, raqmonParticipantDestDSCP=raqmonParticipantDestDSCP, raqmonQosEntry=raqmonQosEntry, raqmonParticipantNetOwdMax=raqmonParticipantNetOwdMax, raqmonParticipantQosCount=raqmonParticipantQosCount, raqmonParticipantEntry=raqmonParticipantEntry, raqmonParticipantCpuMax=raqmonParticipantCpuMax, raqmonQosTable=raqmonQosTable, raqmonParticipantAddrEndDate=raqmonParticipantAddrEndDate, raqmonException=raqmonException, raqmonParticipantRecvPort=raqmonParticipantRecvPort, raqmonParticipantSrcDSCP=raqmonParticipantSrcDSCP, raqmonParticipantCpuMean=raqmonParticipantCpuMean, raqmonSessionExceptionTable=raqmonSessionExceptionTable, raqmonNotifications=raqmonNotifications, raqmonParticipantIAJitterMean=raqmonParticipantIAJitterMean, raqmonSession=raqmonSession, raqmonParticipantLostPacketsFrct=raqmonParticipantLostPacketsFrct, raqmonParticipantSetupDelay=raqmonParticipantSetupDelay, raqmonGroups=raqmonGroups, raqmonParticipantSrcPayloadType=raqmonParticipantSrcPayloadType, raqmonQosSessionStatus=raqmonQosSessionStatus, raqmonParticipantSrcL2Priority=raqmonParticipantSrcL2Priority, raqmonParticipantName=raqmonParticipantName, raqmonParticipantAddrType=raqmonParticipantAddrType, raqmonParticipantAppDelayMin=raqmonParticipantAppDelayMin, raqmonParticipantPacketsRcvd=raqmonParticipantPacketsRcvd, raqmonParticipantDestL2Priority=raqmonParticipantDestL2Priority, raqmonParticipantIndex=raqmonParticipantIndex, raqmonParticipantOctetsSent=raqmonParticipantOctetsSent, raqmonSessionExceptionLostPacketsThreshold=raqmonSessionExceptionLostPacketsThreshold, raqmonSessionAlarm=raqmonSessionAlarm, raqmonParticipantPacketsSent=raqmonParticipantPacketsSent, raqmonConfigRaqmonPdus=raqmonConfigRaqmonPdus, raqmonParticipantAddrTable=raqmonParticipantAddrTable, raqmonParticipantAppDelayMean=raqmonParticipantAppDelayMean, raqmonParticipantLostPackets=raqmonParticipantLostPackets, raqmonMIB=raqmonMIB, raqmonParticipantPeer=raqmonParticipantPeer, PYSNMP_MODULE_ID=raqmonMIB, raqmonQoSInterArrivalJitter=raqmonQoSInterArrivalJitter, raqmonParticipantIPDVMean=raqmonParticipantIPDVMean, raqmonQosRcvdOctets=raqmonQosRcvdOctets, raqmonCollectorNotificationsGroup=raqmonCollectorNotificationsGroup, raqmonQosSentOctets=raqmonQosSentOctets, raqmonParticipantNetOwdMean=raqmonParticipantNetOwdMean, raqmonParticipantEndDate=raqmonParticipantEndDate, raqmonSessionExceptionIndex=raqmonSessionExceptionIndex, raqmonParticipantIPDVMax=raqmonParticipantIPDVMax, raqmonParticipantReportCaps=raqmonParticipantReportCaps, raqmonParticipantDiscards=raqmonParticipantDiscards, raqmonConfig=raqmonConfig, raqmonParticipantActive=raqmonParticipantActive, raqmonParticipantMemoryMin=raqmonParticipantMemoryMin, raqmonParticipantIPDVMin=raqmonParticipantIPDVMin, raqmonParticipantMemoryMean=raqmonParticipantMemoryMean, raqmonSessionExceptionNetRTTThreshold=raqmonSessionExceptionNetRTTThreshold, raqmonParticipantNetOwdMin=raqmonParticipantNetOwdMin, raqmonQosRcvdPackets=raqmonQosRcvdPackets, raqmonParticipantAppDelayMax=raqmonParticipantAppDelayMax, raqmonParticipantTable=raqmonParticipantTable, raqmonSessionExceptionIAJitterThreshold=raqmonSessionExceptionIAJitterThreshold, raqmonConformance=raqmonConformance, raqmonSessionExceptionEntry=raqmonSessionExceptionEntry, raqmonQoSEnd2EndNetDelay=raqmonQoSEnd2EndNetDelay, raqmonParticipantAppName=raqmonParticipantAppName, raqmonParticipantNetRTTMean=raqmonParticipantNetRTTMean, raqmonConfigPduTransport=raqmonConfigPduTransport, raqmonParticipantCpuMin=raqmonParticipantCpuMin, raqmonParticipantNetRTTMax=raqmonParticipantNetRTTMax, raqmonQosSentPackets=raqmonQosSentPackets, raqmonParticipantAddr=raqmonParticipantAddr, raqmonParticipantPeerAddrType=raqmonParticipantPeerAddrType, raqmonParticipantOctetsRcvd=raqmonParticipantOctetsRcvd, raqmonParticipantMemoryMax=raqmonParticipantMemoryMax, raqmonQosLostPackets=raqmonQosLostPackets, raqmonQosTime=raqmonQosTime, raqmonSessionExceptionRowStatus=raqmonSessionExceptionRowStatus, raqmonParticipantIAJitterMin=raqmonParticipantIAJitterMin, raqmonConfigRDSTimeout=raqmonConfigRDSTimeout, raqmonParticipantIAJitterMax=raqmonParticipantIAJitterMax, raqmonParticipantDiscardsFrct=raqmonParticipantDiscardsFrct, raqmonParticipantAddrEntry=raqmonParticipantAddrEntry, raqmonParticipantStartDate=raqmonParticipantStartDate, raqmonCollectorGroup=raqmonCollectorGroup, raqmonCompliance=raqmonCompliance)
