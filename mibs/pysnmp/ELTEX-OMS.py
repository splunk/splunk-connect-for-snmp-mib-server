#
# PySNMP MIB module ELTEX-OMS (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/ELTEX-OMS
# Produced by pysmi-0.3.4 at Mon Apr 29 18:47:58 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
Integer, OctetString, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "Integer", "OctetString", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
SingleValueConstraint, ConstraintsIntersection, ConstraintsUnion, ValueSizeConstraint, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "SingleValueConstraint", "ConstraintsIntersection", "ConstraintsUnion", "ValueSizeConstraint", "ValueRangeConstraint")
eltexLtd, = mibBuilder.importSymbols("ELTEX-SMI-ACTUAL", "eltexLtd")
ModuleCompliance, NotificationGroup, ObjectGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
Counter32, Unsigned32, Counter64, Bits, MibIdentifier, Integer32, NotificationType, Gauge32, MibScalar, MibTable, MibTableRow, MibTableColumn, ObjectIdentity, ModuleIdentity, iso, IpAddress, TimeTicks = mibBuilder.importSymbols("SNMPv2-SMI", "Counter32", "Unsigned32", "Counter64", "Bits", "MibIdentifier", "Integer32", "NotificationType", "Gauge32", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "ObjectIdentity", "ModuleIdentity", "iso", "IpAddress", "TimeTicks")
TimeInterval, TextualConvention, TimeStamp, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval", "TextualConvention", "TimeStamp", "DisplayString", "TruthValue")
eltexOMS = ModuleIdentity((1, 3, 6, 1, 4, 1, 35265, 4))
eltexOMS.setRevisions(('2009-11-03 00:00',))
if mibBuilder.loadTexts: eltexOMS.setLastUpdated('200911030000Z')
if mibBuilder.loadTexts: eltexOMS.setOrganization('Eltex Co')
class OMSCmdGroup(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("all", 0), ("pattern", 1), ("private", 2), ("binary", 3))

omsOUI = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omsOUI.setStatus('current')
omsProductClass = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omsProductClass.setStatus('current')
omsSerialNumber = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omsSerialNumber.setStatus('current')
omsActiveAlarms = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 4), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: omsActiveAlarms.setStatus('current')
omsFwRev = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omsFwRev.setStatus('current')
omsCommands = MibIdentifier((1, 3, 6, 1, 4, 1, 35265, 4, 10))
cmdFileOperationPatternCfg = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 10, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdFileOperationPatternCfg.setStatus('current')
cmdFileOperationPrivateCfg = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 10, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdFileOperationPrivateCfg.setStatus('current')
cmdFileOperationBinaryCfg = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 10, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: cmdFileOperationBinaryCfg.setStatus('current')
cmdOMSCapabilitiesTable = MibTable((1, 3, 6, 1, 4, 1, 35265, 4, 10, 4), )
if mibBuilder.loadTexts: cmdOMSCapabilitiesTable.setStatus('current')
cmdOMSCapabilitiesEntry = MibTableRow((1, 3, 6, 1, 4, 1, 35265, 4, 10, 4, 1), ).setIndexNames((0, "ELTEX-OMS", "cmdOMSCapabilitiesEntryID"))
if mibBuilder.loadTexts: cmdOMSCapabilitiesEntry.setStatus('current')
cmdOMSCapabilitiesEntryID = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 4, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 512))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdOMSCapabilitiesEntryID.setStatus('current')
cmdOMSCapabilitiesCmdGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 4, 10, 4, 1, 2), OMSCmdGroup()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdOMSCapabilitiesCmdGroup.setStatus('current')
cmdOMSCapabilitiesCmdName = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 4, 10, 4, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdOMSCapabilitiesCmdName.setStatus('current')
cmdOMSCapabilitiesParseParameters = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 4, 10, 4, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdOMSCapabilitiesParseParameters.setStatus('current')
cmdOMSCapabilitiesRebootOnSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 4, 10, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdOMSCapabilitiesRebootOnSuccess.setStatus('current')
cmdOMSCapabilitiesDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 35265, 4, 10, 4, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: cmdOMSCapabilitiesDescription.setStatus('current')
omsLinuxVersion = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omsLinuxVersion.setStatus('current')
omsFirmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 12), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omsFirmwareVersion.setStatus('current')
omsBPUVersion = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 13), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omsBPUVersion.setStatus('current')
omsFactoryType = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 14), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omsFactoryType.setStatus('current')
omsFactoryMAC = MibScalar((1, 3, 6, 1, 4, 1, 35265, 4, 15), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: omsFactoryMAC.setStatus('current')
omsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 35265, 4, 200)).setObjects(("ELTEX-OMS", "omsOUI"), ("ELTEX-OMS", "omsProductClass"), ("ELTEX-OMS", "omsSerialNumber"), ("ELTEX-OMS", "omsActiveAlarms"), ("ELTEX-OMS", "omsFwRev"), ("ELTEX-OMS", "cmdFileOperationPatternCfg"), ("ELTEX-OMS", "cmdFileOperationPrivateCfg"), ("ELTEX-OMS", "cmdFileOperationBinaryCfg"), ("ELTEX-OMS", "cmdOMSCapabilitiesEntryID"), ("ELTEX-OMS", "cmdOMSCapabilitiesCmdGroup"), ("ELTEX-OMS", "cmdOMSCapabilitiesCmdName"), ("ELTEX-OMS", "cmdOMSCapabilitiesParseParameters"), ("ELTEX-OMS", "cmdOMSCapabilitiesRebootOnSuccess"), ("ELTEX-OMS", "cmdOMSCapabilitiesDescription"), ("ELTEX-OMS", "omsLinuxVersion"), ("ELTEX-OMS", "omsFirmwareVersion"), ("ELTEX-OMS", "omsBPUVersion"), ("ELTEX-OMS", "omsFactoryType"), ("ELTEX-OMS", "omsFactoryMAC"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    omsGroup = omsGroup.setStatus('current')
mibBuilder.exportSymbols("ELTEX-OMS", cmdOMSCapabilitiesCmdGroup=cmdOMSCapabilitiesCmdGroup, cmdFileOperationBinaryCfg=cmdFileOperationBinaryCfg, cmdOMSCapabilitiesDescription=cmdOMSCapabilitiesDescription, PYSNMP_MODULE_ID=eltexOMS, cmdFileOperationPatternCfg=cmdFileOperationPatternCfg, cmdOMSCapabilitiesCmdName=cmdOMSCapabilitiesCmdName, omsBPUVersion=omsBPUVersion, omsOUI=omsOUI, cmdOMSCapabilitiesRebootOnSuccess=cmdOMSCapabilitiesRebootOnSuccess, cmdOMSCapabilitiesEntry=cmdOMSCapabilitiesEntry, cmdOMSCapabilitiesTable=cmdOMSCapabilitiesTable, omsSerialNumber=omsSerialNumber, OMSCmdGroup=OMSCmdGroup, cmdOMSCapabilitiesEntryID=cmdOMSCapabilitiesEntryID, omsFirmwareVersion=omsFirmwareVersion, omsFwRev=omsFwRev, omsFactoryType=omsFactoryType, cmdOMSCapabilitiesParseParameters=cmdOMSCapabilitiesParseParameters, omsGroup=omsGroup, omsActiveAlarms=omsActiveAlarms, omsCommands=omsCommands, omsProductClass=omsProductClass, eltexOMS=eltexOMS, omsLinuxVersion=omsLinuxVersion, omsFactoryMAC=omsFactoryMAC, cmdFileOperationPrivateCfg=cmdFileOperationPrivateCfg)
