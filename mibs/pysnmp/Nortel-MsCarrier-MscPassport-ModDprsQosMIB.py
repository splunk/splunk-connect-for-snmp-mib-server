#
# PySNMP MIB module Nortel-MsCarrier-MscPassport-ModDprsQosMIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/davwang4/Dev/mibs.snmplabs.com/asn1/Nortel-MsCarrier-MscPassport-ModDprsQosMIB
# Produced by pysmi-0.3.4 at Mon Apr 29 20:21:32 2019
# On host DAVWANG4-M-1475 platform Darwin version 18.5.0 by user davwang4
# Using Python version 3.7.3 (default, Mar 27 2019, 09:23:15) 
#
OctetString, Integer, ObjectIdentifier = mibBuilder.importSymbols("ASN1", "OctetString", "Integer", "ObjectIdentifier")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueSizeConstraint, SingleValueConstraint, ConstraintsUnion, ConstraintsIntersection, ValueRangeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueSizeConstraint", "SingleValueConstraint", "ConstraintsUnion", "ConstraintsIntersection", "ValueRangeConstraint")
mscModIndex, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex")
mscModFrs, mscModFrsIndex = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrs", "mscModFrsIndex")
RowStatus, StorageType, Integer32, Unsigned32, DisplayString = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-StandardTextualConventionsMIB", "RowStatus", "StorageType", "Integer32", "Unsigned32", "DisplayString")
NonReplicated, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-TextualConventionsMIB", "NonReplicated")
mscPassportMIBs, = mibBuilder.importSymbols("Nortel-MsCarrier-MscPassport-UsefulDefinitionsMIB", "mscPassportMIBs")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
ObjectIdentity, Bits, IpAddress, Counter64, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, iso, Unsigned32, Gauge32, MibIdentifier, TimeTicks, ModuleIdentity, NotificationType, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "Bits", "IpAddress", "Counter64", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "iso", "Unsigned32", "Gauge32", "MibIdentifier", "TimeTicks", "ModuleIdentity", "NotificationType", "Counter32")
DisplayString, TextualConvention = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "TextualConvention")
modDprsQosMIB = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 76))
mscModFrsDprsNet = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3))
mscModFrsDprsNetRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 1), )
if mibBuilder.loadTexts: mscModFrsDprsNetRowStatusTable.setStatus('mandatory')
mscModFrsDprsNetRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModDprsQosMIB", "mscModFrsDprsNetIndex"))
if mibBuilder.loadTexts: mscModFrsDprsNetRowStatusEntry.setStatus('mandatory')
mscModFrsDprsNetRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 1, 1, 1), RowStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsDprsNetRowStatus.setStatus('mandatory')
mscModFrsDprsNetComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsDprsNetComponentName.setStatus('mandatory')
mscModFrsDprsNetStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsDprsNetStorageType.setStatus('mandatory')
mscModFrsDprsNetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 1, 1, 10), NonReplicated())
if mibBuilder.loadTexts: mscModFrsDprsNetIndex.setStatus('mandatory')
mscModFrsDprsNetTpm = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2))
mscModFrsDprsNetTpmRowStatusTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 1), )
if mibBuilder.loadTexts: mscModFrsDprsNetTpmRowStatusTable.setStatus('mandatory')
mscModFrsDprsNetTpmRowStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 1, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModDprsQosMIB", "mscModFrsDprsNetIndex"), (0, "Nortel-MsCarrier-MscPassport-ModDprsQosMIB", "mscModFrsDprsNetTpmIndex"))
if mibBuilder.loadTexts: mscModFrsDprsNetTpmRowStatusEntry.setStatus('mandatory')
mscModFrsDprsNetTpmRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 1, 1, 1), RowStatus()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsDprsNetTpmRowStatus.setStatus('mandatory')
mscModFrsDprsNetTpmComponentName = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 1, 1, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsDprsNetTpmComponentName.setStatus('mandatory')
mscModFrsDprsNetTpmStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 1, 1, 4), StorageType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mscModFrsDprsNetTpmStorageType.setStatus('mandatory')
mscModFrsDprsNetTpmIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 15)))
if mibBuilder.loadTexts: mscModFrsDprsNetTpmIndex.setStatus('mandatory')
mscModFrsDprsNetTpmProvTable = MibTable((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 10), )
if mibBuilder.loadTexts: mscModFrsDprsNetTpmProvTable.setStatus('mandatory')
mscModFrsDprsNetTpmProvEntry = MibTableRow((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 10, 1), ).setIndexNames((0, "Nortel-MsCarrier-MscPassport-BaseShelfMIB", "mscModIndex"), (0, "Nortel-MsCarrier-MscPassport-ModCommonMIB", "mscModFrsIndex"), (0, "Nortel-MsCarrier-MscPassport-ModDprsQosMIB", "mscModFrsDprsNetIndex"), (0, "Nortel-MsCarrier-MscPassport-ModDprsQosMIB", "mscModFrsDprsNetTpmIndex"))
if mibBuilder.loadTexts: mscModFrsDprsNetTpmProvEntry.setStatus('mandatory')
mscModFrsDprsNetTpmEmissionPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsDprsNetTpmEmissionPriority.setStatus('mandatory')
mscModFrsDprsNetTpmRoutingClassOfService = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("throughput", 0), ("delay", 1), ("multimedia", 2))).clone('throughput')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsDprsNetTpmRoutingClassOfService.setStatus('mandatory')
mscModFrsDprsNetTpmAssignedIngressBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 10, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsDprsNetTpmAssignedIngressBandwidthPool.setStatus('mandatory')
mscModFrsDprsNetTpmAssignedEgressBandwidthPool = MibTableColumn((1, 3, 6, 1, 4, 1, 562, 36, 2, 1, 16, 3, 3, 2, 10, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 15))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: mscModFrsDprsNetTpmAssignedEgressBandwidthPool.setStatus('mandatory')
modDprsQosGroup = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 76, 1))
modDprsQosGroupCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 76, 1, 1))
modDprsQosGroupCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 76, 1, 1, 3))
modDprsQosGroupCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 76, 1, 1, 3, 2))
modDprsQosCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 76, 3))
modDprsQosCapabilitiesCA = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 76, 3, 1))
modDprsQosCapabilitiesCA02 = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 76, 3, 1, 3))
modDprsQosCapabilitiesCA02A = MibIdentifier((1, 3, 6, 1, 4, 1, 562, 36, 2, 2, 76, 3, 1, 3, 2))
mibBuilder.exportSymbols("Nortel-MsCarrier-MscPassport-ModDprsQosMIB", modDprsQosCapabilities=modDprsQosCapabilities, mscModFrsDprsNetTpmEmissionPriority=mscModFrsDprsNetTpmEmissionPriority, modDprsQosCapabilitiesCA02A=modDprsQosCapabilitiesCA02A, mscModFrsDprsNetTpmProvTable=mscModFrsDprsNetTpmProvTable, modDprsQosGroupCA02=modDprsQosGroupCA02, mscModFrsDprsNetRowStatusEntry=mscModFrsDprsNetRowStatusEntry, mscModFrsDprsNetTpmComponentName=mscModFrsDprsNetTpmComponentName, mscModFrsDprsNetRowStatus=mscModFrsDprsNetRowStatus, mscModFrsDprsNetTpmAssignedIngressBandwidthPool=mscModFrsDprsNetTpmAssignedIngressBandwidthPool, mscModFrsDprsNetTpmStorageType=mscModFrsDprsNetTpmStorageType, modDprsQosCapabilitiesCA02=modDprsQosCapabilitiesCA02, mscModFrsDprsNetTpmRowStatus=mscModFrsDprsNetTpmRowStatus, mscModFrsDprsNetComponentName=mscModFrsDprsNetComponentName, mscModFrsDprsNetTpmRowStatusEntry=mscModFrsDprsNetTpmRowStatusEntry, mscModFrsDprsNet=mscModFrsDprsNet, mscModFrsDprsNetTpmRowStatusTable=mscModFrsDprsNetTpmRowStatusTable, mscModFrsDprsNetTpmProvEntry=mscModFrsDprsNetTpmProvEntry, mscModFrsDprsNetTpm=mscModFrsDprsNetTpm, mscModFrsDprsNetTpmAssignedEgressBandwidthPool=mscModFrsDprsNetTpmAssignedEgressBandwidthPool, modDprsQosGroup=modDprsQosGroup, modDprsQosGroupCA=modDprsQosGroupCA, mscModFrsDprsNetTpmIndex=mscModFrsDprsNetTpmIndex, mscModFrsDprsNetStorageType=mscModFrsDprsNetStorageType, modDprsQosMIB=modDprsQosMIB, mscModFrsDprsNetIndex=mscModFrsDprsNetIndex, mscModFrsDprsNetTpmRoutingClassOfService=mscModFrsDprsNetTpmRoutingClassOfService, modDprsQosGroupCA02A=modDprsQosGroupCA02A, modDprsQosCapabilitiesCA=modDprsQosCapabilitiesCA, mscModFrsDprsNetRowStatusTable=mscModFrsDprsNetRowStatusTable)
